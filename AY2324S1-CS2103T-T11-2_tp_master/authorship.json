[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S1-CS2103T-T11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T11-2/tp/graph/badge.svg?token\u003d1IoaWm9UaE)](https://app.codecov.io/gh/AY2324S1-CS2103T-T11-2/tp/tree/master)","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"* This CLI application is designed for **Engineering Managers of tech companies.**","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"    Example usages:","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"  * Schedule an interview with an interviewee","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"  * Detect clashes in interview timings","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"  * Write notes about the interviewee","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"* For the detailed documentation of this project, see the **[InterviewHub Product Website](https://ay2324s1-cs2103t-t11-2.github.io/tp/)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"* This project is an ongoing software project for a desktop application to make the hiring process easier","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"  * It preserves the **OOP principles** of the original project","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"  * It **evolves** the base project into an app with a narrower target audience","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"  * Our team is working on this project, so we can **practice the SE tools** that we have learnt in class.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"* It is named InterviewHub since our app aims to centralize the interview process within companies.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"  * By placing all the critical utilities involved in one app, it increases the quality of life of our target audience.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"**Acknowledgements**","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"JasonLCY-Temp":5,"kiwibang":14,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"    archiveFileName \u003d \u0027InterviewHub.jar\u0027","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"run {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JasonLCY-Temp":2,"jingjie88":1,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"We currently do not offer any means to contacting us, thank you for your understanding.","lastModifiedDate":"2023-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"## Team CS2103T-T11-2","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"### Jason Lim","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"\u003cimg src\u003d\"images/jasonlcy-temp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"[[github](https://github.com/JasonLCY-Temp)]","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"[[portfolio](team/jasonlcy-temp.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"* Role: Scheduling and tracking, CI Pipeline manager","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"* Responsibilities: In charge of  `Interview`","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"### Tan Jing Jie","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"\u003cimg src\u003d\"images/jingjie88.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"[[github](http://github.com/jingjie88)]","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"[[portfolio](team/jingjie88.md)]","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"* Role: Developer","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"* Responsibilities: Improve `add`, `edit`, `delete` features","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Johnny Doe","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-06-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"### Jony","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"\u003cimg src\u003d\"images/jonyxzx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"[[github](http://github.com/jonyxzx)]","lastModifiedDate":"2023-09-28"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"[[portfolio](team/jonyxzx.md)]","lastModifiedDate":"2023-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"* Responsibilities: Improve find feature","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"### Tan Kerway","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"\u003cimg src\u003d\"images/kiwibang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"[[github](http://github.com/kiwibang)]","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"[[portfolio](team/kiwibang.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"* Responsibilities: Time man","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"Chen1x"},"content":"### Chen Xin-An","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"Chen1x"},"content":"\u003cimg src\u003d\"images/chen1x.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"Chen1x"},"content":"[[github](http://github.com/Chen1x)]","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"Chen1x"},"content":"[[portfolio](team/chen1x.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"Chen1x"},"content":"* Responsibilities: Job role object","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Jonyxzx":5,"JasonLCY-Temp":8,"jingjie88":6,"kiwibang":5,"-":38,"Chen1x":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"* The foundational code for add and find features are adapted from [AB-3](https://github.com/nus-cs2103-AY2324S1/tp).","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"* The formatting for the developer guide is inspired by [NUSCoursemates](https://ay2324s1-cs2103t-t17-4.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"* The formatting for the developer guide is inspired by [InTrack](https://ay2223s1-cs2103t-t11-2.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"Jonyxzx"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Chen1x"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ApplicantListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"Chen1x"},"content":"* depends on some classes in the `Model` component, as it displays `Applicant` object residing in the `Model`.","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"Jonyxzx"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"Jonyxzx"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a applicant).","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"Jonyxzx"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"Chen1x"},"content":"* stores the address book data i.e., all `Applicant` objects (which are contained in a `UniqueApplicantList` object).","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"Chen1x"},"content":"* stores the currently \u0027selected\u0027 `Applicant` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cApplicant\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"Chen1x"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Applicant` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Applicant` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"Jonyxzx"},"content":"### Add interview feature","lastModifiedDate":"2023-11-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Jonyxzx"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"Jonyxzx"},"content":"#### How is the command executed","lastModifiedDate":"2023-11-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"Jonyxzx"},"content":"#### Design consideration","lastModifiedDate":"2023-11-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"Jonyxzx"},"content":"### Find interview by job title feature","lastModifiedDate":"2023-11-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"Jonyxzx"},"content":"#### Implementation","lastModifiedDate":"2023-11-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"Jonyxzx"},"content":"The find interview by job title feature allows users to query the list of added interview for interviews that match the job title via the command `find-i KEYWORD [MORE_KEYWORD]... `, where `KEYWORD` must not","lastModifiedDate":"2023-11-06"},{"lineNumber":172,"author":{"gitId":"Jonyxzx"},"content":"be an empty string.","lastModifiedDate":"2023-11-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"Jonyxzx"},"content":"The `find-i` command is facilitated by the `FindInterviewCommand`, `FindInterviewCommandParser`, and `JobContainsKeywordsPredicate`.","lastModifiedDate":"2023-11-06"},{"lineNumber":175,"author":{"gitId":"Jonyxzx"},"content":"It uses `Model#updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate)` to apply the `JobContainsKeywordsPredicate`","lastModifiedDate":"2023-11-06"},{"lineNumber":176,"author":{"gitId":"Jonyxzx"},"content":"in order to produce a filtered list containing only entries whose job correspond to `KEYWORD [MORE_KEYWORD]...`.","lastModifiedDate":"2023-11-06"},{"lineNumber":177,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":178,"author":{"gitId":"Jonyxzx"},"content":"#### How is the command executed","lastModifiedDate":"2023-11-06"},{"lineNumber":179,"author":{"gitId":"Jonyxzx"},"content":"1. The user inputs the `find-i` command together with non-empty job-title as keyword(s);","lastModifiedDate":"2023-11-06"},{"lineNumber":180,"author":{"gitId":"Jonyxzx"},"content":"2. The `LogicManager` receives the command string and forwarded it to the `AddressBookParser`.","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"Jonyxzx"},"content":"3. The `AddressBookParser` checks the type of command and constructs `FindInterviewCommandParser` to parse the keyword(s).","lastModifiedDate":"2023-11-06"},{"lineNumber":182,"author":{"gitId":"Jonyxzx"},"content":"4. The `FindInterviewCommandParser` constructs `JobContainsKeywordsPredicate` containing the keyword as predicate.","lastModifiedDate":"2023-11-06"},{"lineNumber":183,"author":{"gitId":"Jonyxzx"},"content":"5. The `LogicManager` executes the `FindInterviewCommand` which calls the `Model#updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate)` method.","lastModifiedDate":"2023-11-06"},{"lineNumber":184,"author":{"gitId":"Jonyxzx"},"content":"6. The `FindInterviewCommand` construct `CommandResult` containing the number of successful interviews filtered in the final list and returns it to `LogicManager`.","lastModifiedDate":"2023-11-06"},{"lineNumber":185,"author":{"gitId":"Jonyxzx"},"content":"7. The GUI will be updated automatically by when the list changes.","lastModifiedDate":"2023-11-06"},{"lineNumber":186,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":187,"author":{"gitId":"Jonyxzx"},"content":"#### Design Consideration","lastModifiedDate":"2023-11-06"},{"lineNumber":188,"author":{"gitId":"Jonyxzx"},"content":"**Aspect: Case-sensitivity in search:**","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 1 (current choice):** Case-insensitive search.","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"Jonyxzx"},"content":"    * Pros: ","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"Jonyxzx"},"content":"      * Offers flexibility and speed up the input process without worrying on casing.","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"Jonyxzx"},"content":"    * Cons: ","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"Jonyxzx"},"content":"      * A less accurate filters as it will return any matched keyword regardless of casing which might not be intended by the user.","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 2:** Case-sensitive search.","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"Jonyxzx"},"content":"    * Pros: ","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"Jonyxzx"},"content":"      * A more precise filtering as the string is exact match","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"Jonyxzx"},"content":"    * Cons: ","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"Jonyxzx"},"content":"      * Less flexible as the users need to be precise with the input.","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"Jonyxzx"},"content":"**Aspect: Accept multiple keywords:**","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 1 (current choice):** Accept multiple keywords.","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"Jonyxzx"},"content":"    * Pros: ","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"Jonyxzx"},"content":"      * Offers a stronger filter to search the interview easily.","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"Jonyxzx"},"content":"    * Cons: ","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"Jonyxzx"},"content":"      * Requires more care to parse the input correctly in order to not miss any keywords.","lastModifiedDate":"2023-11-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 2:** Accept one keyword.","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"Jonyxzx"},"content":"    * Pros: ","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"Jonyxzx"},"content":"      * Easier to control the input and filtering.","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"Jonyxzx"},"content":"    * Cons: ","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"Jonyxzx"},"content":"      * Less powerful since users can only search job based on one keyword.","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"Jonyxzx"},"content":"### Find applicant feature","lastModifiedDate":"2023-11-06"},{"lineNumber":217,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":218,"author":{"gitId":"Jonyxzx"},"content":"#### Implementation","lastModifiedDate":"2023-11-06"},{"lineNumber":219,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":220,"author":{"gitId":"Jonyxzx"},"content":"The find applicant feature allows users to query the list of applicants for applicants","lastModifiedDate":"2023-11-06"},{"lineNumber":221,"author":{"gitId":"Jonyxzx"},"content":"whose name, phone, email, address and tags match the given arguments.","lastModifiedDate":"2023-11-06"},{"lineNumber":222,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":223,"author":{"gitId":"Jonyxzx"},"content":"This can be done","lastModifiedDate":"2023-11-06"},{"lineNumber":224,"author":{"gitId":"Jonyxzx"},"content":"via the command `find-a [n/KEYWORDS [MORE_KEYWORDS]...] [p/NUMBER]","lastModifiedDate":"2023-11-06"},{"lineNumber":225,"author":{"gitId":"Jonyxzx"},"content":"[e/KEYWORDS [MORE_KEYWORDS]...] [a/KEYWORDS [MORE_KEYWORDS]...] t/KEYWORDS [MORE_KEYWORDS]...]`.","lastModifiedDate":"2023-11-06"},{"lineNumber":226,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":227,"author":{"gitId":"Jonyxzx"},"content":"The find applicant feature is facilitated by `FindApplicantCommand`, `FindApplicantCommandParser`,","lastModifiedDate":"2023-11-06"},{"lineNumber":228,"author":{"gitId":"Jonyxzx"},"content":"`AddressContainsKeywordsPredicate`, `EmailContainsKeywordsPredicate`, `NameContainsKeywordsPredicate`,","lastModifiedDate":"2023-11-06"},{"lineNumber":229,"author":{"gitId":"Jonyxzx"},"content":"`PhoneContainsNumberPredicate`, `TagContainsKeywordsPredicate`.","lastModifiedDate":"2023-11-06"},{"lineNumber":230,"author":{"gitId":"Jonyxzx"},"content":"It uses `Model#updateFilteredApplicantList(Predicate\u003cApplicant\u003e)` to apply the predicates","lastModifiedDate":"2023-11-06"},{"lineNumber":231,"author":{"gitId":"Jonyxzx"},"content":"in order to produce a filtered list containing only the filtered entries.","lastModifiedDate":"2023-11-06"},{"lineNumber":232,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":233,"author":{"gitId":"Jonyxzx"},"content":"#### How is the command executed","lastModifiedDate":"2023-11-06"},{"lineNumber":234,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":235,"author":{"gitId":"Jonyxzx"},"content":"#### Design Considerations","lastModifiedDate":"2023-11-06"},{"lineNumber":236,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":237,"author":{"gitId":"Jonyxzx"},"content":"Aspect: How find applicant command filters applicants:","lastModifiedDate":"2023-11-06"},{"lineNumber":238,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 1 (current choice):** Use a predicate for each field","lastModifiedDate":"2023-11-06"},{"lineNumber":239,"author":{"gitId":"Jonyxzx"},"content":"    * Pros:","lastModifiedDate":"2023-11-06"},{"lineNumber":240,"author":{"gitId":"Jonyxzx"},"content":"        * Decrease coupling and increases extensibility.","lastModifiedDate":"2023-11-06"},{"lineNumber":241,"author":{"gitId":"Jonyxzx"},"content":"        * Easier to maintain","lastModifiedDate":"2023-11-06"},{"lineNumber":242,"author":{"gitId":"Jonyxzx"},"content":"    * Cons:","lastModifiedDate":"2023-11-06"},{"lineNumber":243,"author":{"gitId":"Jonyxzx"},"content":"        * More difficult and tedious to implement","lastModifiedDate":"2023-11-06"},{"lineNumber":244,"author":{"gitId":"Jonyxzx"},"content":"        * More test cases needed for each predicate","lastModifiedDate":"2023-11-06"},{"lineNumber":245,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":246,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 2:** Use one predicate for the entire applicant","lastModifiedDate":"2023-11-06"},{"lineNumber":247,"author":{"gitId":"Jonyxzx"},"content":"    * Pros:","lastModifiedDate":"2023-11-06"},{"lineNumber":248,"author":{"gitId":"Jonyxzx"},"content":"        * Easier to code and less code to write","lastModifiedDate":"2023-11-06"},{"lineNumber":249,"author":{"gitId":"Jonyxzx"},"content":"    * Cons:","lastModifiedDate":"2023-11-06"},{"lineNumber":250,"author":{"gitId":"Jonyxzx"},"content":"        * Harder to maintain","lastModifiedDate":"2023-11-06"},{"lineNumber":251,"author":{"gitId":"Jonyxzx"},"content":"        * More coupling as predicates for different fields are not abstracted out","lastModifiedDate":"2023-11-06"},{"lineNumber":252,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":253,"author":{"gitId":"Jonyxzx"},"content":"Aspect: Which find command format","lastModifiedDate":"2023-11-06"},{"lineNumber":254,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 1 (current choice):** Accepts multiple space or comma separated keywords for each prefix","lastModifiedDate":"2023-11-06"},{"lineNumber":255,"author":{"gitId":"Jonyxzx"},"content":"    * Pros:","lastModifiedDate":"2023-11-06"},{"lineNumber":256,"author":{"gitId":"Jonyxzx"},"content":"        * Allows filtering using multiple keywords in a single find command","lastModifiedDate":"2023-11-06"},{"lineNumber":257,"author":{"gitId":"Jonyxzx"},"content":"        * User can type the command quickly","lastModifiedDate":"2023-11-06"},{"lineNumber":258,"author":{"gitId":"Jonyxzx"},"content":"    * Cons:","lastModifiedDate":"2023-11-06"},{"lineNumber":259,"author":{"gitId":"Jonyxzx"},"content":"        * Only allows filtering by words and not phrases","lastModifiedDate":"2023-11-06"},{"lineNumber":260,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 2:** Accepts one keyword for each prefix","lastModifiedDate":"2023-11-06"},{"lineNumber":261,"author":{"gitId":"Jonyxzx"},"content":"    * Pros:","lastModifiedDate":"2023-11-06"},{"lineNumber":262,"author":{"gitId":"Jonyxzx"},"content":"        * Easy to implement","lastModifiedDate":"2023-11-06"},{"lineNumber":263,"author":{"gitId":"Jonyxzx"},"content":"        * User can type the command quickly","lastModifiedDate":"2023-11-06"},{"lineNumber":264,"author":{"gitId":"Jonyxzx"},"content":"    * Cons:","lastModifiedDate":"2023-11-06"},{"lineNumber":265,"author":{"gitId":"Jonyxzx"},"content":"        * Can only find using one keyword for each applicant field in a single find command","lastModifiedDate":"2023-11-06"},{"lineNumber":266,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 3:** Accepts duplicate prefixes and a keyphrase for each prefix","lastModifiedDate":"2023-11-06"},{"lineNumber":267,"author":{"gitId":"Jonyxzx"},"content":"    * Pros:","lastModifiedDate":"2023-11-06"},{"lineNumber":268,"author":{"gitId":"Jonyxzx"},"content":"        * Allows filtering of multiple keywords or keyphrase in a single find command","lastModifiedDate":"2023-11-06"},{"lineNumber":269,"author":{"gitId":"Jonyxzx"},"content":"        * The most specific filter out of all the alternatives","lastModifiedDate":"2023-11-06"},{"lineNumber":270,"author":{"gitId":"Jonyxzx"},"content":"    * Cons:","lastModifiedDate":"2023-11-06"},{"lineNumber":271,"author":{"gitId":"Jonyxzx"},"content":"        * Most difficult to implement of all alternatives considered","lastModifiedDate":"2023-11-06"},{"lineNumber":272,"author":{"gitId":"Jonyxzx"},"content":"        * The command can be slow to type due to the need to type many prefixes","lastModifiedDate":"2023-11-06"},{"lineNumber":273,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":274,"author":{"gitId":"Jonyxzx"},"content":"Aspect: How find command matches the arguments for name","lastModifiedDate":"2023-11-06"},{"lineNumber":275,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 1 (current choice):** Match keywords to words in the name","lastModifiedDate":"2023-11-06"},{"lineNumber":276,"author":{"gitId":"Jonyxzx"},"content":"    * Pros:","lastModifiedDate":"2023-11-06"},{"lineNumber":277,"author":{"gitId":"Jonyxzx"},"content":"        * Can find a person with only the first name or last name","lastModifiedDate":"2023-11-06"},{"lineNumber":278,"author":{"gitId":"Jonyxzx"},"content":"    * Cons:","lastModifiedDate":"2023-11-06"},{"lineNumber":279,"author":{"gitId":"Jonyxzx"},"content":"        * Less specific than exact matching","lastModifiedDate":"2023-11-06"},{"lineNumber":280,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 2:** Require exact match between arguments and name","lastModifiedDate":"2023-11-06"},{"lineNumber":281,"author":{"gitId":"Jonyxzx"},"content":"    * Pros:","lastModifiedDate":"2023-11-06"},{"lineNumber":282,"author":{"gitId":"Jonyxzx"},"content":"        * More specific search","lastModifiedDate":"2023-11-06"},{"lineNumber":283,"author":{"gitId":"Jonyxzx"},"content":"    * Cons:","lastModifiedDate":"2023-11-06"},{"lineNumber":284,"author":{"gitId":"Jonyxzx"},"content":"        * Users need to type longer commands to search for an applicant","lastModifiedDate":"2023-11-06"},{"lineNumber":285,"author":{"gitId":"Jonyxzx"},"content":"        * Less flexibility","lastModifiedDate":"2023-11-06"},{"lineNumber":286,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 3:** Check if argument is substring of the name","lastModifiedDate":"2023-11-06"},{"lineNumber":287,"author":{"gitId":"Jonyxzx"},"content":"    * Pros:","lastModifiedDate":"2023-11-06"},{"lineNumber":288,"author":{"gitId":"Jonyxzx"},"content":"        * Users can find an applicant without typing an entire word","lastModifiedDate":"2023-11-06"},{"lineNumber":289,"author":{"gitId":"Jonyxzx"},"content":"        * More flexibility","lastModifiedDate":"2023-11-06"},{"lineNumber":290,"author":{"gitId":"Jonyxzx"},"content":"    * Cons:","lastModifiedDate":"2023-11-06"},{"lineNumber":291,"author":{"gitId":"Jonyxzx"},"content":"        * Too many applicants might show up in a single find command which defeats","lastModifiedDate":"2023-11-06"},{"lineNumber":292,"author":{"gitId":"Jonyxzx"},"content":"          the purpose of the find command","lastModifiedDate":"2023-11-06"},{"lineNumber":293,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":294,"author":{"gitId":"kiwibang"},"content":"### parseDate API","lastModifiedDate":"2023-11-08"},{"lineNumber":295,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":296,"author":{"gitId":"Jonyxzx"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"kiwibang"},"content":"This feature is implemented though the `TimeParser` class. This class contains several public static methods related to manipulating time:","lastModifiedDate":"2023-10-24"},{"lineNumber":298,"author":{"gitId":"kiwibang"},"content":"- `TimeParser#parseDate(String date, boolean dateOnly)`  —  Takes in a time String as input, and returns a `Time` instance, which is a wrapper class for a LocalDateTime object which will store the time information (i.e. day, month, year, hour, minute) as well as providing utility methods for manipulating Time.","lastModifiedDate":"2023-11-08"},{"lineNumber":299,"author":{"gitId":"kiwibang"},"content":"  ","lastModifiedDate":"2023-11-08"},{"lineNumber":300,"author":{"gitId":"kiwibang"},"content":"  - The `dateOnly` parameter is a flag to indicate how to parse the given `date`. If `dateOnly` is set to false, then the TimeParser will parse valid dates that are in the list of accepted date (without time) formats. Otherwise, if `dateOnly` is set to true, then the TimeParser will parse valid dates that are in the list of accepted date (with time) formats.","lastModifiedDate":"2023-11-08"},{"lineNumber":301,"author":{"gitId":"kiwibang"},"content":"  - Accepted time formats:","lastModifiedDate":"2023-11-08"},{"lineNumber":302,"author":{"gitId":"kiwibang"},"content":"      * DD/MM/YYYY and time:","lastModifiedDate":"2023-11-08"},{"lineNumber":303,"author":{"gitId":"kiwibang"},"content":"          * `16 May 2024 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":304,"author":{"gitId":"kiwibang"},"content":"          * `16 May 2024 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":305,"author":{"gitId":"kiwibang"},"content":"          * `16 May 2024 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":306,"author":{"gitId":"kiwibang"},"content":"          * `16-05-2024 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":307,"author":{"gitId":"kiwibang"},"content":"          * `16-05-2024 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"kiwibang"},"content":"          * `16-05-2024 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":309,"author":{"gitId":"kiwibang"},"content":"          * `16-05-24 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":310,"author":{"gitId":"kiwibang"},"content":"          * `16-05-24 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":311,"author":{"gitId":"kiwibang"},"content":"          * `16-05-24 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":312,"author":{"gitId":"kiwibang"},"content":"          * `16/05/2024 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":313,"author":{"gitId":"kiwibang"},"content":"          * `16/05/2024 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":314,"author":{"gitId":"kiwibang"},"content":"          * `16/05/2024 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":315,"author":{"gitId":"kiwibang"},"content":"          * `16/05/24 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":316,"author":{"gitId":"kiwibang"},"content":"          * `16/05/24 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":317,"author":{"gitId":"kiwibang"},"content":"          * `16/05/24 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":318,"author":{"gitId":"kiwibang"},"content":"      * MM, DD and time:","lastModifiedDate":"2023-11-08"},{"lineNumber":319,"author":{"gitId":"kiwibang"},"content":"          * `16 May 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":320,"author":{"gitId":"kiwibang"},"content":"          * `16 May 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":321,"author":{"gitId":"kiwibang"},"content":"          * `16 May 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":322,"author":{"gitId":"kiwibang"},"content":"          * `16 January 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":323,"author":{"gitId":"kiwibang"},"content":"          * `16 January 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":324,"author":{"gitId":"kiwibang"},"content":"          * `16 January 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":325,"author":{"gitId":"kiwibang"},"content":"          * `16/5 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":326,"author":{"gitId":"kiwibang"},"content":"          * `16/5 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":327,"author":{"gitId":"kiwibang"},"content":"          * `16/5 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":328,"author":{"gitId":"kiwibang"},"content":"          * `16/05 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":329,"author":{"gitId":"kiwibang"},"content":"          * `16/05 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":330,"author":{"gitId":"kiwibang"},"content":"          * `16/05 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":331,"author":{"gitId":"kiwibang"},"content":"    - Accepted date formats","lastModifiedDate":"2023-11-08"},{"lineNumber":332,"author":{"gitId":"kiwibang"},"content":"      * DD/MM/YYYY:","lastModifiedDate":"2023-11-08"},{"lineNumber":333,"author":{"gitId":"kiwibang"},"content":"        * `16-05-2024`","lastModifiedDate":"2023-11-08"},{"lineNumber":334,"author":{"gitId":"kiwibang"},"content":"        * `16/05/2024`","lastModifiedDate":"2023-11-08"},{"lineNumber":335,"author":{"gitId":"kiwibang"},"content":"      * DD/MM:","lastModifiedDate":"2023-11-08"},{"lineNumber":336,"author":{"gitId":"kiwibang"},"content":"        * `16/05`","lastModifiedDate":"2023-11-08"},{"lineNumber":337,"author":{"gitId":"kiwibang"},"content":"        * `16 May`","lastModifiedDate":"2023-11-08"},{"lineNumber":338,"author":{"gitId":"kiwibang"},"content":"          * _Must be a prefix of a valid month of at least 3 characters_","lastModifiedDate":"2023-11-08"},{"lineNumber":339,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":340,"author":{"gitId":"kiwibang"},"content":"  - The sequence diagram shown below shows how the API is called by other classes:","lastModifiedDate":"2023-10-25"},{"lineNumber":341,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":342,"author":{"gitId":"Jonyxzx"},"content":"    ![parseDateSequenceDiagram.png](images/parseDateSequenceDiagram.png)","lastModifiedDate":"2023-11-06"},{"lineNumber":343,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":344,"author":{"gitId":"Jonyxzx"},"content":"#### How is the command executed","lastModifiedDate":"2023-11-06"},{"lineNumber":345,"author":{"gitId":"kiwibang"},"content":"1. The caller passes in the `date` string, which contains the date information. The caller also passes in the boolean flag `dateOnly`, which will indicate whether the string should be parsed into a `Time` instance containing date and time, or strictly date only.","lastModifiedDate":"2023-11-08"},{"lineNumber":346,"author":{"gitId":"kiwibang"},"content":"2. If the parsing was successful, a `Time` instance containing the Time info will be returned.","lastModifiedDate":"2023-11-08"},{"lineNumber":347,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":348,"author":{"gitId":"Jonyxzx"},"content":"#### Design considerations","lastModifiedDate":"2023-11-06"},{"lineNumber":349,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":350,"author":{"gitId":"kiwibang"},"content":"**Aspect: How `TimeParser#parseDate(String date, boolean dateOnly)` works:**","lastModifiedDate":"2023-11-08"},{"lineNumber":351,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":352,"author":{"gitId":"kiwibang"},"content":"* **Alternative 1 (current choice):** Have two hardcoded list of acceptable time formats. One with date and time, the other for time","lastModifiedDate":"2023-11-08"},{"lineNumber":353,"author":{"gitId":"kiwibang"},"content":"    * Pros:","lastModifiedDate":"2023-10-24"},{"lineNumber":354,"author":{"gitId":"kiwibang"},"content":"      * Easy to implement","lastModifiedDate":"2023-11-08"},{"lineNumber":355,"author":{"gitId":"kiwibang"},"content":"      * Avoids code duplication","lastModifiedDate":"2023-11-08"},{"lineNumber":356,"author":{"gitId":"kiwibang"},"content":"    * Cons:","lastModifiedDate":"2023-10-24"},{"lineNumber":357,"author":{"gitId":"kiwibang"},"content":"      * May have performance issues in terms of time (i.e. might have to loop through the whole list to find a suitable format)","lastModifiedDate":"2023-10-24"},{"lineNumber":358,"author":{"gitId":"kiwibang"},"content":"      * Huge number of time formats available, hence there is a need to update the list of acceptable time formats in future iterations","lastModifiedDate":"2023-10-24"},{"lineNumber":359,"author":{"gitId":"kiwibang"},"content":"      * Many errors possible due to the many time fields that the user could format wrongly, which makes implementation difficult","lastModifiedDate":"2023-10-24"},{"lineNumber":360,"author":{"gitId":"kiwibang"},"content":"      * Using the same method to parse strings with date \u0026 time and strings with date only might be prone to bugs","lastModifiedDate":"2023-11-08"},{"lineNumber":361,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":362,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":363,"author":{"gitId":"kiwibang"},"content":"* **Alternative 2 :** Have two hardcoded list of acceptable time formats. One with date and time, the other for time, but parse the two types of time string (i.e. strings with date \u0026 time, and strings with date only separately)","lastModifiedDate":"2023-11-08"},{"lineNumber":364,"author":{"gitId":"kiwibang"},"content":"    * Pros:","lastModifiedDate":"2023-11-08"},{"lineNumber":365,"author":{"gitId":"kiwibang"},"content":"        * Easy to implement","lastModifiedDate":"2023-11-08"},{"lineNumber":366,"author":{"gitId":"kiwibang"},"content":"        * Less prone to bugs since there are now separate methods for parsing the two types of strings","lastModifiedDate":"2023-11-08"},{"lineNumber":367,"author":{"gitId":"kiwibang"},"content":"    * Cons:","lastModifiedDate":"2023-11-08"},{"lineNumber":368,"author":{"gitId":"kiwibang"},"content":"        * Causes code duplication since the algorithm is virtually the same for both `parseDate` methods ","lastModifiedDate":"2023-11-08"},{"lineNumber":369,"author":{"gitId":"kiwibang"},"content":"        * Not an optimal implementation (i.e. might have to loop through the whole list to find a suitable format)","lastModifiedDate":"2023-11-08"},{"lineNumber":370,"author":{"gitId":"kiwibang"},"content":"        * Huge number of time formats available, hence there is a need to update the list of acceptable time formats in future iterations if needed","lastModifiedDate":"2023-11-08"},{"lineNumber":371,"author":{"gitId":"kiwibang"},"content":"        * Many errors possible due to the many time fields that the user could format wrongly, which makes implementation difficult","lastModifiedDate":"2023-11-08"},{"lineNumber":372,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":373,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":374,"author":{"gitId":"kiwibang"},"content":"* **Alternative 3 (alternate choice):** Use other time libraries","lastModifiedDate":"2023-11-08"},{"lineNumber":375,"author":{"gitId":"kiwibang"},"content":"    * Pros:","lastModifiedDate":"2023-10-25"},{"lineNumber":376,"author":{"gitId":"kiwibang"},"content":"        * Might be a better alternative to alternative 1","lastModifiedDate":"2023-10-25"},{"lineNumber":377,"author":{"gitId":"kiwibang"},"content":"        * Error checking already implemented","lastModifiedDate":"2023-11-08"},{"lineNumber":378,"author":{"gitId":"kiwibang"},"content":"    * Cons:","lastModifiedDate":"2023-10-25"},{"lineNumber":379,"author":{"gitId":"kiwibang"},"content":"        * Will have to overhaul the entire TimeParser class, which might be impractical","lastModifiedDate":"2023-10-25"},{"lineNumber":380,"author":{"gitId":"kiwibang"},"content":"        * High risk; not guaranteed to be better after overhaul","lastModifiedDate":"2023-10-25"},{"lineNumber":381,"author":{"gitId":"kiwibang"},"content":"        * Developer is not familiar with other time libraries","lastModifiedDate":"2023-10-25"},{"lineNumber":382,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":383,"author":{"gitId":"kiwibang"},"content":"### List all free timing for a given day feature","lastModifiedDate":"2023-11-08"},{"lineNumber":384,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":385,"author":{"gitId":"jingjie88"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"kiwibang"},"content":"The list free times for a given day feature allows the user to list all the blocks of time that are not taken by a scheduled interview. This command is in the format `list-freetime DATE` where `DATE` is a valid date string.","lastModifiedDate":"2023-11-08"},{"lineNumber":387,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"kiwibang"},"content":"The `list-freetime DATE` command is facilitated by the `ListFreeTimeCommand`, `ListFreeTimeCommandParser`, along with the other internal classes omitted for brevity.","lastModifiedDate":"2023-11-08"},{"lineNumber":389,"author":{"gitId":"kiwibang"},"content":"#### How is the command executed","lastModifiedDate":"2023-11-08"},{"lineNumber":390,"author":{"gitId":"kiwibang"},"content":"1. The user inputs the `list-freetime DATE`","lastModifiedDate":"2023-11-08"},{"lineNumber":391,"author":{"gitId":"kiwibang"},"content":"2. The `LogicManager` receives the command string and forwards it to the `AddressBookParser`.","lastModifiedDate":"2023-11-08"},{"lineNumber":392,"author":{"gitId":"kiwibang"},"content":"3. The `AddressBookParser` checks the type of command and constructs `ListFreeTimeCommandParser` to parse the keyword(s).","lastModifiedDate":"2023-11-08"},{"lineNumber":393,"author":{"gitId":"kiwibang"},"content":"4. The `execute` method of the `ListFreeTimeCommandParser` is called, which will call the `parseDate` method of the `TimeParser` API class.","lastModifiedDate":"2023-11-08"},{"lineNumber":394,"author":{"gitId":"kiwibang"},"content":"5. `parseDate` will take in the date string as argument. If valid, it will return a `Time` instance containing a LocalDateTime containing the date information.","lastModifiedDate":"2023-11-08"},{"lineNumber":395,"author":{"gitId":"kiwibang"},"content":"6. The `ListFreeTimeCommandParser` constructs `ListFreeTimeCommand` with the Time instance (created by `parseDate` earlier) passed into its constructor.","lastModifiedDate":"2023-11-08"},{"lineNumber":396,"author":{"gitId":"kiwibang"},"content":"7. The `LogicManager` executes the `ListFreeTimeCommand` which calls the `Model#listPocketsOfTimeOnGivenDay(Time givenDay)` method.","lastModifiedDate":"2023-11-08"},{"lineNumber":397,"author":{"gitId":"kiwibang"},"content":"8. The `ListFreeTimeCommand` will then use an internal method, formatFreeTime(List\u003cPair\u003cTime, Time\u003e\u003e freeTimes), to parse the list of free times into a string.","lastModifiedDate":"2023-11-08"},{"lineNumber":398,"author":{"gitId":"kiwibang"},"content":"9. The `ListFreeTimeCommand` construct `CommandResult` containing the free times on the given day, and returns it to `LogicManager`.","lastModifiedDate":"2023-11-08"},{"lineNumber":399,"author":{"gitId":"kiwibang"},"content":"10. The GUI will be updated automatically by when the list changes.","lastModifiedDate":"2023-11-08"},{"lineNumber":400,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":401,"author":{"gitId":"Jonyxzx"},"content":"#### Design consideration","lastModifiedDate":"2023-11-06"},{"lineNumber":402,"author":{"gitId":"kiwibang"},"content":"Aspect: How the command finds free times:","lastModifiedDate":"2023-11-08"},{"lineNumber":403,"author":{"gitId":"kiwibang"},"content":"* **Alternative 1 (current choice):** implement a method in the `ModelManager` class","lastModifiedDate":"2023-11-08"},{"lineNumber":404,"author":{"gitId":"kiwibang"},"content":"    * Pros:","lastModifiedDate":"2023-11-08"},{"lineNumber":405,"author":{"gitId":"kiwibang"},"content":"        * Can access all the interviews that the user has scheduled that is within the `AddressBook` object instance, which maintains the information hiding principle","lastModifiedDate":"2023-11-08"},{"lineNumber":406,"author":{"gitId":"kiwibang"},"content":"    * Cons:","lastModifiedDate":"2023-11-08"},{"lineNumber":407,"author":{"gitId":"kiwibang"},"content":"        * The command will cause the control to be passed to `ModelManager` first, then to `AddressBook` where the logic for looking for free times happens. This results in an additional layer of abstraction, which increases the complexity of the command slightly","lastModifiedDate":"2023-11-08"},{"lineNumber":408,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":409,"author":{"gitId":"kiwibang"},"content":"* **Alternative 2:** Use the getter methods of the `AddressBook` class","lastModifiedDate":"2023-11-08"},{"lineNumber":410,"author":{"gitId":"kiwibang"},"content":"    * Pros:","lastModifiedDate":"2023-11-08"},{"lineNumber":411,"author":{"gitId":"kiwibang"},"content":"        * One less layer of abstraction, reducing complexity","lastModifiedDate":"2023-11-08"},{"lineNumber":412,"author":{"gitId":"kiwibang"},"content":"        * Easier to implement","lastModifiedDate":"2023-11-08"},{"lineNumber":413,"author":{"gitId":"kiwibang"},"content":"    * Cons:","lastModifiedDate":"2023-11-08"},{"lineNumber":414,"author":{"gitId":"kiwibang"},"content":"        * The `ListFreeTimeCommand` will have to call the `getAddressBook` method of the `ModelManager` object instance, and then use the getter method of the `AddressBook` object instance. Violates the _Law of Demeter_ principle since the methods of a stranger (i.e. `AddressBook`) is being called, which `ListFreeTimeCommand` is not closely related to","lastModifiedDate":"2023-11-08"},{"lineNumber":415,"author":{"gitId":"kiwibang"},"content":"        * Increases coupling since `ListFreeTimeCommand` now has a dependency with `AddressBook`","lastModifiedDate":"2023-11-08"},{"lineNumber":416,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":417,"author":{"gitId":"Jonyxzx"},"content":"### List all interviews for today feature","lastModifiedDate":"2023-11-06"},{"lineNumber":418,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":419,"author":{"gitId":"Jonyxzx"},"content":"#### Implementation","lastModifiedDate":"2023-11-06"},{"lineNumber":420,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":421,"author":{"gitId":"Jonyxzx"},"content":"#### How is the command executed","lastModifiedDate":"2023-11-06"},{"lineNumber":422,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":423,"author":{"gitId":"Jonyxzx"},"content":"#### Design consideration","lastModifiedDate":"2023-11-06"},{"lineNumber":424,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":425,"author":{"gitId":"kiwibang"},"content":"### List interviews done/not done feature","lastModifiedDate":"2023-11-08"},{"lineNumber":426,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":427,"author":{"gitId":"kiwibang"},"content":"#### Implementation","lastModifiedDate":"2023-11-08"},{"lineNumber":428,"author":{"gitId":"kiwibang"},"content":"The list interviews done/not done feature allows the user to see all the interviews that are done or not done in a single command. The command format is `list-i-done` to show all the interviews that are done, and `list-i-not-done` to show all interviews that are not done.","lastModifiedDate":"2023-11-08"},{"lineNumber":429,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":430,"author":{"gitId":"kiwibang"},"content":"#### How is the command executed","lastModifiedDate":"2023-11-08"},{"lineNumber":431,"author":{"gitId":"kiwibang"},"content":"1. The user inputs `list-i-done` or `list-i-not-done` ","lastModifiedDate":"2023-11-08"},{"lineNumber":432,"author":{"gitId":"kiwibang"},"content":"2. The `LogicManager` receives the command string and forwards it to the `AddressBookParser`.","lastModifiedDate":"2023-11-08"},{"lineNumber":433,"author":{"gitId":"kiwibang"},"content":"3. The `AddressBookParser` checks the type of command and returns a `ListInterviewsDoneCommand` instance or `ListInterviewsNotDoneCommand` instance","lastModifiedDate":"2023-11-08"},{"lineNumber":434,"author":{"gitId":"kiwibang"},"content":"4. The `LogicManager` executes the `ListInterviewsDoneCommand` or `ListInterviewsNotDoneCommand`","lastModifiedDate":"2023-11-08"},{"lineNumber":435,"author":{"gitId":"kiwibang"},"content":"5. The `execute` method of `ListInterviewsDoneCommand` or `ListInterviewsNotDoneCommand` will call `Model#updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate)`, where an `InterviewIsDonePredicate` or `InterviewNotDonePredicate` is passed as the argument","lastModifiedDate":"2023-11-08"},{"lineNumber":436,"author":{"gitId":"kiwibang"},"content":"6. `Model#updateFilteredInterviewList` will be called with the given predicate, thus updating the internal `FilteredList` of interviews to show only those that are done, or those that are not done. The `CommandResult` containing the success message will be returned to `LogicManager`.","lastModifiedDate":"2023-11-08"},{"lineNumber":437,"author":{"gitId":"kiwibang"},"content":"7. The GUI will be updated automatically by when the list changes.","lastModifiedDate":"2023-11-08"},{"lineNumber":438,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":439,"author":{"gitId":"kiwibang"},"content":"#### Design consideration","lastModifiedDate":"2023-11-08"},{"lineNumber":440,"author":{"gitId":"kiwibang"},"content":"Aspect: How the command is implemented","lastModifiedDate":"2023-11-08"},{"lineNumber":441,"author":{"gitId":"kiwibang"},"content":"* **Alternative 1 (current choice):** Use the existing open-closed principle of AB3 to add these new commands","lastModifiedDate":"2023-11-08"},{"lineNumber":442,"author":{"gitId":"kiwibang"},"content":"    * Pros:","lastModifiedDate":"2023-11-08"},{"lineNumber":443,"author":{"gitId":"kiwibang"},"content":"        * Reduces this to a problem that AB3 has already solved","lastModifiedDate":"2023-11-08"},{"lineNumber":444,"author":{"gitId":"kiwibang"},"content":"        * Maintains consistency with the AB3 format","lastModifiedDate":"2023-11-08"},{"lineNumber":445,"author":{"gitId":"kiwibang"},"content":"        * Consequently, it is easy to implement","lastModifiedDate":"2023-11-08"},{"lineNumber":446,"author":{"gitId":"kiwibang"},"content":"    * Cons:","lastModifiedDate":"2023-11-08"},{"lineNumber":447,"author":{"gitId":"kiwibang"},"content":"        * More command classes have to be added, which can increase coupling","lastModifiedDate":"2023-11-08"},{"lineNumber":448,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":449,"author":{"gitId":"Jonyxzx"},"content":"### Rate interview feature","lastModifiedDate":"2023-11-06"},{"lineNumber":450,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":451,"author":{"gitId":"Jonyxzx"},"content":"#### Implementation","lastModifiedDate":"2023-11-06"},{"lineNumber":452,"author":{"gitId":"Jonyxzx"},"content":"the rate feature allows users to assign a rating value to the specified interview via the command `rate INTERVIEW_INDEX RATING`, where `INTERVIEW_INDEX` must be a positive unsigned integer within the list and `RATING` must be a positive unsigned one decimal place number between 0.0 to 5.0 inclusive.","lastModifiedDate":"2023-11-09"},{"lineNumber":453,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":454,"author":{"gitId":"Jonyxzx"},"content":"The `rate` feature is facilitated by the `Rating` class, `RateCommand` and the `RateCommandParser`. The `RateCommandParser` utilises the  `ParseUtil#parseIndex` and `ParseUtil#parseRating` to check the validity of the arguments given. Once the validity of the input is confirmed, the `Model#setInterview` will update the rating by replacing the old interview with the new interview that has the updated `RATING`.","lastModifiedDate":"2023-11-09"},{"lineNumber":455,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":456,"author":{"gitId":"Jonyxzx"},"content":"#### How is the command executed","lastModifiedDate":"2023-11-06"},{"lineNumber":457,"author":{"gitId":"Jonyxzx"},"content":"1. The user inputs the `rate` command together with the valid parameters.","lastModifiedDate":"2023-11-09"},{"lineNumber":458,"author":{"gitId":"Jonyxzx"},"content":"2. The `LogicManager` receives the command string and forwarded it to the `AddressBookParser`.","lastModifiedDate":"2023-11-09"},{"lineNumber":459,"author":{"gitId":"Jonyxzx"},"content":"3. The `AddressBookParser` checks the type of command and constructs `RateCommandParser` to parse the parameters.","lastModifiedDate":"2023-11-09"},{"lineNumber":460,"author":{"gitId":"Jonyxzx"},"content":"4. The `RateCommandParser` will pass the `INTERVIEW_INDEX` and `RATING` to the `ParseUtil` to check for validity and creates `RateCommand`.","lastModifiedDate":"2023-11-09"},{"lineNumber":461,"author":{"gitId":"Jonyxzx"},"content":"5. The `LogicManager` executes the `RateCommand` which calls the `Model#getFilteredInterviewList` to get the size of the current list to ensure the `INTERVIEW_INDEX` is within the interview list size.","lastModifiedDate":"2023-11-09"},{"lineNumber":462,"author":{"gitId":"Jonyxzx"},"content":"6. The `Model#setInterview` method will be called next in `RateCommand` to update the new interview with the new rating.","lastModifiedDate":"2023-11-09"},{"lineNumber":463,"author":{"gitId":"Jonyxzx"},"content":"7. The `RateCommand` constructs `CommandResult`to return the success message to be displayed by the GUI.","lastModifiedDate":"2023-11-09"},{"lineNumber":464,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":465,"author":{"gitId":"Jonyxzx"},"content":"#### Design consideration","lastModifiedDate":"2023-11-06"},{"lineNumber":466,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 1 (current choice):** Stricter rating value with specific format","lastModifiedDate":"2023-11-09"},{"lineNumber":467,"author":{"gitId":"Jonyxzx"},"content":"    * Pros: ","lastModifiedDate":"2023-11-09"},{"lineNumber":468,"author":{"gitId":"Jonyxzx"},"content":"      * Offer simplicity in terms of usage as the users does not have to come out with a rating system.","lastModifiedDate":"2023-11-09"},{"lineNumber":469,"author":{"gitId":"Jonyxzx"},"content":"    * Cons: ","lastModifiedDate":"2023-11-09"},{"lineNumber":470,"author":{"gitId":"Jonyxzx"},"content":"      * Less flexibility as the users are restricted to rate it within the valid range and format","lastModifiedDate":"2023-11-09"},{"lineNumber":471,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":472,"author":{"gitId":"Jonyxzx"},"content":"* **Alternative 2:** Allow any rating value with no format restriction","lastModifiedDate":"2023-11-09"},{"lineNumber":473,"author":{"gitId":"Jonyxzx"},"content":"  * Pros: ","lastModifiedDate":"2023-11-09"},{"lineNumber":474,"author":{"gitId":"Jonyxzx"},"content":"    * Allow greater flexibility as the users can decide what is a good range for themselves.","lastModifiedDate":"2023-11-09"},{"lineNumber":475,"author":{"gitId":"Jonyxzx"},"content":"  * Cons: ","lastModifiedDate":"2023-11-09"},{"lineNumber":476,"author":{"gitId":"Jonyxzx"},"content":"    * The users’ responsibility is higher to ensure the rating system is suitable for ranking applicants.","lastModifiedDate":"2023-11-09"},{"lineNumber":477,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":478,"author":{"gitId":"Jonyxzx"},"content":"### Sort interview feature","lastModifiedDate":"2023-11-06"},{"lineNumber":479,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":480,"author":{"gitId":"Jonyxzx"},"content":"#### Implementation","lastModifiedDate":"2023-11-06"},{"lineNumber":481,"author":{"gitId":"Jonyxzx"},"content":"The sort interview feature allows the user to sort all the interviews that have scheduled via the commands `sort-SORT_PARAMETER`, where `SORT_PARAMETER` can either be `rate` or `time`.","lastModifiedDate":"2023-11-09"},{"lineNumber":482,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":483,"author":{"gitId":"kiwibang"},"content":"The `sort` command is facilitated by the `SortRateCommand` and the `SortTimeCommand`. It enables the user to sort all the scheduled interviews by rating or timing. For rating, the interviews will be sorted in descending order of rating. For interview times, the interviews will be sorted in ascending chronological order of start time.","lastModifiedDate":"2023-11-08"},{"lineNumber":484,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":485,"author":{"gitId":"Jonyxzx"},"content":"#### How is the command executed","lastModifiedDate":"2023-11-06"},{"lineNumber":486,"author":{"gitId":"kiwibang"},"content":"1. The user inputs the `sort-rate` or `sort-time` command","lastModifiedDate":"2023-11-08"},{"lineNumber":487,"author":{"gitId":"kiwibang"},"content":"2. The `LogicManager` receives the `sort-rate` or `sort-time` command string and forwards it to the `AddressBookParser`.","lastModifiedDate":"2023-11-08"},{"lineNumber":488,"author":{"gitId":"kiwibang"},"content":"3. The `AddressBookParser` checks the type of command and returns either `SortRateCommand` or `SortTimeCommand`.","lastModifiedDate":"2023-11-08"},{"lineNumber":489,"author":{"gitId":"kiwibang"},"content":"4. The `LogicManager` executes the `SortRateCommand` or `SortTimeCommand` which calls the `Model#sortInterviewList(Comparator\u003cInterview\u003e comparator)` method.","lastModifiedDate":"2023-11-08"},{"lineNumber":490,"author":{"gitId":"kiwibang"},"content":"5. The `SortRateCommand` or `SortTimeCommand` has their own `Comparator` object instance. Their respective comparators will be passed into the `Model#sortInterviewList(Comparator\u003cInterview\u003e comparator)`","lastModifiedDate":"2023-11-08"},{"lineNumber":491,"author":{"gitId":"kiwibang"},"content":"6. `Model#sortInterviewList(Comparator\u003cInterview\u003e comparator)` will then call the `AddressBook#sortInterview(Comparator\u003cInterview\u003e comparator)`, passing in the given comparator as argument. ","lastModifiedDate":"2023-11-08"},{"lineNumber":492,"author":{"gitId":"kiwibang"},"content":"7. `Model#sortInterviewList(Comparator\u003cInterview\u003e comparator)` will call the `UniqueInterviewList#sort(Comparator\u003cInterview\u003e comparator)`, which will call the built-in `FXCollections#sort(Comparator\u003cT\u003e comparator)` method, which will then sort the internal list of interviews by either rating or timing. Note that `FXCollections#sort(Comparator\u003cT\u003e comparator)` is used since the list of interviews is implemented as an `ObservableList`","lastModifiedDate":"2023-11-08"},{"lineNumber":493,"author":{"gitId":"kiwibang"},"content":"8. The GUI will be updated automatically by when the list changes.","lastModifiedDate":"2023-11-08"},{"lineNumber":494,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":495,"author":{"gitId":"Jonyxzx"},"content":"#### Design consideration","lastModifiedDate":"2023-11-06"},{"lineNumber":496,"author":{"gitId":"kiwibang"},"content":"Aspect: How the sort command works","lastModifiedDate":"2023-11-08"},{"lineNumber":497,"author":{"gitId":"kiwibang"},"content":"* **Alternative 1 (current choice):** Implement the sort method in the `ModelManager`, `AddressBook`, and the `UniqueInterviewList` class","lastModifiedDate":"2023-11-08"},{"lineNumber":498,"author":{"gitId":"kiwibang"},"content":"    * Pros:","lastModifiedDate":"2023-11-08"},{"lineNumber":499,"author":{"gitId":"kiwibang"},"content":"        * Does not violate the _Law of Demeter_ principle, since the sort is called through `Model` in the `SortRateCommand` or `SortTimeCommand`, where the `Model` instance is passed as a parameter to the respective `execute` commands","lastModifiedDate":"2023-11-08"},{"lineNumber":500,"author":{"gitId":"kiwibang"},"content":"        * Does not violate the _information hiding_ principle. This is because the internal list of interviews is never accessed nor modified directly by the `execute` command of the respective command objects","lastModifiedDate":"2023-11-08"},{"lineNumber":501,"author":{"gitId":"kiwibang"},"content":"    * Cons:","lastModifiedDate":"2023-11-08"},{"lineNumber":502,"author":{"gitId":"kiwibang"},"content":"        * The command will cause the control to be passed to `ModelManager` first, then to `AddressBook` and then finally to `UniqueInterviewList` where only in `UniqueInterviewList` is the internal list sorted. This results in an additional layer of abstraction, which increases the complexity of the command slightly","lastModifiedDate":"2023-11-08"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":504,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":509,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":510,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":511,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":512,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"Chen1x"},"content":"* is a hiring manager working in Technology/Engineering field","lastModifiedDate":"2023-10-05"},{"lineNumber":523,"author":{"gitId":"Chen1x"},"content":"* has a need to manage a significant number of job applicants and interviews","lastModifiedDate":"2023-10-05"},{"lineNumber":524,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":527,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"Jonyxzx"},"content":"**Value proposition**: ","lastModifiedDate":"2023-11-09"},{"lineNumber":530,"author":{"gitId":"Jonyxzx"},"content":"* Manage applicants and interviews faster than a typical mouse/GUI driven contact.","lastModifiedDate":"2023-11-09"},{"lineNumber":531,"author":{"gitId":"Jonyxzx"},"content":"* Easy viewing of top applicants.","lastModifiedDate":"2023-11-09"},{"lineNumber":532,"author":{"gitId":"Jonyxzx"},"content":"* Easy scheduling of interviews without time clash.","lastModifiedDate":"2023-11-09"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"| Priority | As a …​                                               | I want to …​                             | So that I can…​                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"Jonyxzx"},"content":"|----------|-------------------------------------------------------|------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2023-11-06"},{"lineNumber":541,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | New user of the app                                   | see usage instructions                   | refer to instructions when I first started to use the App                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":542,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager ready for job applicant           | add a new applicant                      | save their contact details into the App                                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":543,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager with many applicants              | rate an applicant                        | keep track of the applicant performance for the interview                 |","lastModifiedDate":"2023-11-09"},{"lineNumber":544,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager ready to start an interview       | schedule an interview                    | save the interview information into the application                       |","lastModifiedDate":"2023-11-09"},{"lineNumber":545,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager ready for next round of interview | delete an applicant                      | remove their contact details that I no longer need                        |","lastModifiedDate":"2023-10-05"},{"lineNumber":546,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Engineering Manager that finished an interview        | delete an interview                      | remove the interview that has already been completed                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":547,"author":{"gitId":"jingjie88"},"content":"| `* * *`  | Busy Engineering Manager                              | find an applicant by name                | locate details of applicants without having to go through the entire list |","lastModifiedDate":"2023-10-17"},{"lineNumber":548,"author":{"gitId":"Jonyxzx"},"content":"| `* * *`  | Busy Engineering Manager                              | find a interview by job role             | easily locate the interview for the particular job role                   |","lastModifiedDate":"2023-11-09"},{"lineNumber":549,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Busy Engineering Manager                              | set reminder of interview                | stay organised and track upcoming interview                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":550,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager with sensitive information        | hide private contact details             | protect the privacy of the applicants information in the App              |","lastModifiedDate":"2023-10-05"},{"lineNumber":551,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager with many applicants              | sort the applicants by skill             | prioritise and focus on the most promising candidates                     |","lastModifiedDate":"2023-10-05"},{"lineNumber":552,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Busy Engineering Manager                              | find free time slot                      | schedule an interview without time clash                                  |","lastModifiedDate":"2023-11-09"},{"lineNumber":553,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager                                   | update an applicant details              | easily update their information on the App                                |","lastModifiedDate":"2023-10-05"},{"lineNumber":554,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager                                   | update a job role                        | easily change the details about the job role                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":555,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Engineering Manager with limited budget               | track the cost per hire                  | ensure that the company budget is not exceeded                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":556,"author":{"gitId":"Jonyxzx"},"content":"| `* *`    | Team-Oriented Engineering Manager                     | add other interviewer                    | facilitate collaboration and delegation of responsibilities               |","lastModifiedDate":"2023-11-06"},{"lineNumber":557,"author":{"gitId":"jingjie88"},"content":"| `*`      | Organised Engineering Manager                         | sort applicants by name                  | locate an applicant easily                                                |","lastModifiedDate":"2023-10-17"},{"lineNumber":558,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Engineering Manager with many contacts                | import contacts from other file          | add multiple contacts into the App smoothly                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":559,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Meticulous Engineering Manager                        | store the applicant\u0027s background         | make a more informed choice to benefit the company                        |","lastModifiedDate":"2023-10-05"},{"lineNumber":560,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Engineering Manager with multiple rounds of interview | track the progress of each candidate     | maintain a clear overview of our recruitment efforts                      |","lastModifiedDate":"2023-10-05"},{"lineNumber":561,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | New Engineering Manager                               | analyse the performance of the interview | make improvements to my interview processes                               |","lastModifiedDate":"2023-10-05"},{"lineNumber":562,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Helpful Engineering Manager                           | provide feedback to the applicant        | offer constructive advice to help them improve their skills               |","lastModifiedDate":"2023-10-05"},{"lineNumber":563,"author":{"gitId":"Jonyxzx"},"content":"| `*`      | Long user of the app                                  | provide feedback to the developer        | suggest improvements and enhancements for the app                         |","lastModifiedDate":"2023-10-05"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"JasonLCY-Temp"},"content":"(For all use cases below, the **System** is the `InterviewHub` and the **Actor** is the `hiring manager`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC01 Add an interview**","lastModifiedDate":"2023-10-04"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager requests to add an interview.","lastModifiedDate":"2023-10-04"},{"lineNumber":574,"author":{"gitId":"JasonLCY-Temp"},"content":"2. InterviewHub adds the interview.","lastModifiedDate":"2023-10-04"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. One of the user-provided parameters is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":580,"author":{"gitId":"JasonLCY-Temp"},"content":"    * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"JasonLCY-Temp"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":584,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC02 List all interview**","lastModifiedDate":"2023-10-04"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":586,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":588,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager requests to list all interviews.","lastModifiedDate":"2023-10-04"},{"lineNumber":589,"author":{"gitId":"JasonLCY-Temp"},"content":"2. InterviewHub displays all scheduled interviews.","lastModifiedDate":"2023-10-04"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":591,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":593,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":594,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":595,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":597,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":599,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC03 Delete an Interview**","lastModifiedDate":"2023-10-04"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":601,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":603,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager \u003cu\u003e views the list of all interviews (UC02) \u003c/u\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":604,"author":{"gitId":"JasonLCY-Temp"},"content":"2. Hiring manager requests to delete a specific interview","lastModifiedDate":"2023-10-04"},{"lineNumber":605,"author":{"gitId":"JasonLCY-Temp"},"content":"3. InterviewHub deletes the specified interview","lastModifiedDate":"2023-10-04"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":611,"author":{"gitId":"JasonLCY-Temp"},"content":"* 2a. The provided index is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":612,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 2a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":614,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":616,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC04 Add a job role**","lastModifiedDate":"2023-10-04"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":618,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":620,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager requests to add a job role.","lastModifiedDate":"2023-10-04"},{"lineNumber":621,"author":{"gitId":"JasonLCY-Temp"},"content":"2. InterviewHub adds the job role.","lastModifiedDate":"2023-10-04"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":623,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":625,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":626,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. One of the user-provided parameters is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":627,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":629,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":631,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC05 List all job roles**","lastModifiedDate":"2023-10-04"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":633,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":635,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager requests to list all job roles.","lastModifiedDate":"2023-10-04"},{"lineNumber":636,"author":{"gitId":"JasonLCY-Temp"},"content":"2. InterviewHub displays all job roles.","lastModifiedDate":"2023-10-04"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":638,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":640,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":641,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":642,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":644,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":646,"author":{"gitId":"jingjie88"},"content":"**Use case: UC06 List all applicants for a job role**","lastModifiedDate":"2023-10-05"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":648,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":650,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager \u003cu\u003e views the list of all job roles (UC05) \u003c/u\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":651,"author":{"gitId":"jingjie88"},"content":"2. Hiring manager requests to view all applicants for a specific job role.","lastModifiedDate":"2023-10-05"},{"lineNumber":652,"author":{"gitId":"jingjie88"},"content":"3. InterviewHub displays all the applicants for the specific job role.","lastModifiedDate":"2023-10-05"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":654,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":656,"author":{"gitId":"JasonLCY-Temp"},"content":"* 2a. The provided index is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":657,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 2a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":659,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":661,"author":{"gitId":"JasonLCY-Temp"},"content":"**Use case: UC07 Delete a job role**","lastModifiedDate":"2023-10-04"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":663,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":665,"author":{"gitId":"JasonLCY-Temp"},"content":"1. Hiring manager \u003cu\u003e views the list of all job roles (UC02) \u003c/u\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":666,"author":{"gitId":"JasonLCY-Temp"},"content":"2. Hiring manager requests to delete a specific job role","lastModifiedDate":"2023-10-04"},{"lineNumber":667,"author":{"gitId":"JasonLCY-Temp"},"content":"3. InterviewHub deletes the specified job role","lastModifiedDate":"2023-10-04"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":671,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":673,"author":{"gitId":"JasonLCY-Temp"},"content":"* 2a. The provided index is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":674,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 2a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":676,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":679,"author":{"gitId":"jingjie88"},"content":"**Use case: UC08 Add an applicant**","lastModifiedDate":"2023-10-05"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":681,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":682,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":683,"author":{"gitId":"jingjie88"},"content":"1. Hiring manager requests to add an applicant.","lastModifiedDate":"2023-10-05"},{"lineNumber":684,"author":{"gitId":"jingjie88"},"content":"2. InterviewHub adds the applicant.","lastModifiedDate":"2023-10-05"},{"lineNumber":685,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":686,"author":{"gitId":"JasonLCY-Temp"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":687,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":688,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":689,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. One of the user-provided parameters is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":690,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":691,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":692,"author":{"gitId":"JasonLCY-Temp"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-04"},{"lineNumber":693,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":694,"author":{"gitId":"jingjie88"},"content":"**Use case: UC09 List all applicants**","lastModifiedDate":"2023-10-05"},{"lineNumber":695,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":696,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":697,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":698,"author":{"gitId":"jingjie88"},"content":"1. Hiring manager requests to list all applicants.","lastModifiedDate":"2023-10-05"},{"lineNumber":699,"author":{"gitId":"jingjie88"},"content":"2. InterviewHub displays all scheduled applicants.","lastModifiedDate":"2023-10-05"},{"lineNumber":700,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":701,"author":{"gitId":"JasonLCY-Temp"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":702,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":703,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":704,"author":{"gitId":"JasonLCY-Temp"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-04"},{"lineNumber":705,"author":{"gitId":"JasonLCY-Temp"},"content":"  * 1a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":706,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":707,"author":{"gitId":"JasonLCY-Temp"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":708,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":709,"author":{"gitId":"jingjie88"},"content":"**Use case: UC010 Delete an applicant**","lastModifiedDate":"2023-10-05"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":711,"author":{"gitId":"JasonLCY-Temp"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":712,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":713,"author":{"gitId":"jingjie88"},"content":"1. Hiring manager \u003cu\u003e views the list of all applicants (UC09) \u003c/u\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":714,"author":{"gitId":"jingjie88"},"content":"2. Hiring manager requests to delete a specific applicant","lastModifiedDate":"2023-10-05"},{"lineNumber":715,"author":{"gitId":"jingjie88"},"content":"3. InterviewHub deletes the specified applicant","lastModifiedDate":"2023-10-05"},{"lineNumber":716,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":717,"author":{"gitId":"JasonLCY-Temp"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":718,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":719,"author":{"gitId":"JasonLCY-Temp"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"JasonLCY-Temp"},"content":"* 2a. The provided index is invalid","lastModifiedDate":"2023-10-04"},{"lineNumber":722,"author":{"gitId":"JasonLCY-Temp"},"content":"    * 2a1. InterviewHub shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"jingjie88"},"content":"2.  Should be able to handle as many applicants as the user is able to manage in their workday/workweek.","lastModifiedDate":"2023-10-05"},{"lineNumber":730,"author":{"gitId":"kiwibang"},"content":"3.  The app should be reasonably responsive to the entire set of user requests(i.e. within 1 second at maximum load).","lastModifiedDate":"2023-10-03"},{"lineNumber":731,"author":{"gitId":"kiwibang"},"content":"4.  The system should have an interface that is very easy to pick up for our target audience(i.e. Engineering Managers","lastModifiedDate":"2023-10-03"},{"lineNumber":732,"author":{"gitId":"kiwibang"},"content":"that have many years of programming experience).","lastModifiedDate":"2023-10-03"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"Jonyxzx"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X/MacOS","lastModifiedDate":"2023-11-06"},{"lineNumber":737,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"jingjie88"},"content":"* **Applicant**: The applicant applying to a particular job role.","lastModifiedDate":"2023-10-17"},{"lineNumber":739,"author":{"gitId":"jingjie88"},"content":"* **Hiring manager**: The manager interviewing the applicant.","lastModifiedDate":"2023-10-05"},{"lineNumber":740,"author":{"gitId":"jingjie88"},"content":"This manager is familiar with the technical aspects of the role. Also called engineering manager.","lastModifiedDate":"2023-10-05"},{"lineNumber":741,"author":{"gitId":"jingjie88"},"content":"* **MSS**: Main Success Scenario. It describes the most straightforward","lastModifiedDate":"2023-10-05"},{"lineNumber":742,"author":{"gitId":"jingjie88"},"content":"interaction in a use case where nothing goes wrong.","lastModifiedDate":"2023-10-05"},{"lineNumber":743,"author":{"gitId":"jingjie88"},"content":"* **Extensions**: In a use case, an extension describes an alternative flow of events","lastModifiedDate":"2023-10-05"},{"lineNumber":744,"author":{"gitId":"jingjie88"},"content":"that are different from the MSS.","lastModifiedDate":"2023-10-05"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"Jonyxzx"},"content":"## **Appendix: Planned Enhancement**","lastModifiedDate":"2023-11-06"},{"lineNumber":749,"author":{"gitId":"Jonyxzx"},"content":"1. The current error message when adding an interview where the start and/or end date string is a valid date but is missing time is too general.","lastModifiedDate":"2023-11-09"},{"lineNumber":750,"author":{"gitId":"JasonLCY-Temp"},"content":"We plan to make the error message also mention why the command is not accepted and the reason for the failure:","lastModifiedDate":"2023-11-06"},{"lineNumber":751,"author":{"gitId":"JasonLCY-Temp"},"content":"Please enter an interview time!","lastModifiedDate":"2023-11-06"},{"lineNumber":752,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":753,"author":{"gitId":"Jonyxzx"},"content":"2. The current implementation of mark-i allows the user to mark interviews before the interview has been completed,","lastModifiedDate":"2023-11-09"},{"lineNumber":754,"author":{"gitId":"JasonLCY-Temp"},"content":"based on the end time of the interview. We plan to not allow the user to mark interviews that have not passed.","lastModifiedDate":"2023-11-06"},{"lineNumber":755,"author":{"gitId":"JasonLCY-Temp"},"content":"So, interviews whose end time is after the current time cannot be marked as done.","lastModifiedDate":"2023-11-06"},{"lineNumber":756,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":757,"author":{"gitId":"Jonyxzx"},"content":"3. The current implementation of the find-i and find-a commands does not display a constant status of whether the find","lastModifiedDate":"2023-11-09"},{"lineNumber":758,"author":{"gitId":"JasonLCY-Temp"},"content":"filter is being applied to the current list. E.g. When you perform a find-i command followed by some other command that","lastModifiedDate":"2023-11-06"},{"lineNumber":759,"author":{"gitId":"JasonLCY-Temp"},"content":"changes the interview list, you have no way to tell if the previous \"find-i\" filter is still being applied.","lastModifiedDate":"2023-11-06"},{"lineNumber":760,"author":{"gitId":"JasonLCY-Temp"},"content":"We plan to update the UI to display a constant status of what filter is currently being applied to the applicant and","lastModifiedDate":"2023-11-06"},{"lineNumber":761,"author":{"gitId":"JasonLCY-Temp"},"content":"interview list.","lastModifiedDate":"2023-11-06"},{"lineNumber":762,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":763,"author":{"gitId":"Jonyxzx"},"content":"4. The current implementation of the rating will set it to 0.0 when an interview object is first created. This is not ideal as","lastModifiedDate":"2023-11-09"},{"lineNumber":764,"author":{"gitId":"Jonyxzx"},"content":"the user is unable to differentiate whether the interview rating is truly 0.0. Therefore, the future plan is displaying the preset rating","lastModifiedDate":"2023-11-09"},{"lineNumber":765,"author":{"gitId":"Jonyxzx"},"content":"as N/A and the subsequent user rating will be the same as the current model.","lastModifiedDate":"2023-11-09"},{"lineNumber":766,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":767,"author":{"gitId":"Jonyxzx"},"content":"5. The current implementation of applicant allows duplicate phone number and duplicate email to be entered into the system. Moreover, it prohibits","lastModifiedDate":"2023-11-09"},{"lineNumber":768,"author":{"gitId":"Jonyxzx"},"content":"name with the exact same string to be added. As the interview is identifiable mostly based on the name, allowing the same name string will result in","lastModifiedDate":"2023-11-09"},{"lineNumber":769,"author":{"gitId":"Jonyxzx"},"content":"confusion with the interview object. The future plan is to increase the visibility of the connection between applicant and interview, to remove dependency on the name itself.","lastModifiedDate":"2023-11-09"},{"lineNumber":770,"author":{"gitId":"Jonyxzx"},"content":"On the other hand, the duplication of phone number and email will be handled in future implementation and no longer allowing such duplication to be entered.","lastModifiedDate":"2023-11-09"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":772,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-06"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":774,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"Jonyxzx"},"content":"Please refer to the [User Guide](https://ay2324s1-cs2103t-t11-2.github.io/tp/UserGuide.html) if you need more information on the command constrains","lastModifiedDate":"2023-11-09"},{"lineNumber":781,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"Jonyxzx"},"content":"   2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-11-06"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"Jonyxzx"},"content":"2. Saving window preferences","lastModifiedDate":"2023-11-06"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"Jonyxzx"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":796,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"kiwibang"},"content":"### Viewing help","lastModifiedDate":"2023-11-08"},{"lineNumber":799,"author":{"gitId":"Jonyxzx"},"content":"Command: `help`","lastModifiedDate":"2023-11-09"},{"lineNumber":800,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":801,"author":{"gitId":"Jonyxzx"},"content":"1. Test case: `help`\u003c/br\u003eExpected: Help window with the User Guide URL is displayed. Status message remained unchanged.","lastModifiedDate":"2023-11-09"},{"lineNumber":802,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":803,"author":{"gitId":"Jonyxzx"},"content":"### Clearing all the data","lastModifiedDate":"2023-11-09"},{"lineNumber":804,"author":{"gitId":"Jonyxzx"},"content":"Command: `clear`","lastModifiedDate":"2023-11-09"},{"lineNumber":805,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":806,"author":{"gitId":"Jonyxzx"},"content":"1. Test case: `clear`\u003c/br\u003eExpected: All the applicants and interviews will be cleared. Success message is displayed.","lastModifiedDate":"2023-11-09"},{"lineNumber":807,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":808,"author":{"gitId":"Jonyxzx"},"content":"### Exiting the program","lastModifiedDate":"2023-11-09"},{"lineNumber":809,"author":{"gitId":"Jonyxzx"},"content":"Command: `exit`","lastModifiedDate":"2023-11-09"},{"lineNumber":810,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":811,"author":{"gitId":"Jonyxzx"},"content":"1. Test case: `exit`\u003c/br\u003eExpected: Exits InterviewHub and all data is saved automatically.","lastModifiedDate":"2023-11-09"},{"lineNumber":812,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":813,"author":{"gitId":"kiwibang"},"content":"### Adding an applicant","lastModifiedDate":"2023-11-08"},{"lineNumber":814,"author":{"gitId":"Jonyxzx"},"content":"Command: `add-a`","lastModifiedDate":"2023-11-09"},{"lineNumber":815,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":816,"author":{"gitId":"Jonyxzx"},"content":"### Deleting an applicant","lastModifiedDate":"2023-11-06"},{"lineNumber":817,"author":{"gitId":"Jonyxzx"},"content":"Command: `delete-a`","lastModifiedDate":"2023-11-09"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"Jonyxzx"},"content":"1. Deleting an applicant while all applicants are being shown","lastModifiedDate":"2023-11-06"},{"lineNumber":820,"author":{"gitId":"Jonyxzx"},"content":"    1. Prerequisites: List all applicants using the `list-a` command. Multiple applicants in the list.","lastModifiedDate":"2023-11-09"},{"lineNumber":821,"author":{"gitId":"Jonyxzx"},"content":"    2. Test case: `delete-a 1`","lastModifiedDate":"2023-11-09"},{"lineNumber":822,"author":{"gitId":"Jonyxzx"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. ","lastModifiedDate":"2023-11-09"},{"lineNumber":823,"author":{"gitId":"Jonyxzx"},"content":"    3. Test case: `delete-a 0`","lastModifiedDate":"2023-11-09"},{"lineNumber":824,"author":{"gitId":"Jonyxzx"},"content":"       Expected: No applicant is deleted. Error details shown in the status message.","lastModifiedDate":"2023-11-09"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"kiwibang"},"content":"### Editing an applicant","lastModifiedDate":"2023-11-08"},{"lineNumber":827,"author":{"gitId":"Jonyxzx"},"content":"Command: `edit-a`","lastModifiedDate":"2023-11-09"},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"kiwibang"},"content":"### Finding applicants from the list","lastModifiedDate":"2023-11-08"},{"lineNumber":830,"author":{"gitId":"Jonyxzx"},"content":"Command: `find-a`","lastModifiedDate":"2023-11-09"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"kiwibang"},"content":"### Listing all applicants","lastModifiedDate":"2023-11-08"},{"lineNumber":833,"author":{"gitId":"Jonyxzx"},"content":"Command: `list-a`","lastModifiedDate":"2023-11-09"},{"lineNumber":834,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":835,"author":{"gitId":"Jonyxzx"},"content":"1. Listing all the applicants","lastModifiedDate":"2023-11-09"},{"lineNumber":836,"author":{"gitId":"Jonyxzx"},"content":"   1. Test case: `list-a`\u003c/br\u003eExpected: Shows all the applicants in the applicant list. Success message is displayed.","lastModifiedDate":"2023-11-09"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"kiwibang"},"content":"### Adding an interview","lastModifiedDate":"2023-11-08"},{"lineNumber":839,"author":{"gitId":"Jonyxzx"},"content":"Command: `add-i`","lastModifiedDate":"2023-11-09"},{"lineNumber":840,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":841,"author":{"gitId":"kiwibang"},"content":"### Deleting an interview","lastModifiedDate":"2023-11-08"},{"lineNumber":842,"author":{"gitId":"Jonyxzx"},"content":"Command: `delete-i`","lastModifiedDate":"2023-11-09"},{"lineNumber":843,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":844,"author":{"gitId":"kiwibang"},"content":"### Editing an interview","lastModifiedDate":"2023-11-08"},{"lineNumber":845,"author":{"gitId":"Jonyxzx"},"content":"Command: `edit-i`","lastModifiedDate":"2023-11-09"},{"lineNumber":846,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":847,"author":{"gitId":"kiwibang"},"content":"### Finding interviews from the list","lastModifiedDate":"2023-11-08"},{"lineNumber":848,"author":{"gitId":"Jonyxzx"},"content":"Command: `find-i`","lastModifiedDate":"2023-11-09"},{"lineNumber":849,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":850,"author":{"gitId":"Jonyxzx"},"content":"1. Finding interviews by job role","lastModifiedDate":"2023-11-09"},{"lineNumber":851,"author":{"gitId":"Jonyxzx"},"content":"   1. Prerequisite: The interview with the indicated job role has matching keyword","lastModifiedDate":"2023-11-09"},{"lineNumber":852,"author":{"gitId":"Jonyxzx"},"content":"   2. Test case: `find-i software`\u003c/br\u003eExpected: All interviews with at least one `software`(case-insensitive) as keyword in the job role are shown in the interview list. The amount of interview listed is shown on the status box.","lastModifiedDate":"2023-11-09"},{"lineNumber":853,"author":{"gitId":"Jonyxzx"},"content":"   3. Test case: `find-i` \u003c/br\u003eExpected: The interview list remained unchanged. Error message is displayed.","lastModifiedDate":"2023-11-09"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":855,"author":{"gitId":"kiwibang"},"content":"### Listing all interviews","lastModifiedDate":"2023-11-08"},{"lineNumber":856,"author":{"gitId":"Jonyxzx"},"content":"Command: `list-i`","lastModifiedDate":"2023-11-09"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":858,"author":{"gitId":"Jonyxzx"},"content":"1. Listing all the interviews","lastModifiedDate":"2023-11-09"},{"lineNumber":859,"author":{"gitId":"Jonyxzx"},"content":"   1. Test case: `list-i`\u003c/br\u003eExpected: Shows all the interviews in the interview list. Success message is displayed.","lastModifiedDate":"2023-11-09"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":861,"author":{"gitId":"kiwibang"},"content":"### Listing all free timing for the given day","lastModifiedDate":"2023-11-08"},{"lineNumber":862,"author":{"gitId":"kiwibang"},"content":"Command: `list-freetime`\u003c/br\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":864,"author":{"gitId":"kiwibang"},"content":"1. Listing the free time for a day using `DD/MM/YYYY` or `DD-MM-YYYY` format","lastModifiedDate":"2023-11-08"},{"lineNumber":865,"author":{"gitId":"kiwibang"},"content":"   1. Prerequisites: The date string must be in the DD/MM/YYYY or DD-MM-YYYY format, and there should not be any interviews scheduled for the given date","lastModifiedDate":"2023-11-08"},{"lineNumber":866,"author":{"gitId":"kiwibang"},"content":"   2. Test case: `list-freetime 12/12/2099`\u003c/br\u003eExpected: There should be 1 block of free time listed, which will span from 9am to 5pm on 12/12/2099","lastModifiedDate":"2023-11-08"},{"lineNumber":867,"author":{"gitId":"kiwibang"},"content":"   3. Test case: `list-freetime 12-12-2099`\u003c/br\u003eExpected: There should be 1 block of free time listed, which will span from 9am to 5pm on 12/12/2099","lastModifiedDate":"2023-11-08"},{"lineNumber":868,"author":{"gitId":"kiwibang"},"content":"   4. Success message shown in command box for both cases:\u003c/br\u003e `Free times on 12/12/2099:`\u003c/br\u003e`from: 09:00 to: 17:00`","lastModifiedDate":"2023-11-08"},{"lineNumber":869,"author":{"gitId":"kiwibang"},"content":"2. Listing the free time for a day using `DD/MM` or `DD MMM` format, where ","lastModifiedDate":"2023-11-08"},{"lineNumber":870,"author":{"gitId":"kiwibang"},"content":"   1. Prerequisites: The date string must be in the DD/MM or DD MMM format, and there should not be any interviews scheduled for the given date","lastModifiedDate":"2023-11-08"},{"lineNumber":871,"author":{"gitId":"kiwibang"},"content":"   2. Test case: `list-freetime 12/12`\u003c/br\u003eExpected: There should be 1 block of free time listed, which will span from 9am to 5pm on 12/12/2023","lastModifiedDate":"2023-11-08"},{"lineNumber":872,"author":{"gitId":"kiwibang"},"content":"   3. Test case: `list-freetime 12 Dec`\u003c/br\u003eExpected: There should be 1 block of free time listed, which will span from 9am to 5pm on 12/12/2023","lastModifiedDate":"2023-11-08"},{"lineNumber":873,"author":{"gitId":"kiwibang"},"content":"   4. Success message shown in command box for both cases:\u003c/br\u003e `Free times on 12/12/2023:`\u003c/br\u003e`from: 09:00 to: 17:00`","lastModifiedDate":"2023-11-08"},{"lineNumber":874,"author":{"gitId":"kiwibang"},"content":"3. Listing the free time for a date in the past","lastModifiedDate":"2023-11-08"},{"lineNumber":875,"author":{"gitId":"kiwibang"},"content":"   1. Prerequisite: The date string must follow one of the accepted date formats","lastModifiedDate":"2023-11-08"},{"lineNumber":876,"author":{"gitId":"kiwibang"},"content":"   2. Test case: `list-freetime 12-12-1970`\u003c/br\u003eExpected: Command does not execute.","lastModifiedDate":"2023-11-08"},{"lineNumber":877,"author":{"gitId":"kiwibang"},"content":"   3. Error message shown in command box:\u003c/br\u003e`Input date cannot be in the past!`","lastModifiedDate":"2023-11-08"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":879,"author":{"gitId":"kiwibang"},"content":"### Listing all interviews for today","lastModifiedDate":"2023-11-08"},{"lineNumber":880,"author":{"gitId":"Jonyxzx"},"content":"Command: `list-i-today`","lastModifiedDate":"2023-11-09"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":882,"author":{"gitId":"kiwibang"},"content":"### Marking an interview as done","lastModifiedDate":"2023-11-08"},{"lineNumber":883,"author":{"gitId":"Jonyxzx"},"content":"Command: `mark`","lastModifiedDate":"2023-11-09"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":885,"author":{"gitId":"kiwibang"},"content":"### Rating an interview","lastModifiedDate":"2023-11-08"},{"lineNumber":886,"author":{"gitId":"Jonyxzx"},"content":"Command: `rate`","lastModifiedDate":"2023-11-09"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":888,"author":{"gitId":"Jonyxzx"},"content":"1. Rating an existing interview","lastModifiedDate":"2023-11-09"},{"lineNumber":889,"author":{"gitId":"Jonyxzx"},"content":"   1. Prerequisites: the interview to be rated has been marked as done, and it exists in the list.","lastModifiedDate":"2023-11-09"},{"lineNumber":890,"author":{"gitId":"Jonyxzx"},"content":"   2. Test case: `rate 1 2.0`\u003c/br\u003eExpected: The interview rating at index one has been updated to 2.0. Success message is displayed.","lastModifiedDate":"2023-11-09"},{"lineNumber":891,"author":{"gitId":"Jonyxzx"},"content":"   3. Test case: `rate 1 10.0`\u003c/br\u003eExpected: The interview rating at index one is not changed. Error message is displayed.","lastModifiedDate":"2023-11-09"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":893,"author":{"gitId":"kiwibang"},"content":"### Listing all completed interview","lastModifiedDate":"2023-11-08"},{"lineNumber":894,"author":{"gitId":"Jonyxzx"},"content":"Command: `list-i-done`","lastModifiedDate":"2023-11-09"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":896,"author":{"gitId":"kiwibang"},"content":"1. Listing completed interviews with exact command","lastModifiedDate":"2023-11-08"},{"lineNumber":897,"author":{"gitId":"kiwibang"},"content":"    1. Test case: `list-i-done`\u003c/br\u003eExpected: The interview list should only show interviews which have been completed (i.e. those that are green). If there are no completed interviews, the interviews box will be empty ","lastModifiedDate":"2023-11-08"},{"lineNumber":898,"author":{"gitId":"kiwibang"},"content":"2. Listing completed interviews with the command along with nonsensical parameters appended to the end","lastModifiedDate":"2023-11-08"},{"lineNumber":899,"author":{"gitId":"kiwibang"},"content":"   1. Test case: `list-i-done I am a cat`\u003c/br\u003eExpected: Same expected result as test case 1","lastModifiedDate":"2023-11-08"},{"lineNumber":900,"author":{"gitId":"kiwibang"},"content":"   ","lastModifiedDate":"2023-11-08"},{"lineNumber":901,"author":{"gitId":"kiwibang"},"content":"### Listing all incomplete interview","lastModifiedDate":"2023-11-08"},{"lineNumber":902,"author":{"gitId":"Jonyxzx"},"content":"Command: `list-i-not-done`","lastModifiedDate":"2023-11-09"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":904,"author":{"gitId":"kiwibang"},"content":"1. Listing completed interviews with exact command","lastModifiedDate":"2023-11-08"},{"lineNumber":905,"author":{"gitId":"kiwibang"},"content":"    1. Test case: `list-i-not-done`\u003c/br\u003eExpected: The interview list should only show interviews which have been completed (i.e. those that are green). If there are no completed interviews, the interviews box will be empty","lastModifiedDate":"2023-11-08"},{"lineNumber":906,"author":{"gitId":"kiwibang"},"content":"2. Listing completed interviews with the command along with nonsensical parameters appended to the end","lastModifiedDate":"2023-11-08"},{"lineNumber":907,"author":{"gitId":"kiwibang"},"content":"    1. Test case: `list-i-not-done I am a cat`\u003c/br\u003eExpected: Same expected result as test case 1","lastModifiedDate":"2023-11-08"},{"lineNumber":908,"author":{"gitId":"kiwibang"},"content":"   ","lastModifiedDate":"2023-11-08"},{"lineNumber":909,"author":{"gitId":"kiwibang"},"content":"### Sorting the interview list by rating","lastModifiedDate":"2023-11-08"},{"lineNumber":910,"author":{"gitId":"Jonyxzx"},"content":"Command: `sort-rate`","lastModifiedDate":"2023-11-09"},{"lineNumber":911,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":912,"author":{"gitId":"Jonyxzx"},"content":"1. Sorting the current interview list by rating.","lastModifiedDate":"2023-11-09"},{"lineNumber":913,"author":{"gitId":"Jonyxzx"},"content":"   1. Test case: `sort-rate`\u003c/br\u003eExpected: Sorts the current interview list by rating in descending order. Success message is displayed.","lastModifiedDate":"2023-11-09"},{"lineNumber":914,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":915,"author":{"gitId":"kiwibang"},"content":"### Sorting the interview list by start-time","lastModifiedDate":"2023-11-08"},{"lineNumber":916,"author":{"gitId":"Jonyxzx"},"content":"Command: `sort-time`","lastModifiedDate":"2023-11-09"},{"lineNumber":917,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":918,"author":{"gitId":"kiwibang"},"content":"1. Listing completed interviews with exact command","lastModifiedDate":"2023-11-08"},{"lineNumber":919,"author":{"gitId":"kiwibang"},"content":"   1. Test case: `sort-time`\u003c/br\u003eExpected: The interview list will be sorted in chronological order of start times. If there are no interviews scheduled, the interviews box will be empty. In the case that the list is filtered in some way, the sort will only sort on the filtered interview list","lastModifiedDate":"2023-11-08"},{"lineNumber":920,"author":{"gitId":"kiwibang"},"content":"2. Listing completed interviews with the command along with nonsensical parameters appended to the end","lastModifiedDate":"2023-11-08"},{"lineNumber":921,"author":{"gitId":"kiwibang"},"content":"    1. Test case: `sort-time I am a cat`\u003c/br\u003eExpected: Same expected result as test case 1","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"Jonyxzx":272,"JasonLCY-Temp":97,"jingjie88":32,"kiwibang":212,"-":301,"Chen1x":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"# Table of Contents","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"- [How to use this user guide](#how-to-use-this-user-guide)","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"- [GUI Summary](#gui-summary)","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"- [Features](#features)","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"  - [General Features](#general-features)","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"    - [Viewing help: `help`](#viewing-help--help)","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"    - [Clearing all the data: `clear`](#clearing-all-applicants-and-interviews--clear)","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"    - [Exiting the program: `exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"  - [Application Management Features](#applicant-management-features)","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    - [Adding an applicant: `add-a`](#adding-an-applicant--add-a)","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"    - [Deleting an applicant: `delete-a`](#deleting-an-applicant--delete-a)","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"    - [Editing an applicant: `edit-a`](#editing-an-applicant--edit-a)","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"    - [Finding applicants from the list: `find-a`](#finding-applicants--find-a)","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"    - [Listing all applicants: `list-a`](#listing-all-applicants--list-a)","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"  - [Interview Management Features](#interview-management-features)","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    - [Adding an interview: `add-i`](#adding-an-interview--add-i)","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    - [Deleting an interview: `delete-i`](#deleting-an-interview--delete-i)","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"    - [Editing an interview: `edit-i`](#editing-an-interview--edit-i)","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"    - [Finding interviews from the list: `find-i`](#finding-interview-by-job-title--find-i)","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"    - [Listing all interviews: `list-i`](#listing-all-interviews--list-i)","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"    - [Listing all free timing for the given day: `list-freetime`](#listing-all-free-time-for-the-given-day--list-freetime)","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"    - [Listing all interviews for today: `list-i-today`](#listing-all-interviews-for-today--list-i-today)","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"    - [Marking an interview as done: `mark`](#marking-an-interview--mark)","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"    - [Rating an interview: `rate`](#rating-an-interview--rate)","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"    - [Listing all completed interview: `list-i-done`](#listing-all-completed-interview--list-i-done)","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"    - [Listing all incomplete interview: `list-i-not-done`](#listing-all-incomplete-interview--list-i-not-done)","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"    - [Sorting the interview list by rating: `sort-rate`](#sorting-interviews-by-rating--sort-rate)","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"    - [Sorting the interview list by start-time: `sort-time`](#sorting-interviews-by-start-time--sort-time)","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"- [Frequently Asked Questions](#frequently-asked-questions)","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"- [Known Issues](#known-issues)","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"  - [General Commands](#general-commands)","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"  - [Application Management Commands](#applicant-management-commands)","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"  - [Interview Management Commands](#interview-management-commands)","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"- [Glossary](#glossary)","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"# Introduction","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"Tired of sending out offers to the best candidates, just to receive a disappointing reply that they have already accepted another offer that was sent out before yours?","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"**InterviewHub**  is a desktop app for engineering manager to schedule job interviews and manage applicants.","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"By optimizing recruitment workflows, we enable faster decision-making, helping you secure top talent before your competitors.","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"It is optimized for use via a **Command Line Interface** (CLI) while still having the benefits of a **Graphical User Interface** (GUI).","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"If you can type fast, **InterviewHub** can get your Interview management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"What are you waiting for? Let\u0027s get started using **InterviewHub** by following the [How to use this user guide](#how-to-use-this-user-guide) section!","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"Jonyxzx"},"content":"# How to use this user guide","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"Jonyxzx"},"content":"To quickly find the information you need, refer to the [Table of Contents](#table-of-contents) located at the beginning of this guide. ","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"Jonyxzx"},"content":"It lists all the chapters and sections, allowing you to jump directly to the relevant content.","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"Jonyxzx"},"content":"Next, to get you started, we\u0027ve included a [Quick Start](#quick-start) section in this user guide to ensure that you have no trouble setting up **InterviewHub**.","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"Jonyxzx"},"content":"To get a better understanding of what you see, you can head over to [GUI Summary](#gui-summary) for a quick overview of the User-Interface.","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"Jonyxzx"},"content":"Along the way if you encounter unfamiliar terms, our [Glossary](#glossary) provides definitions and explanations for product-specific terminology. Refer to it whenever needed.","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"Jonyxzx"},"content":"Before we begin, the table below describes some of the symbols and syntax you may see throughout our guide:","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"Jonyxzx"},"content":"| Symbol                                    | Meaning                                                                                          |","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"Jonyxzx"},"content":"|-------------------------------------------|--------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"Jonyxzx"},"content":"| :warning: **Warning**                     | Important information that must be understood as the action may leads to unexpected consequences |","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"Jonyxzx"},"content":"| :information_source: **Note**             | Important information that you should pay attention to                                           |","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"Jonyxzx"},"content":"| :bulb: **Tip**                            | Helpful information to improve your experience                                                   |","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"Jonyxzx"},"content":"| `Highlighted text block`                  | Commands or parameters relevant to the application                                               |","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"Jonyxzx"},"content":"| [Hyperlinks](#how-to-use-this-user-guide) | When clicked, you will be led to a designated section within this document or an external link   |","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"Jonyxzx"},"content":"# Quick Start","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"Jonyxzx"},"content":"2. Download the latest `InterviewHub.jar` from [here](https://github.com/AY2324S1-CS2103T-T11-2/tp/releases).","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Jonyxzx"},"content":"3. Copy the file to the folder you want to use as the home folder for InterviewHub.","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Jonyxzx"},"content":"4. Double-click the file to start the app. The Graphical User Interface(GUI) should appear in a few seconds.","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"5. To get a better understanding of what you see. Please refer to the [GUI Summary](#gui-summary) for more details.","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Jonyxzx"},"content":"# GUI Summary","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"![GUI Summary](images/GuiSummary.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"For each applicant, we see the following details:","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"| Applicant |","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"|-----------|","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"| Name      |","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"| Tags      |","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"| Phone     |","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"| Address   |","lastModifiedDate":"2023-11-06"},{"lineNumber":111,"author":{"gitId":"JasonLCY-Temp"},"content":"| Email     |","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"For each interview, we see the following details:","lastModifiedDate":"2023-11-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"| Interview        |","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"|------------------|","lastModifiedDate":"2023-11-06"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"| Applicant\u0027s Name |","lastModifiedDate":"2023-11-06"},{"lineNumber":118,"author":{"gitId":"Jonyxzx"},"content":"| Job Title        |","lastModifiedDate":"2023-11-07"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"| Start Time       |","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"| End Time         |","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"| Rating           |","lastModifiedDate":"2023-11-06"},{"lineNumber":122,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"Jonyxzx"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"Jonyxzx"},"content":"# Features","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Jonyxzx"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"Jonyxzx"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"Jonyxzx"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list-i`, `list-a`, `list-i-done`, `list-i-not-done`,","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"Jonyxzx"},"content":"`list-today`, `sort-rate`, `sort-time`, `exit`, and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"JasonLCY-Temp"},"content":"* List of accepted date formats:","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"JasonLCY-Temp"},"content":"  * DD/MM/YYYY and time:","lastModifiedDate":"2023-11-08"},{"lineNumber":149,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16 May 2024 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16 May 2024 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":151,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16 May 2024 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":152,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16-05-2024 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":153,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16-05-2024 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":154,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16-05-2024 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":155,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16-05-24 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16-05-24 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16-05-24 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/05/2024 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":159,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/05/2024 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/05/2024 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/05/24 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/05/24 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/05/24 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"JasonLCY-Temp"},"content":"  * MM, DD and time:","lastModifiedDate":"2023-11-08"},{"lineNumber":165,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16 May 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":166,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16 May 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":167,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16 May 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":168,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16 January 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":169,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16 January 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16 January 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/5 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/5 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":173,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/5 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":174,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/05 1515`","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/05 3.15pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"JasonLCY-Temp"},"content":"    * `16/05 3pm`","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":180,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"Jonyxzx"},"content":"## General Features","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"Jonyxzx"},"content":"A pop up window containing the link as shown below will appear to lead you to **InterviewHub** User Guide.","lastModifiedDate":"2023-11-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"Jonyxzx"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"Jonyxzx"},"content":"Exits **InterviewHub**.","lastModifiedDate":"2023-11-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"Jonyxzx"},"content":"Format: `exit`","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"Jonyxzx"},"content":"### Clearing all applicants and interviews : `clear`","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"Jonyxzx"},"content":"Clears all applicants and interviews from **InterviewHub**.","lastModifiedDate":"2023-11-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"Jonyxzx"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":204,"author":{"gitId":"Jonyxzx"},"content":"**:exclamation: Warning:** \u003cbr\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":205,"author":{"gitId":"Jonyxzx"},"content":"* This action is irreversible, therefore do proceed with caution!","lastModifiedDate":"2023-11-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":208,"author":{"gitId":"Jonyxzx"},"content":"Format: `clear`","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"Jonyxzx"},"content":"### Saving the data","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"Jonyxzx"},"content":"InterviewHub data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"Jonyxzx"},"content":"## Applicant Management Features","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"Jonyxzx"},"content":"### Adding an applicant : `add-a`","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"Jonyxzx"},"content":"Adds an applicant to **InterviewHub**.","lastModifiedDate":"2023-11-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"Jonyxzx"},"content":"Format: `add-a n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]`","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":225,"author":{"gitId":"Jonyxzx"},"content":"* `add-a n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`.","lastModifiedDate":"2023-11-05"},{"lineNumber":226,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":227,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":228,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":229,"author":{"gitId":"Jonyxzx"},"content":"### Deleting an applicant : `delete-a`","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"Jonyxzx"},"content":"Deletes the specified applicant from **InterviewHub**.","lastModifiedDate":"2023-11-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"Jonyxzx"},"content":"Format: `delete-a INDEX`","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"Jonyxzx"},"content":"* Deletes the applicant at the specified `INDEX`.","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"Jonyxzx"},"content":"* The `INDEX` refers to the index number shown in the displayed applicant list.","lastModifiedDate":"2023-11-05"},{"lineNumber":237,"author":{"gitId":"Jonyxzx"},"content":"* The `INDEX` **must be a positive unsigned integer** 1, 2, 3, …​ The upper limit of valid integers is the number of applicants currently displayed in the applicant list","lastModifiedDate":"2023-11-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"Jonyxzx"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"Jonyxzx"},"content":"* `delete-a 1` deletes the 1st applicant in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":244,"author":{"gitId":"Jonyxzx"},"content":"### Editing an applicant : `edit-a`","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"Jonyxzx"},"content":"Edits an existing applicant in **InterviewHub**.","lastModifiedDate":"2023-11-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"Jonyxzx"},"content":"Format: `edit-a APPLICANT_INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"Jonyxzx"},"content":"* Edits the person at the specified `APPLICANT_INDEX`. The index refers to the index number shown in the displayed applicant list.","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"Jonyxzx"},"content":"* The `INDEX` **must be a positive unsigned integer** 1, 2, 3, …​ The upper limit of valid integers is the number of applicants currently displayed in the applicant list","lastModifiedDate":"2023-11-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"Jonyxzx"},"content":"*  `edit-a 1 n/John Doe` Edits the name of the 1st applicant to be `John Doe`.","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"Jonyxzx"},"content":"*  `edit-a 2 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 2nd applicant to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2023-11-05"},{"lineNumber":258,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":259,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"Jonyxzx"},"content":"### Finding applicants : `find-a`","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"Jonyxzx"},"content":"Finds applicants whose attributes contain any of the given keywords.","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"jingjie88"},"content":"Format: ``find-a [n/KEYWORDS...] [p/NUMBER]","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"jingjie88"},"content":"[e/KEYWORDS...] [a/KEYWORDS...] [t/KEYWORDS...]``","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"Jonyxzx"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"Jonyxzx"},"content":"* At least one of the optional fields must be provided","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"Jonyxzx"},"content":"* Any of the fields (name, phone, email, address, tags) can be searched","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"Jonyxzx"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans` for name, address and tags","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"Jonyxzx"},"content":"* For phone, partial numbers will match e.g. `987` will match `98765432`","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"Jonyxzx"},"content":"* Applicants matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"jingjie88"},"content":"* `find-a n/Alex` returns `Alex` and `Alex Yeoh`","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"jingjie88"},"content":"Before find-a command:","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"Jonyxzx"},"content":"* `find-a n/alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"Jonyxzx"},"content":"  ![result for \u0027find-a n/alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"Jonyxzx"},"content":"* `find-a p/874 a/serangoon ang` returns `97438807`, `Serangoon Gardens`,","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"Jonyxzx"},"content":"  `Serangoon Gardens Street`, `Ang Mo Kio`\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"Jonyxzx"},"content":"  ![result for \u0027find-a p/874 a/serangoon ang\u0027](images/findPhoneAddress.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":288,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":289,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":290,"author":{"gitId":"Jonyxzx"},"content":"### Listing all applicants : `list-a`","lastModifiedDate":"2023-11-02"},{"lineNumber":291,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"Jonyxzx"},"content":"Shows a list of all applicants in **InterviewHub** onto the GUI.","lastModifiedDate":"2023-11-07"},{"lineNumber":293,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"Jonyxzx"},"content":"Format: `list-a`","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"Jonyxzx"},"content":"## Interview Management Features","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"Jonyxzx"},"content":"### Adding an interview : `add-i`","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":302,"author":{"gitId":"Jonyxzx"},"content":"Adds an interview to **InterviewHub**.","lastModifiedDate":"2023-11-07"},{"lineNumber":303,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"JasonLCY-Temp"},"content":"Format: `add-i app/APPLICANT_ID jr/JOB_ROLE start/START_DATE_AND_TIME end/END_DATE_AND_TIME`","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"JasonLCY-Temp"},"content":"| Parameter             | Representation                                              | Constraints                                                                                                                                             |","lastModifiedDate":"2023-11-07"},{"lineNumber":307,"author":{"gitId":"JasonLCY-Temp"},"content":"|-----------------------|-------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"JasonLCY-Temp"},"content":"| `APPLICANT_ID`        | The index of the applicant as shown in the applicant list   | Must be a positive unsigned integer 1, 2, 3, …​ The upper limit of valid integers is the number of applicants currently displayed in the applicant list |","lastModifiedDate":"2023-11-07"},{"lineNumber":309,"author":{"gitId":"JasonLCY-Temp"},"content":"| `JOB_ROLE`            | The role/title of the job the applicant is interviewing for | Must contain only alphanumeric characters, spaces or commonly used special symbols (E.g. @ - # \u0026)                                                       |","lastModifiedDate":"2023-11-08"},{"lineNumber":310,"author":{"gitId":"JasonLCY-Temp"},"content":"| `START_DATE_AND_TIME` | Starting time of the interview                              | Must be in one of the accepted formats stated below AND must be before the end time AND must be on the same day as the end time                         |","lastModifiedDate":"2023-11-07"},{"lineNumber":311,"author":{"gitId":"JasonLCY-Temp"},"content":"| `END_DATE_AND_TIME`   | Ending time of the interview                                | Must be in one of the accepted formats stated below AND must be after the start time AND must be on the same day as the start time                      |","lastModifiedDate":"2023-11-07"},{"lineNumber":312,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":313,"author":{"gitId":"Jonyxzx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":314,"author":{"gitId":"kiwibang"},"content":":bulb: **Tip:** `JOB_ROLE` allows empty strings to be entered to handle situations where the applicant is applying","lastModifiedDate":"2023-11-08"},{"lineNumber":315,"author":{"gitId":"JasonLCY-Temp"},"content":"to the company in general.","lastModifiedDate":"2023-11-02"},{"lineNumber":316,"author":{"gitId":"Jonyxzx"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":317,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"JasonLCY-Temp"},"content":"Examples of accepted date formats (full list [here](#features)):","lastModifiedDate":"2023-11-08"},{"lineNumber":319,"author":{"gitId":"kiwibang"},"content":"* DD/MM/YYYY and time:","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"kiwibang"},"content":"  * `16 May 2024 1515`","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"kiwibang"},"content":"  * `16 May 2024 3.15pm`","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"kiwibang"},"content":"* MM, DD and time:","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"kiwibang"},"content":"  * `16 May 1515`","lastModifiedDate":"2023-10-31"},{"lineNumber":324,"author":{"gitId":"kiwibang"},"content":"  * `16 May 3.15pm`","lastModifiedDate":"2023-10-31"},{"lineNumber":325,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":326,"author":{"gitId":"kiwibang"},"content":"Example:","lastModifiedDate":"2023-11-03"},{"lineNumber":327,"author":{"gitId":"JasonLCY-Temp"},"content":"* `add-i app/3 jr/software engineer start/12-12-2023 1400 end/12-12-2023 1500`","lastModifiedDate":"2023-11-07"},{"lineNumber":328,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":329,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":330,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":331,"author":{"gitId":"Jonyxzx"},"content":"### Deleting an interview : `delete-i`","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":333,"author":{"gitId":"Jonyxzx"},"content":"Deletes the interview at the specified `INTERVIEW_INDEX` from **InterviewHub**","lastModifiedDate":"2023-11-07"},{"lineNumber":334,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":335,"author":{"gitId":"Jonyxzx"},"content":"Format: `delete-i INTERVIEW_INDEX`","lastModifiedDate":"2023-11-07"},{"lineNumber":336,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":337,"author":{"gitId":"JasonLCY-Temp"},"content":"| Parameter         | Representation                                                   | Constraints                                                                                                                                             |","lastModifiedDate":"2023-11-07"},{"lineNumber":338,"author":{"gitId":"Jonyxzx"},"content":"|-------------------|------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-07"},{"lineNumber":339,"author":{"gitId":"Jonyxzx"},"content":"| `INTERVIEW_INDEX` | The index of the target interview as shown in the interview list | Must be a positive unsigned integer 1, 2, 3, …​ The upper limit of valid integers is the number of interviews currently displayed in the interview list |","lastModifiedDate":"2023-11-07"},{"lineNumber":340,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":341,"author":{"gitId":"Chen1x"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":342,"author":{"gitId":"Jonyxzx"},"content":"* `delete-i 1` deletes the 1st interview in **InterviewHub**.","lastModifiedDate":"2023-11-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":345,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":346,"author":{"gitId":"Jonyxzx"},"content":"### Editing an interview : `edit-i`","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"JasonLCY-Temp"},"content":"Edits an existing interview at the specified `INTERVIEW_INDEX`.","lastModifiedDate":"2023-11-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":350,"author":{"gitId":"JasonLCY-Temp"},"content":"Format: `edit-i INTERVIEW_INDEX [jr/JOB_ROLE] [start/START_DATE_AND_TIME] [end/END_DATE_AND_TIME]`","lastModifiedDate":"2023-11-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"JasonLCY-Temp"},"content":"| Parameter             | Representation                                            | Constraints                                                                                                                                             |","lastModifiedDate":"2023-11-07"},{"lineNumber":353,"author":{"gitId":"JasonLCY-Temp"},"content":"|-----------------------|-----------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-07"},{"lineNumber":354,"author":{"gitId":"JasonLCY-Temp"},"content":"| `INTERVIEW_INDEX`     | The index of the interview as shown in the interview list | Must be a positive unsigned integer 1, 2, 3, …​ The upper limit of valid integers is the number of interviews currently displayed in the interview list |","lastModifiedDate":"2023-11-07"},{"lineNumber":355,"author":{"gitId":"JasonLCY-Temp"},"content":"| `JOB_ROLE`            | The role the applicant is interviewing for                | Must contain only alphanumeric characters, spaces or commonly used special symbols (E.g. @ - # \u0026)                                                       |","lastModifiedDate":"2023-11-08"},{"lineNumber":356,"author":{"gitId":"JasonLCY-Temp"},"content":"| `START_DATE_AND_TIME` | Starting time of the interview                            | Must be one of the accepted formats stated below AND must be before the end time AND must be on the same day as the end time                            |","lastModifiedDate":"2023-11-07"},{"lineNumber":357,"author":{"gitId":"JasonLCY-Temp"},"content":"| `END_DATE_AND_TIME`   | Ending time of the interview                              | Must be one of the accepted formats stated below AND must be after the start time AND must be on the same day as the start time                         |","lastModifiedDate":"2023-11-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"JasonLCY-Temp"},"content":"* To edit the `RATING` field (re-rating an interview), please refer to the [rate command](#rating-an-interview--rate)","lastModifiedDate":"2023-11-07"},{"lineNumber":362,"author":{"gitId":"JasonLCY-Temp"},"content":"* Examples of accepted date formats (full list [here](#features)):","lastModifiedDate":"2023-11-08"},{"lineNumber":363,"author":{"gitId":"JasonLCY-Temp"},"content":"* DD/MM/YYYY and time:","lastModifiedDate":"2023-11-07"},{"lineNumber":364,"author":{"gitId":"JasonLCY-Temp"},"content":"  * `16 May 2024 1515`","lastModifiedDate":"2023-11-07"},{"lineNumber":365,"author":{"gitId":"JasonLCY-Temp"},"content":"  * `16 May 2024 3.15pm`","lastModifiedDate":"2023-11-07"},{"lineNumber":366,"author":{"gitId":"JasonLCY-Temp"},"content":"* MM, DD and time:","lastModifiedDate":"2023-11-07"},{"lineNumber":367,"author":{"gitId":"JasonLCY-Temp"},"content":"  * `16 May 1515`","lastModifiedDate":"2023-11-07"},{"lineNumber":368,"author":{"gitId":"JasonLCY-Temp"},"content":"  * `16 May 3.15pm`","lastModifiedDate":"2023-11-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"Jonyxzx"},"content":"*  `edit-i 1 jr/software-engineer` Edits the job title of the 1st interview to be `software-engineer`.","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"Jonyxzx"},"content":"*  `edit-i 2 jr/data-analyst` Edits the job title of the 2nd interview to be `data-analyst`.","lastModifiedDate":"2023-11-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":374,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":376,"author":{"gitId":"Jonyxzx"},"content":"### Finding interview by job title : `find-i`","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":378,"author":{"gitId":"Jonyxzx"},"content":"Find interviews which jobs title contain any of the given keywords.","lastModifiedDate":"2023-10-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":380,"author":{"gitId":"Jonyxzx"},"content":"Format: `find-i KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":382,"author":{"gitId":"Jonyxzx"},"content":"| Parameter         | Representation                             | Constraints                                                                                 |","lastModifiedDate":"2023-11-07"},{"lineNumber":383,"author":{"gitId":"Jonyxzx"},"content":"|-------------------|--------------------------------------------|---------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-07"},{"lineNumber":384,"author":{"gitId":"Jonyxzx"},"content":"| `KEYWORD`         | The job title the interview is assigned of | Each keyword must not contain any spaces, otherwise it will be treated as multiple keywords |","lastModifiedDate":"2023-11-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":386,"author":{"gitId":"Jonyxzx"},"content":"* The search is case-insensitive. e.g. `ANALYST` will match `analyst`","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"Jonyxzx"},"content":"* The order of the keywords does not matter. e.g. `Software Engineer` will match `Engineer Software`","lastModifiedDate":"2023-09-28"},{"lineNumber":388,"author":{"gitId":"Jonyxzx"},"content":"* Only the job title is searched.","lastModifiedDate":"2023-10-18"},{"lineNumber":389,"author":{"gitId":"Jonyxzx"},"content":"* Only full words will be matched e.g. `Analyst` will not match `Analysts`","lastModifiedDate":"2023-09-28"},{"lineNumber":390,"author":{"gitId":"Jonyxzx"},"content":"* Interviews matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-11-07"},{"lineNumber":391,"author":{"gitId":"Jonyxzx"},"content":"  e.g. `Software Engineer` will return interviews with the job title of `Software Developer` and `System Engineer`","lastModifiedDate":"2023-11-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":393,"author":{"gitId":"Jonyxzx"},"content":"Examples:","lastModifiedDate":"2023-09-28"},{"lineNumber":394,"author":{"gitId":"Jonyxzx"},"content":"* `find-i software data` returns `Software Engineer` and `Data Analyst`.","lastModifiedDate":"2023-11-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":398,"author":{"gitId":"Jonyxzx"},"content":"### Listing all interviews : `list-i`","lastModifiedDate":"2023-11-02"},{"lineNumber":399,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":400,"author":{"gitId":"Jonyxzx"},"content":"Shows a list of all interviews in the address book onto the GUI.","lastModifiedDate":"2023-11-02"},{"lineNumber":401,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":402,"author":{"gitId":"Jonyxzx"},"content":"Format: `list-i`","lastModifiedDate":"2023-11-02"},{"lineNumber":403,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":404,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"},{"lineNumber":405,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":406,"author":{"gitId":"Jonyxzx"},"content":"### Listing all free time for the given day : `list-freetime`","lastModifiedDate":"2023-11-02"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"Jonyxzx"},"content":"Lists all the free time for the given `DATE`.","lastModifiedDate":"2023-11-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":410,"author":{"gitId":"kiwibang"},"content":"Format: `list-freetime DATE`","lastModifiedDate":"2023-11-03"},{"lineNumber":411,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":412,"author":{"gitId":"kiwibang"},"content":"| Parameter | Representation                                                   | Constraints                                                                                                                                                                 |","lastModifiedDate":"2023-11-07"},{"lineNumber":413,"author":{"gitId":"kiwibang"},"content":"|-----------|------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-08"},{"lineNumber":414,"author":{"gitId":"kiwibang"},"content":"| `DATE`    | The date which the user wants to view the list of free times for | The input date must have a **4-digit year**, and cannot be in the past. Must follow the format of the table of accepted date formats, shown [below](#accepted-date-formats) | ","lastModifiedDate":"2023-11-08"},{"lineNumber":415,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":416,"author":{"gitId":"kiwibang"},"content":"* Displays a list of all the blocks of free time the user has in","lastModifiedDate":"2023-11-03"},{"lineNumber":417,"author":{"gitId":"kiwibang"},"content":"  the given day, within the 9am to 5pm window of that day","lastModifiedDate":"2023-11-03"},{"lineNumber":418,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":419,"author":{"gitId":"kiwibang"},"content":"* If there is no free time, there will be no blocks of ","lastModifiedDate":"2023-11-03"},{"lineNumber":420,"author":{"gitId":"kiwibang"},"content":"free time that will be displayed","lastModifiedDate":"2023-11-03"},{"lineNumber":421,"author":{"gitId":"kiwibang"},"content":"  * This indicates that the entire day is not free","lastModifiedDate":"2023-11-03"},{"lineNumber":422,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":423,"author":{"gitId":"kiwibang"},"content":"* If there are no interviews on that day, the block of free time","lastModifiedDate":"2023-11-03"},{"lineNumber":424,"author":{"gitId":"kiwibang"},"content":"listed will be: `from: 09:00 to: 17:00`","lastModifiedDate":"2023-11-03"},{"lineNumber":425,"author":{"gitId":"kiwibang"},"content":"  * This indicates that the entire day is free","lastModifiedDate":"2023-11-03"},{"lineNumber":426,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":427,"author":{"gitId":"kiwibang"},"content":"* If the `DATE` not valid at all, this error message will","lastModifiedDate":"2023-11-03"},{"lineNumber":428,"author":{"gitId":"kiwibang"},"content":"be shown:`Please specify a valid date!`","lastModifiedDate":"2023-11-03"},{"lineNumber":429,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":430,"author":{"gitId":"kiwibang"},"content":"* If the `DATE` is valid but in the past, this error message will","lastModifiedDate":"2023-11-03"},{"lineNumber":431,"author":{"gitId":"kiwibang"},"content":"be shown:`Input date cannot be in the past!`","lastModifiedDate":"2023-11-03"},{"lineNumber":432,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":433,"author":{"gitId":"kiwibang"},"content":"#### Accepted date formats","lastModifiedDate":"2023-11-07"},{"lineNumber":434,"author":{"gitId":"kiwibang"},"content":"| Format                                 | Example      | Constraints                                                                                                                                                                                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-11-07"},{"lineNumber":435,"author":{"gitId":"kiwibang"},"content":"|----------------------------------------|--------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-08"},{"lineNumber":436,"author":{"gitId":"kiwibang"},"content":"| `dd/mm/yyyy`                           | `12/12/2099` | - If the input string is a **valid** time string with day, month and year, adding additional parameters separated by a non-number string will be accepted \u003cbr/\u003e\u003cbr/\u003e- The year must be **valid**, else the current year will be taken as the year of the date, or the next year of the current year in the case where the day and month when the command was executed has since passed for the current year | ","lastModifiedDate":"2023-11-08"},{"lineNumber":437,"author":{"gitId":"kiwibang"},"content":"| `dd-mm-yyyy`                           | `12-12-2099` | - If the input string is a **valid** time string with day, month and year, adding additional parameters separated by a non-number string will be accepted \u003cbr/\u003e\u003cbr/\u003e- The year must be **valid**, else the current year will be taken as the year of the date, or the next year of the current year in the case where the day and month when the command was executed has since passed for the current year | ","lastModifiedDate":"2023-11-08"},{"lineNumber":438,"author":{"gitId":"kiwibang"},"content":"| `dd/mm`                                | `12/12`      | - Adding additional parameters separated by a non-number string will be accepted \u003cbr/\u003e\u003cbr/\u003e- The month and year must be **valid**                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2023-11-08"},{"lineNumber":439,"author":{"gitId":"kiwibang"},"content":"| `other time formats (not recommended)` | `12/01-2024` | - Will be accepted within reasonable bounds \u003cbr/\u003e\u003cbr/\u003e- **Will lead to unexpected/unintended behaviour**\u003cbr/\u003e\u003cbr/\u003e- _Use with caution_                                                                                                                                                                                                                                                                      |","lastModifiedDate":"2023-11-08"},{"lineNumber":440,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":441,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":442,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":443,"author":{"gitId":"Jonyxzx"},"content":"### Listing all interviews for today : `list-i-today`","lastModifiedDate":"2023-11-02"},{"lineNumber":444,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":445,"author":{"gitId":"kiwibang"},"content":"Displays all the interviews that the user has on the day the ","lastModifiedDate":"2023-11-03"},{"lineNumber":446,"author":{"gitId":"Jonyxzx"},"content":"command is executed.","lastModifiedDate":"2023-11-07"},{"lineNumber":447,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":448,"author":{"gitId":"kiwibang"},"content":"Format: `list-i-today`","lastModifiedDate":"2023-11-03"},{"lineNumber":449,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":450,"author":{"gitId":"kiwibang"},"content":"* Lists all interviews that have a start date that falls on the ","lastModifiedDate":"2023-11-03"},{"lineNumber":451,"author":{"gitId":"kiwibang"},"content":"day on which the user executed the command","lastModifiedDate":"2023-11-03"},{"lineNumber":452,"author":{"gitId":"kiwibang"},"content":"  * For example, if the user executed this command on `12/12/2023`, ","lastModifiedDate":"2023-11-08"},{"lineNumber":453,"author":{"gitId":"kiwibang"},"content":"the app will display all the interviews that the user has scheduled","lastModifiedDate":"2023-11-03"},{"lineNumber":454,"author":{"gitId":"kiwibang"},"content":"on `12/12/2023`","lastModifiedDate":"2023-11-08"},{"lineNumber":455,"author":{"gitId":"kiwibang"},"content":"* If there are no interviews scheduled on the day on which the command","lastModifiedDate":"2023-11-03"},{"lineNumber":456,"author":{"gitId":"kiwibang"},"content":"was executed, the app will not display any interviews ","lastModifiedDate":"2023-11-03"},{"lineNumber":457,"author":{"gitId":"kiwibang"},"content":"* Upon successful execution of the command, this message will be ","lastModifiedDate":"2023-11-03"},{"lineNumber":458,"author":{"gitId":"kiwibang"},"content":"shown: `Listed all interviews today`","lastModifiedDate":"2023-11-03"},{"lineNumber":459,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":460,"author":{"gitId":"kiwibang"},"content":"Example: `list-i-today`","lastModifiedDate":"2023-11-03"},{"lineNumber":461,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":462,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":463,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":464,"author":{"gitId":"Jonyxzx"},"content":"### Marking an interview : `mark`","lastModifiedDate":"2023-11-02"},{"lineNumber":465,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":466,"author":{"gitId":"Jonyxzx"},"content":"Mark the specified `INTERVIEW_INDEX` in the **InterviewHub** as done.","lastModifiedDate":"2023-11-07"},{"lineNumber":467,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":468,"author":{"gitId":"Jonyxzx"},"content":"Format: `mark INTERVIEW_INDEX`","lastModifiedDate":"2023-11-07"},{"lineNumber":469,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":470,"author":{"gitId":"Jonyxzx"},"content":"| Parameter         | Representation                                                     | Constraints                                                                                                                                                                                                            |","lastModifiedDate":"2023-11-07"},{"lineNumber":471,"author":{"gitId":"kiwibang"},"content":"|-------------------|--------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-08"},{"lineNumber":472,"author":{"gitId":"kiwibang"},"content":"| `INTERVIEW_INDEX` | - The index of the target interview as shown in the interview list | Must be a positive unsigned integer within the range 1 to n inclusive, where n is the number of interviews currently displayed in the interview list.\u003cbr/\u003e\u003cbr/\u003e- Trailing zeros before a valid index will be accepted. |","lastModifiedDate":"2023-11-08"},{"lineNumber":473,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":474,"author":{"gitId":"jingjie88"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":475,"author":{"gitId":"jingjie88"},"content":"* `mark 1` marks the first interview shown on the list as done.","lastModifiedDate":"2023-11-02"},{"lineNumber":476,"author":{"gitId":"Jonyxzx"},"content":"* `mark 3` marks the third interview shown on the list as done.","lastModifiedDate":"2023-11-05"},{"lineNumber":477,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":478,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":479,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":480,"author":{"gitId":"Jonyxzx"},"content":"### Rating an interview : `rate`","lastModifiedDate":"2023-11-02"},{"lineNumber":481,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":482,"author":{"gitId":"Jonyxzx"},"content":"Rate the specified `INTERVIEW_INDEX` in the **InterviewHub** with the indicated `RATING`.","lastModifiedDate":"2023-11-07"},{"lineNumber":483,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":484,"author":{"gitId":"Jonyxzx"},"content":"Format: `rate INTERIVEW_INDEX RATING`","lastModifiedDate":"2023-11-07"},{"lineNumber":485,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":486,"author":{"gitId":"Jonyxzx"},"content":"| Parameter         | Representation                                                   | Constraints                                                                                                                                             |","lastModifiedDate":"2023-11-07"},{"lineNumber":487,"author":{"gitId":"Jonyxzx"},"content":"|-------------------|------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-07"},{"lineNumber":488,"author":{"gitId":"Jonyxzx"},"content":"| `INTERVIEW_INDEX` | The index of the target interview as shown in the interview list | Must be a positive unsigned integer 1, 2, 3, …​ The upper limit of valid integers is the number of interviews currently displayed in the interview list |","lastModifiedDate":"2023-11-07"},{"lineNumber":489,"author":{"gitId":"Jonyxzx"},"content":"| `RATING`          | The rating number to be assigned to the interview indicated      | Must be a positive unsigned one decimal place number between 0.0 to 5.0 inclusive                                                                       |","lastModifiedDate":"2023-11-07"},{"lineNumber":490,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":491,"author":{"gitId":"Jonyxzx"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":492,"author":{"gitId":"Jonyxzx"},"content":"**:information_source: Note about the command usage.**\u003cbr\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":493,"author":{"gitId":"Jonyxzx"},"content":"* The interview has to be marked done before it is can be rated.","lastModifiedDate":"2023-11-07"},{"lineNumber":494,"author":{"gitId":"Jonyxzx"},"content":"* The new rating will always replace the existing rating.","lastModifiedDate":"2023-11-07"},{"lineNumber":495,"author":{"gitId":"Jonyxzx"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":496,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":497,"author":{"gitId":"Jonyxzx"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":498,"author":{"gitId":"Jonyxzx"},"content":"* `rate 1 3.0` rates the first interview with a rating of 3.0.","lastModifiedDate":"2023-11-02"},{"lineNumber":499,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":500,"author":{"gitId":"Jonyxzx"},"content":"Before rating the interview at `INTERVIEW_INDEX` 1:","lastModifiedDate":"2023-11-07"},{"lineNumber":501,"author":{"gitId":"Jonyxzx"},"content":"![beforerate](images/beforerate.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":502,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":503,"author":{"gitId":"Jonyxzx"},"content":"After rating the interview at `INTERVIEW_INDEX` 1 with a `RATING` of 4.0:","lastModifiedDate":"2023-11-07"},{"lineNumber":504,"author":{"gitId":"Jonyxzx"},"content":"![afterrate](images/afterrate.png)","lastModifiedDate":"2023-11-07"},{"lineNumber":505,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":506,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":507,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":508,"author":{"gitId":"Jonyxzx"},"content":"### Listing all completed interview : `list-i-done`","lastModifiedDate":"2023-11-02"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"Jonyxzx"},"content":"Shows a list of all the interviews in **InterviewHub** that are done onto the GUI.","lastModifiedDate":"2023-11-07"},{"lineNumber":511,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":512,"author":{"gitId":"jingjie88"},"content":"Format: `list-i-done`","lastModifiedDate":"2023-11-02"},{"lineNumber":513,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":514,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":515,"author":{"gitId":"kiwibang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** ","lastModifiedDate":"2023-11-08"},{"lineNumber":516,"author":{"gitId":"kiwibang"},"content":"To see all interviews regardless of completion status, use the command `list-i`.","lastModifiedDate":"2023-11-08"},{"lineNumber":517,"author":{"gitId":"kiwibang"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":518,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":519,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":520,"author":{"gitId":"kiwibang"},"content":"Before `list-i-done`:","lastModifiedDate":"2023-11-08"},{"lineNumber":521,"author":{"gitId":"kiwibang"},"content":"![beforelistidone](images/beforelistidone.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":522,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":523,"author":{"gitId":"kiwibang"},"content":"After `list-i-done`:","lastModifiedDate":"2023-11-08"},{"lineNumber":524,"author":{"gitId":"kiwibang"},"content":"![afterlistidone](images/afterlistidone.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":525,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":526,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":527,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":528,"author":{"gitId":"jingjie88"},"content":"### Listing all incomplete interview : `list-i-not-done`","lastModifiedDate":"2023-11-02"},{"lineNumber":529,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":530,"author":{"gitId":"Jonyxzx"},"content":"Show a list of all the interviews in **InterviewHub** that are not done onto the GUI.","lastModifiedDate":"2023-11-07"},{"lineNumber":531,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":532,"author":{"gitId":"jingjie88"},"content":"Format:`list-i-not-done`","lastModifiedDate":"2023-11-02"},{"lineNumber":533,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":534,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":535,"author":{"gitId":"kiwibang"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** ","lastModifiedDate":"2023-11-08"},{"lineNumber":536,"author":{"gitId":"kiwibang"},"content":"To see all interviews regardless of completion status, use the command `list-i`.","lastModifiedDate":"2023-11-08"},{"lineNumber":537,"author":{"gitId":"kiwibang"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":538,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":539,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":540,"author":{"gitId":"kiwibang"},"content":"Before `list-i-not-done`:","lastModifiedDate":"2023-11-08"},{"lineNumber":541,"author":{"gitId":"kiwibang"},"content":"![beforelistinotdone](images/beforelistinotdone.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":542,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":543,"author":{"gitId":"kiwibang"},"content":"After `list-i-not-done`:","lastModifiedDate":"2023-11-08"},{"lineNumber":544,"author":{"gitId":"kiwibang"},"content":"![afterlistinotdone](images/afterlistinotdone.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":545,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":546,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":547,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":548,"author":{"gitId":"Jonyxzx"},"content":"### Sorting interviews by rating : `sort-rate`","lastModifiedDate":"2023-11-02"},{"lineNumber":549,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":550,"author":{"gitId":"Jonyxzx"},"content":"Sort the shown interview list by rating in descending order (highest to the lowest rating).","lastModifiedDate":"2023-11-07"},{"lineNumber":551,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":552,"author":{"gitId":"Jonyxzx"},"content":"Format: `sort-rate`","lastModifiedDate":"2023-11-02"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"Jonyxzx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** ","lastModifiedDate":"2023-11-07"},{"lineNumber":555,"author":{"gitId":"Jonyxzx"},"content":"To sort the full unfiltered interview list, use the command `list-i` before using `sort-rate`.","lastModifiedDate":"2023-11-07"},{"lineNumber":556,"author":{"gitId":"Jonyxzx"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":557,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":558,"author":{"gitId":"kiwibang"},"content":"Before `sort-rate`:","lastModifiedDate":"2023-11-08"},{"lineNumber":559,"author":{"gitId":"kiwibang"},"content":"![beforesort](images/beforesort.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":560,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":561,"author":{"gitId":"kiwibang"},"content":"After `sort-rate`:","lastModifiedDate":"2023-11-08"},{"lineNumber":562,"author":{"gitId":"kiwibang"},"content":"![aftersort](images/aftersort.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":563,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":564,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":565,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":566,"author":{"gitId":"Jonyxzx"},"content":"### Sorting interviews by start-time : `sort-time`","lastModifiedDate":"2023-11-02"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"Jonyxzx"},"content":"Sort the shown interview list by interview start time","lastModifiedDate":"2023-11-07"},{"lineNumber":569,"author":{"gitId":"kiwibang"},"content":"in chronologically ascending order (interviews with earlier start times","lastModifiedDate":"2023-11-03"},{"lineNumber":570,"author":{"gitId":"kiwibang"},"content":"will be shown first).","lastModifiedDate":"2023-11-08"},{"lineNumber":571,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":572,"author":{"gitId":"kiwibang"},"content":"Format: `sort-time`","lastModifiedDate":"2023-11-08"},{"lineNumber":573,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":574,"author":{"gitId":"Jonyxzx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** ","lastModifiedDate":"2023-11-07"},{"lineNumber":575,"author":{"gitId":"Jonyxzx"},"content":"To sort the full unfiltered interview list, use the command `list-i` before using `sort-time`.","lastModifiedDate":"2023-11-07"},{"lineNumber":576,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":578,"author":{"gitId":"kiwibang"},"content":"Before `sort-time`:","lastModifiedDate":"2023-11-08"},{"lineNumber":579,"author":{"gitId":"kiwibang"},"content":"![beforesort](images/beforesorttime.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":580,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":581,"author":{"gitId":"kiwibang"},"content":"After `sort-time`:","lastModifiedDate":"2023-11-08"},{"lineNumber":582,"author":{"gitId":"kiwibang"},"content":"![aftersort](images/aftersorttime.png)","lastModifiedDate":"2023-11-08"},{"lineNumber":583,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":584,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-05"},{"lineNumber":585,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":586,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":587,"author":{"gitId":"Jonyxzx"},"content":"### Editing the data file","lastModifiedDate":"2023-11-02"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":589,"author":{"gitId":"JasonLCY-Temp"},"content":"InterviewHub data are saved automatically as a JSON file `[JAR file location]/data/interviewhub.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":591,"author":{"gitId":"Jonyxzx"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Warning:**","lastModifiedDate":"2023-11-07"},{"lineNumber":592,"author":{"gitId":"JasonLCY-Temp"},"content":"If your changes to the data file makes its format invalid, InterviewHub will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":593,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":595,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":597,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"Jonyxzx"},"content":"# Frequently Asked Questions","lastModifiedDate":"2023-10-18"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"JasonLCY-Temp"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InterviewHub home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":606,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"Jonyxzx"},"content":"# Known issues","lastModifiedDate":"2023-10-18"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":610,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":612,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"},{"lineNumber":613,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":614,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":616,"author":{"gitId":"Jonyxzx"},"content":"# Command Summary","lastModifiedDate":"2023-10-18"},{"lineNumber":617,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":618,"author":{"gitId":"Jonyxzx"},"content":"## General Commands","lastModifiedDate":"2023-11-02"},{"lineNumber":619,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":620,"author":{"gitId":"Jonyxzx"},"content":"| Action                                  | Format, Examples |","lastModifiedDate":"2023-10-18"},{"lineNumber":621,"author":{"gitId":"Jonyxzx"},"content":"|-----------------------------------------|------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":622,"author":{"gitId":"Jonyxzx"},"content":"| **Clear all applicants and interviews** | `clear`          |","lastModifiedDate":"2023-11-02"},{"lineNumber":623,"author":{"gitId":"Jonyxzx"},"content":"| **Help**                                | `help`           |","lastModifiedDate":"2023-10-18"},{"lineNumber":624,"author":{"gitId":"Jonyxzx"},"content":"| **Exit**                                | `exit`           |","lastModifiedDate":"2023-10-18"},{"lineNumber":625,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":626,"author":{"gitId":"Jonyxzx"},"content":"## Applicant Management Commands","lastModifiedDate":"2023-11-02"},{"lineNumber":627,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":628,"author":{"gitId":"Jonyxzx"},"content":"| Action                   | Format, Examples                                                                                                                                                                                                 |","lastModifiedDate":"2023-10-18"},{"lineNumber":629,"author":{"gitId":"jingjie88"},"content":"|--------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-26"},{"lineNumber":630,"author":{"gitId":"Jonyxzx"},"content":"| **Add applicant**        | `add-a n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]` \u003cbr\u003e e.g., `add-a n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`                                          |","lastModifiedDate":"2023-11-05"},{"lineNumber":631,"author":{"gitId":"Jonyxzx"},"content":"| **Delete applicant**     | `delete-a APPLICANT_INDEX`\u003cbr\u003e e.g., `delete-a 3`                                                                                                                                                                |","lastModifiedDate":"2023-11-02"},{"lineNumber":632,"author":{"gitId":"Jonyxzx"},"content":"| **Edit applicant**       | `edit-a APPLICANT_INDEX [n/NAME] [t/INTERVIEW_DATETIME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`\u003cbr\u003e e.g.,`edit-a 2 n/John Doe`                                                                                   |","lastModifiedDate":"2023-10-18"},{"lineNumber":633,"author":{"gitId":"jingjie88"},"content":"| **Find applicant**       | `find-a [n/KEYWORDS [MORE_KEYWORDS]...] [p/NUMBER] [e/KEYWORDS [MORE_KEYWORDS]...] [a/KEYWORDS [MORE_KEYWORDS]...] [t/KEYWORDS [MORE_KEYWORDS]...]` \u003cbr\u003e e.g., `find-a n/John Bob p/98765432 e/John@example.com` |","lastModifiedDate":"2023-10-26"},{"lineNumber":634,"author":{"gitId":"Jonyxzx"},"content":"| **List applicants**      | `list-a`                                                                                                                                                                                                         |","lastModifiedDate":"2023-10-18"},{"lineNumber":635,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":636,"author":{"gitId":"Jonyxzx"},"content":"## Interview Management Commands","lastModifiedDate":"2023-11-02"},{"lineNumber":637,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":638,"author":{"gitId":"Jonyxzx"},"content":"| Action                           | Format, Examples                                                                                                                                         |","lastModifiedDate":"2023-10-18"},{"lineNumber":639,"author":{"gitId":"Jonyxzx"},"content":"|----------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-05"},{"lineNumber":640,"author":{"gitId":"Jonyxzx"},"content":"| **Add interview**                | `add-i app/APPLICANT_INDEX jr/JOB_TITLE time/INTERVIEW_DATETIME` \u003cbr\u003e e.g., `add-i app/3 jr/Software Engineer start/03-11-2024 1500 end/03-11-2024 1600` |","lastModifiedDate":"2023-11-05"},{"lineNumber":641,"author":{"gitId":"Jonyxzx"},"content":"| **Delete interview**             | `delete-i INTERVIEW_INDEX`\u003cbr\u003e e.g., `delete-i 3`                                                                                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":642,"author":{"gitId":"Jonyxzx"},"content":"| **Edit interview**               | `edit-i INTERVIEW_INDEX [app/APPLICANT_INDEX] [jr/JOB_TITLE] [time/INTERVIEW_DATETIME]`\u003cbr\u003e e.g.,`edit-i 2 jr/software-engineer`                         |","lastModifiedDate":"2023-10-18"},{"lineNumber":643,"author":{"gitId":"Jonyxzx"},"content":"| **Find interview by job**        | `find-i KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find-i software-engineer`                                                                                    |","lastModifiedDate":"2023-10-18"},{"lineNumber":644,"author":{"gitId":"kiwibang"},"content":"| **List interview**               | `list-i` \u003cbr/\u003e e.g. `list-i`                                                                                                                             |","lastModifiedDate":"2023-11-08"},{"lineNumber":645,"author":{"gitId":"kiwibang"},"content":"| **List free time**               | `list-freetime INTERVIEW_DATETIME` \u003cbr\u003e e.g, `list-freetime 12-12-2023`, `list-freetime 12/12/2023`, `list-freetime 12/12`, `list-freetime 12 Dec`       |","lastModifiedDate":"2023-11-08"},{"lineNumber":646,"author":{"gitId":"kiwibang"},"content":"| **List interview for today**     | `list-i-today` \u003cbr/\u003e e.g. `list-i-today`                                                                                                                 |","lastModifiedDate":"2023-11-08"},{"lineNumber":647,"author":{"gitId":"Jonyxzx"},"content":"| **Mark interview as done**       | `mark INTERVIEW_INDEX` \u003cbr\u003e e.g., `mark 3`                                                                                                               |","lastModifiedDate":"2023-11-02"},{"lineNumber":648,"author":{"gitId":"Jonyxzx"},"content":"| **Rate interview**               | `rate INTERVIEW_INDEX RATING` \u003cbr\u003e e.g., `rate 1 3.0`                                                                                                    |","lastModifiedDate":"2023-11-02"},{"lineNumber":649,"author":{"gitId":"kiwibang"},"content":"| **List completed interview**     | `list-i-done` \u003cbr/\u003e e.g. `list-i-done`                                                                                                                   |","lastModifiedDate":"2023-11-08"},{"lineNumber":650,"author":{"gitId":"kiwibang"},"content":"| **List incomplete interview**    | `list-i-not-done` \u003cbr/\u003e e.g. `list-i-not-done`                                                                                                           |","lastModifiedDate":"2023-11-08"},{"lineNumber":651,"author":{"gitId":"kiwibang"},"content":"| **Sort interview by rating**     | `sort-rate` \u003cbr/\u003e e.g. `sort-rate`                                                                                                                       |","lastModifiedDate":"2023-11-08"},{"lineNumber":652,"author":{"gitId":"kiwibang"},"content":"| **Sort interview by start time** | `sort-time` \u003cbr/\u003e e.g. `sort-time`                                                                                                                       |","lastModifiedDate":"2023-11-08"},{"lineNumber":653,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":654,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"},{"lineNumber":655,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":656,"author":{"gitId":"JasonLCY-Temp"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-23"},{"lineNumber":657,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":658,"author":{"gitId":"JasonLCY-Temp"},"content":"# Glossary","lastModifiedDate":"2023-10-23"},{"lineNumber":659,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":660,"author":{"gitId":"Jonyxzx"},"content":"| Term          | Definition                                                                                                                                                                                               |","lastModifiedDate":"2023-11-02"},{"lineNumber":661,"author":{"gitId":"Jonyxzx"},"content":"|---------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":662,"author":{"gitId":"Jonyxzx"},"content":"| **JAR File**  | JAR (Java Archive) files are archive files that include a Java-specific manifest file. They are built on the ZIP format and typically have a `.jar` file extension.                                      |","lastModifiedDate":"2023-11-02"},{"lineNumber":663,"author":{"gitId":"Jonyxzx"},"content":"| **JSON File** | JSON (JavaScript Object Notation) is a lightweight data interchange format that is easy to understand and use.                                                                                           |","lastModifiedDate":"2023-11-02"},{"lineNumber":664,"author":{"gitId":"Jonyxzx"},"content":"| **CLI**       | A CLI (Command Line Interface) is a means of interacting with a computer program by inputting lines of text called command-lines.                                                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":665,"author":{"gitId":"Jonyxzx"},"content":"| **GUI**       | A GUI (Graphical User Interface) is user interface that allows users to interact with the program with interactive visual components instead of text-based UIs, typed command labels or text navigation. |","lastModifiedDate":"2023-11-02"},{"lineNumber":666,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":667,"author":{"gitId":"Jonyxzx"},"content":"[Back to the Table of Contents](#table-of-contents)","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"Jonyxzx":305,"JasonLCY-Temp":101,"jingjie88":24,"kiwibang":104,"-":125,"Chen1x":8}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"JasonLCY-Temp"},"content":"    content: \"InterviewHub\";","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"JasonLCY-Temp":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteApplicant(p)","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":38,"Chen1x":1}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"AddressBook *-right-\u003e \"1\" UniqueApplicantList","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"UniqueTagList -[hidden]down- UniqueApplicantList","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":"UniqueTagList -[hidden]down- UniqueApplicantList","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"UniqueApplicantList -right-\u003e Applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"Applicant -up-\u003e \"*\" Tag","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"Applicant *--\u003e Name","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"Applicant *--\u003e Phone","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"Applicant *--\u003e Email","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"Applicant *--\u003e Address","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":12,"Chen1x":9}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"[-\u003e LogicManager : execute(\"delete-a 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete-a 1\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"Chen1x"},"content":"DeleteCommand -\u003e Model : deleteApplicant(1)","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jingjie88":2,"-":67,"Chen1x":1}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"Class UniqueApplicantList","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"Class Applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"Chen1x"},"content":"AddressBook *--\u003e \"1\" UniqueApplicantList","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Chen1x"},"content":"UniqueApplicantList --\u003e \"~* all\" Applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"Applicant *--\u003e Name","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Chen1x"},"content":"Applicant *--\u003e Phone","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Chen1x"},"content":"Applicant *--\u003e Email","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"Chen1x"},"content":"Applicant *--\u003e Address","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"Chen1x"},"content":"Applicant *--\u003e \"*\" Tag","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"Chen1x"},"content":"Applicant -[hidden]up--\u003e I","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"Chen1x"},"content":"UniqueApplicantList -[hidden]right-\u003e I","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"Chen1x"},"content":"ModelManager --\u003e \"~* filtered\" Applicant","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":42,"Chen1x":12}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"Class JsonAdaptedApplicant","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedApplicant","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Chen1x"},"content":"JsonAdaptedApplicant --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":40,"Chen1x":3}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":"Class ApplicantListPanel","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"Class InterviewListPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"Class ApplicantCard","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"Class InterviewCard","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"Chen1x"},"content":"MainWindow *-down-\u003e \"1\" ApplicantListPanel","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"MainWindow *-down-\u003e \"1\" InterviewListPanel","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Chen1x"},"content":"ApplicantListPanel -down-\u003e \"*\" ApplicantCard","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"InterviewListPanel -down-\u003e \"*\" InterviewCard","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"ApplicantListPanel --|\u003e UiPart","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"Chen1x"},"content":"ApplicantCard --|\u003e UiPart","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Chen1x"},"content":"ApplicantCard ..\u003e Model","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"InterviewCard ..\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"Chen1x"},"content":"ApplicantListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jingjie88":5,"-":52,"Chen1x":8}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"ecp -\u003e ec ++: index, editApplicantDescriptor","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"jingjie88":1,"-":21}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: InterviewHub","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"[![Java CI](https://github.com/AY2324S1-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S1-CS2103T-T11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T11-2/tp/graph/badge.svg?token\u003d1IoaWm9UaE)](https://app.codecov.io/gh/AY2324S1-CS2103T-T11-2/tp/tree/master)","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"**Interview Hub is a CLI application is designed for Engineering Managers of tech companies.**","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"Provides hiring managers quick access to the entire pool of interviewees,their contacts and their resumes.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"Also allows the hiring managers to take notes during the interview and to also leave a review/rating of the potential hire for future internal usage","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"* If you are interested in using InterviewHub, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"* If you are interested about developing InterviewHub, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-28"}],"authorContributionMap":{"JasonLCY-Temp":8,"-":14}},{"path":"docs/team/chen1x.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"title: Xin-An\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"InterviewHub is a interview management software for tech hiring managers that prefers CLI.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":"It is written in Java.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"    * What it does:","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"    * Justification:","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"    * Highlights:","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"    * Credits:","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"    * placeholder","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"    * placeholder","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"Chen1x"},"content":"    * placeholder","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Chen1x"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"Chen1x"},"content":"    * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"Chen1x"},"content":"        * placeholder","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"Chen1x"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"Chen1x"},"content":"        * placeholder","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Chen1x":33}},{"path":"docs/team/jasonlcy-temp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"layout: page","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"title: JasonLCY-Temp Project Portfolio Page","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"InterviewHub is a desktop application that helps engineering hiring managers to manage applicants and interviews.","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"The user interacts with it using a Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"with JavaFX. It is written in Java, and has about 18 kLoC.","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"* **New Feature**: Interview (add-i, edit-i, list-i, delete-i)","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"  * What it does: Allows the user to perform CRUD operations for an Interview object","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Justification: The basic CRUD features of `Interview` serves as the crucial foundation of our product,","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"alongside AB3\u0027s Person which was adapted into Applicant by Jing Jie. Most of the code for Interview was implemented by me,","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"adapting the frame of AB3\u0027s Person class CRUD classes. Implementing it was a lot more challenging than initially expected","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"due to how many additional classes (~20 associated classes) had to be edited, some a lot more heavily than others,","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"in order to handle the `Interview` object properly through all levels of abstraction - From the stored Json datafile","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"all the way up the abstraction ladder (Model, AddressBook etc.) to the ObservableList used to display the data on the UI.","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"* **Code contributed**: [tP Code Dashboard summary](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dJasonLCY-Temp\u0026tabRepo\u003dAY2324S1-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"* **Project management**:","lastModifiedDate":"2023-09-28"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Created the organization and team on GitHub","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Created the team repo on GitHub (including setting up `CodeCov` CI)","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Kept track of deadlines (internal and external) and performed issue tracking \u0026 scheduling for milestone `v1.1 and v1.2`","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Performed standardization of GitHub issues (Task Tracker) and tags for `v1.1 - v1.4`","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Enabled assertions for the team repo","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Updated codecov global YAML to be more permissive with test case coverage decrease","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    * Ensured functionality and correctness of UG hyperlinks","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"    * Misc. enhancements to the UG","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"    * Use Cases for v1.1","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Removed most traces of AB3 from the markdown pages, UG and DG in `v1.1`","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"* **PRs reviewed** (with non-trivial comments):","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Git conventions and GitHub usage tips/advice:","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"    [#19](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/19)","lastModifiedDate":"2023-09-28"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"    [#20](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/20)","lastModifiedDate":"2023-09-28"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Coding standards tips/advice:","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"    [#64](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/64)","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"    [#77](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/77)","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"  * General quality checks:","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"    [#27](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/27)","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"    [#67](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/67)","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"* **Community Contribution**:","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"  * Point out (potentially) confusing instructions for clarification","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"    [#236](https://github.com/nus-cs2103-AY2324S1/forum/issues/236)","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"JasonLCY-Temp":61}},{"path":"docs/team/jingjie88.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"title: Jing Jie\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"InterviewHub is a desktop interview management application for tech hiring managers.","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"It is written in Java.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"* **New Feature**: To be added","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"    * What it does:","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    * Justification:","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"    * Highlights:","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"    * Credits:","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"    * placeholder","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"    * placeholder","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    * placeholder","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"    * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"        * Update documentation for `add`, `edit`, `list`, `delete`","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"        * placeholder","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"jingjie88":33}},{"path":"docs/team/jonyxzx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"layout: page","lastModifiedDate":"2023-09-28"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"title: Jony\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-28"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"---","lastModifiedDate":"2023-09-28"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-09-28"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"InterviewHub is a desktop application that helps engineering hiring managers to manage applicants and interviews. The user interacts with it using a Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java, and has about 18 kLoC.","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-28"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"* **New Feature**: `find-i` command (PR: [#51](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/51))","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"  * What it does: Allows the user to search for the target interviews based on the input job description with the command `find-i`.","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"  * Justification: This feature improves the product significantly because a user can conveniently search for all the interviews based on the attached job role. This would assist the users to reduce the time taken to search interviews manually.","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"  * Highlights: This feature requires in-depth understanding of how the list is being handled in the program such as ObservableList and FilteredList. The feature emphasises on filtering through the list without modifying the main interview list stored in the program. Therefore, preventing accidental modification or removal.","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"  ","lastModifiedDate":"2023-09-28"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"* **New Feature**: `rate` command (PR: [#86](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/86))","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"  * What it does: Allows the user to rate an interview after it has been completed to record the applicant\u0027s performance.","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"  * Justification: This feature is a core feature to support post interview process to keep a record of each applicant rating in InterviewHub.","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"  * Highlights: The rating is a standalone class which allows easy extension in the future. Moreover, the rate command itself is self editing, which removes the need for delete/edit rating.","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"* **New Feature**: `sort-rate` command (PR: [#108](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/108))","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"  * What it does: Allows the user to sort the interview list in descending order based on the rating of the interview.","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"  * Justification: This feature completes the post interview process to view the top candidates in the entire interview list.","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"  * Highlights: The sorting requires in-depth understanding of the comparator and comparable interface. To maintain the integrity of the data, the sorting is being implemented in the UniqueInterviewList. The feature also maintains its extendability by keeping the sorting function general, allowing new comparator class to being pass in to sort the list.","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djonyxzx\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"* **Project management**:","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"  * Managed the release for v1.2 jar file.","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"  * Managed the release for v1.3(trial) jar file.","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"  * Managed the release for v1.3.1 jar file.","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"  * Documented v1.3 demo into the project google documents.","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-28"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"  * User Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"    * Added the full table of contents.","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"    * Added the glossary section.","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"    * Added the how to use the user guide section.","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"    * Rearrange and added the entire command summary section.","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"    * Handled the formatting of the User Guide.","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"    * Modified the image for help feature.","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"    * Added documentation for the features `find-i`, `sort-rate` and `rate`","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"    * Added the user stories.","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"    * Added documentation for the features sort, rate, and find interview.","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"    * Formatted the structure of the Developer Guide.","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"* **Community**:","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"  * 41 team pull requests reviewed.","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"  * Reported [10](https://github.com/Jonyxzx/ped/issues) bugs for other team during PE-D.","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"  * Helped in finding bugs in teammates\u0027 features.","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"Jonyxzx":52}},{"path":"docs/team/kiwibang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"layout: page","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"title: Tan Kerway\u0027s portfolio","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"### Project: InterviewHub","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"InterviewHub is a desktop application that helps engineering hiring managers to manage applicants and interviews. The user interacts with it using a Command Line Interface (CLI), and it has a Graphical User Interface (GUI) created with JavaFX. It is written in Java, and has about 18 kLoC.","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"#### Given below are my contributions to the project.","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dkiwibang\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dkiwibang\u0026tabRepo\u003dAY2324S1-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"  * New feature: Added the ability to accept multiple time formats. (PR: [#53](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/53))","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"      * What it does: Allows the user to enter a time in different formats","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"      * Justification: Different individuals have different ways of entering dates. This feature increases the flexibility of the command, allowing the user to type in inputs without the input being rejected, leading to better UX.","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"      * Highlights: Creating one\u0027s own time parser methods requires in-depth knowledge of the Java LocalDateTime class and its utility methods. Requires many iterations to get a fully functional parser which can accept multiple time strings in different formats.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"  * New Feature: `list-freetime DATE` command (PR: [#121](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/121))","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"    * What it does: Allows the user to list all the blocks of time from 9am to 5pm on a given date. ","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"    * Justification: The user might want to see, in a single command, when exactly they are free on a particular work day, so that they can schedule other activities. This is much more concise than looking at a messy calendar to check when they are free manually.","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"  * New Feature: `list-i-today` command (PR: [#120](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/120))","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"    * What it does: Allows the user to list all the interviews that they have scheduled on the day the command is executed","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"    * Justification: This feature will allow the user to see upcoming interviews on the day that the command was executed in 1 command, thus eliminating the need for the user to consult a potentially messy calendar to attend to upcoming interviews","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"  * New Feature: `sort-time` command (PR: [#125](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/125))","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"    * What it does: Allows the user to list all the interviews that they have scheduled so far, in chronological ascending order","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"    * Justification: The user might want to see all the interviews that scheduled and are coming soon, so that they can prepare for them accordingly","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"  * Enhancement: Add `Time` class to represent parsed time strings (PR: [#149](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/149))","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"    * What it does: Place the LocalDateTime object into a wrapper class and move all related methods into it ","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"    * Justification: Improves encapsulation by wrapping all related fields and methods related to reading and writing time into 1 dedicated class","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"    * Highlights: Requires extensive modification of the existing codebase so that `Time` objects are used instead of `LocalDateTime` objects","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"    * Created and added the `List of accepted date formats`","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"    * Added complete documentation for the following features: `list-freetime DATE`, `list-i-done`, `list-i-not-done`, `sort-time`","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"    * Added description, implementation, execution process, and design considerations for the following sections: `Time feature`, `List all free timing for a given day feature`, `List interviews done/not done feature`, `Sort interview feature`","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"    * Added skeleton for the section: `Appendix: Instructions for manual testing`","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"    * Added test cases for the following commands in the section `Appendix: Instructions for manual testing`: `Listing all free timing for the given day`, `Listing all interviews for today`, `Listing all completed interview`, `Listing all incomplete interview`, and `Sorting the interview list by start-time`","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"    * Maintain the issue tracker (e.g. assign priority levels to tasks, assign individuals to issues)","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"    * Team PRs reviewed: [#31](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/31), [#34](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/34), [#58](https://github.com/AY2324S1-CS2103T-T11-2/tp/pull/58)","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"    * Helped team members with testing and debugging their code.","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"kiwibang"},"content":"    * Other team PR reviewed: [CS2103T-W08-1 #42](https://github.com/AY2324S1-CS2103T-W08-1/tp/pull/42) ","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"    * Asked for help and then gave back to the community: [#159](https://github.com/nus-cs2103-AY2324S1/forum/issues/159), [#161](https://github.com/nus-cs2103-AY2324S1/forum/issues/161)","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"    * Contributed to forum discussions: [#120](https://github.com/nus-cs2103-AY2324S1/forum/issues/120#issuecomment-1710941098), [#285](https://github.com/nus-cs2103-AY2324S1/forum/issues/285#issuecomment-1774804526)","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"kiwibang":52}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":" * Changes the remark of an existing applicant in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"jingjie88"},"content":"            + \": Edits the remark of the applicant identified \"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"            + \"by the index number used in the last applicant listing. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"jingjie88"},"content":"     * @param index of the applicant in the filtered applicant list to edit the remark","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"jingjie88"},"content":"     * @param remark of the applicant to be updated to","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"Chen1x"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of applicant data. We achieve that by working with the `Applicant` model. Each field in a Applicant is implemented as a separate class (e.g. a `Name` object represents the applicant’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a applicant.","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"jingjie88"},"content":"Create a new `Remark` in `seedu.address.model.applicant`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"jingjie88"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"Chen1x"},"content":"Simply add the following to [`seedu.address.ui.ApplicantCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-20"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Chen1x"},"content":"**`ApplicantCard.java`:**","lastModifiedDate":"2023-10-20"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"Chen1x"},"content":"Then insert the following into [`main/resources/view/ApplicantListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-10-20"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"Chen1x"},"content":"**`ApplicantListCard.fxml`:**","lastModifiedDate":"2023-10-20"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"Chen1x"},"content":"## Modify `Applicant` to support a `Remark` field","lastModifiedDate":"2023-10-20"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"Chen1x"},"content":"Since `ApplicantCard` displays data from a `Applicant`, we need to update `Applicant` to get our `Remark` displayed!","lastModifiedDate":"2023-10-20"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"Chen1x"},"content":"### Modify `Applicant`","lastModifiedDate":"2023-10-20"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"Chen1x"},"content":"We change the constructor of `Applicant` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-10-20"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"Chen1x"},"content":"### Update other usages of `Applicant`","lastModifiedDate":"2023-10-20"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"Chen1x"},"content":"Unfortunately, a change to `Applicant` will cause other commands to break, you will have to modify these commands to use the updated `Applicant`!","lastModifiedDate":"2023-10-20"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"Chen1x"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Applicant` class to find these commands.","lastModifiedDate":"2023-10-20"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"Chen1x"},"content":"AddressBook stores data by serializing `JsonAdaptedApplicant` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedApplicant` to work with our new `Applicant`!","lastModifiedDate":"2023-10-20"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"Chen1x"},"content":"Now that we have finalized the `Applicant` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-10-20"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"Chen1x"},"content":"**`ApplicantCard.java`:**","lastModifiedDate":"2023-10-20"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"Chen1x"},"content":"public ApplicantCard(Applicant applicant, int displayedIndex) {","lastModifiedDate":"2023-10-20"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"jingjie88"},"content":"    remark.setText(applicant.getRemark().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"Chen1x"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Applicant`. Since all fields in a `Applicant` are immutable, we create a new instance of a `Applicant` with the values that we want and","lastModifiedDate":"2023-10-20"},{"lineNumber":327,"author":{"gitId":"Chen1x"},"content":"save it with `Model#setApplicant()`.","lastModifiedDate":"2023-10-20"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"Chen1x"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Applicant: %1$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":334,"author":{"gitId":"Chen1x"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Applicant: %1$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"Chen1x"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-20"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"Chen1x"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"Chen1x"},"content":"        Applicant applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":345,"author":{"gitId":"Chen1x"},"content":"        Applicant editedApplicant \u003d new Applicant(","lastModifiedDate":"2023-10-20"},{"lineNumber":346,"author":{"gitId":"jingjie88"},"content":"                applicantToEdit.getName(), applicantToEdit.getPhone(), applicantToEdit.getEmail(),","lastModifiedDate":"2023-10-17"},{"lineNumber":347,"author":{"gitId":"jingjie88"},"content":"                applicantToEdit.getAddress(), remark, applicantToEdit.getTags());","lastModifiedDate":"2023-10-17"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"Chen1x"},"content":"        model.setApplicant(applicantToEdit, editedApplicant);","lastModifiedDate":"2023-10-20"},{"lineNumber":350,"author":{"gitId":"Chen1x"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"jingjie88"},"content":"        return new CommandResult(generateSuccessMessage(editedApplicant));","lastModifiedDate":"2023-10-17"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"jingjie88"},"content":"     * {@code applicantToEdit}.","lastModifiedDate":"2023-10-17"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"Chen1x"},"content":"    private String generateSuccessMessage(Applicant applicantToEdit) {","lastModifiedDate":"2023-10-20"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"jingjie88"},"content":"        return String.format(message, applicantToEdit);","lastModifiedDate":"2023-10-17"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"jingjie88":13,"-":359,"Chen1x":27}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Applicant` class.","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Chen1x"},"content":"The `address` field in `Applicant` is actually an instance of the `seedu.address.model.applicant.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditApplicantDescriptor` may require more careful inspection.","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Chen1x"},"content":"Let’s try removing references to `Address` in `EditApplicantDescriptor`.","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Chen1x"},"content":"1. Safe delete the field `address` in `EditApplicantDescriptor`.","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Chen1x"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Applicant` class will require you to modify its constructor.","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Chen1x"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `ApplicantCard` that has not been removed nor identified.","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"Chen1x"},"content":"A quick look at the `ApplicantCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"Chen1x"},"content":"**`ApplicantCard.java`**","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"Chen1x"},"content":"**`ApplicantCard.fxml`**","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Chen1x"},"content":"**`invalidApplicantAddressBook.json`:**","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jingjie88"},"content":"  \"applicants\": [ {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"Chen1x"},"content":"    \"name\": \"Applicant with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jingjie88":1,"-":99,"Chen1x":12}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"Chen1x"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditApplicantDescriptor`. Recall that we can verify the contents of `editApplicantDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Chen1x"},"content":"       Applicant applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"Chen1x"},"content":"       Applicant editedApplicant \u003d createEditedApplicant(applicantToEdit, editApplicantDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"Chen1x"},"content":"       if (!applicantToEdit.isSameApplicant(editedApplicant) \u0026\u0026 model.hasApplicant(editedApplicant)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"Chen1x"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Chen1x"},"content":"       model.setApplicant(applicantToEdit, editedApplicant);","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"Chen1x"},"content":"       model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"Chen1x"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_APPLICANT_SUCCESS, editedApplicant));","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"Chen1x"},"content":"   * it uses the `setApplicant()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the applicant data.","lastModifiedDate":"2023-10-20"},{"lineNumber":205,"author":{"gitId":"Chen1x"},"content":"   * it uses the `updateFilteredApplicantList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ applicants.\u003cbr\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":206,"author":{"gitId":"jingjie88"},"content":"     FYI, The \u0027filtered list\u0027 is the list of applicants resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the applicants so that the user can see the edited applicant along with all other applicants. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"jingjie88"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of applicants is being tracked.","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"jingjie88"},"content":"        applicants.addAll(","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"Chen1x"},"content":"            source.getApplicantList()","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"Chen1x"},"content":"                  .map(JsonAdaptedApplicant::new)","lastModifiedDate":"2023-10-20"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"Chen1x"},"content":"1. It appears that a `JsonAdaptedApplicant` is created for each `Applicant` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2023-10-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"Chen1x"},"content":"    5.  Add a new field to `Applicant`","lastModifiedDate":"2023-10-20"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jingjie88":3,"-":284,"Chen1x":14}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 1, true);","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing InterviewHub ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"JasonLCY-Temp"},"content":"        logger.info(\"Starting InterviewHub \" + MainApp.VERSION);","lastModifiedDate":"2023-11-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"JasonLCY-Temp"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping InterviewHub ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-11-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JasonLCY-Temp":4,"-":182}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"[,\\\\s]+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jingjie88":1,"-":67}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"Chen1x"},"content":"    /** Returns an unmodifiable view of the filtered list of applicants */","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Chen1x"},"content":"    /** Returns an unmodifiable view of the filtered list of interviews */","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Chen1x"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jingjie88":2,"-":48,"Chen1x":5}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"jingjie88"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"jingjie88"},"content":"        return model.getFilteredApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"Chen1x"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Chen1x"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Chen1x"},"content":"        return model.getFilteredInterviewList();","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jingjie88":3,"-":87,"Chen1x":4}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    public static final String MESSAGE_INTERVIEWS_LISTED_OVERVIEW \u003d \"%1$d interviews listed!\";","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX \u003d \"The applicant index provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_APPLICANTS_LISTED_OVERVIEW \u003d \"%1$d applicants listed!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"            \"The interview index provided is invalid\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_PAST_DATE \u003d \"Input date cannot be in the past!\";","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"     * Formats the {@code applicant} for display to the user.","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"    public static String formatApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"        builder.append(applicant.getName())","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"                .append(applicant.getPhone())","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"                .append(applicant.getEmail())","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"                .append(applicant.getAddress())","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"        applicant.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Formats the {@code interview} for display to the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static String formatInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"        return \"Applicant: \"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"                + interview.getInterviewApplicant().getName()","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"                + \"; Role: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"                + interview.getJobRole()","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"                + \"; Scheduled for: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"kiwibang"},"content":"                + interview.getInterviewStartTimeAsString();","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jonyxzx":1,"JasonLCY-Temp":10,"jingjie88":14,"kiwibang":1,"-":41,"Chen1x":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":" * Adds an applicant to the address book.","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    public static final String COMMAND_WORD \u003d \"add-a\";","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a applicant to the address book. \"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New applicant added: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in the address book\";","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"    private final Applicant toAdd;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"     * Creates an AddCommand to add the specified {@code Applicant}","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"    public AddCommand(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"        toAdd \u003d applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"        if (model.hasApplicant(toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"        model.addApplicant(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatApplicant(toAdd)));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jonyxzx":1,"jingjie88":14,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/AddInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.Messages.MESSAGE_PAST_DATE;","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_ROLE;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":" * Command to handle adding interviews to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":" * Adapted from AB3\u0027s AddCommand class","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"public class AddInterviewCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    public static final String COMMAND_WORD \u003d \"add-i\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    /* TODO Update format with intended final format accepted*/","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an interview to the address book.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_APPLICANT + \"APPLICANT_ID \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_JOB_ROLE + \"ROLE \"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"            + PREFIX_START_TIME + \"START TIME \"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"            + PREFIX_END_TIME + \"END TIME\" + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_APPLICANT + \"18 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_JOB_ROLE + \"Junior Software Engineer \"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"            + PREFIX_START_TIME + \"03-11-2024 1500 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"            + PREFIX_END_TIME + \"03-11-2024 1600\";","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New interview added: %1$s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"Error: This is a duplicate interview\";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_APPLICANT_HAS_INTERVIEW \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"            \"Applicant already has an interview scheduled\";","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"The interview start time must be before the end time, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"            + \"the time must be between 0900 to 1700,\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"            + \"and the start time and end time must be on the same day!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_TIME_CLASH \u003d \"This interview clashes with another interview!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"    private final Index applicantIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"    private final String jobRole;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"    private final Time startTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"    private final Time endTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Creates an AddInterviewCommand to add the specified {@code Interview}","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"    public AddInterviewCommand(Index applicantIndex, String jobRole,","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"kiwibang"},"content":"                               Time startTime, Time endTime) {","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"kiwibang"},"content":"        requireAllNonNull(applicantIndex, jobRole, startTime, endTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jingjie88"},"content":"        this.applicantIndex \u003d applicantIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"        this.jobRole \u003d jobRole;","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"jingjie88"},"content":"        if (applicantIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jingjie88"},"content":"        Applicant applicant \u003d lastShownList.get(applicantIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"        if (applicant.hasInterview()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_APPLICANT_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"        Applicant applicantWithInterview \u003d new Applicant(","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"jingjie88"},"content":"                applicant.getName(),","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"jingjie88"},"content":"                applicant.getPhone(),","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"jingjie88"},"content":"                applicant.getEmail(),","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"jingjie88"},"content":"                applicant.getAddress(),","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"                applicant.getTags(),","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"                true","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"jingjie88"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"kiwibang"},"content":"        Interview toAdd \u003d new Interview(applicantWithInterview, jobRole, startTime, endTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"        if (!toAdd.isValid()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_INVALID_TIME);","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"jingjie88"},"content":"        if (toAdd.getInterviewStartTime().isPast()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_PAST_DATE);","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (model.hasInterview(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"jingjie88"},"content":"        if (model.hasInterviewClash(toAdd)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_TIME_CLASH);","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"jingjie88"},"content":"        model.setApplicant(applicant, applicantWithInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"        model.addInterview(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatInterview(toAdd)));","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"jingjie88"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"jingjie88"},"content":"        return \"AddInterviewCommand{\"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"jingjie88"},"content":"                + \"jobRole\u003d\u0027\" + jobRole + \u0027\\\u0027\u0027","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"kiwibang"},"content":"                + \"startTime\u003d\" + startTime + \u0027\\\u0027\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"kiwibang"},"content":"                + \"endTime\u003d\" + endTime + \u0027\\\u0027\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"jingjie88"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"JasonLCY-Temp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!(other instanceof AddInterviewCommand)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"        AddInterviewCommand otherAddICommand \u003d (AddInterviewCommand) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"jingjie88"},"content":"        return applicantIndex.equals(otherAddICommand.applicantIndex)","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 jobRole.equals(otherAddICommand.jobRole)","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"kiwibang"},"content":"                \u0026\u0026 startTime.equals(otherAddICommand.startTime)","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"kiwibang"},"content":"                \u0026\u0026 endTime.equals(otherAddICommand.endTime);","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":58,"jingjie88":74,"kiwibang":10,"Chen1x":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":" * Deletes an applicant identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"    public static final String COMMAND_WORD \u003d \"delete-a\";","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"            + \": Deletes the applicant identified by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"    public static final String MESSAGE_DELETE_APPLICANT_SUCCESS \u003d \"Deleted Applicant: %1$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"        Applicant applicantToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"        model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Chen1x"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"                Messages.formatApplicant(applicantToDelete)));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jingjie88":7,"-":59,"Chen1x":4}},{"path":"src/main/java/seedu/address/logic/commands/DeleteInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":" * Command to handle deleting interviews from the address book (using the interview index).","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3\u0027s \"DeleteCommand\" class","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"public class DeleteInterviewCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String COMMAND_WORD \u003d \"delete-i\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \": Deletes the interview identified by the index number used in the displayed interview list.\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_DELETE_INTERVIEW_SUCCESS \u003d \"Deleted Interview: %1$s\";","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"    public DeleteInterviewCommand(Index targetIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"        List\u003cInterview\u003e lastShownList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview interviewToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"        model.deleteInterview(interviewToDelete);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INTERVIEW_SUCCESS,","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"                Messages.formatInterview(interviewToDelete)));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!(other instanceof DeleteInterviewCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"        DeleteInterviewCommand otherDeleteCommand \u003d (DeleteInterviewCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"JasonLCY-Temp":71}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERVIEWS;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":" * Edits the details of an existing applicant in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"    public static final String COMMAND_WORD \u003d \"edit-a\";","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the applicant identified \"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"            + \"by the index number used in the displayed applicant list. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_EDIT_APPLICANT_SUCCESS \u003d \"Edited Applicant: %1$s\";","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in the address book.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"    private final EditApplicantDescriptor editApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"     * @param index of the applicant in the filtered applicant list to edit","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"     * @param editApplicantDescriptor details to edit the applicant with","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"    public EditCommand(Index index, EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"jingjie88"},"content":"        this.editApplicantDescriptor \u003d new EditApplicantDescriptor(editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"jingjie88"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"jingjie88"},"content":"        Applicant applicantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"        Applicant editedApplicant \u003d createEditedApplicant(applicantToEdit, editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"        if (!applicantToEdit.isSameApplicant(editedApplicant) \u0026\u0026 model.hasApplicant(editedApplicant)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"jingjie88"},"content":"        model.setApplicant(applicantToEdit, editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"jingjie88"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"jingjie88"},"content":"        model.updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"                Messages.formatApplicant(editedApplicant)));","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"     * Creates and returns a {@code Applicant} with the details of {@code applicantToEdit}","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"     * edited with {@code editApplicantDescriptor}.","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"    private static Applicant createEditedApplicant(Applicant applicantToEdit,","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"                                                   EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"jingjie88"},"content":"        assert applicantToEdit !\u003d null;","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"        Name updatedName \u003d editApplicantDescriptor.getName().orElse(applicantToEdit.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"jingjie88"},"content":"        Phone updatedPhone \u003d editApplicantDescriptor.getPhone().orElse(applicantToEdit.getPhone());","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"jingjie88"},"content":"        Email updatedEmail \u003d editApplicantDescriptor.getEmail().orElse(applicantToEdit.getEmail());","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"jingjie88"},"content":"        Address updatedAddress \u003d editApplicantDescriptor.getAddress().orElse(applicantToEdit.getAddress());","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"jingjie88"},"content":"        Set\u003cTag\u003e updatedTags \u003d editApplicantDescriptor.getTags().orElse(applicantToEdit.getTags());","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"jingjie88"},"content":"        boolean updatedHasInterview \u003d editApplicantDescriptor.hasInterview().orElse(applicantToEdit.hasInterview());","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"jingjie88"},"content":"        return new Applicant(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedHasInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 editApplicantDescriptor.equals(otherEditCommand.editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"jingjie88"},"content":"                .add(\"editApplicantDescriptor\", editApplicantDescriptor)","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"jingjie88"},"content":"     * Stores the details to edit the applicant with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"jingjie88"},"content":"     * corresponding field value of the applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"jingjie88"},"content":"    public static class EditApplicantDescriptor {","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"jingjie88"},"content":"        private Boolean hasInterview;","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"jingjie88"},"content":"        public EditApplicantDescriptor() {}","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"jingjie88"},"content":"        public EditApplicantDescriptor(EditApplicantDescriptor toCopy) {","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"jingjie88"},"content":"            setHasInterview(toCopy.hasInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"jingjie88"},"content":"        public void setHasInterview(Boolean hasInterview) {","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"jingjie88"},"content":"            this.hasInterview \u003d hasInterview;","lastModifiedDate":"2023-10-19"},{"lineNumber":221,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"jingjie88"},"content":"        public Optional\u003cBoolean\u003e hasInterview() {","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"jingjie88"},"content":"            return Optional.ofNullable(hasInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"jingjie88"},"content":"            if (!(other instanceof EditApplicantDescriptor)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"jingjie88"},"content":"            EditApplicantDescriptor otherEditApplicantDescriptor \u003d (EditApplicantDescriptor) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"jingjie88"},"content":"            return Objects.equals(name, otherEditApplicantDescriptor.name)","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"jingjie88"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditApplicantDescriptor.phone)","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"jingjie88"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditApplicantDescriptor.email)","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"jingjie88"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditApplicantDescriptor.address)","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"jingjie88"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditApplicantDescriptor.tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"jingjie88"},"content":"                    .add(\"hasInterview\", hasInterview)","lastModifiedDate":"2023-10-19"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jingjie88":67,"-":191}},{"path":"src/main/java/seedu/address/logic/commands/EditInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.Messages.MESSAGE_PAST_DATE;","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_ROLE;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERVIEWS;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":" * Edits the details of an existing interview in the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3\u0027s EditCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"public class EditInterviewCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String COMMAND_WORD \u003d \"edit-i\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits an existing interview details in the address \"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"            + \"book. Only changes to Job Role and Timing are supported.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \"Parameters: Interview Index (must be a positive integer) \"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_JOB_ROLE + \"ROLE \"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"            + PREFIX_START_TIME + \"START TIME \"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"            + PREFIX_END_TIME + \"END TIME\" + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"            + PREFIX_JOB_ROLE + \"Junior Software Engineer \"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"            + PREFIX_START_TIME + \"03-11-2024 1500 \"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"            + PREFIX_END_TIME + \"03-11-2024 1600\";","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_EDIT_INTERVIEW_SUCCESS \u003d \"Edited Interview: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"This interview already exists in the address book.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"The interview start time must be before the end time, \"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"            + \"the time must be between 0900 to 1700,\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"            + \"and the start time and end time must be on the same day!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_TIME_CLASH \u003d \"This interview clashes with another interview!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_INTERVIEW_DONE \u003d \"You cannot edit an interview that is done!\";","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final EditInterviewDescriptor editInterviewDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param index of the interview in the filtered interview list to edit","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @param editInterviewDescriptor details to edit the interview with","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"    public EditInterviewCommand(Index index, EditInterviewDescriptor editInterviewDescriptor) {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(editInterviewDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.editInterviewDescriptor \u003d new EditInterviewDescriptor(editInterviewDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"        List\u003cInterview\u003e lastShownList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview interviewToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"        Interview editedInterview \u003d createEditedInterview(interviewToEdit, editInterviewDescriptor);","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"jingjie88"},"content":"        if (interviewToEdit.isDone()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_INTERVIEW_DONE);","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"        if (!interviewToEdit.isSameInterview(editedInterview) \u0026\u0026 model.hasInterview(editedInterview)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERVIEW);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"jingjie88"},"content":"        if (!editedInterview.isValid()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_INVALID_TIME);","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"        if (editedInterview.getInterviewStartTime().isPast()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_PAST_DATE);","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"        if (model.hasInterviewClash(editedInterview)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_TIME_CLASH);","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"        model.setInterview(interviewToEdit, editedInterview);","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"        model.updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INTERVIEW_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"                Messages.formatInterview(editedInterview)));","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Creates and returns a {@code Interview} with the details of {@code interviewToEdit}","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"     * edited with {@code editInterviewDescriptor}.","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static Interview createEditedInterview(Interview interviewToEdit,","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"jingjie88"},"content":"                                                   EditInterviewDescriptor editInterviewDescriptor) {","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"        assert interviewToEdit !\u003d null;","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"        String updatedJobRole \u003d editInterviewDescriptor.getJobRole().orElse(interviewToEdit.getJobRole());","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"kiwibang"},"content":"        Time updatedStartTime \u003d editInterviewDescriptor","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"jingjie88"},"content":"                .getStartTime().orElse(interviewToEdit.getInterviewStartTime());","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"kiwibang"},"content":"        Time updatedEndTime \u003d editInterviewDescriptor","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"jingjie88"},"content":"                .getEndTime().orElse(interviewToEdit.getInterviewEndTime());","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"kiwibang"},"content":"        return new Interview(interviewToEdit.getInterviewApplicant(),","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"                updatedJobRole, updatedStartTime, updatedEndTime);","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!(other instanceof EditInterviewCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"JasonLCY-Temp"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"JasonLCY-Temp"},"content":"        EditInterviewCommand otherEditInterviewCommand \u003d (EditInterviewCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"        return index.equals(otherEditInterviewCommand.index)","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 editInterviewDescriptor.equals(otherEditInterviewCommand.editInterviewDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"JasonLCY-Temp"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"JasonLCY-Temp"},"content":"                .add(\"editInterviewDescriptor\", editInterviewDescriptor)","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"JasonLCY-Temp"},"content":"                .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Stores the details to edit the interview with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"JasonLCY-Temp"},"content":"     * corresponding field value of the applicant.","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static class EditInterviewDescriptor {","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"JasonLCY-Temp"},"content":"        private String jobRole;","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"kiwibang"},"content":"        private Time startTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"kiwibang"},"content":"        private Time endTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"JasonLCY-Temp"},"content":"        private boolean isDone;","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"JasonLCY-Temp"},"content":"        public EditInterviewDescriptor() {}","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"JasonLCY-Temp"},"content":"        /**","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"JasonLCY-Temp"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"JasonLCY-Temp"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"JasonLCY-Temp"},"content":"         */","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"JasonLCY-Temp"},"content":"        public EditInterviewDescriptor(EditInterviewDescriptor toCopy) {","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"JasonLCY-Temp"},"content":"            setJobRole(toCopy.jobRole);","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"jingjie88"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2023-10-29"},{"lineNumber":167,"author":{"gitId":"jingjie88"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2023-10-29"},{"lineNumber":168,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"JasonLCY-Temp"},"content":"        /**","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"JasonLCY-Temp"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"JasonLCY-Temp"},"content":"         */","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"JasonLCY-Temp"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"jingjie88"},"content":"            return CollectionUtil.isAnyNonNull(jobRole, startTime, endTime);","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"JasonLCY-Temp"},"content":"        public void setJobRole(String role) {","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"JasonLCY-Temp"},"content":"            jobRole \u003d role;","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"JasonLCY-Temp"},"content":"        public Optional\u003cString\u003e getJobRole() {","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"JasonLCY-Temp"},"content":"            return Optional.ofNullable(jobRole);","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"kiwibang"},"content":"        public void setStartTime(Time startTime) {","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"jingjie88"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":187,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":189,"author":{"gitId":"kiwibang"},"content":"        public Optional\u003cTime\u003e getStartTime() {","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"jingjie88"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-10-29"},{"lineNumber":191,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":192,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"kiwibang"},"content":"        public void setEndTime(Time endTime) {","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"jingjie88"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"kiwibang"},"content":"        public Optional\u003cTime\u003e getEndTime() {","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"jingjie88"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"JasonLCY-Temp"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"JasonLCY-Temp"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"JasonLCY-Temp"},"content":"                return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"JasonLCY-Temp"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"JasonLCY-Temp"},"content":"            if (!(other instanceof EditInterviewDescriptor)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"JasonLCY-Temp"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"JasonLCY-Temp"},"content":"            EditInterviewDescriptor otherEditInterviewDescriptor \u003d (EditInterviewDescriptor) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"JasonLCY-Temp"},"content":"            return Objects.equals(jobRole, otherEditInterviewDescriptor.jobRole)","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"jingjie88"},"content":"                    \u0026\u0026 Objects.equals(startTime, otherEditInterviewDescriptor.startTime)","lastModifiedDate":"2023-10-29"},{"lineNumber":215,"author":{"gitId":"JasonLCY-Temp"},"content":"                    \u0026\u0026 Objects.equals(endTime, otherEditInterviewDescriptor.endTime);","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"JasonLCY-Temp"},"content":"        public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"JasonLCY-Temp"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"JasonLCY-Temp"},"content":"                    .add(\"role\", jobRole)","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"jingjie88"},"content":"                    .add(\"startTime\", startTime)","lastModifiedDate":"2023-10-29"},{"lineNumber":223,"author":{"gitId":"jingjie88"},"content":"                    .add(\"endTime\", endTime)","lastModifiedDate":"2023-10-29"},{"lineNumber":224,"author":{"gitId":"JasonLCY-Temp"},"content":"                    .toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"JasonLCY-Temp":169,"jingjie88":48,"kiwibang":10}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":" * Finds and lists all applicants in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    public static final String COMMAND_WORD \u003d \"find-a\";","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all applicants whose fields contain any of \"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"            + \"the specified keyword (case-insensitive) or number and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"            + \"[\" + PREFIX_NAME + \"KEYWORDS...] \"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"            + \"[\" + PREFIX_PHONE + \"NUMBER] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"            + \"[\" + PREFIX_EMAIL + \"KEYWORDS...] \"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"            + \"[\" + PREFIX_ADDRESS + \"KEYWORDS...] \"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"            + \"[\" + PREFIX_TAG + \"KEYWORDS...]\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice bob charlie p/98765432 e/example@mail.com\";","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"    private final Predicate\u003cApplicant\u003e predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"    public FindCommand(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"        model.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"                String.format(Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW, model.getFilteredApplicantList().size()));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Jonyxzx":1,"jingjie88":21,"-":47,"Chen1x":1}},{"path":"src/main/java/seedu/address/logic/commands/FindInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":" * Finds and lists all interviews in address book which the job-role contains any of the argument keywords.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"public class FindInterviewCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    public static final String COMMAND_WORD \u003d \"find-i\";","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"            + \": Finds all interviews which the job-role contain any of \"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"            + \"Example: \" + COMMAND_WORD + \" software-engineer data-analyst\";","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    private final JobContainsKeywordsPredicate predicateJob;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"    public FindInterviewCommand(JobContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"        this.predicateJob \u003d predicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"        model.updateFilteredInterviewList(predicateJob);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"                String.format(Messages.MESSAGE_INTERVIEWS_LISTED_OVERVIEW, model.getFilteredInterviewList().size()));","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"        if (!(other instanceof FindInterviewCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand otherFindCommand \u003d (FindInterviewCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"        return predicateJob.equals(otherFindCommand.predicateJob);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Jonyxzx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Jonyxzx"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"                .add(\"predicate\", predicateJob)","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":60}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":" * Lists all applicants in the address book to the user.","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"    public static final String COMMAND_WORD \u003d \"list-a\";","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all applicants\";","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jingjie88":4,"-":19,"Chen1x":1}},{"path":"src/main/java/seedu/address/logic/commands/ListFreeTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.Messages.MESSAGE_PAST_DATE;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":" * Encapsulates the list-freetime command.","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":" *","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":" * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"public class ListFreeTimeCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"    public static final String COMMAND_WORD \u003d \"list-freetime\";","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"    public static final String MESSAGE_LIST_FREETIME_SUCCESS \u003d \"Free times on %s:\\n%s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"            + \": Lists out free time on a given day.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"            + \"Parameters: DATE (Cannot be an invalid date or a date in the past)\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 12/12/2034\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"    private final Time givenDay;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"     * Constructs an instance of the ListFreeTimeCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"     * @param givenDay the day to list out free time on","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"    public ListFreeTimeCommand(Time givenDay) {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"        this.givenDay \u003d givenDay;","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"     * Converts the list of free times into a nicely-formatted string to print to the command box.","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"     * @param freeTimes the list of free times","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"     * @return a String of free times","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"    private String formatFreeTime(List\u003cPair\u003cTime, Time\u003e\u003e freeTimes) {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"        for (Pair\u003cTime, Time\u003e pocketOfFreeTime : freeTimes) {","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"            sb.append(\"from: \").append(pocketOfFreeTime.getKey().getTime())","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"kiwibang"},"content":"                    .append(\" \").append(\"to: \").append(pocketOfFreeTime.getValue().getTime())","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"        return sb.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"     * Returns the command result of typing the list-freetime command.","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"kiwibang"},"content":"     * @return the command result of executing the find-freetime command","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"kiwibang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"        if (givenDay.isPastDate()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(MESSAGE_PAST_DATE);","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"kiwibang"},"content":"        List\u003cPair\u003cTime, Time\u003e\u003e freeTimes \u003d model.listPocketsOfTimeOnGivenDay(givenDay);","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"kiwibang"},"content":"        String formattedFreeTime \u003d formatFreeTime(freeTimes);","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"kiwibang"},"content":"        String formattedDate \u003d givenDay.getDate().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"kiwibang"},"content":"        return new CommandResult(String.format(MESSAGE_LIST_FREETIME_SUCCESS, formattedDate, formattedFreeTime));","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"kiwibang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"kiwibang"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"kiwibang"},"content":"            return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"kiwibang"},"content":"        if (!(other instanceof ListFreeTimeCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"kiwibang"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"kiwibang"},"content":"        ListFreeTimeCommand temp \u003d (ListFreeTimeCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"kiwibang"},"content":"        return this.givenDay.equals(temp.givenDay);","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"jingjie88":6,"kiwibang":79}},{"path":"src/main/java/seedu/address/logic/commands/ListInterviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERVIEWS;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":" * Lists all interviews in the address book to the user.","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":" * Essentially used to reset the filters applied to the interview","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":" * Does not affect the display of ApplicantList at all","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" * (Can potentially be updated to display only the Applicants with Interviews if that is desired)","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3\u0027s ListCommand class","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"public class ListInterviewCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String COMMAND_WORD \u003d \"list-i\";","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all interviews\";","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"        logger.fine(\"Executing listing all interviews\");","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"        model.updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"JasonLCY-Temp":34}},{"path":"src/main/java/seedu/address/logic/commands/ListInterviewsDoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.InterviewIsDonePredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":" * Lists all done interviews in the address book to the user.","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"public class ListInterviewsDoneCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    public static final String COMMAND_WORD \u003d \"list-i-done\";","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Showing done interviews.\\nUse list-i to show all interviews.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"        logger.fine(\"Executing listing done interviews\");","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"        model.updateFilteredInterviewList(new InterviewIsDonePredicate());","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jingjie88":28}},{"path":"src/main/java/seedu/address/logic/commands/ListInterviewsNotDoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.InterviewNotDonePredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":" * Lists all undone interviews in the address book to the user.","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"public class ListInterviewsNotDoneCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    public static final String COMMAND_WORD \u003d \"list-i-not-done\";","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Showing interviews that are not done.\"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"            + \"\\nUse list-i to show all interviews.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"        logger.fine(\"Executing listing not done interviews\");","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"        model.updateFilteredInterviewList(new InterviewNotDonePredicate());","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jingjie88":29}},{"path":"src/main/java/seedu/address/logic/commands/ListInterviewsTodayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":" * Encapsulates the list interviews today command. This command","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":" * will list out the interview time based on the system time of the","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":" * user\u0027s machine.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":" *","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":" * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"public class ListInterviewsTodayCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"    public static final String COMMAND_WORD \u003d \"list-i-today\";","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all interviews today\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"    private static final Predicate\u003cInterview\u003e PREDICATE_SHOW_INTERVIEWS_TODAY \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"            interview -\u003e interview.getInterviewStartTime().isToday();","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"     * Will pass in the custom predicate specific to the list interviews today","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"     * command, which is to filter out all interviews that have the same date as","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"     * today\u0027s date.","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"     * @return the CommandResult object instance that stores the information on","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"     *         the result of executing the command","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"        logger.fine(\"Executing listing all interviews today\");","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"        model.updateFilteredInterviewList(PREDICATE_SHOW_INTERVIEWS_TODAY);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiwibang":46}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":" * Marks interview as done.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"            + \": Marks as done the interview identified by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_MARK_INTERVIEW_SUCCESS \u003d \"Marked Interview: %s as done.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    public static final String MESSAGE_ALREADY_DONE \u003d \"Interview: %s is already done.\";","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"     * @param targetIndex of the applicant in the filtered applicant list to edit","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"    public MarkCommand(Index targetIndex) {","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        List\u003cInterview\u003e lastShownList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"        Interview interviewToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        if (interviewToMark.isDone()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"            throw new CommandException(String.format(MESSAGE_ALREADY_DONE,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"                    Messages.formatInterview(interviewToMark)));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"        Interview markedInterview \u003d new Interview(","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"                interviewToMark.getInterviewApplicant(),","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"                interviewToMark.getJobRole(),","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"                interviewToMark.getRating(),","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"                interviewToMark.getInterviewStartTime(),","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"                interviewToMark.getInterviewEndTime(),","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"                true","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"        );","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"jingjie88"},"content":"        model.setInterview(interviewToMark, markedInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"                String.format(MESSAGE_MARK_INTERVIEW_SUCCESS, Messages.formatInterview(interviewToMark)));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"jingjie88":58,"kiwibang":3,"Chen1x":1}},{"path":"src/main/java/seedu/address/logic/commands/RateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//@@author jonxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Rate the interview with the given rating.","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class RateCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"rate\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Rate the interview identified by the index number used in the displayed interview list.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"RATING (must be a non-negative number with 1 decimal place between 0.0 to 5.0 inclusive)\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" 3.5\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_RATE_INTERVIEW_SUCCESS \u003d \"Rating Interview: %s is rated.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_DONE \u003d \"Interview: %s must be completed before rating.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Rating newRating;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param targetIndex of the interview in the filtered interview list to rate","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param rate of the rating to be set","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public RateCommand(Index targetIndex, Rating rate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.newRating \u003d rate;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cInterview\u003e lastShownList \u003d model.getFilteredInterviewList();","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Interview interviewToRate \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!interviewToRate.isDone()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(MESSAGE_NOT_DONE,","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    Messages.formatInterview(interviewToRate)));","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Interview ratedInterview \u003d new Interview(","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                interviewToRate.getInterviewApplicant(),","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                interviewToRate.getJobRole(),","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                newRating,","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                interviewToRate.getInterviewStartTime(),","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                interviewToRate.getInterviewEndTime(),","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                interviewToRate.isDone()","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.setInterview(interviewToRate, ratedInterview);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_RATE_INTERVIEW_SUCCESS, Messages.formatInterview(interviewToRate)));","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof RateCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        RateCommand otherRateCommand \u003d (RateCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherRateCommand.targetIndex)","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 newRating.equals(otherRateCommand.newRating);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .add(\"newRating\", newRating)","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Jonyxzx":14,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/SortRateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":" * Rate all interviews in descending order in the address book to the user.","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"public class SortRateCommand extends Command {","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"    public static final String COMMAND_WORD \u003d \"sort-rate\";","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Interviews are sorted by ratings successfully\";","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"    public final Comparator\u003cInterview\u003e comparator \u003d Comparator.comparing(Interview::getRating);","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"        model.sortInterviewList(comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"Jonyxzx":28}},{"path":"src/main/java/seedu/address/logic/commands/SortTimeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":" * Encapsulates a command which, when executed, will sort all","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":" * the interviews that the user has scheduled so far by ascending","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":" * order of start time","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":" *","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":" * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"public class SortTimeCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"    public static final String COMMAND_WORD \u003d \"sort-time\";","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Interviews are sorted by start times successfully\";","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"    public final Comparator\u003cInterview\u003e comparator \u003d Comparator.comparing(Interview::getInterviewStartTime);","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"     * Sorts the list of interviews based on the custom comparator which compares the start","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"     * time of two interviews.","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"     * @return the CommandResult instance associated with the execution of the method","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"        model.sortInterviewList(comparator);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiwibang":39}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"        Applicant applicant \u003d new Applicant(name, phone, email, address, tagList);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"        return new AddCommand(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jingjie88":7,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/AddInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICANT;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_ROLE;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":" * Parses input arguments and creates a new AddInterviewCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3\u0027s AddCommandParser class","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"public class AddInterviewCommandParser implements Parser\u003cAddInterviewCommand\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Parses the given {@code String} of arguments in the context of the AddInterviewCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"     * and returns an AddInterviewCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if the user input does not conform the","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"     *     expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    public AddInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_APPLICANT,","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"                        PREFIX_JOB_ROLE, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_APPLICANT, PREFIX_JOB_ROLE,","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"                PREFIX_START_TIME, PREFIX_END_TIME)","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_APPLICANT, PREFIX_JOB_ROLE,","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"                PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"        String applicantArgs \u003d argMultimap.getValue(PREFIX_APPLICANT).get().trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"        String jobRole \u003d argMultimap.getValue(PREFIX_JOB_ROLE).get().trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"        Time startTime \u003d TimeParser.parseDate(","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"                argMultimap.getValue(PREFIX_START_TIME).get().trim(),","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"                false);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"        Time endTime \u003d TimeParser.parseDate(","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"                argMultimap.getValue(PREFIX_END_TIME).get().trim(),","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"                false);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"        if (endTime.isBefore(startTime)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"            throw new ParseException(AddInterviewCommand.MESSAGE_INVALID_TIME);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"        Index applicantIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"            applicantIndex \u003d ParserUtil.parseIndex(applicantArgs);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"jingjie88"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"                    MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"        return new AddInterviewCommand(applicantIndex, jobRole, startTime, endTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":43,"jingjie88":23,"kiwibang":7}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.DeleteInterviewCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.EditInterviewCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.commands.ListFreeTimeCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.ListInterviewCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.ListInterviewsDoneCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.ListInterviewsNotDoneCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.commands.ListInterviewsTodayCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.RateCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.SortRateCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.commands.SortTimeCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"    @SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"Jonyxzx"},"content":"        case FindInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"Jonyxzx"},"content":"            return new FindInterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"        case AddInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"            return new AddInterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"        case DeleteInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"            return new DeleteInterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"Jonyxzx"},"content":"        case RateCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"Jonyxzx"},"content":"            return new RateCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"        case ListInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"            return new ListInterviewCommand();","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"kiwibang"},"content":"        case ListInterviewsTodayCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"kiwibang"},"content":"            return new ListInterviewsTodayCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"kiwibang"},"content":"        case ListFreeTimeCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"kiwibang"},"content":"            return new ListFreeTimeCommandParser().parse(arguments);","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"        case EditInterviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"            return new EditInterviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"JasonLCY-Temp"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"Jonyxzx"},"content":"        case SortRateCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"Jonyxzx"},"content":"            return new SortRateCommand();","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"kiwibang"},"content":"        case SortTimeCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"kiwibang"},"content":"            return new SortTimeCommand();","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"jingjie88"},"content":"        case ListInterviewsDoneCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"jingjie88"},"content":"            return new ListInterviewsDoneCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"jingjie88"},"content":"        case ListInterviewsNotDoneCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"jingjie88"},"content":"            return new ListInterviewsNotDoneCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jonyxzx":13,"JasonLCY-Temp":19,"jingjie88":9,"kiwibang":12,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"jingjie88"},"content":"     *  Returns false if no prefixes given in {@code prefixes} appear in the arguments,","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"     *  else returns true.","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"    public boolean argumentHasAtLeastOnePrefix(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"        return (Stream.of(prefixes).anyMatch(argMultimap::containsKey));","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"jingjie88":8,"-":78}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Prefix PREFIX_APPLICANT \u003d new Prefix(\"app/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Prefix PREFIX_JOB_ROLE \u003d new Prefix(\"jr/\");","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"start/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"end/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JasonLCY-Temp":2,"jingjie88":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.DeleteInterviewCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":" * Parses input arguments and creates a new DeleteInterviewCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3\u0027s AddCommandParser class","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"public class DeleteInterviewCommandParser implements Parser\u003cDeleteInterviewCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteInterviewCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"     * and returns a DeleteInterviewCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if the user input does not conform","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"     *     the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    public DeleteInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"        try {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"            return new DeleteInterviewCommand(index);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteInterviewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"JasonLCY-Temp":31}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"        EditCommand.EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"            editApplicantDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"            editApplicantDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"            editApplicantDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"            editApplicantDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editApplicantDescriptor::setTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"        if (!editApplicantDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"        return new EditCommand(index, editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jingjie88":9,"-":75}},{"path":"src/main/java/seedu/address/logic/parser/EditInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_ROLE;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.EditInterviewCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.EditInterviewCommand.EditInterviewDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":" * Parses input arguments and creates a new EditInterviewCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3s EditCommand Parser","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"public class EditInterviewCommandParser implements Parser\u003cEditInterviewCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if the user input","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"     *     does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"    public EditInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_JOB_ROLE, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"        Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditInterviewCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"                    pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_JOB_ROLE, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"        EditInterviewDescriptor editInterviewDescriptor \u003d new EditInterviewDescriptor();","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (argMultimap.getValue(PREFIX_JOB_ROLE).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"JasonLCY-Temp"},"content":"            editInterviewDescriptor.setJobRole(argMultimap.getValue(PREFIX_JOB_ROLE).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"        if (argMultimap.getValue(PREFIX_START_TIME).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"            editInterviewDescriptor.setStartTime(","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"                    TimeParser.parseDate(","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"kiwibang"},"content":"                            argMultimap.getValue(PREFIX_START_TIME).get(),","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"                            false","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"                    ));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"        if (argMultimap.getValue(PREFIX_END_TIME).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"            editInterviewDescriptor.setEndTime(","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"                    TimeParser.parseDate(","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"kiwibang"},"content":"                            argMultimap.getValue(PREFIX_END_TIME).get(), false));","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!editInterviewDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new ParseException(EditInterviewCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new EditInterviewCommand(index, editInterviewDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"JasonLCY-Temp":52,"jingjie88":9,"kiwibang":6}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.ApplicantPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.PhoneContainsNumberPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.TagsContainKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        NameContainsKeywordsPredicate namePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"        PhoneContainsNumberPredicate phonePredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"        EmailContainsKeywordsPredicate emailPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"        AddressContainsKeywordsPredicate addressPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"        TagsContainKeywordsPredicate tagsPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"        if (!argMultimap.argumentHasAtLeastOnePrefix(","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"        List\u003cPredicate\u003cApplicant\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"jingjie88"},"content":"            namePredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"                    parseFieldsForFind(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"            predicateList.add(namePredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"jingjie88"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"            phonePredicate \u003d new PhoneContainsNumberPredicate(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"jingjie88"},"content":"            predicateList.add(phonePredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"            emailPredicate \u003d new EmailContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"jingjie88"},"content":"                    parseFieldsForFind(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"            predicateList.add(emailPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"jingjie88"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"jingjie88"},"content":"            addressPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"                    parseFieldsForFind(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"jingjie88"},"content":"            predicateList.add(addressPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"jingjie88"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"            tagsPredicate \u003d new TagsContainKeywordsPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"jingjie88"},"content":"                    parseFieldsForFind(argMultimap.getValue(PREFIX_TAG).get()));","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"jingjie88"},"content":"            predicateList.add(tagsPredicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"        return new FindCommand(new ApplicantPredicate(predicateList));","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"jingjie88"},"content":"     * Parses space separated arguments into a list of strings containing each argument","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"jingjie88"},"content":"     * if the arguments are non-empty.","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"    private List\u003cString\u003e parseFieldsForFind(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"        assert args !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"        return Arrays.asList(trimmedArgs.split(\"[,\\\\s]+\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jingjie88":68,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/FindInterviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"public class FindInterviewCommandParser implements Parser\u003cFindInterviewCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"    public FindInterviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"        String[] jobKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"        return new FindInterviewCommand(new JobContainsKeywordsPredicate(Arrays.asList(jobKeywords)));","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":34}},{"path":"src/main/java/seedu/address/logic/parser/ListFreeTimeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.commands.ListFreeTimeCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":" * Encapsulates the parser for the ListFreeTimeCommand. Arguments parsed is a date.","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":" *","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":" * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"public class ListFreeTimeCommandParser implements Parser\u003cListFreeTimeCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"     * parses the list-freetime command.","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"    public ListFreeTimeCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"            Time givenDay \u003d TimeParser.parseDate(args, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"            return new ListFreeTimeCommand(givenDay);","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"                    String.format(pe.getMessage(),","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"                            ListFreeTimeCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiwibang":29}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"     * and returns an MarkCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"Jonyxzx":1,"jingjie88":27}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"Jonyxzx"},"content":"     * Parses a {@code String rating} into a {@code Rating}.","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"Jonyxzx"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"Jonyxzx"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"Jonyxzx"},"content":"     * @throws ParseException if the given {@code rating} is invalid.","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"Jonyxzx"},"content":"    public static Rating parseRating(String rate) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"Jonyxzx"},"content":"        requireNonNull(rate);","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"Jonyxzx"},"content":"        String trimmedRating \u003d rate.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"Jonyxzx"},"content":"        if (!Rating.isValidRating(trimmedRating)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"Jonyxzx"},"content":"            throw new ParseException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"Jonyxzx"},"content":"        return new Rating(trimmedRating);","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Jonyxzx":16,"jingjie88":4,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/RateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.RateCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":" * Parses input arguments and creates a new RateCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"public class RateCommandParser implements Parser\u003cRateCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"     * Parses the given {@code String} of arguments in the context of the RateCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"     * and returns an RateCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"    public RateCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        String[] keywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"        Index index;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"        Rating rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        if (keywords.length !\u003d 2) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"            index \u003d ParserUtil.parseIndex(keywords[0]);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"            rating \u003d ParserUtil.parseRating(keywords[1]);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"        return new RateCommand(index, rating);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Jonyxzx":48}},{"path":"src/main/java/seedu/address/logic/parser/TimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":" * This class encapsulates the methods that are part of the TimeParser API.","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":" *","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":" * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"public class TimeParser {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"    protected static final LocalDateTime DEFAULT_DATE \u003d LocalDateTime.of(1970, 1, 1, 0, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"    protected static final String[][] DATE_FORMATS \u003d new String[][] {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"            // time string with day and time (formatID \u003d\u003d 0)","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"            \"E HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"            \"E h\u0027.\u0027mma\",","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"            \"E ha\"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"            },","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"            // time with all required information: year, month, day of month, time (formatID \u003d\u003d 1)","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"            \"d MMM yyyy HHmm\",","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"            \"d MMM yyyy h\u0027.\u0027mma\",","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"            \"d MMM yyyy ha\",","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"            \"dd-MM-y HHmm\",","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"            \"dd-MM-y h\u0027.\u0027mma\",","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"            \"dd-MM-y ha\",","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"            \"d/M/y HHmm\",","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"            \"d/M/y hh\u0027.\u0027mma\",","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"            \"d/M/y ha\"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"            },","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"            // time with these information: month, day of month, time (formatID \u003d\u003d 2)","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"            \"dd MMM HHmm\",","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"            \"dd MMM hh\u0027.\u0027mma\",","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"            \"dd MMM ha\",","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"            \"d/M HHmm\",","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"            \"d/M hh\u0027.\u0027mma\",","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"            \"d/M ha\"","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"            },","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"            // correct format but string is missing the time (formatID \u003d\u003d 3)","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"            {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"            \"E\",","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"            \"y-MM-dd\",","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kiwibang"},"content":"            \"d/M/yy\",","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"            \"d/M/yyyy\",","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"            \"d/M/y\",","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"            \"MMM dd\",","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"            \"dd MMM\",","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"            \"d/M\"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"            },","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"kiwibang"},"content":"    };","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"    protected static final String[][] DATE_ONLY_FORMATS \u003d new String[][] {","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"kiwibang"},"content":"            // time string with day (formatID \u003d\u003d 0)","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"kiwibang"},"content":"            {","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"kiwibang"},"content":"            \"E\"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"kiwibang"},"content":"            },","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"kiwibang"},"content":"            // time with all required information: year, month, day of month (formatID \u003d\u003d 1)","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"kiwibang"},"content":"            {","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"kiwibang"},"content":"            \"d MMM yyyy\",","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"kiwibang"},"content":"            \"dd-MM-y\",","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"kiwibang"},"content":"            \"d/M/y\"","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"kiwibang"},"content":"            },","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"kiwibang"},"content":"            // time with these information: month, day of month, time (formatID \u003d\u003d 2)","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"kiwibang"},"content":"            {","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"kiwibang"},"content":"            \"dd MMM\",","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"kiwibang"},"content":"            \"d/M\"","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"kiwibang"},"content":"            },","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"kiwibang"},"content":"    };","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"kiwibang"},"content":"    protected static final String MISSING_TIME_ERROR_MESSAGE \u003d \"Please enter an interview time!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"kiwibang"},"content":"     * Converts the string date into a LocalDatetime object. Only accepts valid time Strings","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"kiwibang"},"content":"     * that have time as their suffix.","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"kiwibang"},"content":"     * @param time the String that contains the data for the date","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"kiwibang"},"content":"     * @return datetime object that represents the string","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"kiwibang"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException when the time String is not valid","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"kiwibang"},"content":"    public static Time parseDate(String time, boolean dateOnly)","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"kiwibang"},"content":"            throws seedu.address.logic.parser.exceptions.ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"kiwibang"},"content":"        String[][] formatList \u003d dateOnly ? DATE_ONLY_FORMATS : DATE_FORMATS;","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"kiwibang"},"content":"        for (int currentFormatID \u003d 0; currentFormatID \u003c formatList.length; currentFormatID++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"kiwibang"},"content":"            // find a date format string that matches the user pattern","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"kiwibang"},"content":"            for (String formatString : formatList[currentFormatID]) {","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"kiwibang"},"content":"                try {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"kiwibang"},"content":"                    SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(formatString);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"kiwibang"},"content":"                    simpleDateFormat.setLenient(false);","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"kiwibang"},"content":"                    LocalDateTime temp \u003d simpleDateFormat","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"kiwibang"},"content":"                            .parse(time)","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"kiwibang"},"content":"                            .toInstant()","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"kiwibang"},"content":"                            .atZone(ZoneId.systemDefault())","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"kiwibang"},"content":"                            .toLocalDateTime();","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"kiwibang"},"content":"                    Time res \u003d new Time(addMissingDateFields(temp, currentFormatID, dateOnly));","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"kiwibang"},"content":"                    if (res.getDate().getYear() \u003e 9999) {","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"kiwibang"},"content":"                        throw new seedu.address.logic.parser.exceptions.ParseException(\"Please specify a valid date!\");","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"kiwibang"},"content":"                    }","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"kiwibang"},"content":"                    return res;","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"kiwibang"},"content":"                } catch (ParseException ignored) {","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"kiwibang"},"content":"                    String s \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"kiwibang"},"content":"                }","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"kiwibang"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"kiwibang"},"content":"        throw new seedu.address.logic.parser.exceptions.ParseException(\"Please specify a valid date!\");","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"kiwibang"},"content":"     * Appends missing date fields depending on what the user typed in.","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"kiwibang"},"content":"     * @param temp the LocalDateTime object to modify","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"kiwibang"},"content":"     * @param currentFormatID the given type of date object","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"kiwibang"},"content":"     * @return a LocalDateTime object that has all the required information","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"kiwibang"},"content":"    private static LocalDateTime addMissingDateFields(LocalDateTime temp, int currentFormatID, boolean dateOnly)","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"kiwibang"},"content":"            throws seedu.address.logic.parser.exceptions.ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"kiwibang"},"content":"        switch (currentFormatID) {","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"kiwibang"},"content":"        case 0: // case where user entered a day of the week and time","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"kiwibang"},"content":"            temp \u003d addDay(temp);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"kiwibang"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"kiwibang"},"content":"        case 1: // case where user entered a year, month, day of month, and time","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"kiwibang"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"kiwibang"},"content":"        case 2: // case where the user entered a month, day of month, and time","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"kiwibang"},"content":"            temp \u003d addYear(temp);","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"kiwibang"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"kiwibang"},"content":"        default: // case where the user did not enter an interview time","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"kiwibang"},"content":"            // inform the user that their input is missing an interview time","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"kiwibang"},"content":"            if (!dateOnly) {","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"kiwibang"},"content":"                throw new seedu.address.logic.parser.exceptions.ParseException(MISSING_TIME_ERROR_MESSAGE);","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"kiwibang"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"kiwibang"},"content":"            // exit normally if the user does not need a time","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"kiwibang"},"content":"            break;","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"kiwibang"},"content":"        return temp;","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"kiwibang"},"content":"     * Adds the year to the date object.","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"kiwibang"},"content":"     * @param time the LocalDateTime object that represents start dates, or deadlines","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"kiwibang"},"content":"     * @return the modified LocalDateTime object","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"kiwibang"},"content":"    private static LocalDateTime addYear(LocalDateTime time) {","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"kiwibang"},"content":"        assert time !\u003d null : \"time should be not null\";","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"kiwibang"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"kiwibang"},"content":"        int yearsElapsed \u003d now.getYear() - DEFAULT_DATE.getYear();","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"kiwibang"},"content":"        // update the year by adding to the current year","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"kiwibang"},"content":"        // why: this method is called when the input date does not have a year","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"kiwibang"},"content":"        LocalDateTime res \u003d time.plusYears(yearsElapsed);","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"kiwibang"},"content":"        while (now.isAfter(res)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"kiwibang"},"content":"            res \u003d res.plusYears(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"kiwibang"},"content":"        return res;","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"kiwibang"},"content":"     * Adds the day to the date object.","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"kiwibang"},"content":"     * @param time the LocalDateTime object that represents start dates, or deadlines","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"kiwibang"},"content":"     * @return the modified LocalDateTime object","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"kiwibang"},"content":"    private static LocalDateTime addDay(LocalDateTime time)","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"kiwibang"},"content":"            throws seedu.address.logic.parser.exceptions.ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"kiwibang"},"content":"        assert time !\u003d null : \"time should be not null\";","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"kiwibang"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"kiwibang"},"content":"        int defaultDay \u003d DEFAULT_DATE.getDayOfWeek().getValue();","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"kiwibang"},"content":"        int timeDay \u003d time.getDayOfWeek().getValue();","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"kiwibang"},"content":"        int daysElapsed \u003d timeDay \u003e\u003d defaultDay ? timeDay - defaultDay : 7 - defaultDay + timeDay;","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"kiwibang"},"content":"        // update the current date by the number of days","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"kiwibang"},"content":"        LocalDateTime res \u003d now.plusDays(daysElapsed);","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"kiwibang"},"content":"        // guard clause: the user did not specify an interview time","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"kiwibang"},"content":"        if (time.getHour() \u003d\u003d 0 \u0026\u0026 time.getMinute() \u003d\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"kiwibang"},"content":"            throw new seedu.address.logic.parser.exceptions.ParseException(MISSING_TIME_ERROR_MESSAGE);","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"kiwibang"},"content":"        return res.withHour(time.getHour()).withMinute(time.getMinute());","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"kiwibang"},"content":"     * Formats the time String.","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"kiwibang"},"content":"     * @param time the given LocalDateTime object to format","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"kiwibang"},"content":"     * @return the string form of the LocalDateTime object","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"kiwibang"},"content":"    public static String formatDate(LocalDateTime time) {","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"kiwibang"},"content":"        assert time !\u003d null : \"time should be not null\";","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"kiwibang"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":197,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":198,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"kiwibang":198}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.UniqueApplicantList;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.UniqueInterviewList;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":" * Duplicates are not allowed (by .isSameApplicant and .isNotValidOrNewInterview comparison)","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"    private final UniqueApplicantList applicants;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final UniqueInterviewList interviews;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"        applicants \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"        interviews \u003d new UniqueInterviewList();","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"     * Creates an AddressBook using the Applicants in the {@code toBeCopied}","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"     * Replaces the contents of the applicant list with {@code applicants}.","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"        this.applicants.setApplicants(applicants);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Replaces the contents of the interview list with {@code interviews}.","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"     * {@code interviews} must not contain duplicate applicants.","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.interviews.setInterviews(interviews);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"jingjie88"},"content":"        setApplicants(newData.getApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"        setInterviews(newData.getInterviewList());","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"jingjie88"},"content":"    //// applicant-level operations","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"jingjie88"},"content":"     * Returns true if a applicant with the same identity as {@code applicant} exists in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"        return applicants.contains(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"jingjie88"},"content":"     * Adds a applicant to the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"jingjie88"},"content":"     * The applicant must not already exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"    public void addApplicant(Applicant p) {","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"        applicants.add(p);","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"     * Replaces the given applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"     * The applicant identity of {@code editedApplicant} must not","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"     * be the same as another existing applicant in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"jingjie88"},"content":"        applicants.setApplicant(target, editedApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"jingjie88"},"content":"    public void removeApplicant(Applicant key) {","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"jingjie88"},"content":"        applicants.remove(key);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"    //// interview-level operations","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if an interview with the same identity as {@code interview} exists in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"        return interviews.contains(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"jingjie88"},"content":"     * Returns true if an interview with a timing that clashes with {@code interview}","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"     * exists in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"jingjie88"},"content":"    public boolean hasInterviewClash(Interview interview) {","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(interview);","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"jingjie88"},"content":"        return interviews.anyClash(interview);","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Adds an interview to the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The interview must not already exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void addInterview(Interview i) {","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"        interviews.add(i);","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"jingjie88"},"content":"     * Replaces the given interview {@code target} in the list with {@code editedInterview}.","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"jingjie88"},"content":"     * The interview identity of {@code editedInterview} must not be","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"jingjie88"},"content":"     * the same as another existing applicant in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"jingjie88"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(editedInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"jingjie88"},"content":"        interviews.setInterview(target, editedInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"jingjie88"},"content":"    public void removeInterview(Interview key) {","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"jingjie88"},"content":"        interviews.remove(key);","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"jingjie88"},"content":"     * Finds the interview that contains the applicant and returns it.","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"jingjie88"},"content":"     * Returns null if the applicant does not have an interview.","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"jingjie88"},"content":"     * {@code applicant} must exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"jingjie88"},"content":"    public Interview findInterviewWithApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"jingjie88"},"content":"        for (Interview interview : getInterviewList()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"jingjie88"},"content":"            if (interview.getInterviewApplicant().equals(applicant)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"jingjie88"},"content":"                return interview;","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"jingjie88"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"jingjie88"},"content":"        return null;","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"Jonyxzx"},"content":"     * Sorts the interview list of the address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"Jonyxzx"},"content":"     * The interviews list will be sorted based on the comparator","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"Jonyxzx"},"content":"    public void sortInterview(Comparator\u003cInterview\u003e comparator) {","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"Jonyxzx"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"Jonyxzx"},"content":"        interviews.sort(comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"kiwibang"},"content":"     * Lists the pockets of time on a given day.","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"kiwibang"},"content":"     * @param day the day to list pockets of time on","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"kiwibang"},"content":"     * @return a list of pockets of time available on the given day","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"kiwibang"},"content":"    List\u003cPair\u003cTime, Time\u003e\u003e listPocketsOfTimeOnGivenDay(Time day) {","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"kiwibang"},"content":"        Time startOfWorkDay \u003d new Time(LocalDateTime.of(","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"kiwibang"},"content":"                day.getDate().getYear(),","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"kiwibang"},"content":"                day.getDate().getMonth(),","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"kiwibang"},"content":"                day.getDate().getDayOfMonth(),","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"kiwibang"},"content":"                Time.WORK_START.getHour(),","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"kiwibang"},"content":"                0","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"kiwibang"},"content":"                ));","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"kiwibang"},"content":"        Time endOfWorkDay \u003d new Time(LocalDateTime.of(","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"kiwibang"},"content":"                day.getDate().getYear(),","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"kiwibang"},"content":"                day.getDate().getMonth(),","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"kiwibang"},"content":"                day.getDate().getDayOfMonth(),","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"kiwibang"},"content":"                Time.WORK_END.getHour(),","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"kiwibang"},"content":"                0","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"kiwibang"},"content":"        ));","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"kiwibang"},"content":"        // get the list of interviews on the given day","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"kiwibang"},"content":"        List\u003cInterview\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"kiwibang"},"content":"        for (Interview value : interviews) {","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"kiwibang"},"content":"            temp.add(value);","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"kiwibang"},"content":"        // sort the interviews in ascending order of start time","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"kiwibang"},"content":"        temp.sort(Comparator.comparing(Interview::getInterviewStartTime));","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"kiwibang"},"content":"        // track the previous end time, initialized to the start of the workday","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"kiwibang"},"content":"        Time prevEnd \u003d startOfWorkDay;","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"kiwibang"},"content":"        List\u003cPair\u003cTime, Time\u003e\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"kiwibang"},"content":"        // loop over the sorted interviews list","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"kiwibang"},"content":"        for (Interview interview : temp) {","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"kiwibang"},"content":"            // get the start and end time of the current interview","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"kiwibang"},"content":"            Time currentInterviewStart \u003d interview.getInterviewStartTime();","lastModifiedDate":"2023-11-02"},{"lineNumber":223,"author":{"gitId":"kiwibang"},"content":"            Time currentInterviewEnd \u003d interview.getInterviewEndTime();","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"kiwibang"},"content":"            // case 1: the workday is completely overlapped by the interview","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"kiwibang"},"content":"            if (currentInterviewStart.isBefore(startOfWorkDay)","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"kiwibang"},"content":"                    \u0026\u0026 currentInterviewEnd.isAfter(endOfWorkDay)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"kiwibang"},"content":"                prevEnd \u003d currentInterviewEnd;","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"kiwibang"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"kiwibang"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"kiwibang"},"content":"            // case 2: the workday is outside and before the workday","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"kiwibang"},"content":"            if (currentInterviewEnd.isBefore(startOfWorkDay)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"kiwibang"},"content":"                continue;","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"kiwibang"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"kiwibang"},"content":"            // case 3: the workday is outside and after the workday","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"kiwibang"},"content":"            if (currentInterviewStart.isAfter(endOfWorkDay)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"kiwibang"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"kiwibang"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"kiwibang"},"content":"            // case 4: the interview\u0027s start point is before the start of workday","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"kiwibang"},"content":"            // and the interview\u0027s end point is after the start of the workday","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"kiwibang"},"content":"            if (currentInterviewStart.isBefore(startOfWorkDay)","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"kiwibang"},"content":"                    \u0026\u0026 currentInterviewEnd.isAfter(startOfWorkDay)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"kiwibang"},"content":"                prevEnd \u003d currentInterviewEnd;","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"kiwibang"},"content":"                continue;","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"kiwibang"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"kiwibang"},"content":"            // get the current block of free time by taking the end of the last interval","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"kiwibang"},"content":"            // and the start of the current interval","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"kiwibang"},"content":"            if (!prevEnd.equals(currentInterviewStart)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"kiwibang"},"content":"                res.add(new Pair\u003c\u003e(prevEnd, currentInterviewStart));","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"kiwibang"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"kiwibang"},"content":"            prevEnd \u003d currentInterviewEnd;","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"kiwibang"},"content":"        // add stray free time, if any","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"kiwibang"},"content":"        if (prevEnd.isBefore(endOfWorkDay)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"kiwibang"},"content":"            res.add(new Pair\u003c\u003e(prevEnd, endOfWorkDay));","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"kiwibang"},"content":"        return res;","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":265,"author":{"gitId":"jingjie88"},"content":"                .add(\"applicants\", applicants)","lastModifiedDate":"2023-10-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"jingjie88"},"content":"    public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":271,"author":{"gitId":"jingjie88"},"content":"        return applicants.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":274,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":275,"author":{"gitId":"JasonLCY-Temp"},"content":"    public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":276,"author":{"gitId":"JasonLCY-Temp"},"content":"        return interviews.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":291,"author":{"gitId":"jingjie88"},"content":"        return applicants.equals(otherAddressBook.applicants)","lastModifiedDate":"2023-10-19"},{"lineNumber":292,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 interviews.equals(otherAddressBook.interviews);","lastModifiedDate":"2023-10-19"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":297,"author":{"gitId":"jingjie88"},"content":"        return applicants.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":299,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jonyxzx":11,"JasonLCY-Temp":25,"jingjie88":68,"kiwibang":75,"-":121}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"    Predicate\u003cApplicant\u003e PREDICATE_SHOW_ALL_APPLICANTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    Predicate\u003cInterview\u003e PREDICATE_SHOW_ALL_INTERVIEWS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"     * Returns true if a applicant with the same identity as {@code applicant} exists in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"    boolean hasApplicant(Applicant applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"     * Deletes the given applicant.","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"     * The applicant must exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"    void deleteApplicant(Applicant target);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"jingjie88"},"content":"     * Adds the given applicant.","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"     * {@code applicant} must not already exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"jingjie88"},"content":"    void addApplicant(Applicant applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"Chen1x"},"content":"     * Replaces the given applicant {@code target} with {@code editedApplicant}.","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"Chen1x"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"     * as another existing applicant in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"    void setApplicant(Applicant target, Applicant editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"    /** Returns an unmodifiable view of the filtered applicant list */","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"jingjie88"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"Jonyxzx"},"content":"    /** Returns an unmodifiable view of the filtered interview list */","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"Jonyxzx"},"content":"    ObservableList\u003cInterview\u003e getFilteredInterviewList();","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"jingjie88"},"content":"     * Updates the filter of the filtered applicant list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"    void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if an Interview with the same attributes as {@code interview} exists in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"    boolean hasInterview(Interview interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"jingjie88"},"content":"     * Returns true if an interview with a timing that clashes with {@code interview}","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"jingjie88"},"content":"     * exists in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"jingjie88"},"content":"    public boolean hasInterviewClash(Interview interview);","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Adds the given interview.","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code interview} must not already exist in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"    void addInterview(Interview interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"jingjie88"},"content":"     * Replaces the given interview {@code target} with {@code editedInterview}.","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"jingjie88"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"jingjie88"},"content":"     * The interview identity of {@code interview} must not be the","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"jingjie88"},"content":"     * same as another existing interview in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"jingjie88"},"content":"    void setInterview(Interview target, Interview editedInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Deletes the given interview.","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The interview must exist in the address book.","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"    void deleteInterview(Interview target);","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Updates the filter of the filtered interview list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"JasonLCY-Temp"},"content":"    void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"Jonyxzx"},"content":"     * Sorts the filtered interview list to compare by the given {@code comparator}.","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"Jonyxzx"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"Jonyxzx"},"content":"    void sortInterviewList(Comparator\u003cInterview\u003e comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"kiwibang"},"content":"     * Lists the pockets of time on a given day.","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"kiwibang"},"content":"    List\u003cPair\u003cTime, Time\u003e\u003e listPocketsOfTimeOnGivenDay(Time day);","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Jonyxzx":9,"JasonLCY-Temp":25,"jingjie88":30,"kiwibang":7,"-":71,"Chen1x":2}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"    private final FilteredList\u003cApplicant\u003e filteredApplicants;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final FilteredList\u003cInterview\u003e filteredInterviews;","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.addressBook.getApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"        filteredInterviews \u003d new FilteredList\u003c\u003e(this.addressBook.getInterviewList());","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook Applicants \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"        return addressBook.hasApplicant(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"jingjie88"},"content":"    public void deleteApplicant(Applicant target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"jingjie88"},"content":"        if (target.hasInterview()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"jingjie88"},"content":"            Interview interviewWithTarget \u003d addressBook.findInterviewWithApplicant(target);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"jingjie88"},"content":"            addressBook.removeInterview(interviewWithTarget);","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"jingjie88"},"content":"        addressBook.removeApplicant(target);","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"jingjie88"},"content":"    public void addApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"jingjie88"},"content":"        addressBook.addApplicant(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"jingjie88"},"content":"        updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"jingjie88"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"jingjie88"},"content":"        if (target.hasInterview()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"jingjie88"},"content":"            Interview interviewWithTarget \u003d addressBook.findInterviewWithApplicant(target);","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"jingjie88"},"content":"            Interview interviewWithEditedApplicant \u003d new Interview(","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"                    editedApplicant,","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"jingjie88"},"content":"                    interviewWithTarget.getJobRole(),","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"kiwibang"},"content":"                    interviewWithTarget.getInterviewStartTime(),","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"kiwibang"},"content":"                    interviewWithTarget.getInterviewEndTime()","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"jingjie88"},"content":"            );","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"jingjie88"},"content":"            addressBook.setInterview(interviewWithTarget, interviewWithEditedApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"jingjie88"},"content":"        addressBook.setApplicant(target, editedApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook Interviews \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean hasInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"        return addressBook.hasInterview(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"jingjie88"},"content":"    public boolean hasInterviewClash(Interview interview) {","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(interview);","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"jingjie88"},"content":"        return addressBook.hasInterviewClash(interview);","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void addInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"JasonLCY-Temp"},"content":"        addressBook.addInterview(interview);","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"JasonLCY-Temp"},"content":"        updateFilteredInterviewList(PREDICATE_SHOW_ALL_INTERVIEWS);","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"jingjie88"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"jingjie88"},"content":"        requireAllNonNull(target, editedInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"jingjie88"},"content":"        addressBook.setInterview(target, editedInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void deleteInterview(Interview target) {","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"JasonLCY-Temp"},"content":"        Applicant applicantToUpdate \u003d target.getInterviewApplicant();","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"JasonLCY-Temp"},"content":"        addressBook.setApplicant(applicantToUpdate, applicantToUpdate.getApplicantWithoutInterview());","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"JasonLCY-Temp"},"content":"        addressBook.removeInterview(target);","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"kiwibang"},"content":"     * Lists the pockets of time on a given day.","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"kiwibang"},"content":"     * @param day the day to list pockets of time on","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"kiwibang"},"content":"     * @return a list of pockets of time available on the given day","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"kiwibang"},"content":"    public List\u003cPair\u003cTime, Time\u003e\u003e listPocketsOfTimeOnGivenDay(Time day) {","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"kiwibang"},"content":"        return addressBook.listPocketsOfTimeOnGivenDay(day);","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"jingjie88"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Applicant and Interview List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":184,"author":{"gitId":"Chen1x"},"content":"     * Returns an unmodifiable view of the list of {@code Applicant} backed by the internal list of","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"jingjie88"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"jingjie88"},"content":"        return filteredApplicants;","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":193,"author":{"gitId":"Jonyxzx"},"content":"     * Returns an unmodifiable view of the list of {@code Job} backed by the internal list of","lastModifiedDate":"2023-10-14"},{"lineNumber":194,"author":{"gitId":"Jonyxzx"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-14"},{"lineNumber":195,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":197,"author":{"gitId":"Jonyxzx"},"content":"    public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":198,"author":{"gitId":"Jonyxzx"},"content":"        return filteredInterviews;","lastModifiedDate":"2023-10-14"},{"lineNumber":199,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":200,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":202,"author":{"gitId":"jingjie88"},"content":"    public void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":204,"author":{"gitId":"jingjie88"},"content":"        filteredApplicants.setPredicate(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":207,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":208,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":210,"author":{"gitId":"JasonLCY-Temp"},"content":"        filteredInterviews.setPredicate(predicate);","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":212,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"Jonyxzx"},"content":"    public void sortInterviewList(Comparator\u003cInterview\u003e comparator) {","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"Jonyxzx"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"Jonyxzx"},"content":"        this.addressBook.sortInterview(comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 filteredApplicants.equals(otherModelManager.filteredApplicants)","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 filteredInterviews.equals(otherModelManager.filteredInterviews);","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jonyxzx":13,"JasonLCY-Temp":25,"jingjie88":45,"kiwibang":13,"-":139,"Chen1x":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"     * Returns an unmodifiable view of the applicants list.","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":"     * This list will not contain any duplicate applicants.","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    ObservableList\u003cApplicant\u003e getApplicantList();","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    ObservableList\u003cInterview\u003e getInterviewList();","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JasonLCY-Temp":1,"jingjie88":3,"-":13,"Chen1x":2}},{"path":"src/main/java/seedu/address/model/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.interview.UniqueInterviewList;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":" * Class which stores methods related to time, but are not related","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":" * to parsing dates.","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":" *","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":" * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"public class Time implements Comparable\u003cTime\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"    public static final LocalTime WORK_START \u003d LocalTime.of(9, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"    public static final LocalTime WORK_END \u003d LocalTime.of(17, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"    /*","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"     * Instance-level Time fields","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"     * Constructs a Time instance based on the input LocalDateTime.","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"     * @param time the LocalDateTime to represent with the Time instance","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"    public Time(LocalDateTime time) {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"     * Checks whether two LocalDateTimes are the same.","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"    public boolean isSameDay(Time otherTime) {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"        return this.time.toLocalDate().equals(otherTime.getDate());","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"     * Checks whether the given LocalDateTime so happens to be today.","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"    public boolean isToday() {","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"        return isSameDay(new Time(LocalDateTime.now()));","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"kiwibang"},"content":"     * Sorts the list of interviews in ascending chronological order.","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"kiwibang"},"content":"    public static List\u003cInterview\u003e sortInterviewsInChronologicalAscendingOrder(UniqueInterviewList interviews) {","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"kiwibang"},"content":"        List\u003cInterview\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"kiwibang"},"content":"        for (Interview interview : interviews) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"kiwibang"},"content":"            res.add(interview);","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"kiwibang"},"content":"        res.sort(Comparator.comparing(Interview::getInterviewStartTime));","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"kiwibang"},"content":"        return res;","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"kiwibang"},"content":"     * Compares the other given time to this instance.","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"kiwibang"},"content":"     * @param otherTime the other time to compare with this instance","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"kiwibang"},"content":"    public int compareTo(Time otherTime) {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kiwibang"},"content":"        return this.time.compareTo(otherTime.time);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"kiwibang"},"content":"     * Checks whether this instance is before the given time.","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"kiwibang"},"content":"     * @param otherTime the other time to compare to","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"kiwibang"},"content":"     * @return true if this instance is before the otherTime, false otherwise","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"kiwibang"},"content":"    public boolean isBefore(Time otherTime) {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"kiwibang"},"content":"        return this.time.isBefore(otherTime.time);","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"     * Returns true if this Time instance is after the given time.","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"    public boolean isAfter(Time otherTime) {","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"        return this.time.isAfter(otherTime.time);","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"     * Returns true if this Time instance is between the given time,","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"jingjie88"},"content":"     * exclusive of the start and end time.","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"jingjie88"},"content":"    public boolean isBetween(Time start, Time end) {","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"jingjie88"},"content":"        return isAfter(start) \u0026\u0026 isBefore(end);","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"kiwibang"},"content":"     * Returns true if startTime and endTime are within working hours,","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"kiwibang"},"content":"     * which is defined to be between 0900 and 1700.","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Jing Jie, Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"kiwibang"},"content":"     * @return true if within the working hours, false otherwise","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"kiwibang"},"content":"    public boolean isWithinWorkingHours() {","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"kiwibang"},"content":"        LocalTime timeFields \u003d this.time.toLocalTime();","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"kiwibang"},"content":"        return (timeFields.isAfter(WORK_START) || timeFields.equals(WORK_START))","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"kiwibang"},"content":"                \u0026\u0026 (timeFields.isBefore(WORK_END) || timeFields.equals(WORK_END));","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"jingjie88"},"content":"     * Returns true if the time field\u0027s datetime is before the current datetime.","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"    public boolean isPast() {","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"jingjie88"},"content":"        return time.isBefore(LocalDateTime.now());","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":130,"author":{"gitId":"jingjie88"},"content":"     * Returns true if the time field\u0027s date is before the current date.","lastModifiedDate":"2023-11-06"},{"lineNumber":131,"author":{"gitId":"jingjie88"},"content":"     * Only compares date without the time.","lastModifiedDate":"2023-11-06"},{"lineNumber":132,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":133,"author":{"gitId":"jingjie88"},"content":"    public boolean isPastDate() {","lastModifiedDate":"2023-11-06"},{"lineNumber":134,"author":{"gitId":"jingjie88"},"content":"        return time.toLocalDate().isBefore(LocalDate.now());","lastModifiedDate":"2023-11-06"},{"lineNumber":135,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":136,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":137,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"kiwibang"},"content":"     * Returns the time associated with the current Time instance.","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"kiwibang"},"content":"     * @return a LocalTime object instance containing the time of the current instance","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"kiwibang"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"kiwibang"},"content":"        return this.time.toLocalTime();","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"kiwibang"},"content":"     * Returns the date associated with the current Time instance.","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"kiwibang"},"content":"     * @return a LocalDate object instance containing the date of the current instance","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"kiwibang"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"kiwibang"},"content":"        return this.time.toLocalDate();","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"kiwibang"},"content":"     * Returns the date and time associated with the current Time instance.","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"kiwibang"},"content":"     * @return a copy of the LocalTime object instance containing the date and time of the current instance","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"kiwibang"},"content":"    public LocalDateTime getDateAndTime() {","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"kiwibang"},"content":"        return this.time.plusDays(0);","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"kiwibang"},"content":"     * Checks if the given Object instance is equals to","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"kiwibang"},"content":"     * this Time instance.","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"kiwibang"},"content":"     * @param otherObject the other object to compare to","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"kiwibang"},"content":"     * @return true if this Time instance is equals, and false otherwise","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"kiwibang"},"content":"    public boolean equals(Object otherObject) {","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"kiwibang"},"content":"        if (this \u003d\u003d otherObject) {","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"kiwibang"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"kiwibang"},"content":"        // guard clause: the given object does not have a run time type of Time","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"kiwibang"},"content":"        if (!(otherObject instanceof Time)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"kiwibang"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"kiwibang"},"content":"        // else, we know the given object is an instance of time,","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"kiwibang"},"content":"        // hence, it is safe to cast to Time","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"kiwibang"},"content":"        return this.time.equals(((Time) otherObject).time);","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"kiwibang"},"content":"     * Returns the hashcode of the current Time instance. Effectively returns","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"kiwibang"},"content":"     * the hashcode of the time field.","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"kiwibang"},"content":"     * @return the hashcode of the current Time instance","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"kiwibang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"kiwibang"},"content":"        return this.time.hashCode();","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"kiwibang"},"content":"     * Returns the String representation of the Time instance. Effectively returns the String","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"kiwibang"},"content":"     * representation of the String since the Time class is merely a wrapper class for Time.","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"kiwibang"},"content":"     * @return the String representation of the Time object","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"kiwibang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"kiwibang"},"content":"        return this.time.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"jingjie88":30,"kiwibang":182}},{"path":"src/main/java/seedu/address/model/applicant/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":" * Represents a Applicant\u0027s address in the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jingjie88":1,"-":63,"Chen1x":1}},{"path":"src/main/java/seedu/address/model/applicant/Applicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":" * Represents an applicant in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"public class Applicant {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    private final boolean hasInterview;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"     * Default constructor for Applicant object.","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"    public Applicant(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"        this.hasInterview \u003d false;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"     * Alternative constructor for creating Applicant objects from storage","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"    public Applicant(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, boolean hasInterview) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"        this.hasInterview \u003d hasInterview;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Obtains an Applicant object with the same details as the current Applicant, except hasInterview which is always","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"     *     set to false.","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @return A new Applicant object with the same details except for hasInterview which is always false.","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Applicant getApplicantWithoutInterview() {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new Applicant(name, phone, email, address, tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"    public boolean hasInterview() {","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"        return hasInterview;","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"Chen1x"},"content":"     * Returns true if both applicants have the same name.","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"Chen1x"},"content":"     * This defines a weaker notion of equality between two applicants.","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"    public boolean isSameApplicant(Applicant otherApplicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"        if (otherApplicant \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"jingjie88"},"content":"        return otherApplicant !\u003d null","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 otherApplicant.getName().equals(getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"Chen1x"},"content":"     * Returns true if both applicants have the same identity and data fields.","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"Chen1x"},"content":"     * This defines a stronger notion of equality between two applicants.","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"jingjie88"},"content":"        if (!(other instanceof Applicant)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"jingjie88"},"content":"        Applicant otherApplicant \u003d (Applicant) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"jingjie88"},"content":"        return name.equals(otherApplicant.name)","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 phone.equals(otherApplicant.phone)","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 email.equals(otherApplicant.email)","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 address.equals(otherApplicant.address)","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 tags.equals(otherApplicant.tags)","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"jingjie88"},"content":"                \u0026\u0026 hasInterview \u003d\u003d otherApplicant.hasInterview;","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"jingjie88"},"content":"                .add(\"hasInterview\", hasInterview)","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JasonLCY-Temp":9,"jingjie88":38,"-":98,"Chen1x":4}},{"path":"src/main/java/seedu/address/model/applicant/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":" * Represents a Applicant\u0027s email in the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"     * Returns local part of the email.","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"    public String getLocalPart() {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"jingjie88"},"content":"        return value.split(\"@\")[0];","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"jingjie88"},"content":"     * Returns domain of email.","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"jingjie88"},"content":"    public String getDomain() {","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"        return value.split(\"@\")[1].split(\"\\\\.\")[0];","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jingjie88":15,"-":76,"Chen1x":1}},{"path":"src/main/java/seedu/address/model/applicant/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":" * Represents a Applicant\u0027s name in the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jingjie88":1,"-":65,"Chen1x":1}},{"path":"src/main/java/seedu/address/model/applicant/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":" * Represents a Applicant\u0027s phone number in the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jingjie88":1,"-":58,"Chen1x":1}},{"path":"src/main/java/seedu/address/model/applicant/UniqueApplicantList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":" * A list of applicants that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":" * A applicant is considered unique by comparing using","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":" * {@code Applicant#isSameApplicant(Applicant)}. As such, adding and updating of","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":" * applicants uses Applicant#isSameApplicant(Applicant) for equality so as to ensure","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":" * that the applicant being added or updated is","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":" * unique in terms of identity in the UniqueApplicantList. However, the removal of a applicant","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":" * uses Applicant#equals(Object) so as to ensure that the applicant with exactly the same fields will be removed.","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":" * @see Applicant#isSameApplicant(Applicant)","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"public class UniqueApplicantList implements Iterable\u003cApplicant\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"    private final ObservableList\u003cApplicant\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"    private final ObservableList\u003cApplicant\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"     * Returns true if the list contains an equivalent applicant as the given argument.","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"    public boolean contains(Applicant toCheck) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"        return internalList.stream().anyMatch(toCheck::isSameApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"     * Adds a applicant to the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"     * The applicant must not already exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"    public void add(Applicant toAdd) {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"     * Replaces the applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"        if (!target.isSameApplicant(editedApplicant) \u0026\u0026 contains(editedApplicant)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"jingjie88"},"content":"        internalList.set(index, editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"jingjie88"},"content":"     * Removes the equivalent applicant from the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"jingjie88"},"content":"     * The applicant must exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"    public void remove(Applicant toRemove) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"jingjie88"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"    public void setApplicants(UniqueApplicantList replacement) {","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"     * Replaces the contents of this list with {@code applicants}.","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"jingjie88"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"jingjie88"},"content":"        requireAllNonNull(applicants);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"        if (!applicantsAreUnique(applicants)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"        internalList.setAll(applicants);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"jingjie88"},"content":"    public ObservableList\u003cApplicant\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"jingjie88"},"content":"    public Iterator\u003cApplicant\u003e iterator() {","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"jingjie88"},"content":"        if (!(other instanceof UniqueApplicantList)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"        UniqueApplicantList otherUniqueApplicantList \u003d (UniqueApplicantList) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"jingjie88"},"content":"        return internalList.equals(otherUniqueApplicantList.internalList);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"jingjie88"},"content":"     * Returns true if {@code applicants} contains only unique applicants.","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"jingjie88"},"content":"    private boolean applicantsAreUnique(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"jingjie88"},"content":"        for (int i \u003d 0; i \u003c applicants.size() - 1; i++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"jingjie88"},"content":"            for (int j \u003d i + 1; j \u003c applicants.size(); j++) {","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"jingjie88"},"content":"                if (applicants.get(i).isSameApplicant(applicants.get(j))) {","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jingjie88":51,"-":101}},{"path":"src/main/java/seedu/address/model/applicant/exceptions/ApplicantNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant.exceptions;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":" * Signals that the operation is unable to find the specified applicant.","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"public class ApplicantNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jingjie88":2,"-":3,"Chen1x":1}},{"path":"src/main/java/seedu/address/model/applicant/exceptions/DuplicateApplicantException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant.exceptions;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":" * Signals that the operation will result in duplicate Applicants","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":" * (Applicants are considered duplicates if they have the same","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":" * identity).","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"public class DuplicateApplicantException extends RuntimeException {","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"    public DuplicateApplicantException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"        super(\"Operation would result in duplicate applicants\");","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"jingjie88":12}},{"path":"src/main/java/seedu/address/model/applicant/predicate/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant.predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":" * Tests that an {@code Applicant}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(applicant.getAddress().value, keyword));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"        if (!(other instanceof AddressContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        AddressContainsKeywordsPredicate otherAddressContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"                (AddressContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        return keywords.equals(otherAddressContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jingjie88":13,"-":33}},{"path":"src/main/java/seedu/address/model/applicant/predicate/ApplicantContainsInterviewPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant.predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":" * Tests that an {@code Applicant} matches any of the interviews\u0027 applicant given.","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"public class ApplicantContainsInterviewPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"    private final ObservableList\u003cInterview\u003e interviews;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    public ApplicantContainsInterviewPredicate(ObservableList\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"        this.interviews \u003d interviews;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"        return interviews.stream()","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"                .anyMatch(interview -\u003e interview.getInterviewApplicant().equals(applicant));","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"        if (!(other instanceof ApplicantContainsInterviewPredicate)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"        ApplicantContainsInterviewPredicate otherPredicate \u003d (ApplicantContainsInterviewPredicate) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"        return interviews.equals(otherPredicate.interviews);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"        return new ToStringBuilder(this).add(\"keywords\", interviews).toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Jonyxzx":44,"jingjie88":2}},{"path":"src/main/java/seedu/address/model/applicant/predicate/ApplicantPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant.predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":" * Tests that an {@code Applicant}\u0027s fields matches the field predicates given.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"public class ApplicantPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"    private final List\u003cPredicate\u003cApplicant\u003e\u003e predicateList;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    public ApplicantPredicate(List\u003cPredicate\u003cApplicant\u003e\u003e predicateList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"        this.predicateList \u003d predicateList;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"        return predicateList.stream().reduce(false, (accumulator, pred)","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"                -\u003e accumulator || pred.test(applicant), (x, y) -\u003e x || y);","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"        if (!(other instanceof ApplicantPredicate)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        ApplicantPredicate otherApplicantPredicate \u003d (ApplicantPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        if (predicateList.size() !\u003d otherApplicantPredicate.predicateList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"        for (int i \u003d 0; i \u003c predicateList.size(); i++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"            if (!predicateList.get(i).equals(otherApplicantPredicate.predicateList.get(i))) {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"                return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"        return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"                .add(\"predicateList\", predicateList).toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"jingjie88":54}},{"path":"src/main/java/seedu/address/model/applicant/predicate/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant.predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":" * Tests that an {@code Applicant}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"        Email email \u003d applicant.getEmail();","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"        String localPart \u003d email.getLocalPart();","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"        String domain \u003d email.getDomain();","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"                .anyMatch(keyword -\u003e keyword.equalsIgnoreCase(localPart)","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"                        || keyword.equalsIgnoreCase(domain)","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"                        || keyword.equalsIgnoreCase(email.value));","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"        EmailContainsKeywordsPredicate otherEmailContainsKeywordsPredicate \u003d (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"        return keywords.equals(otherEmailContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jingjie88":19,"-":32}},{"path":"src/main/java/seedu/address/model/applicant/predicate/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant.predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":" * Tests that an {@code Applicant}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(applicant.getName().fullName, keyword));","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jingjie88":6,"-":39}},{"path":"src/main/java/seedu/address/model/applicant/predicate/PhoneContainsNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant.predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":" * Tests that an {@code Applicant}\u0027s {@code Phone} contains the number given.","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"public class PhoneContainsNumberPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"    private final String number;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"    public PhoneContainsNumberPredicate(String number) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"        this.number \u003d number;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"        return applicant.getPhone().value.contains(number);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"        if (!(other instanceof PhoneContainsNumberPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"        PhoneContainsNumberPredicate otherPhoneContainsNumberPredicate \u003d (PhoneContainsNumberPredicate) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"        return number.equals(otherPhoneContainsNumberPredicate.number);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"        return new ToStringBuilder(this).add(\"number\", number).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"jingjie88":42}},{"path":"src/main/java/seedu/address/model/applicant/predicate/TagsContainKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant.predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":" * Tests that an {@code Applicant}\u0027s {@code Set\u003cTag\u003e} matches any of the keywords given.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"public class TagsContainKeywordsPredicate implements Predicate\u003cApplicant\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"    public TagsContainKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"    public boolean test(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"        return applicant.getTags().stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"                .reduce(false, (acc, tag) -\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"                    return acc || keywords.stream().anyMatch(","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"                            keyword -\u003e StringUtil.containsWordIgnoreCase(tag.tagName, keyword));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"                }, (x, y) -\u003e x || y);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"        if (!(other instanceof TagsContainKeywordsPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        TagsContainKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (TagsContainKeywordsPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jingjie88":15,"-":32}},{"path":"src/main/java/seedu/address/model/interview/Interview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.parser.TimeParser;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":" * Represents an Interview in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"public class Interview {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"    private final Applicant applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"    private final String jobRole;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"    private final Rating rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"    private final Time startTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"    private final Time endTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"     * Constructs an instance of an Interview loaded from the json file.","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"     * @param applicant the applicant loaded from the json file","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"     * @param jobRole the job role of the applicant","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"     * @param rating the rating of the applicant","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"     * @param startTime the start time of the interview","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"     * @param endTime the end time of the interview","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"     * @param isDone whether the interview loaded is done or not","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"    public Interview(Applicant applicant,","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"                     String jobRole, Rating rating,","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"                     Time startTime, Time endTime, boolean isDone) {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"        this.jobRole \u003d jobRole;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"     * Constructs an instance of the Interview class when add-i","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"     * command is executed.","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"     * @author Tan Kerway","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"     * @param applicant the Applicant object instance containing the","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"     *                  details of the applicant","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"     * @param jobRole the job role of the applicant is applying for","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"     * @param startTime the start time of the interview to be added","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"     * @param endTime the end time of the interview to be added","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"    public Interview(Applicant applicant, String jobRole, Time startTime, Time endTime) {","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"        this.jobRole \u003d jobRole;","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"        this.rating \u003d new Rating(\"0.0\");","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"kiwibang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"     * Returns true if both Interviews have the same Applicant or if both Interviews are the same object","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Adapted from AB3\u0027s Person.isSamePerson() method","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"jingjie88"},"content":"    public boolean isSameInterview(Interview otherInterview) {","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (otherInterview \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"        return otherInterview !\u003d null","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 otherInterview.getInterviewApplicant().equals(getInterviewApplicant());","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"jingjie88"},"content":"     * Returns true if startTime is before endTime, both times are","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"jingjie88"},"content":"     * within working hours, and startTime and endTime are on the same day.","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"    public boolean isValid() {","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"jingjie88"},"content":"        return startTime.isBefore(endTime)","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"kiwibang"},"content":"                \u0026\u0026 startTime.isWithinWorkingHours()","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"kiwibang"},"content":"                \u0026\u0026 endTime.isWithinWorkingHours()","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"kiwibang"},"content":"                \u0026\u0026 startTime.getDate().equals(endTime.getDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"     * Returns true if this interview instance clashes with","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"jingjie88"},"content":"     * the given otherInterview in the argument.","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"jingjie88"},"content":"    public boolean isClashingWith(Interview otherInterview) {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"jingjie88"},"content":"        // Interviews do not clash with themselves","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"        if (isSameInterview(otherInterview)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"jingjie88"},"content":"        Time otherStartTime \u003d otherInterview.getInterviewStartTime();","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"        Time otherEndTime \u003d otherInterview.getInterviewEndTime();","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"        return (startTime.isBetween(otherStartTime, otherEndTime) || startTime.equals(otherStartTime))","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"                || (endTime.isBetween(otherStartTime, otherEndTime) || endTime.equals(otherEndTime))","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"                || otherStartTime.isBetween(startTime, endTime);","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"    public Applicant getInterviewApplicant() {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"        return applicant;","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String getJobRole() {","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"        return jobRole;","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"kiwibang"},"content":"    public String getInterviewStartTimeAsString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"kiwibang"},"content":"        return TimeParser.formatDate(startTime.getDateAndTime());","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"kiwibang"},"content":"    public Time getInterviewStartTime() {","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"kiwibang"},"content":"        return startTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"kiwibang"},"content":"    public String getInterviewEndTimeAsString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"kiwibang"},"content":"        return TimeParser.formatDate(endTime.getDateAndTime());","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"kiwibang"},"content":"    public Time getInterviewEndTime() {","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"kiwibang"},"content":"        return endTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"Jonyxzx"},"content":"    public Rating getRating() {","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"Jonyxzx"},"content":"        return rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"jingjie88"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"jingjie88"},"content":"        return isDone;","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if both interviews have the same identity and data fields.","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"     * This defines a stronger notion of equality between two interviews","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Mostly used for testing purposes","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"JasonLCY-Temp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!(other instanceof Interview)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"JasonLCY-Temp"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview otherInterview \u003d (Interview) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"JasonLCY-Temp"},"content":"        return applicant.equals(otherInterview.applicant)","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"JasonLCY-Temp"},"content":"                \u0026\u0026 jobRole.equals(otherInterview.jobRole)","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"kiwibang"},"content":"                \u0026\u0026 startTime.equals(otherInterview.startTime)","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"kiwibang"},"content":"                \u0026\u0026 endTime.equals(otherInterview.endTime);","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"kiwibang"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"kiwibang"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"kiwibang"},"content":"        return \"applicant: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"kiwibang"},"content":"                + applicant","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"kiwibang"},"content":"                + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"kiwibang"},"content":"                + \"job role: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"kiwibang"},"content":"                + jobRole","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"kiwibang"},"content":"                + \"\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"kiwibang"},"content":"                + \"start time: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"kiwibang"},"content":"                + startTime","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"kiwibang"},"content":"                + \"end time: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"kiwibang"},"content":"                + endTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Jonyxzx":7,"JasonLCY-Temp":51,"jingjie88":39,"kiwibang":73}},{"path":"src/main/java/seedu/address/model/interview/InterviewIsDonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":" * Tests that {@code Interview} is done by checking the {@code isDone} field.","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"public class InterviewIsDonePredicate implements Predicate\u003cInterview\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"    public boolean test(Interview interview) {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"        return interview.isDone();","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"        return other instanceof InterviewIsDonePredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"        return new ToStringBuilder(this).toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jingjie88":30}},{"path":"src/main/java/seedu/address/model/interview/InterviewNotDonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":" * Tests that {@code Interview} is not done by checking the {@code isDone} field.","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"public class InterviewNotDonePredicate implements Predicate\u003cInterview\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"    public boolean test(Interview interview) {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"        return !interview.isDone();","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"        return other instanceof InterviewNotDonePredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"    public String toString() {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"        return new ToStringBuilder(this).toString();","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"jingjie88":30}},{"path":"src/main/java/seedu/address/model/interview/JobContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":" * Tests that a {@code Interview}\u0027s {@code Job} matches any of the keywords given.","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"public class JobContainsKeywordsPredicate implements Predicate\u003cInterview\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"    public JobContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"    public boolean test(Interview interview) {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(interview.getJobRole(), keyword));","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        if (!(other instanceof JobContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (JobContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":45}},{"path":"src/main/java/seedu/address/model/interview/Rating.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":" * Represents an Interview\u0027s rating in the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"public class Rating implements Comparable\u003cRating\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"            \"Rating should only contain a non-negative number with one decimal place and between 0.0 to 5.0 inclusive\";","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"    public static final String RATING_REGEX \u003d \"^([0-4]\\\\.\\\\d|5\\\\.0)$\";","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"    public final String rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"     * Constructs a rating.","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"    public Rating(String rate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"        requireNonNull(rate);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"        checkArgument(isValidRating(rate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"        rating \u003d rate;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"     * Returns true if a given string is a valid rating.","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"    public static boolean isValidRating(String test) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        return test.matches(RATING_REGEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"    public int compareTo(Rating otherRating) {","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"        return otherRating.rating.compareTo(this.rating);","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"        return rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"        if (!(other instanceof Rating)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"        Rating otherRating \u003d (Rating) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Jonyxzx"},"content":"        return rating.equals(otherRating.rating);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Jonyxzx"},"content":"        return rating.hashCode();","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Jonyxzx":62}},{"path":"src/main/java/seedu/address/model/interview/UniqueInterviewList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.exceptions.DuplicateInterviewException;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.exceptions.InterviewClashException;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.exceptions.InterviewNotFoundException;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":" * A list of interviews that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":" * A interview is considered unique by comparing using {@code Interview#isNotValidOrNewInterview(Interview)}.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":" * As such, adding and updating of Interviews uses Interview#isNotValidOrNewInterview(Interview) for equality","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":" * so as to ensure that the interview being added or updated is unique in terms of identity in the UniqueInterviewList.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":" * However, the removal of an interview uses Interview#equals(Object) so as to ensure that the interview","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":" * Adapted from AB3\u0027s UniquePersonList","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"public class UniqueInterviewList implements Iterable\u003cInterview\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final ObservableList\u003cInterview\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final ObservableList\u003cInterview\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if the list contains an equivalent interview as the given argument.","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean contains(Interview toCheck) {","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInterview);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"     * Returns true if any interview in the list clashes with the interview in the given argument.","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"    public boolean anyClash(Interview toCheck) {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        return internalList.stream().anyMatch(toCheck::isClashingWith);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Adds a interview to the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The interview must not already exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void add(Interview toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Replaces the interview {@code target} in the list with {@code editedInterview}.","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The interview identity of {@code editedInterview} must not be the same as another existing interview in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireAllNonNull(target, editedInterview);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"        if (!target.isSameInterview(editedInterview) \u0026\u0026 contains(editedInterview)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"        internalList.set(index, editedInterview);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Removes the equivalent interview from the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"     * The interview must exist in the list.","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void remove(Interview toRemove) {","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new InterviewNotFoundException();","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setInterviews(UniqueInterviewList replacement) {","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"JasonLCY-Temp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Replaces the contents of this list with {@code interviews}.","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code interviews} must not contain duplicate interviews.","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setInterviews(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"        requireAllNonNull(interviews);","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"        if (!interviewsAreUnique(interviews)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new DuplicateInterviewException();","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"jingjie88"},"content":"        if (!interviewsDoNotClash(interviews)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"jingjie88"},"content":"            throw new InterviewClashException();","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"        internalList.setAll(interviews);","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"Jonyxzx"},"content":"     * Sorts the interview list of the address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"Jonyxzx"},"content":"     * The interviews list will be sorted based on the comparator","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"Jonyxzx"},"content":"    public void sort(Comparator\u003cInterview\u003e comparator) {","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"Jonyxzx"},"content":"        FXCollections.sort(internalList, comparator);","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"    public ObservableList\u003cInterview\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Iterator\u003cInterview\u003e iterator() {","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"JasonLCY-Temp"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (!(other instanceof UniqueInterviewList)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"JasonLCY-Temp"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"JasonLCY-Temp"},"content":"        UniqueInterviewList otherUniqueInterviewList \u003d (UniqueInterviewList) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalList.equals(otherUniqueInterviewList.internalList);","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"JasonLCY-Temp"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"JasonLCY-Temp"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"JasonLCY-Temp"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns true if {@code interviews} contains only unique interviews.","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"JasonLCY-Temp"},"content":"    private boolean interviewsAreUnique(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"JasonLCY-Temp"},"content":"        for (int i \u003d 0; i \u003c interviews.size() - 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"JasonLCY-Temp"},"content":"            for (int j \u003d i + 1; j \u003c interviews.size(); j++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"jingjie88"},"content":"                if (interviews.get(i).isSameInterview(interviews.get(j))) {","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"JasonLCY-Temp"},"content":"                    return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"JasonLCY-Temp"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"JasonLCY-Temp"},"content":"        return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"jingjie88"},"content":"     * Returns true if {@code interviews} contains only interviews that do not clash.","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"jingjie88"},"content":"    private boolean interviewsDoNotClash(List\u003cInterview\u003e interviews) {","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"jingjie88"},"content":"        for (int i \u003d 0; i \u003c interviews.size() - 1; i++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"jingjie88"},"content":"            for (int j \u003d i + 1; j \u003c interviews.size(); j++) {","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"jingjie88"},"content":"                if (interviews.get(i).isClashingWith(interviews.get(j))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"jingjie88"},"content":"                    return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"jingjie88"},"content":"                }","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"jingjie88"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"jingjie88"},"content":"        return true;","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Jonyxzx":9,"JasonLCY-Temp":144,"jingjie88":31,"Chen1x":1}},{"path":"src/main/java/seedu/address/model/interview/exceptions/DuplicateInterviewException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":" * Signals that the operation will result in duplicate Interviews","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":" * (Interviews are considered duplicates if they have the same identity - As checked by isSameInterview).","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"public class DuplicateInterviewException extends RuntimeException {","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"    public DuplicateInterviewException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"        super(\"Operation would result in duplicate interviews\");","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":10,"jingjie88":1}},{"path":"src/main/java/seedu/address/model/interview/exceptions/InterviewClashException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":" * Signals that the operation will result in interview clash.","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":" * (Interviews are considered clashes interviews have overlapping start time and end time","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":" * - As checked by isClashingWith).","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"public class InterviewClashException extends RuntimeException {","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"    public InterviewClashException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"        super(\"Operation would result in interview clash\");","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"jingjie88":12}},{"path":"src/main/java/seedu/address/model/interview/exceptions/InterviewNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview.exceptions;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":" * Signals that the operation is unable to find the specified Interview","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"public class InterviewNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    public static Applicant[] getSampleApplicants() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"        return new Applicant[] {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"            new Applicant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"                getTagSet(\"Example\"), true),","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"            new Applicant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"                getTagSet(\"Example\"), true),","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"            new Applicant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"                getTagSet(\"Example\")),","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"            new Applicant(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"                getTagSet(\"Example\")),","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"            new Applicant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"                getTagSet(\"Example\")),","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"            new Applicant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"                getTagSet(\"Example\"), true)","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static Interview[] getSampleInterviews() {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"        Applicant sampleApplicant \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"                new Applicant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"                        new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"                        getTagSet(\"Example\"), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"        Applicant sampleApplicant2 \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"                new Applicant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"                getTagSet(\"Example\"), true);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"        Applicant sampleApplicant3 \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"                new Applicant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Jonyxzx"},"content":"                getTagSet(\"Example\"), true);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"        return new Interview[] {","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"kiwibang"},"content":"            new Interview(sampleApplicant,","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"kiwibang"},"content":"                    \"Frontend Engineer\",","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"kiwibang"},"content":"                    new Time(LocalDateTime.of(2025, 1, 1, 10, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"kiwibang"},"content":"                    new Time(LocalDateTime.of(2025, 1, 1, 12, 0))","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"kiwibang"},"content":"            ),","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"kiwibang"},"content":"            new Interview(sampleApplicant2,","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kiwibang"},"content":"                    \"Backend Engineer\",","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"kiwibang"},"content":"                    new Time(LocalDateTime.of(2025, 1, 2, 10, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"kiwibang"},"content":"                    new Time(LocalDateTime.of(2025, 1, 2, 12, 0))","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"kiwibang"},"content":"            ),","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"kiwibang"},"content":"            new Interview(sampleApplicant3,","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"kiwibang"},"content":"                    \"SWE\",","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"kiwibang"},"content":"                    new Time(LocalDateTime.of(2025, 1, 3, 10, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"kiwibang"},"content":"                    new Time(LocalDateTime.of(2025, 1, 3, 12, 0))","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"kiwibang"},"content":"            )","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"        for (Applicant sampleApplicant : getSampleApplicants()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"            sampleAb.addApplicant(sampleApplicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"        for (Interview sampleInterview : getSampleInterviews()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"            sampleAb.addInterview(sampleInterview);","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Jonyxzx":3,"JasonLCY-Temp":5,"jingjie88":33,"kiwibang":17,"-":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedApplicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":" * Jackson-friendly version of {@link Applicant}.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"class JsonAdaptedApplicant {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Applicant\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"    private final boolean hasInterview;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"     * Constructs a {@code JsonAdaptedApplicant} with the given applicant details.","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"    public JsonAdaptedApplicant(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                                @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"                                @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"                                @JsonProperty(\"hasInterview\") boolean hasInterview) {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"        this.hasInterview \u003d hasInterview;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"     * Converts a given {@code Applicant} into this class for Jackson use.","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"    public JsonAdaptedApplicant(Applicant source) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"        hasInterview \u003d source.hasInterview();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"     * Converts this Jackson-friendly adapted applicant object into the model\u0027s {@code Applicant} object.","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"jingjie88"},"content":"    public Applicant toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"jingjie88"},"content":"        final List\u003cTag\u003e applicantTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":74,"author":{"gitId":"jingjie88"},"content":"            applicantTags.add(tag.toModelType());","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"jingjie88"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(applicantTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"jingjie88"},"content":"        return new Applicant(modelName, modelPhone, modelEmail, modelAddress, modelTags, hasInterview);","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jingjie88":25,"-":89}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInterview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.parser.TimeParser;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":" * Jackson-friendly version of {@link seedu.address.model.interview.Interview}.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":" * Adapted from AB3\u0027s JsonAdaptedPerson","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"class JsonAdaptedInterview {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Interview\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String APPLICANT_MISSING \u003d \"Applicant\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String JOB_ROLE_MISSING \u003d \"Job role\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String TIMING_MISSING \u003d \"Timing\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    private final JsonAdaptedApplicant applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final String jobRole;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    private final String rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"    private final String interviewStartTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"    private final String interviewEndTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Constructs a {@code JsonAdaptedInterview} with the given interview details.","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"    public JsonAdaptedInterview(@JsonProperty(\"applicant\") JsonAdaptedApplicant applicant,","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"                                @JsonProperty(\"jobRole\") String jobRole,","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"                                @JsonProperty(\"rating\") String rating,","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"                                @JsonProperty(\"interviewStartTime\") String interviewStartTime,","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"                                @JsonProperty(\"interviewEndTime\") String interviewEndTime,","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"                                @JsonProperty(\"isDone\") boolean isDone) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.jobRole \u003d jobRole;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"        this.interviewStartTime \u003d interviewStartTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"        this.interviewEndTime \u003d interviewEndTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Converts a given {@code Interview} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"    public JsonAdaptedInterview(Interview source) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"        applicant \u003d new JsonAdaptedApplicant(source.getInterviewApplicant());","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        jobRole \u003d source.getJobRole();","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"        rating \u003d source.getRating().rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"        interviewStartTime \u003d source.getInterviewStartTimeAsString();","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"        interviewEndTime \u003d source.getInterviewEndTimeAsString();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"        isDone \u003d source.isDone();","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Chen1x"},"content":"     * Converts this Jackson-friendly adapted applicant object into the model\u0027s {@code Interview} object.","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"     * @throws seedu.address.commons.exceptions.IllegalValueException if there were any data constraints","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Chen1x"},"content":"     *     violated in the adapted applicant.","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"    public Interview toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (applicant \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, APPLICANT_MISSING));","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"jingjie88"},"content":"        Applicant modelApplicant \u003d applicant.toModelType();","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"        if (jobRole \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, JOB_ROLE_MISSING));","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"kiwibang"},"content":"        if (interviewStartTime \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, TIMING_MISSING));","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Jonyxzx"},"content":"        if (rating \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Jonyxzx"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rating.class.getSimpleName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"Jonyxzx"},"content":"        if (!Rating.isValidRating(rating)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Jonyxzx"},"content":"            throw new IllegalValueException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"kiwibang"},"content":"        if (interviewEndTime \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"kiwibang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, TIMING_MISSING));","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"Jonyxzx"},"content":"        final Rating modelRating \u003d new Rating(rating);","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"kiwibang"},"content":"        return new Interview(modelApplicant, jobRole, modelRating,","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"kiwibang"},"content":"                TimeParser.parseDate(interviewStartTime, false),","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"kiwibang"},"content":"                TimeParser.parseDate(interviewEndTime, false),","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"kiwibang"},"content":"                isDone);","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Jonyxzx":14,"JasonLCY-Temp":55,"jingjie88":13,"kiwibang":17,"Chen1x":3}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"Applicants list contains duplicate applicant(s).\";","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String MESSAGE_DUPLICATE_INTERVIEW \u003d \"Interviews list contains duplicate interview(s).\";","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"    private final List\u003cJsonAdaptedInterview\u003e interviews \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    private final List\u003cJsonAdaptedApplicant\u003e applicants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Chen1x"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given applicants and interviews","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"applicants\") List\u003cJsonAdaptedApplicant\u003e applicants,","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"                                       @JsonProperty(\"interviews\") List\u003cJsonAdaptedInterview\u003e interviews) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"        this.applicants.addAll(applicants);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"        this.interviews.addAll(interviews);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        applicants.addAll(source.getApplicantList().stream()","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"                .map(JsonAdaptedApplicant::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"        interviews.addAll(source.getInterviewList().stream().map(JsonAdaptedInterview::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"jingjie88"},"content":"        for (JsonAdaptedApplicant jsonAdaptedApplicant : applicants) {","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"            Applicant applicant \u003d jsonAdaptedApplicant.toModelType();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"            if (addressBook.hasApplicant(applicant)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"            addressBook.addApplicant(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"        for (JsonAdaptedInterview jsonAdaptedInterview : interviews) {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"            Interview interview \u003d jsonAdaptedInterview.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"            if (addressBook.hasInterview(interview)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"                throw new IllegalValueException((MESSAGE_DUPLICATE_INTERVIEW));","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"JasonLCY-Temp"},"content":"            addressBook.addInterview(interview);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JasonLCY-Temp":12,"jingjie88":12,"-":49,"Chen1x":2}},{"path":"src/main/java/seedu/address/ui/ApplicantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":" * An UI component that displays information of a {@code Applicant}.","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"public class ApplicantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"    private static final String FXML \u003d \"ApplicantListCard.fxml\";","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    public final Applicant applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"Chen1x"},"content":"     * Creates a {@code ApplicantCard} with the given {@code Applicant} and index to display.","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"Chen1x"},"content":"    public ApplicantCard(Applicant applicant, int displayedIndex) {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"        name.setText(applicant.getName().fullName);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"        phone.setText(applicant.getPhone().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        address.setText(applicant.getAddress().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"        email.setText(applicant.getEmail().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"        applicant.getTags().stream()","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"Chen1x"},"content":"        if (applicant.hasInterview()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"Chen1x"},"content":"            cardPane.setStyle(\"-fx-border-color: #2c7a2c; -fx-border-width: 3;\");","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"Chen1x"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"Chen1x"},"content":"            cardPane.setStyle(\"-fx-border-color: #7a2c2c; -fx-border-width: 3;\");","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"Chen1x"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jingjie88":8,"-":46,"Chen1x":10}},{"path":"src/main/java/seedu/address/ui/ApplicantListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":" * Panel containing the list of applicants.","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"public class ApplicantListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"    private static final String FXML \u003d \"ApplicantListPanel.fxml\";","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ApplicantListPanel.class);","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"    private ListView\u003cApplicant\u003e applicantListView;","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"     * Creates a {@code ApplicantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"    public ApplicantListPanel(ObservableList\u003cApplicant\u003e applicantList) {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Chen1x"},"content":"        super(FXML);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Chen1x"},"content":"        applicantListView.setItems(applicantList);","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"Chen1x"},"content":"        applicantListView.setCellFactory(listView -\u003e new ApplicantListViewCell());","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"Chen1x"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Applicant} using a {@code ApplicantCard}.","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Chen1x"},"content":"    class ApplicantListViewCell extends ListCell\u003cApplicant\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"Chen1x"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Chen1x"},"content":"        protected void updateItem(Applicant applicant, boolean empty) {","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Chen1x"},"content":"            super.updateItem(applicant, empty);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"            if (empty || applicant \u003d\u003d null) {","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"Chen1x"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Chen1x"},"content":"                setText(null);","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"Chen1x"},"content":"            } else {","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"Chen1x"},"content":"                setGraphic(new ApplicantCard(applicant, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Chen1x"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Chen1x"},"content":"            setStyle(\"-fx-padding: 0 0 2 0;\");","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"Chen1x"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"Chen1x"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"Chen1x":50}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"JasonLCY-Temp":1,"-":101}},{"path":"src/main/java/seedu/address/ui/InterviewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":" * An UI component that displays information of a {@code Interview}.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"public class InterviewCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":"    private static final String FXML \u003d \"InterviewListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"    public final Interview interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Chen1x"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Chen1x"},"content":"    private Label applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Chen1x"},"content":"    private Label id;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Chen1x"},"content":"    private Label jobRole;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"    private Label interviewStartTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"    private Label interviewEndTime;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"    private Label rating;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Chen1x"},"content":"     * Creates a {@code InterviewCard} with the given {@code Interview} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Chen1x"},"content":"    public InterviewCard(Interview interview, int displayedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Chen1x"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Chen1x"},"content":"        this.interview \u003d interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Chen1x"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"        applicant.setText(interview.getInterviewApplicant().getName().fullName); // Todo: Change needed","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"        jobRole.setText(interview.getJobRole()); // Todo: Change needed","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"kiwibang"},"content":"        interviewStartTime.setText(interview.getInterviewStartTimeAsString());","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"        interviewEndTime.setText(interview.getInterviewEndTimeAsString());","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"        rating.setText(interview.getRating().rating);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        if (interview.isDone()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"            cardPane.setStyle(\"-fx-border-color: #2c7a2c; -fx-border-width: 3;\");","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"            cardPane.setStyle(\"-fx-border-color: #7a2c2c; -fx-border-width: 3;\");","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Chen1x"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Jonyxzx":3,"jingjie88":6,"kiwibang":5,"Chen1x":45}},{"path":"src/main/java/seedu/address/ui/InterviewListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":" * Panel containing the list of interviews.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Chen1x"},"content":"public class InterviewListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"    private static final String FXML \u003d \"InterviewListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InterviewListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"    private ListView\u003cInterview\u003e interviewListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"     * Creates a {@code InterviewListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"    public InterviewListPanel(ObservableList\u003cInterview\u003e interviewList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Chen1x"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Chen1x"},"content":"        interviewListView.setItems(interviewList);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Chen1x"},"content":"        interviewListView.setCellFactory(listView -\u003e new InterviewListViewCell());","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Chen1x"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Chen1x"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Interview} using a {@code InterviewCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Chen1x"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Chen1x"},"content":"    class InterviewListViewCell extends ListCell\u003cInterview\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Chen1x"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Chen1x"},"content":"        protected void updateItem(Interview interview, boolean empty) {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Chen1x"},"content":"            super.updateItem(interview, empty);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Chen1x"},"content":"            if (empty || interview \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Chen1x"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Chen1x"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Chen1x"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Chen1x"},"content":"                setGraphic(new InterviewCard(interview, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Chen1x"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Chen1x"},"content":"            setStyle(\"-fx-padding: 0 0 2 0;\");","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"Chen1x"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Chen1x"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Chen1x"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Chen1x":50}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Chen1x"},"content":"    private ApplicantListPanel applicantListPanel;","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"Chen1x"},"content":"    private InterviewListPanel interviewListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Chen1x"},"content":"    private StackPane applicantListPanelPlaceholder;","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Chen1x"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"    private StackPane interviewListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"Chen1x"},"content":"        applicantListPanel \u003d new ApplicantListPanel(logic.getFilteredApplicantList());","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"Chen1x"},"content":"        applicantListPanelPlaceholder.getChildren().add(applicantListPanel.getRoot());","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"Chen1x"},"content":"        // Duplicating applicantListPanel into interviewListPanel","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"Chen1x"},"content":"        interviewListPanel \u003d new InterviewListPanel(logic.getFilteredInterviewList());","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Chen1x"},"content":"        interviewListPanelPlaceholder.getChildren().add(interviewListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"Chen1x"},"content":"    public ApplicantListPanel getApplicantListPanel() {","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"Chen1x"},"content":"        return applicantListPanel;","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":192,"Chen1x":12}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/InterviewHub_Globe.png\";","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jingjie88":1,"-":87}},{"path":"src/main/resources/view/ApplicantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"150\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jingjie88":1,"-":35}},{"path":"src/main/resources/view/ApplicantListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"  \u003cListView fx:id\u003d\"applicantListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"Chen1x":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"jingjie88"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"jingjie88"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"jingjie88"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"Chen1x"},"content":"#filterField, #applicantListPanel, #applicantWebpage {","lastModifiedDate":"2023-10-20"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"jingjie88":4,"-":347,"Chen1x":1}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"kiwibang":2,"-":43}},{"path":"src/main/resources/view/InterviewListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Chen1x"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Chen1x"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Chen1x"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"150\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Chen1x"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Chen1x"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Chen1x"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Chen1x"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Chen1x"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Chen1x"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Chen1x"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Chen1x"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Chen1x"},"content":"                \u003cLabel fx:id\u003d\"applicant\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Chen1x"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"            \u003cLabel fx:id\u003d\"jobRole\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$job\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"            \u003cLabel fx:id\u003d\"interviewStartTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$interview-start-time\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"            \u003cLabel fx:id\u003d\"interviewEndTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$interview-end-time\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"            \u003cLabel fx:id\u003d\"rating\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$rating\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Chen1x"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Chen1x"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Chen1x"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jingjie88":5,"Chen1x":30}},{"path":"src/main/resources/view/InterviewListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen1x"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Chen1x"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Chen1x"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Chen1x"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Chen1x"},"content":"  \u003cListView fx:id\u003d\"interviewListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Chen1x"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Chen1x":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"         title\u003d\"InterviewHub\" minWidth\u003d\"600\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"    \u003cImage url\u003d\"@/images/InterviewHub_Globe.png\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"                   minHeight\u003d\"80\" prefHeight\u003d\"80\" maxHeight\u003d\"80\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"                   minHeight\u003d\"120\" prefHeight\u003d\"120\" maxHeight\u003d\"120\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Chen1x"},"content":"          \u003cVBox fx:id\u003d\"applicantList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" prefWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"Chen1x"},"content":"            \u003cStackPane fx:id\u003d\"applicantListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"Chen1x"},"content":"          \u003cVBox fx:id\u003d\"interviewList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"300\" prefWidth\u003d\"300\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Chen1x"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Chen1x"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Chen1x"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Chen1x"},"content":"            \u003cStackPane fx:id\u003d\"interviewListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Chen1x"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Chen1x"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jingjie88":5,"-":52,"Chen1x":10}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"Chen1x"},"content":"        final Index fifthApplicantIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"Chen1x"},"content":"        assertTrue(fifthApplicantIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"Chen1x"},"content":"        assertTrue(fifthApplicantIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"Chen1x"},"content":"        assertTrue(fifthApplicantIndex.equals(fifthApplicantIndex));","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"Chen1x"},"content":"        assertFalse(fifthApplicantIndex.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"Chen1x"},"content":"        assertFalse(fifthApplicantIndex.equals(5.0f));","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"Chen1x"},"content":"        assertFalse(fifthApplicantIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":60,"Chen1x":7}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"        assertNotNull(AppUtil.getImage(\"/images/InterviewHub_Globe.png\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"jingjie88":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"        String deleteCommand \u003d \"delete-a 9\";","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"jingjie88"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"jingjie88"},"content":"    public void getFilteredApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"jingjie88"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredApplicantList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"Chen1x"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Chen1x"},"content":"    public void getFilteredInterviewList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Chen1x"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredInterviewList().remove(0));","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"jingjie88"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"jingjie88"},"content":"        expectedModel.addApplicant(expectedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jingjie88":10,"-":167,"Chen1x":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"    public void execute_newApplicant_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"        expectedModel.addApplicant(validApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        assertCommandSuccess(new AddCommand(validApplicant), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.formatApplicant(validApplicant)),","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"        Applicant applicantInList \u003d model.getAddressBook().getApplicantList().get(0);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"        assertCommandFailure(new AddCommand(applicantInList), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"                AddCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jingjie88":12,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"    public void constructor_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"    public void execute_applicantAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"        ModelStubAcceptingApplicantAdded modelStub \u003d new ModelStubAcceptingApplicantAdded();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        CommandResult commandResult \u003d new AddCommand(validApplicant).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.formatApplicant(validApplicant)),","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"        assertEquals(Arrays.asList(validApplicant), modelStub.applicantsAdded);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"        AddCommand addCommand \u003d new AddCommand(validApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"        ModelStub modelStub \u003d new ModelStubWithApplicant(validApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"jingjie88"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"                AddCommand.MESSAGE_DUPLICATE_APPLICANT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"jingjie88"},"content":"        Applicant alice \u003d new ApplicantBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"        Applicant bob \u003d new ApplicantBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"jingjie88"},"content":"        public void addApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"jingjie88"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"jingjie88"},"content":"        public void deleteApplicant(Applicant target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"jingjie88"},"content":"        public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"jingjie88"},"content":"        public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"Jonyxzx"},"content":"        public ObservableList\u003cInterview\u003e getFilteredInterviewList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"jingjie88"},"content":"        public void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"JasonLCY-Temp"},"content":"        public boolean hasInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"jingjie88"},"content":"        @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"jingjie88"},"content":"        public boolean hasInterviewClash(Interview interview) {","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"jingjie88"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":183,"author":{"gitId":"JasonLCY-Temp"},"content":"        public void addInterview(Interview interview) {","lastModifiedDate":"2023-10-12"},{"lineNumber":184,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":186,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":187,"author":{"gitId":"jingjie88"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"jingjie88"},"content":"        public void setInterview(Interview target, Interview editedInterview) {","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"jingjie88"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"JasonLCY-Temp"},"content":"        public void updateFilteredInterviewList(Predicate\u003cInterview\u003e predicate) {","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"JasonLCY-Temp"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"JasonLCY-Temp"},"content":"        public void deleteInterview(Interview interview) {","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"JasonLCY-Temp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"JasonLCY-Temp"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"Jonyxzx"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"Jonyxzx"},"content":"        public void sortInterviewList(Comparator\u003cInterview\u003e comparator) {","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"Jonyxzx"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"Jonyxzx"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"kiwibang"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"kiwibang"},"content":"        public List\u003cPair\u003cTime, Time\u003e\u003e listPocketsOfTimeOnGivenDay(Time day) {","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"kiwibang"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"jingjie88"},"content":"     * A Model stub that contains a single applicant.","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"jingjie88"},"content":"    private class ModelStubWithApplicant extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"jingjie88"},"content":"        private final Applicant applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"jingjie88"},"content":"        ModelStubWithApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"jingjie88"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"jingjie88"},"content":"            this.applicant \u003d applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"jingjie88"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"jingjie88"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"jingjie88"},"content":"            return this.applicant.isSameApplicant(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"jingjie88"},"content":"     * A Model stub that always accept the applicant being added.","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"jingjie88"},"content":"    private class ModelStubAcceptingApplicantAdded extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"jingjie88"},"content":"        final ArrayList\u003cApplicant\u003e applicantsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"jingjie88"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"jingjie88"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"jingjie88"},"content":"            return applicantsAdded.stream().anyMatch(applicant::isSameApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"jingjie88"},"content":"        public void addApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"jingjie88"},"content":"            requireNonNull(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"jingjie88"},"content":"            applicantsAdded.add(applicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Jonyxzx":8,"JasonLCY-Temp":21,"jingjie88":53,"kiwibang":8,"-":165}},{"path":"src/test/java/seedu/address/logic/commands/AddInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_2;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.TypicalIndexes;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":" * Tests the AddInterviewCommand class","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"Chen1x"},"content":" * Adapted from AB3\u0027s AddCommandTest","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"public class AddInterviewCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void constructor_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"                new AddInterviewCommand(null, null, null, null));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"    public void equals() throws CommandException, ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"        Index index \u003d TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"        AddInterviewCommand addInterview1Cmd \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"                new AddInterviewCommand(index, STANDARD_INTERVIEW.getJobRole(),","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"                        STANDARD_INTERVIEW.getInterviewStartTime(),","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"                        STANDARD_INTERVIEW.getInterviewEndTime()","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"                        );","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        AddInterviewCommand addInterview2Cmd \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"                new AddInterviewCommand(index, STANDARD_INTERVIEW_2.getJobRole(),","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"                        STANDARD_INTERVIEW_2.getInterviewStartTime(),","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"                        STANDARD_INTERVIEW_2.getInterviewEndTime());","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertEquals(addInterview1Cmd, addInterview1Cmd);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        AddInterviewCommand addInterview1Copy \u003d new AddInterviewCommand(index, STANDARD_INTERVIEW.getJobRole(),","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"                STANDARD_INTERVIEW.getInterviewStartTime(),","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"                STANDARD_INTERVIEW.getInterviewEndTime());","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertEquals(addInterview1Cmd, addInterview1Copy);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertNotEquals(1, addInterview1Cmd);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertNotEquals(null, addInterview1Cmd);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different interviews -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertNotEquals(addInterview1Cmd, addInterview2Cmd);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"JasonLCY-Temp":38,"jingjie88":16,"kiwibang":5,"Chen1x":1}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jingjie88":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.ApplicantContainsInterviewPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"jingjie88"},"content":"    public static final EditCommand.EditApplicantDescriptor DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"    public static final EditCommand.EditApplicantDescriptor DESC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"        DESC_AMY \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"        DESC_BOB \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Chen1x"},"content":"     * - the address book, filtered applicant list and selected applicant in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"jingjie88"},"content":"        List\u003cApplicant\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredApplicantList());","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"jingjie88"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredApplicantList());","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"Chen1x"},"content":"     * Updates {@code model}\u0027s filtered list to show only the applicant at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"jingjie88"},"content":"    public static void showApplicantAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"jingjie88"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"jingjie88"},"content":"        Applicant applicant \u003d model.getFilteredApplicantList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"jingjie88"},"content":"        final String[] splitName \u003d applicant.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"        model.updateFilteredApplicantList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"jingjie88"},"content":"        assertEquals(1, model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Updates {@code model}\u0027s filtered list to show only the interview at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"JasonLCY-Temp"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Adapted from showApplicantAtIndex (above)","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static void showInterviewAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredInterviewList().size());","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview interview \u003d model.getFilteredInterviewList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"JasonLCY-Temp"},"content":"        final Applicant applicant \u003d interview.getInterviewApplicant();","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(new ApplicantContainsInterviewPredicate(model.getFilteredInterviewList()).test(applicant));","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"JasonLCY-Temp":12,"jingjie88":16,"-":113,"Chen1x":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"Chen1x"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"                Messages.formatApplicant(applicantToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"        showApplicantAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"        Applicant applicantToDelete \u003d model.getFilteredApplicantList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Chen1x"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"                Messages.formatApplicant(applicantToDelete));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"        expectedModel.deleteApplicant(applicantToDelete);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jingjie88"},"content":"        showNoApplicant(expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"jingjie88"},"content":"        showApplicantAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"jingjie88"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getApplicantList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"jingjie88"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"Chen1x"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"jingjie88"},"content":"    private void showNoApplicant(Model model) {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"jingjie88"},"content":"        model.updateFilteredApplicantList(p -\u003e false);","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"jingjie88"},"content":"        assertTrue(model.getFilteredApplicantList().isEmpty());","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jingjie88":27,"-":90,"Chen1x":3}},{"path":"src/test/java/seedu/address/logic/commands/EditApplicantDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"public class EditApplicantDescriptorTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"        EditCommand.EditApplicantDescriptor descriptorWithSameValues \u003d new EditApplicantDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"        EditCommand.EditApplicantDescriptor editedAmy \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"                new EditApplicantDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"        editedAmy \u003d new EditApplicantDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditCommand.EditApplicantDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"jingjie88"},"content":"        String expected \u003d EditApplicantDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"                + editApplicantDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"                + editApplicantDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"                + editApplicantDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"jingjie88"},"content":"                + editApplicantDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"                + editApplicantDescriptor.getTags().orElse(null) + \", hasInterview\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"jingjie88"},"content":"                + editApplicantDescriptor.hasInterview().orElse(null) + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"jingjie88"},"content":"        assertEquals(expected, editApplicantDescriptor.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jingjie88":19,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"        EditCommand.EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(editedApplicant).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"                EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS, Messages.formatApplicant(editedApplicant));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"        expectedModel.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"Chen1x"},"content":"        Index indexLastApplicant \u003d Index.fromOneBased(model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Chen1x"},"content":"        Applicant lastApplicant \u003d model.getFilteredApplicantList().get(indexLastApplicant.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"Chen1x"},"content":"        ApplicantBuilder applicantInList \u003d new ApplicantBuilder(lastApplicant);","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"Chen1x"},"content":"        Applicant editedApplicant \u003d applicantInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"jingjie88"},"content":"        EditCommand.EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"Chen1x"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastApplicant, descriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"                Messages.formatApplicant(editedApplicant));","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"jingjie88"},"content":"        expectedModel.setApplicant(lastApplicant, editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, new EditCommand.EditApplicantDescriptor());","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"jingjie88"},"content":"        Applicant editedApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"jingjie88"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"                Messages.formatApplicant(editedApplicant));","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"        showApplicantAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"jingjie88"},"content":"        Applicant applicantInFilteredList \u003d model.getFilteredApplicantList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"jingjie88"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder(applicantInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"jingjie88"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"                new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"                Messages.formatApplicant(editedApplicant));","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"        expectedModel.setApplicant(model.getFilteredApplicantList().get(0), editedApplicant);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"jingjie88"},"content":"    public void execute_duplicateApplicantUnfilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"jingjie88"},"content":"        Applicant firstApplicant \u003d model.getFilteredApplicantList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"jingjie88"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(firstApplicant).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"jingjie88"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"jingjie88"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"jingjie88"},"content":"    public void execute_duplicateApplicantFilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"jingjie88"},"content":"        showApplicantAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"Chen1x"},"content":"        // edit applicant in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"jingjie88"},"content":"        Applicant applicantInList \u003d model.getAddressBook().getApplicantList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"jingjie88"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"jingjie88"},"content":"                new EditApplicantDescriptorBuilder(applicantInList).build());","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"jingjie88"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"jingjie88"},"content":"    public void execute_invalidApplicantIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"jingjie88"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"jingjie88"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"jingjie88"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"jingjie88"},"content":"    public void execute_invalidApplicantIndexFilteredList_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"jingjie88"},"content":"        showApplicantAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"jingjie88"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"jingjie88"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getApplicantList().size());","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"jingjie88"},"content":"                new EditApplicantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"jingjie88"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"jingjie88"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"jingjie88"},"content":"        EditCommand.EditApplicantDescriptor copyDescriptor \u003d new EditCommand.EditApplicantDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"jingjie88"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"jingjie88"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"jingjie88"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"jingjie88"},"content":"        EditCommand.EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"jingjie88"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editApplicantDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"jingjie88"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editApplicantDescriptor\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"jingjie88"},"content":"                + editApplicantDescriptor + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jingjie88":60,"-":122,"Chen1x":6}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.Messages.MESSAGE_APPLICANTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.CARL;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.ELLE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.FIONA;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"Chen1x"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"jingjie88"},"content":"    public void execute_zeroKeywords_noApplicantFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"jingjie88"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"jingjie88"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"jingjie88"},"content":"    public void execute_multipleKeywords_multipleApplicantsFound() {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPLICANTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"jingjie88"},"content":"        expectedModel.updateFilteredApplicantList(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"jingjie88"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredApplicantList());","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jingjie88":14,"-":76,"Chen1x":1}},{"path":"src/test/java/seedu/address/logic/commands/FindInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INTERVIEWS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":" * Contains integration tests (interaction with the Model) for {@code FindInterviewCommand}.","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"public class FindInterviewCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"                new JobContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"                new JobContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand findFirstCommand \u003d new FindInterviewCommand(firstPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand findSecondCommand \u003d new FindInterviewCommand(secondPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand findFirstCommandCopy \u003d new FindInterviewCommand(firstPredicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"Jonyxzx"},"content":"    public void execute_zeroKeywords_noInterviewFound() {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERVIEWS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand command \u003d new FindInterviewCommand(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"Jonyxzx"},"content":"        expectedModel.updateFilteredInterviewList(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"Jonyxzx"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredInterviewList());","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"Jonyxzx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand findInterviewCommand \u003d new FindInterviewCommand(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Jonyxzx"},"content":"        String expected \u003d FindInterviewCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(expected, findInterviewCommand.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"Jonyxzx"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"Jonyxzx"},"content":"    private JobContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"Jonyxzx"},"content":"        return new JobContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":78,"jingjie88":1}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showApplicantAtIndex;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        showApplicantAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jingjie88":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/ListFreeTimeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"class ListFreeTimeCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"    void testCommandWordNotNull() {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(ListFreeTimeCommand.COMMAND_WORD);","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"    void testCommandWordNotNull2() {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(ListFreeTimeCommand.MESSAGE_LIST_FREETIME_SUCCESS);","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"    void testCommandWordNotNull3() {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(ListFreeTimeCommand.MESSAGE_LIST_FREETIME_SUCCESS);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"    void testFormatFreeTimeSuccess() {","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        LocalDateTime today \u003d LocalDateTime.now().plusDays(1);","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"        ListFreeTimeCommand listFreeTimeCommand \u003d new ListFreeTimeCommand(new Time(today));","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"        String expectedMessage \u003d \"Free times on \" + today.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"                + \":\\nfrom: 09:00 to: 17:00\\n\";","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"        assertCommandSuccess(listFreeTimeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"jingjie88":1,"kiwibang":43}},{"path":"src/test/java/seedu/address/logic/commands/ListInterviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showInterviewAtIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListInterviewCommand.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3 ListCommandTest class","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"public class ListInterviewCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"    private Model model;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertCommandSuccess(new ListInterviewCommand(), model, ListInterviewCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void execute_listIsFiltered_showsSameList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"        showInterviewAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertCommandSuccess(new ListInterviewCommand(), model, ListInterviewCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"JasonLCY-Temp":40}},{"path":"src/test/java/seedu/address/logic/commands/ListInterviewsTodayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBookWithNoInterviews;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"class ListInterviewsTodayCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"    private Model model;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"    private Model modelWithNoInterviews;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"        model \u003d new ModelManager(getTypicalAddressBookWithNoInterviews(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"        modelWithNoInterviews \u003d new ModelManager(getTypicalAddressBookWithNoInterviews(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"        assertCommandSuccess(new ListInterviewsTodayCommand(), model,","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"                ListInterviewsTodayCommand.MESSAGE_SUCCESS, modelWithNoInterviews);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiwibang":28}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"        Interview interviewToMark \u003d model.getFilteredInterviewList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_INTERVIEW_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"                Messages.formatInterview(interviewToMark));","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"        Interview doneInterview \u003d new Interview(","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"                interviewToMark.getInterviewApplicant(),","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"                interviewToMark.getJobRole(),","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"                interviewToMark.getRating(),","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"                interviewToMark.getInterviewStartTime(),","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"                interviewToMark.getInterviewEndTime(),","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"                 true);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        expectedModel.setInterview(interviewToMark, doneInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jingjie88":44,"kiwibang":3}},{"path":"src/test/java/seedu/address/logic/commands/RateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Rating;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"public class RateCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    private Rating testRating \u003d new Rating(\"2.0\");","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        Interview interviewToRate \u003d model.getFilteredInterviewList().get(INDEX_THIRD.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"        RateCommand rateCommand \u003d new RateCommand(INDEX_THIRD, testRating);","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        String expectedMessage \u003d String.format(RateCommand.MESSAGE_RATE_INTERVIEW_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"                Messages.formatInterview(interviewToRate));","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"        Interview ratedInterview \u003d new Interview(","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"                interviewToRate.getInterviewApplicant(),","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"                interviewToRate.getJobRole(),","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"                testRating,","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"                interviewToRate.getInterviewStartTime(),","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"                interviewToRate.getInterviewEndTime(),","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"                interviewToRate.isDone());","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"        expectedModel.setInterview(interviewToRate, ratedInterview);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"        assertCommandSuccess(rateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredApplicantList().size() + 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"        RateCommand rateCommand \u003d new RateCommand(outOfBoundIndex, testRating);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"        assertCommandFailure(rateCommand, model, Messages.MESSAGE_INVALID_INTERVIEW_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"    public void execute_interviewNotYetDone_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"        Interview interviewToRate \u003d model.getFilteredInterviewList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Jonyxzx"},"content":"        RateCommand rateCommand \u003d new RateCommand(INDEX_FIRST, testRating);","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Jonyxzx"},"content":"        String expectedMessage \u003d String.format(RateCommand.MESSAGE_NOT_DONE,","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Jonyxzx"},"content":"                Messages.formatInterview(interviewToRate));","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Jonyxzx"},"content":"        assertCommandFailure(rateCommand, model, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Jonyxzx"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Jonyxzx"},"content":"        RateCommand rateFirstCommand \u003d new RateCommand(INDEX_FIRST, testRating);","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Jonyxzx"},"content":"        RateCommand rateSecondCommand \u003d new RateCommand(INDEX_SECOND, testRating);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Jonyxzx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(rateFirstCommand.equals(rateFirstCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Jonyxzx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Jonyxzx"},"content":"        RateCommand rateFirstCommandCopy \u003d new RateCommand(INDEX_FIRST, testRating);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(rateFirstCommand.equals(rateFirstCommandCopy));","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Jonyxzx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(rateFirstCommand.equals(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"Jonyxzx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(rateFirstCommand.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"Jonyxzx"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(rateFirstCommand.equals(rateSecondCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"Jonyxzx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"Jonyxzx"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"Jonyxzx"},"content":"        Rating newRating \u003d new Rating(\"1.0\");","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"Jonyxzx"},"content":"        RateCommand rateCommand \u003d new RateCommand(targetIndex, newRating);","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"Jonyxzx"},"content":"        String expected \u003d RateCommand.class.getCanonicalName()","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"Jonyxzx"},"content":"                + \"{targetIndex\u003d\" + targetIndex + \", \"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"Jonyxzx"},"content":"                + \"newRating\u003d\" + newRating + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(expected, rateCommand.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jonyxzx":100}},{"path":"src/test/java/seedu/address/logic/commands/SortRateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"public class SortRateCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"    private Model model;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    public void execute_listIsNotRated_showsSameList() {","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"        assertCommandSuccess(new SortRateCommand(), model, SortRateCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jonyxzx":28}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedApplicant));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"        Applicant expectedApplicantMultipleTags \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"jingjie88"},"content":"                new ApplicantBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"                new AddCommand(expectedApplicantMultipleTags));","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"Chen1x"},"content":"        String validExpectedApplicantString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"Chen1x"},"content":"                validExpectedApplicantString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"Chen1x"},"content":"                        + validExpectedApplicantString,","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedApplicantString,","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedApplicantString,","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedApplicantString,","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedApplicantString,","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"Chen1x"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"jingjie88"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"jingjie88"},"content":"                new AddCommand(expectedApplicant));","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jingjie88":15,"-":166,"Chen1x":15}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.ApplicantPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantUtil;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.testutil.InterviewUtil;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.testutil.TypicalInterviews;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ApplicantUtil.getAddCommand(applicant));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"        assertEquals(new AddCommand(applicant), command);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void parseCommand_addInterview() throws Exception {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview interview \u003d TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"        Index index \u003d INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"        String addCommand \u003d InterviewUtil.getAddCommand(index, interview);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"        AddInterviewCommand command \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"kiwibang"},"content":"                (AddInterviewCommand) parser.parseCommand(addCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"kiwibang"},"content":"        AddInterviewCommand duplicate \u003d new AddInterviewCommand(index,","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"                interview.getJobRole(),","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"                interview.getInterviewStartTime(),","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"                interview.getInterviewEndTime()","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"kiwibang"},"content":"        );","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"kiwibang"},"content":"        assertEquals(duplicate, command);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"jingjie88"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"jingjie88"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder(applicant).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"jingjie88"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + ApplicantUtil.getEditApplicantDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"        assertEquals(new EditCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_NAME","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"jingjie88"},"content":"        Predicate\u003cApplicant\u003e applicantPredicate \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"                new ApplicantPredicate(Arrays.asList(new NameContainsKeywordsPredicate(keywords)));","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"        assertEquals(new FindCommand(applicantPredicate), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"JasonLCY-Temp":6,"jingjie88":30,"kiwibang":6,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST));","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jingjie88":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/DeleteInterviewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.DeleteInterviewCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":" * Adapted from AB3 DeleteCommandParserTest class","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"public class DeleteInterviewCommandParserTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    private DeleteInterviewCommandParser parser \u003d new DeleteInterviewCommandParser();","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertParseSuccess(parser, \"1\", new DeleteInterviewCommand(INDEX_FIRST));","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"                DeleteInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"JasonLCY-Temp":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"Chen1x"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Applicant} being edited,","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"jingjie88"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"jingjie88"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"jingjie88"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"        EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"jingjie88"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"jingjie88"},"content":"        EditCommand.EditApplicantDescriptor descriptor \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"jingjie88"},"content":"                new EditApplicantDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"jingjie88"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"jingjie88"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"jingjie88"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"jingjie88"},"content":"        descriptor \u003d new EditApplicantDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"jingjie88"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"jingjie88"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"jingjie88"},"content":"        EditCommand.EditApplicantDescriptor descriptor \u003d new EditApplicantDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jingjie88":23,"-":185,"Chen1x":1}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.ApplicantPredicate;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"                new FindCommand(","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"                        new ApplicantPredicate(","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"                                Arrays.asList(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")))));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jingjie88":8,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/FindInterviewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.FindInterviewCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.JobContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"public class FindInterviewCommandParserTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    private FindInterviewCommandParser parser \u003d new FindInterviewCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindInterviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_validArgs_returnsFindInterviewCommand() {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"        FindInterviewCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"                new FindInterviewCommand(","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"                        new JobContainsKeywordsPredicate(Arrays.asList(\"Software-Engineer\", \"Data-Analyst\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"        assertParseSuccess(parser, \"Software-Engineer Data-Analyst\", expectedFindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"        assertParseSuccess(parser, \" \\n Software-Engineer \\n \\t Data-Analyst  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"Jonyxzx":37}},{"path":"src/test/java/seedu/address/logic/parser/ListFreeTimeCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.commands.ListFreeTimeCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"class ListFreeTimeCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"    private final ListFreeTimeCommandParser parser \u003d new ListFreeTimeCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"    public void parse_validArgs_returnsListFreeTimeCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"        assertParseSuccess(parser, \"1/11/2024\",","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"                new ListFreeTimeCommand(","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"                        new Time(LocalDateTime.of(2024, 11, 1, 0, 0))));","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"kiwibang":21}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"jingjie88":5}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Rating;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"@SuppressWarnings(\"checkstyle:Regexp\")","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"    private static final String INVALID_RATING \u003d \"-0.1\";","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"    private static final String VALID_RATING \u003d \"1.3\";","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"Jonyxzx"},"content":"    public void parseRating_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"Jonyxzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRating((String) null));","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"Jonyxzx"},"content":"    public void parseRating_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"Jonyxzx"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRating(INVALID_RATING));","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"Jonyxzx"},"content":"    public void parseRating_validValueWithoutWhitespace_returnsRating() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"Jonyxzx"},"content":"        Rating expectedRating \u003d new Rating(VALID_RATING);","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(expectedRating, ParserUtil.parseRating(VALID_RATING));","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"Jonyxzx"},"content":"    public void parseRating_validValueWithWhitespace_returnsTrimmedRating() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"Jonyxzx"},"content":"        String ratingWithWhitespace \u003d WHITESPACE + VALID_RATING + WHITESPACE;","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"Jonyxzx"},"content":"        Rating expectedRating \u003d new Rating(VALID_RATING);","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(expectedRating, ParserUtil.parseRating(ratingWithWhitespace));","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"Jonyxzx":27,"jingjie88":7,"-":189}},{"path":"src/test/java/seedu/address/logic/parser/RateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.commands.RateCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Rating;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"public class RateCommandParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"    private RateCommandParser parser \u003d new RateCommandParser();","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_validArgs_returnsRateCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"        assertParseSuccess(parser, \"1 1.0\", new RateCommand((INDEX_FIRST), new Rating(\"1.0\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_missingArgs_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_missingRating_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        assertParseFailure(parser, \"1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_missingIndex_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"        assertParseFailure(parser, \"3.0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_invalidRating_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"        assertParseFailure(parser, \"1 a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"        assertParseFailure(parser, \"a 1.0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jonyxzx":47}},{"path":"src/test/java/seedu/address/logic/parser/TimeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"class TimeParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"    private static final LocalDateTime DEFAULT_DATE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"            LocalDateTime.of(1970, 1, 1, 0, 0);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"    private final Logger logger \u003d Logger.getLogger(\"TimeParserTestLogger\");","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"    /*","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"     * Tests for the timeParser class","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"    void testTimeParserDefaultDate() {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"        logger.log(Level.INFO, \"Tests that field does not disappear\");","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"        assertEquals(DEFAULT_DATE, TimeParser.DEFAULT_DATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"    void testTimeParser_arrayNotNull() {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"        assertNotNull(TimeParser.DATE_FORMATS);","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"    void testMissingTimeErrorMessage() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"Sunday\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"            assertEquals(parseException.getMessage(), \"Please enter an interview time!\");","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"    // TEST TOTALLY INVALID STRINGS","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"    void testParseDateInvalidDateUnsuccessfulParse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"whenever I say so\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"    // TESTS FOR VALID DATES WITH DAY AND TIME","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"kiwibang"},"content":"    void testParseDateDayIncompleteUnsuccessfulParse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"T 1630\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"kiwibang"},"content":"    void testParseDateDayIncompleteUnsuccessfulParse2() {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"Tu 1630\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"kiwibang"},"content":"    void testParseDateDayAnd24hTimeWithMinutesSuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"Tue 1630\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"kiwibang"},"content":"    void testParseDateDayAnd12hTimeWithMinutesSuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"Tue 4.30pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"kiwibang"},"content":"    // TODO: FIX THIS FROM PASSING","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"kiwibang"},"content":"    void testParseDateDayAnd12hTimeWithoutMinutesUnsuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"Tue 4amdfjs\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"kiwibang"},"content":"    void testParseDateDayAnd12hTimeWithoutMinutesSuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"Tue 4pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"kiwibang"},"content":"    // TESTS FOR VALID DATES WITH YEAR, MONTH, DAY OF MONTH, AND TIME","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTimeSuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"21/12/2024 5pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime2SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"21/12/24 1730\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime3SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"21-12-2024 1730\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime4SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"21-12-2024 1730pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime5SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"15 Dec 2023 1.30pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime6SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"31 mar 2099 1453\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime7SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"12-12-2023 1647\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime8SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"21/12/2024 5.30pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime9SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"21/12/2024 5pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime10SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"21/12/24 5.30pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"kiwibang"},"content":"    void testParseDateYearMonthDayTime11SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"21-12-2024 5pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"kiwibang"},"content":"    // TESTS FOR VALID DATES WITH MONTH, DAY OF MONTH, AND TIME","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"kiwibang"},"content":"    void testParseDateMonthDayTime2SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"15 Jan 2.13pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"kiwibang"},"content":"    void testParseDateMonthDayTime3SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"15 Jan 1456\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"kiwibang"},"content":"    void testParseDateMonthDayTime5SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"15/01 1456\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"kiwibang"},"content":"    void testParseDateMonthDayTime6UnsuccessfulParse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"15/13 1456\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"kiwibang"},"content":"    void testParseDateMonthDayTime8SuccessfulParse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"kiwibang"},"content":"        TimeParser.parseDate(\"16 May 3.15pm\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"kiwibang"},"content":"    // TESTS FOR VALID DATES BUT WITH MISSING TIMES","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"kiwibang"},"content":"    void testParseDayOnlyUnsuccessfulParse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"Tue\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"kiwibang"},"content":"    void testParseDayOnlyUnsuccessfulParse2() {","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"Tuesday\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"kiwibang"},"content":"    void testParseDayOnlyUnsuccessfulParse3() {","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"Tues\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"kiwibang"},"content":"    void testParseDayOnlyUnsuccessfulParse4() {","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"Tuesd\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"kiwibang"},"content":"    void testParseDayOnlyUnsuccessfulParse5() {","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"Tuesda\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"kiwibang"},"content":"    void testParseDateParseDateWithDdMmYyyyUnsuccessfulParse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"01/01/2099\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException ignored) {","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"kiwibang"},"content":"    void testParseDateParseDateWithPastDateUnsuccessfulParse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"kiwibang"},"content":"        boolean hasError \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"kiwibang"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"kiwibang"},"content":"            TimeParser.parseDate(\"01/01/1970\", false);","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"kiwibang"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"kiwibang"},"content":"            hasError \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"kiwibang"},"content":"        assertTrue(hasError);","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"kiwibang":264}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"        assertEquals(Collections.emptyList(), addressBook.getApplicantList());","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"    public void resetData_withDuplicateApplicants_throwsDuplicateApplicantException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Chen1x"},"content":"        // Two applicants with the same identity fields","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        List\u003cApplicant\u003e newApplicants \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newApplicants);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"Chen1x"},"content":"    public void hasApplicant_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasApplicant(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"Chen1x"},"content":"    public void hasApplicant_applicantNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"        assertFalse(addressBook.hasApplicant(ALICE));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"Chen1x"},"content":"    public void hasApplicant_applicantInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jingjie88"},"content":"        addressBook.addApplicant(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"jingjie88"},"content":"        assertTrue(addressBook.hasApplicant(ALICE));","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasInterview(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_interviewNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(addressBook.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_interviewInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"JasonLCY-Temp"},"content":"        addressBook.addInterview(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(addressBook.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"Chen1x"},"content":"    public void hasApplicant_applicantWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"jingjie88"},"content":"        addressBook.addApplicant(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"jingjie88"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"        assertTrue(addressBook.hasApplicant(editedAlice));","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"Chen1x"},"content":"    public void getApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getApplicantList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"jingjie88"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{applicants\u003d\" + addressBook.getApplicantList() + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"Chen1x"},"content":"     * A stub ReadOnlyAddressBook whose applicants list can violate interface constraints.","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"        private final ObservableList\u003cInterview\u003e interviews \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"jingjie88"},"content":"        private final ObservableList\u003cApplicant\u003e applicants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"jingjie88"},"content":"        AddressBookStub(Collection\u003cApplicant\u003e applicants) {","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"jingjie88"},"content":"            this.applicants.setAll(applicants);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"jingjie88"},"content":"        public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"jingjie88"},"content":"            return applicants;","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"        public ObservableList\u003cInterview\u003e getInterviewList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"            return interviews;","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"JasonLCY-Temp":18,"jingjie88":27,"-":80,"Chen1x":7}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.exceptions.InterviewNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"jingjie88"},"content":"    public void hasApplicant_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasApplicant(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"    public void hasApplicant_applicantNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(modelManager.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"        assertFalse(modelManager.hasApplicant(ALICE));","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"jingjie88"},"content":"    public void hasApplicant_applicantInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"        modelManager.addApplicant(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"        assertTrue(modelManager.hasApplicant(ALICE));","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_interviewInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"JasonLCY-Temp"},"content":"        modelManager.addInterview(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(modelManager.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_nullInterview_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasInterview(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void hasInterview_interviewNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(modelManager.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void addInterview_successfulInterviewAddition_returnTrue() {","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"JasonLCY-Temp"},"content":"        modelManager.addInterview(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(modelManager.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void deleteInterview_successfulInterviewDeletion_returnTrue() {","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"JasonLCY-Temp"},"content":"        modelManager.addApplicant(ALICE);","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"JasonLCY-Temp"},"content":"        modelManager.addInterview(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(modelManager.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"JasonLCY-Temp"},"content":"        modelManager.deleteInterview(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(modelManager.hasInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void deleteInterview_interviewNotInAddressBook_throwInterviewNotFoundException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"JasonLCY-Temp"},"content":"        modelManager.addApplicant(ALICE);","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertThrows(InterviewNotFoundException.class, () -\u003e modelManager.deleteInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"jingjie88"},"content":"    public void getFilteredApplicantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"JasonLCY-Temp"},"content":"        modelManager.addApplicant(ALICE);","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"jingjie88"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredApplicantList().remove(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"jingjie88"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withApplicant(ALICE).withApplicant(BENSON).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":162,"author":{"gitId":"jingjie88"},"content":"        modelManager.updateFilteredApplicantList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":166,"author":{"gitId":"jingjie88"},"content":"        modelManager.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"JasonLCY-Temp":39,"jingjie88":17,"-":117}},{"path":"src/test/java/seedu/address/model/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kiwibang"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"kiwibang"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.interview.UniqueInterviewList;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"kiwibang"},"content":"import seedu.address.testutil.TypicalInterviews;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"kiwibang"},"content":"public class TimeTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kiwibang"},"content":"    /*","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kiwibang"},"content":"     * Tests for the method which sorts the interviews in chronological order","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"kiwibang"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"    void testSortInterviews() {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"        List\u003cInterview\u003e interviewList \u003d TypicalInterviews.getTypicalInterviews();","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"        UniqueInterviewList uniqueInterviewList \u003d new UniqueInterviewList();","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"        uniqueInterviewList.setInterviews(interviewList);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"        List\u003cInterview\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"kiwibang"},"content":"        expected.add(TypicalInterviews.STANDARD_INTERVIEW_3);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"        expected.add(TypicalInterviews.STANDARD_INTERVIEW_4);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"        expected.add(TypicalInterviews.STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"        expected.add(TypicalInterviews.STANDARD_INTERVIEW_2);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"        List\u003cInterview\u003e actual \u003d Time.sortInterviewsInChronologicalAscendingOrder(uniqueInterviewList);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kiwibang":31}},{"path":"src/test/java/seedu/address/model/applicant/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jingjie88":1,"-":55}},{"path":"src/test/java/seedu/address/model/applicant/ApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"public class ApplicantTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"        Applicant applicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e applicant.getTags().remove(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"    public void isSameApplicant() {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"        assertTrue(ALICE.isSameApplicant(ALICE));","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"        assertFalse(ALICE.isSameApplicant(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"        assertTrue(ALICE.isSameApplicant(editedAlice));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"        assertFalse(ALICE.isSameApplicant(editedAlice));","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        Applicant editedBob \u003d new ApplicantBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"        assertFalse(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"        editedBob \u003d new ApplicantBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"        assertFalse(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"        Applicant aliceCopy \u003d new ApplicantBuilder(ALICE).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"Chen1x"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"jingjie88"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"jingjie88"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"jingjie88"},"content":"        String expected \u003d Applicant.class.getCanonicalName()","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"                + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \", hasInterview\u003d\" + ALICE.hasInterview() + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jingjie88":28,"-":72,"Chen1x":1}},{"path":"src/test/java/seedu/address/model/applicant/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jingjie88":1,"-":87}},{"path":"src/test/java/seedu/address/model/applicant/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"Chen1x"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"        assertTrue(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"jingjie88"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"jingjie88"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"jingjie88"},"content":"        assertFalse(predicate.test(new ApplicantBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jingjie88":10,"-":75,"Chen1x":1}},{"path":"src/test/java/seedu/address/model/applicant/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jingjie88":1,"-":59}},{"path":"src/test/java/seedu/address/model/applicant/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jingjie88":1,"-":59}},{"path":"src/test/java/seedu/address/model/applicant/UniqueApplicantListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"public class UniqueApplicantListTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"    private final UniqueApplicantList uniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    public void contains_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.contains(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"    public void contains_applicantNotInList_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"        assertFalse(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"    public void contains_applicantInList_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        assertTrue(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"    public void contains_applicantWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"        assertTrue(uniqueApplicantList.contains(editedAlice));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"    public void add_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.add(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"jingjie88"},"content":"    public void add_duplicateApplicant_throwsDuplicateApplicantException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"jingjie88"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.add(ALICE));","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant_nullTargetApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(null, ALICE));","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant_nullEditedApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, null));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant_targetApplicantNotInList_throwsApplicantNotFoundException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, ALICE));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant_editedApplicantIsSameApplicant_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.setApplicant(ALICE, ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"jingjie88"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"        expectedUniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant_editedApplicantHasSameIdentity_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"jingjie88"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.setApplicant(ALICE, editedAlice);","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"jingjie88"},"content":"        expectedUniqueApplicantList.add(editedAlice);","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"jingjie88"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant_editedApplicantHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.setApplicant(ALICE, BOB);","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"jingjie88"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"jingjie88"},"content":"    public void setApplicant_editedApplicantHasNonUniqueIdentity_throwsDuplicateApplicantException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(BOB);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"jingjie88"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, BOB));","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"jingjie88"},"content":"    public void remove_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.remove(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"jingjie88"},"content":"    public void remove_applicantDoesNotExist_throwsApplicantNotFoundException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"jingjie88"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.remove(ALICE));","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"jingjie88"},"content":"    public void remove_existingApplicant_removesApplicant() {","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.remove(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"jingjie88"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"jingjie88"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"jingjie88"},"content":"    public void setApplicants_nullUniqueApplicantList_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((UniqueApplicantList) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"jingjie88"},"content":"    public void setApplicants_uniqueApplicantList_replacesOwnListWithProvidedUniqueApplicantList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"jingjie88"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"jingjie88"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.setApplicants(expectedUniqueApplicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"jingjie88"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"jingjie88"},"content":"    public void setApplicants_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"jingjie88"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((List\u003cApplicant\u003e) null));","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"jingjie88"},"content":"    public void setApplicants_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"jingjie88"},"content":"        List\u003cApplicant\u003e applicantList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"jingjie88"},"content":"        uniqueApplicantList.setApplicants(applicantList);","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"jingjie88"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"jingjie88"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"jingjie88"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"jingjie88"},"content":"    public void setApplicants_listWithDuplicateApplicants_throwsDuplicateApplicantException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"jingjie88"},"content":"        List\u003cApplicant\u003e listWithDuplicateApplicants \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"jingjie88"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"jingjie88"},"content":"                uniqueApplicantList.setApplicants(listWithDuplicateApplicants));","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"jingjie88"},"content":"            -\u003e uniqueApplicantList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"jingjie88"},"content":"        assertEquals(uniqueApplicantList.asUnmodifiableObservableList().toString(), uniqueApplicantList.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jingjie88":85,"-":91}},{"path":"src/test/java/seedu/address/model/interview/InterviewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"JasonLCY-Temp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_2;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_DIFFERENT_APPLICANT;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_DIFFERENT_ROLE;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.testutil.TypicalInterviews.STANDARD_INTERVIEW_DIFFERENT_TIME;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":" * Tests for the Interview object methods","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Chen1x"},"content":" * Adapted from AB3\u0027s PersonTest class","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"public class InterviewTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"    public void isSameInterview() {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"        assertTrue(STANDARD_INTERVIEW.isSameInterview(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"JasonLCY-Temp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"        assertFalse(STANDARD_INTERVIEW.isSameInterview(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"        System.out.println(STANDARD_INTERVIEW.isSameInterview(STANDARD_INTERVIEW_DIFFERENT_ROLE));","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"        System.out.println(STANDARD_INTERVIEW);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"        System.out.println(STANDARD_INTERVIEW_DIFFERENT_ROLE);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same Applicant and time, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"        assertTrue(STANDARD_INTERVIEW.isSameInterview(STANDARD_INTERVIEW_DIFFERENT_ROLE));","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different Applicant, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"        assertFalse(STANDARD_INTERVIEW.isSameInterview(STANDARD_INTERVIEW_DIFFERENT_APPLICANT));","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        // different Time, all other attributes same -\u003e return true","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        assertTrue(STANDARD_INTERVIEW.isSameInterview(STANDARD_INTERVIEW_DIFFERENT_TIME));","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"JasonLCY-Temp"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"JasonLCY-Temp"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview standardInterviewCopy \u003d new Interview(STANDARD_INTERVIEW.getInterviewApplicant(),","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.getJobRole(), STANDARD_INTERVIEW.getRating(),","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.getInterviewStartTime(),","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.getInterviewEndTime(), STANDARD_INTERVIEW.isDone());","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(STANDARD_INTERVIEW.equals(standardInterviewCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"JasonLCY-Temp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertTrue(STANDARD_INTERVIEW.equals(STANDARD_INTERVIEW));","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"JasonLCY-Temp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(5));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"Chen1x"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(STANDARD_INTERVIEW_2));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different Applicant -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"JasonLCY-Temp"},"content":"        Interview editedStandardinterview \u003d new Interview(STANDARD_INTERVIEW_2.getInterviewApplicant(),","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.getJobRole(), STANDARD_INTERVIEW.getRating(),","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.getInterviewStartTime(), STANDARD_INTERVIEW.getInterviewEndTime(),","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.isDone());","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(editedStandardinterview));","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different job role -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"JasonLCY-Temp"},"content":"        editedStandardinterview \u003d new Interview(STANDARD_INTERVIEW.getInterviewApplicant(),","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW_2.getJobRole(), STANDARD_INTERVIEW.getRating(),","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.getInterviewStartTime(), STANDARD_INTERVIEW.getInterviewEndTime(),","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.isDone());","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(editedStandardinterview));","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"JasonLCY-Temp"},"content":"        // different Timing -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"JasonLCY-Temp"},"content":"        editedStandardinterview \u003d new Interview(STANDARD_INTERVIEW.getInterviewApplicant(),","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.getJobRole(), STANDARD_INTERVIEW.getRating(),","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW_2.getInterviewStartTime(), STANDARD_INTERVIEW.getInterviewEndTime(),","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"kiwibang"},"content":"                STANDARD_INTERVIEW.isDone());","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"JasonLCY-Temp"},"content":"        assertFalse(STANDARD_INTERVIEW.equals(editedStandardinterview));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"JasonLCY-Temp":58,"jingjie88":8,"kiwibang":14,"Chen1x":2}},{"path":"src/test/java/seedu/address/model/interview/JobContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.testutil.InterviewBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"public class JobContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate firstPredicate \u003d new JobContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate secondPredicate \u003d new JobContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate firstPredicateCopy \u003d new JobContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"    public void test_jobContainsKeywords_returnsTrue() throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"        // One keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"                new JobContainsKeywordsPredicate(Collections.singletonList(\"Engineer\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(predicate.test(new InterviewBuilder().withJobRole(\"Engineer\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"        // Multiple keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"        predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"Engineer\", \"Analyst\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(predicate.test(new InterviewBuilder().withJobRole(\"Engineer Analyst\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Jonyxzx"},"content":"        predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"Engineer\", \"Developer\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(predicate.test(new InterviewBuilder().withJobRole(\"Engineer Analyst\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"        predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"enGinEer\", \"aNalySt\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(predicate.test(new InterviewBuilder().withJobRole(\"Engineer Analyst\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Jonyxzx"},"content":"    public void test_jobDoesNotContainKeywords_returnsFalse() throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Jonyxzx"},"content":"        // Zero keywords","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate predicate \u003d new JobContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(predicate.test(new InterviewBuilder().withJobRole(\"Engineer\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Jonyxzx"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Jonyxzx"},"content":"        predicate \u003d new JobContainsKeywordsPredicate(Arrays.asList(\"Analyst\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(predicate.test(new InterviewBuilder().withJobRole(\"Engineer Developer\").build()));","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Jonyxzx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Jonyxzx"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Jonyxzx"},"content":"        JobContainsKeywordsPredicate predicate \u003d new JobContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Jonyxzx"},"content":"        String expected \u003d JobContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jonyxzx":82}},{"path":"src/test/java/seedu/address/model/interview/RatingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.model.interview;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jonyxzx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"public class RatingTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Rating(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    public void constructor_invalidRating_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"        String invalidRating \u003d \"\";","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rating(invalidRating));","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"    public void isValidRating() {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"        // null rating","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"        assertThrows(NullPointerException.class, () -\u003e Rating.isValidRating(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"        // invalid rating","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(Rating.isValidRating(\"\")); // empty string","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(Rating.isValidRating(\"-0.0\")); // negative rating","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(Rating.isValidRating(\"5.1\")); // a number larger than 5.0","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(Rating.isValidRating(\"1.23\")); // not one decimal place","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(Rating.isValidRating(\"1.a\")); // not a number","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"        // valid rating","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(Rating.isValidRating(\"0.0\")); // min value","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(Rating.isValidRating(\"1.4\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(Rating.isValidRating(\"2.6\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(Rating.isValidRating(\"3.8\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(Rating.isValidRating(\"5.0\")); // max value","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"        Rating rating \u003d new Rating(\"5.0\");","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(rating.equals(new Rating(\"5.0\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"        assertTrue(rating.equals(rating));","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(rating.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Jonyxzx"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(rating.equals(5.0f));","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Jonyxzx"},"content":"        assertFalse(rating.equals(new Rating(\"3.0\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Jonyxzx"},"content":"    public void compareRating() {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Jonyxzx"},"content":"        Rating rating1 \u003d new Rating(\"1.2\");","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Jonyxzx"},"content":"        Rating rating2 \u003d new Rating(\"3.6\");","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Jonyxzx"},"content":"        Rating rating3 \u003d new Rating(\"2.4\");","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Jonyxzx"},"content":"        Rating rating4 \u003d new Rating(\"2.4\");","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(2, rating1.compareTo(rating2)); // less than","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(-1, rating2.compareTo(rating3)); // more than","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(0, rating3.compareTo(rating4)); // equals","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Jonyxzx"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Jonyxzx"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Jonyxzx"},"content":"        assertEquals(\"1.2\", new Rating(\"1.2\").toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jonyxzx":78}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.storage.JsonAdaptedApplicant.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"public class JsonAdaptedApplicantTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"    private static final boolean VALID_HAS_INTERVIEW \u003d true;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Chen1x"},"content":"    public void toModelType_validApplicantDetails_returnsApplicant() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(BENSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"Chen1x"},"content":"        assertEquals(BENSON, applicant.toModelType());","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"                new JsonAdaptedApplicant(INVALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Chen1x"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(null, VALID_PHONE,","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Chen1x"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"jingjie88"},"content":"                new JsonAdaptedApplicant(VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Chen1x"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"jingjie88"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"Chen1x"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"jingjie88"},"content":"                new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"jingjie88"},"content":"                        INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Chen1x"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"jingjie88"},"content":"                VALID_TAGS, VALID_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"Chen1x"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"                new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"                        VALID_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"Chen1x"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"jingjie88"},"content":"                null, VALID_TAGS, VALID_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"Chen1x"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"Chen1x"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"jingjie88"},"content":"                new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"jingjie88"},"content":"                        VALID_ADDRESS, invalidTags, VALID_HAS_INTERVIEW);","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"Chen1x"},"content":"        assertThrows(IllegalValueException.class, applicant::toModelType);","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jingjie88":22,"-":77,"Chen1x":21}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.HOON;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalApplicants.IDA;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Chen1x"},"content":"    public void readAddressBook_invalidApplicantAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidApplicantAddressBook.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"Chen1x"},"content":"    public void readAddressBook_invalidAndValidApplicantAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"jingjie88"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidApplicantAddressBook.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"jingjie88"},"content":"        original.addApplicant(HOON);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"jingjie88"},"content":"        original.removeApplicant(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"jingjie88"},"content":"        original.addApplicant(IDA);","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jingjie88":9,"-":99,"Chen1x":2}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"import seedu.address.testutil.TypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"    private static final Path TYPICAL_APPLICANTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalAddressBook.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"    private static final Path INVALID_APPLICANTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidApplicantAddressBook.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    private static final Path DUPLICATE_APPLICANTS_FILE \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateApplicantAddressBook.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"    public void toModelType_typicalAddressBookFile_success() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_APPLICANTS_FILE,","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"        AddressBook typicalAddressBook \u003d TypicalAddressBook.getTypicalAddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"        System.out.println(addressBookFromFile.equals(typicalAddressBook));","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"        assertEquals(addressBookFromFile, typicalAddressBook);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"    public void toModelType_invalidAddressBookFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_APPLICANTS_FILE,","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"jingjie88"},"content":"    public void toModelType_duplicateApplicants_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_APPLICANTS_FILE,","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_APPLICANT,","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jingjie88":14,"kiwibang":1,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jingjie88":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"Chen1x"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withApplicant(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"Chen1x"},"content":"     * Adds a new {@code Applicant} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"    public AddressBookBuilder withApplicant(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"        addressBook.addApplicant(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jingjie88":3,"-":29,"Chen1x":2}},{"path":"src/test/java/seedu/address/testutil/ApplicantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"jingjie88"},"content":" * A utility class to help with building Applicant objects.","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"public class ApplicantBuilder {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    public static final boolean DEFAULT_HAS_INTERVIEW \u003d false;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"    private boolean hasInterview;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"     * Creates a {@code ApplicantBuilder} with the default details.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"    public ApplicantBuilder() {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"        hasInterview \u003d DEFAULT_HAS_INTERVIEW;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"Chen1x"},"content":"     * Initializes the ApplicantBuilder with the data of {@code applicantToCopy}.","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"    public ApplicantBuilder(Applicant applicantToCopy) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"jingjie88"},"content":"        name \u003d applicantToCopy.getName();","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"        phone \u003d applicantToCopy.getPhone();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"        email \u003d applicantToCopy.getEmail();","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"        address \u003d applicantToCopy.getAddress();","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"        tags \u003d new HashSet\u003c\u003e(applicantToCopy.getTags());","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        hasInterview \u003d applicantToCopy.hasInterview();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"     * Sets the {@code Name} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"jingjie88"},"content":"    public ApplicantBuilder withName(String name) {","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"    public ApplicantBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"jingjie88"},"content":"     * Sets the {@code Address} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"jingjie88"},"content":"    public ApplicantBuilder withAddress(String address) {","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"jingjie88"},"content":"     * Sets the {@code Phone} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"jingjie88"},"content":"    public ApplicantBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"jingjie88"},"content":"     * Sets the {@code Email} of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"jingjie88"},"content":"    public ApplicantBuilder withEmail(String email) {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"jingjie88"},"content":"     * Sets the hasInterview field of the {@code Applicant} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"jingjie88"},"content":"    public ApplicantBuilder withHasInterview(boolean hasInterview) {","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"jingjie88"},"content":"        this.hasInterview \u003d hasInterview;","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"jingjie88"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"jingjie88"},"content":"    public Applicant build() {","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"jingjie88"},"content":"        return new Applicant(name, phone, email, address, tags, hasInterview);","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"jingjie88":39,"-":68,"Chen1x":1}},{"path":"src/test/java/seedu/address/testutil/ApplicantUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":" * A utility class for Applicant.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"public class ApplicantUtil {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"     * Returns an add command string for adding the {@code applicant}.","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"    public static String getAddCommand(Applicant applicant) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getApplicantDetails(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"     * Returns the part of command string for the given {@code applicant}\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"    public static String getApplicantDetails(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"        sb.append(PREFIX_NAME + applicant.getName().fullName + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"        sb.append(PREFIX_PHONE + applicant.getPhone().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"        sb.append(PREFIX_EMAIL + applicant.getEmail().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        sb.append(PREFIX_ADDRESS + applicant.getAddress().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        applicant.getTags().stream().forEach(","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"     * Returns the part of command string for the given {@code EditApplicantDescriptor}\u0027s details.","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"    public static String getEditApplicantDescriptorDetails(EditApplicantDescriptor descriptor) {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"jingjie88":16,"-":46}},{"path":"src/test/java/seedu/address/testutil/EditApplicantDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.logic.commands.EditCommand.EditApplicantDescriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":" * A utility class to help with building EditApplicantDescriptor objects.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"public class EditApplicantDescriptorBuilder {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"    private EditCommand.EditApplicantDescriptor descriptor;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"    public EditApplicantDescriptorBuilder() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"        descriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"jingjie88"},"content":"    public EditApplicantDescriptorBuilder(EditApplicantDescriptor descriptor) {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"        this.descriptor \u003d new EditApplicantDescriptor(descriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"     * Returns an {@code EditApplicantDescriptor} with fields containing {@code applicant}\u0027s details","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"    public EditApplicantDescriptorBuilder(Applicant applicant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"        descriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"        descriptor.setName(applicant.getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"        descriptor.setPhone(applicant.getPhone());","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"        descriptor.setEmail(applicant.getEmail());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        descriptor.setAddress(applicant.getAddress());","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"        descriptor.setTags(applicant.getTags());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"        descriptor.setHasInterview(applicant.hasInterview());","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"     * Sets the {@code Name} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"jingjie88"},"content":"    public EditApplicantDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"     * Sets the {@code Phone} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"    public EditApplicantDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"jingjie88"},"content":"     * Sets the {@code Email} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"    public EditApplicantDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"     * Sets the {@code Address} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"jingjie88"},"content":"    public EditApplicantDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"jingjie88"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditApplicantDescriptor}","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"jingjie88"},"content":"    public EditApplicantDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"jingjie88"},"content":"    public EditCommand.EditApplicantDescriptor build() {","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jingjie88":34,"-":55}},{"path":"src/test/java/seedu/address/testutil/InterviewBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jonyxzx"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.parser.TimeParser;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Jonyxzx"},"content":"import seedu.address.model.interview.Rating;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Jonyxzx"},"content":"//@@author jonyxzx","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"Jonyxzx"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jonyxzx"},"content":" * A utility class to help with building Interview objects.","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jonyxzx"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jonyxzx"},"content":"public class InterviewBuilder {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Jonyxzx"},"content":"    public static final Applicant DEFAULT_APPLICANT \u003d TypicalApplicants.ALICE;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Jonyxzx"},"content":"    public static final String DEFAULT_JOBROLE \u003d \"Software Engineer\";","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jonyxzx"},"content":"    public static final String DEFAULT_RATING \u003d \"3.7\";","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jonyxzx"},"content":"    public static final String DEFAULT_STARTTIME \u003d \"12-12-2023 1200\";","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jonyxzx"},"content":"    public static final String DEFAULT_ENDTIME \u003d \"12-12-2023 1300\";","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Jonyxzx"},"content":"    public static final boolean DEFAULT_HAS_DONE \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Jonyxzx"},"content":"    private Applicant applicant;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Jonyxzx"},"content":"    private String jobRole;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Jonyxzx"},"content":"    private Rating rating;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Jonyxzx"},"content":"    private Time startTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"Jonyxzx"},"content":"    private Time endTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"Jonyxzx"},"content":"    private boolean isDone;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Jonyxzx"},"content":"     * Creates a {@code InterviewBuilder} with the default details.","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Jonyxzx"},"content":"    public InterviewBuilder() throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Jonyxzx"},"content":"        this.applicant \u003d DEFAULT_APPLICANT;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"        this.jobRole \u003d DEFAULT_JOBROLE;","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Jonyxzx"},"content":"        this.rating \u003d new Rating(DEFAULT_RATING);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Jonyxzx"},"content":"        this.startTime \u003d TimeParser.parseDate(DEFAULT_STARTTIME, false);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Jonyxzx"},"content":"        this.endTime \u003d TimeParser.parseDate(DEFAULT_ENDTIME, false);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Jonyxzx"},"content":"        this.isDone \u003d DEFAULT_HAS_DONE;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Jonyxzx"},"content":"     * Initializes the InterviewBuilder with the data of {@code interviewToCopy}.","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Jonyxzx"},"content":"    public InterviewBuilder(Interview interviewToCopy) {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Jonyxzx"},"content":"        this.applicant \u003d interviewToCopy.getInterviewApplicant();","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Jonyxzx"},"content":"        this.jobRole \u003d interviewToCopy.getJobRole();","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Jonyxzx"},"content":"        this.rating \u003d interviewToCopy.getRating();","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Jonyxzx"},"content":"        this.startTime \u003d interviewToCopy.getInterviewStartTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Jonyxzx"},"content":"        this.endTime \u003d interviewToCopy.getInterviewEndTime();","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Jonyxzx"},"content":"        this.isDone \u003d interviewToCopy.isDone();","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Jonyxzx"},"content":"     * Sets the {@code Applicant} of the {@code Interview} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Jonyxzx"},"content":"    public InterviewBuilder withApplicant(Applicant applicant) {","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Jonyxzx"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Jonyxzx"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Jonyxzx"},"content":"     * Sets the jobRole field of the {@code Interview} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Jonyxzx"},"content":"    public InterviewBuilder withJobRole(String jobRole) {","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Jonyxzx"},"content":"        this.jobRole \u003d jobRole;","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Jonyxzx"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Jonyxzx"},"content":"     * Sets the {@code Rating} of the {@code Interview} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Jonyxzx"},"content":"    public InterviewBuilder withRating(String rating) {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Jonyxzx"},"content":"        this.rating \u003d new Rating(rating);","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Jonyxzx"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Jonyxzx"},"content":"     * Sets the {@code Start-Time} of the {@code Interview} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Jonyxzx"},"content":"    public InterviewBuilder withStartTime(String startTime) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Jonyxzx"},"content":"        this.startTime \u003d TimeParser.parseDate(startTime, false);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"Jonyxzx"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"Jonyxzx"},"content":"     * Sets the {@code End-Time} of the {@code Interview} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"Jonyxzx"},"content":"    public InterviewBuilder withEndTime(String endTime) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"Jonyxzx"},"content":"        this.endTime \u003d TimeParser.parseDate(endTime, false);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"Jonyxzx"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"Jonyxzx"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"Jonyxzx"},"content":"     * Sets the hasDone field of the {@code Interview} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"Jonyxzx"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"Jonyxzx"},"content":"    public InterviewBuilder withIsDone(boolean isDone) {","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"Jonyxzx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"Jonyxzx"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"Jonyxzx"},"content":"    public Interview build() {","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"Jonyxzx"},"content":"        return new Interview(applicant, jobRole, rating, startTime, endTime, isDone);","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"Jonyxzx"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"Jonyxzx"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"Jonyxzx"},"content":"","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Jonyxzx":106,"kiwibang":1}},{"path":"src/test/java/seedu/address/testutil/InterviewUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPLICANT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"JasonLCY-Temp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_JOB_ROLE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.logic.commands.AddInterviewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":" * A utility class for Interviews.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"public class InterviewUtil {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns an add command string for adding the {@code interview}.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"    public static String getAddCommand(Index index, Interview interview) {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"        return AddInterviewCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"                + PREFIX_APPLICANT","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"                + index.getOneBased() + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"                + getInterviewDetails(interview);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"JasonLCY-Temp"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns the part of command string for the given {@code interview}\u0027s details.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"JasonLCY-Temp"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static String getInterviewDetails(Interview interview) {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"jingjie88"},"content":"        return PREFIX_JOB_ROLE + interview.getJobRole() + \" \"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"jingjie88"},"content":"                + PREFIX_START_TIME + interview.getInterviewStartTimeAsString() + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"                + PREFIX_END_TIME + interview.getInterviewEndTimeAsString();","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"JasonLCY-Temp"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"JasonLCY-Temp":24,"jingjie88":11}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"     * Returns the middle index of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size() / 2);","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"     * Returns the last index of the applicant in the {@code model}\u0027s applicant list.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"jingjie88"},"content":"        return Index.fromOneBased(model.getFilteredApplicantList().size());","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"jingjie88"},"content":"     * Returns the applicant in the {@code model}\u0027s applicant list at {@code index}.","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"jingjie88"},"content":"    public static Applicant getApplicant(Model model, Index index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"jingjie88"},"content":"        return model.getFilteredApplicantList().get(index.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jingjie88":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jingjie88"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"jingjie88"},"content":" * A utility class containing an address book with a list of {@code Applicant} objects","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":" * and list of {@code Interview} objects to be used in tests.","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"jingjie88"},"content":"    private TypicalAddressBook() {} // prevents instantiation","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"jingjie88"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":"     * Returns an {@code AddressBook} with all the typical applicants and interviews.","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"jingjie88"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"jingjie88"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"jingjie88"},"content":"        for (Applicant applicant : TypicalApplicants.getTypicalApplicants()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"jingjie88"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"jingjie88"},"content":"        for (Interview interview : TypicalInterviews.getTypicalInterviews()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"            ab.addInterview(interview);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"        return ab;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"     * Returns an {@code AddressBook} with all the typical applicants but no interviews.","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"kiwibang"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"    public static AddressBook getTypicalAddressBookWithNoInterviews() {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"        for (Applicant applicant : TypicalApplicants.getTypicalApplicants()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"kiwibang"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"        return ab;","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"kiwibang"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"JasonLCY-Temp":2,"jingjie88":25,"kiwibang":11}},{"path":"src/test/java/seedu/address/testutil/TypicalApplicants.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"jingjie88"},"content":" * A utility class containing a list of {@code Applicant} objects to be used in tests.","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"jingjie88"},"content":"public class TypicalApplicants {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant ALICE \u003d new ApplicantBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"jingjie88"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"jingjie88"},"content":"            .withHasInterview(true).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant BENSON \u003d new ApplicantBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"jingjie88"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"jingjie88"},"content":"            .withHasInterview(true).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant CARL \u003d new ApplicantBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"jingjie88"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"            .withHasInterview(true).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant DANIEL \u003d new ApplicantBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"jingjie88"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"jingjie88"},"content":"            .withHasInterview(true).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant ELLE \u003d new ApplicantBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant FIONA \u003d new ApplicantBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant GEORGE \u003d new ApplicantBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant HOON \u003d new ApplicantBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant IDA \u003d new ApplicantBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"jingjie88"},"content":"    // Manually added - Applicant\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant AMY \u003d new ApplicantBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"    public static final Applicant BOB \u003d new ApplicantBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"jingjie88"},"content":"    private TypicalApplicants() {} // prevents instantiation","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"jingjie88"},"content":"    public static List\u003cApplicant\u003e getTypicalApplicants() {","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"jingjie88":25,"-":43}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"jingjie88"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"jingjie88"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"jingjie88"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jingjie88":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalInterviews.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JasonLCY-Temp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"kiwibang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"jingjie88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"jingjie88"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"jingjie88"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"jingjie88"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.Time;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"JasonLCY-Temp"},"content":"import seedu.address.model.interview.Interview;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"kiwibang"},"content":"import seedu.address.model.interview.Rating;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"JasonLCY-Temp"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"JasonLCY-Temp"},"content":" * A utility class containing a list of {@code Interview} objects to be used in tests.","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Chen1x"},"content":" * Adapted from AB3\u0027s TypicalPersons class.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"JasonLCY-Temp"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"JasonLCY-Temp"},"content":"public class TypicalInterviews {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"kiwibang"},"content":"    // TODO: MAKE SAME","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"jingjie88"},"content":"    public static final Interview STANDARD_INTERVIEW \u003d new Interview(TypicalApplicants.ALICE,","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"kiwibang"},"content":"                    \"StandardJobRole\",","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"kiwibang"},"content":"            new Rating(\"2.0\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 12, 21, 19, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 12, 21, 21, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"kiwibang"},"content":"                            false);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"jingjie88"},"content":"    public static final Interview STANDARD_INTERVIEW_2 \u003d new Interview(TypicalApplicants.BENSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"kiwibang"},"content":"                    \"StandardJobRole2\",","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"kiwibang"},"content":"            new Rating(\"2.0\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2025, 12, 21, 14, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2025, 12, 21, 16, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"kiwibang"},"content":"                            false);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"jingjie88"},"content":"    public static final Interview STANDARD_INTERVIEW_3 \u003d new Interview(TypicalApplicants.CARL,","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"kiwibang"},"content":"                    \"StandardJobRole3\",","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"kiwibang"},"content":"             new Rating(\"2.0\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 5, 21, 9, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 5, 21, 11, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Jonyxzx"},"content":"                            true","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"kiwibang"},"content":"                            );","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"jingjie88"},"content":"    public static final Interview STANDARD_INTERVIEW_4 \u003d new Interview(TypicalApplicants.DANIEL,","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"kiwibang"},"content":"                    \"StandardJobRole4\",","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"kiwibang"},"content":"                                         new Rating(\"2.0\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 7, 12, 10, 45)),","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 7, 12, 12, 45)),","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"kiwibang"},"content":"                            false","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"kiwibang"},"content":"                            );","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"jingjie88"},"content":"    public static final Interview STANDARD_INTERVIEW_DIFFERENT_ROLE \u003d new Interview(TypicalApplicants.ALICE,","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"kiwibang"},"content":"                    \"DifferentStandardJobRole\",","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"kiwibang"},"content":"                        new Rating(\"2.0\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 12, 21, 19, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 12, 21, 21, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"kiwibang"},"content":"            false);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"JasonLCY-Temp"},"content":"    public static final Interview STANDARD_INTERVIEW_DIFFERENT_APPLICANT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"kiwibang"},"content":"            new Interview(TypicalApplicants.ELLE, \"StandardJobRole\",","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"kiwibang"},"content":"                  new Rating(\"2.0\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"kiwibang"},"content":"                    new Time(LocalDateTime.of(2024, 10, 27, 14, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"kiwibang"},"content":"                    new Time(LocalDateTime.of(2024, 10, 27, 16, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"kiwibang"},"content":"                                    false","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"kiwibang"},"content":"                                    );","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"jingjie88"},"content":"    public static final Interview STANDARD_INTERVIEW_DIFFERENT_TIME \u003d new Interview(TypicalApplicants.ALICE,","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"kiwibang"},"content":"                    \"StandardJobRole\",","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"kiwibang"},"content":"            new Rating(\"2.0\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 11, 6, 15, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"kiwibang"},"content":"            new Time(LocalDateTime.of(2024, 11, 6, 17, 0)),","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"kiwibang"},"content":"                            false);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"Chen1x"},"content":"    /** Prevents instantiation - Code reused and Adapted from AB3\u0027s TypicalPersons.java */","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"JasonLCY-Temp"},"content":"    private TypicalInterviews() {}","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"JasonLCY-Temp"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"jingjie88"},"content":"    public static List\u003cInterview\u003e getTypicalInterviews() {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"jingjie88"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(STANDARD_INTERVIEW, STANDARD_INTERVIEW_2,","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"jingjie88"},"content":"                STANDARD_INTERVIEW_3, STANDARD_INTERVIEW_4));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"jingjie88"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"JasonLCY-Temp"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"Jonyxzx":1,"JasonLCY-Temp":13,"jingjie88":14,"kiwibang":41,"Chen1x":2}}]

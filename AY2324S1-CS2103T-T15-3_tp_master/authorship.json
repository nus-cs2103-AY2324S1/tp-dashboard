[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"# EduTrack","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"Sample intended final product:","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T15-3/tp/actions)","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"### **EduTrack** provides a **centralised system** to help teaching assistants manage multiple classes.\u003cbr\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"You should expect **EduTrack** to be able to manage:","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"* Student attendance","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"* Additional notes for each student","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"* Student class participation","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":"### Installation:","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"* Ensure you have java 11 installed in your local computer","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"* Download the jar file \u003chere\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"* Run it!","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"### Sample usage:","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"Creating a class","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"```","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"add /c cs2103t","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"```","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"Adding a new student to the class","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"DonovanJJ"},"content":"```","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"add /s John /c cs2103t","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"```","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"Refer to our [full guide]()  to get a list of commands you can use","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"DonovanJJ"},"content":"### Contributors:","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"DonovanJJ"},"content":"  * Sean","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"DonovanJJ"},"content":"  * Sarah","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"DonovanJJ"},"content":"  * Kota","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"DonovanJJ"},"content":"  * Helin","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"DonovanJJ"},"content":"  * Donovan","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"DonovanJJ"},"content":"  Refer to [AboutUs](https://github.com/AY2324S1-CS2103T-T15-3/tp/blob/master/docs/AboutUs.md) to learn more!","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"DonovanJJ"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"seanpzk":1,"DonovanJJ":35,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"### Sean Phua Zeng Kiat","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"\u003cimg src\u003d\"images/seanpzk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"[[github](https://github.com/seanpzk)]","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"[[portfolio](team/seanpzk.md)]","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"* Role: Team Lead","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"* Responsibilities: Project Coordination","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"### Donovan Chan Jia Jun","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"\u003cimg src\u003d\"images/donovanjj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"[[github](http://github.com/donovanjj)]","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"[[portfolio](team/donovanjj.md)]","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"DonovanJJ"},"content":"* Role: Developer","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"DonovanJJ"},"content":"* Responsibilities: Testing \u0026 Scheduling","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"### Trinh Hoai Song Thu (Sarah)","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"\u003cimg src\u003d\"images/songgthu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"[[github](http://github.com/songgthu)] [[portfolio](team/songgthu.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"revdrag"},"content":"### Wang Helin","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"revdrag"},"content":"\u003cimg src\u003d\"images/revdrag.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"revdrag"},"content":"[[github](http://github.com/revdrag)]","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"revdrag"},"content":"[[portfolio](team/revdrag.md)]","lastModifiedDate":"2023-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"revdrag"},"content":"* Responsibilities: Integration","lastModifiedDate":"2023-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"sudarshan2401"},"content":"### Kota Sudarshan Karanth","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"sudarshan2401"},"content":"\u003cimg src\u003d\"images/sudarshan2401.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"sudarshan2401"},"content":"[[github](http://github.com/sudarshan2401)]","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"sudarshan2401"},"content":"[[portfolio](team/sudarshan2401.md)]","lastModifiedDate":"2023-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"sudarshan2401"},"content":"* Responsibilities: Code Quality \u0026 Deliverables","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"seanpzk":6,"sudarshan2401":5,"songgthu":4,"DonovanJJ":6,"revdrag":5,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"# EduTrack Developer Guide","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"---","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"---","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"---","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"seanpzk"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"seanpzk"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"seanpzk"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"seanpzk"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"seanpzk"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"seanpzk"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"seanpzk"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"seanpzk"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"seanpzk"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"seanpzk"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"seanpzk"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"seanpzk"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"seanpzk"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"seanpzk"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"seanpzk"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"seanpzk"},"content":"---","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"seanpzk"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"seanpzk"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"seanpzk"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"seanpzk"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":241,"author":{"gitId":"seanpzk"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"seanpzk"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-10-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"seanpzk"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-10-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"seanpzk"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"seanpzk"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"seanpzk"},"content":"---","lastModifiedDate":"2023-10-13"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"seanpzk"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2023-10-13"},{"lineNumber":260,"author":{"gitId":"seanpzk"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"seanpzk"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2023-10-13"},{"lineNumber":262,"author":{"gitId":"seanpzk"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2023-10-13"},{"lineNumber":263,"author":{"gitId":"seanpzk"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2023-10-13"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"seanpzk"},"content":"---","lastModifiedDate":"2023-10-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"songgthu"},"content":"University tutor who:","lastModifiedDate":"2023-09-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":275,"author":{"gitId":"seanpzk"},"content":"- has a need to manage classes with a significant number of students","lastModifiedDate":"2023-10-13"},{"lineNumber":276,"author":{"gitId":"seanpzk"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2023-10-13"},{"lineNumber":277,"author":{"gitId":"seanpzk"},"content":"- can type fast","lastModifiedDate":"2023-10-13"},{"lineNumber":278,"author":{"gitId":"seanpzk"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2023-10-13"},{"lineNumber":279,"author":{"gitId":"seanpzk"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2023-10-13"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"songgthu"},"content":"**Value proposition**: Each tutor has multiple groups of students where each group can be large, keeping track of students and records would become a hassle. Our product provides a centralised system that would help to organise all student records for easy and quick access.","lastModifiedDate":"2023-09-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"| Priority | As a …​  | I want to …​                              | So that I can…​                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"seanpzk"},"content":"| -------- | -------- | ----------------------------------------- | ----------------------------------------------------------------- |","lastModifiedDate":"2023-10-13"},{"lineNumber":289,"author":{"gitId":"songgthu"},"content":"| `* * *`  | TA       | add a class                               | -                                                                 |","lastModifiedDate":"2023-09-26"},{"lineNumber":290,"author":{"gitId":"songgthu"},"content":"| `* * *`  | TA       | remove a class                            | -                                                                 |","lastModifiedDate":"2023-09-26"},{"lineNumber":291,"author":{"gitId":"songgthu"},"content":"| `* * *`  | TA       | view a class                              | view all students of a specific class                             |","lastModifiedDate":"2023-09-26"},{"lineNumber":292,"author":{"gitId":"songgthu"},"content":"| `* * *`  | TA       | add a student                             | -                                                                 |","lastModifiedDate":"2023-09-26"},{"lineNumber":293,"author":{"gitId":"songgthu"},"content":"| `* * *`  | TA       | remove a student                          | -                                                                 |","lastModifiedDate":"2023-09-26"},{"lineNumber":294,"author":{"gitId":"songgthu"},"content":"| `* * *`  | TA       | save the data automatically               | ensure that my data is not lost when I forget to save             |","lastModifiedDate":"2023-09-26"},{"lineNumber":295,"author":{"gitId":"songgthu"},"content":"| `* *`    | TA       | update a class                            | keep the class information up to date                             |","lastModifiedDate":"2023-09-26"},{"lineNumber":296,"author":{"gitId":"songgthu"},"content":"| `* *`    | TA       | update a student                          | keep the student record up to date                                |","lastModifiedDate":"2023-09-26"},{"lineNumber":297,"author":{"gitId":"songgthu"},"content":"| `* *`    | TA       | take attendance in a lesson               | spend more time teaching                                          |","lastModifiedDate":"2023-09-26"},{"lineNumber":298,"author":{"gitId":"songgthu"},"content":"| `* *`    | TA       | monitor a lesson of a class               | keep track of administrative information for each lesson          |","lastModifiedDate":"2023-09-26"},{"lineNumber":299,"author":{"gitId":"songgthu"},"content":"| `* *`    | TA       | find a specific student by using a filter | quickly update their record such as attendance when they are late |","lastModifiedDate":"2023-09-26"},{"lineNumber":300,"author":{"gitId":"songgthu"},"content":"| `* *`    | new user | see the app populated with sample data    | easily see what the app looks like when it is in use              |","lastModifiedDate":"2023-09-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"seanpzk"},"content":"_{More to be added}_","lastModifiedDate":"2023-10-13"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"seanpzk"},"content":"(For all use cases below, the **System** is the `EduTrack` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-09-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"sudarshan2401"},"content":"**Use case: View all the information about a class**","lastModifiedDate":"2023-09-27"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":312,"author":{"gitId":"sudarshan2401"},"content":"1. User chooses a class out of all the classes they are teaching.","lastModifiedDate":"2023-09-27"},{"lineNumber":313,"author":{"gitId":"sudarshan2401"},"content":"2. User requests to view all the information about that class.","lastModifiedDate":"2023-09-27"},{"lineNumber":314,"author":{"gitId":"sudarshan2401"},"content":"3. EduTrack displays all the information about that class. (e.g. name, students, attendance, notes, etc)","lastModifiedDate":"2023-09-27"},{"lineNumber":315,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":316,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":317,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":318,"author":{"gitId":"songgthu"},"content":"**Use case: Add a class**","lastModifiedDate":"2023-09-26"},{"lineNumber":319,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":320,"author":{"gitId":"songgthu"},"content":"**MSS**","lastModifiedDate":"2023-09-26"},{"lineNumber":321,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":322,"author":{"gitId":"songgthu"},"content":"1.  User requests to add a class and specifies the class name","lastModifiedDate":"2023-09-26"},{"lineNumber":323,"author":{"gitId":"songgthu"},"content":"2.  EduTrack adds the class to the list of classes","lastModifiedDate":"2023-09-26"},{"lineNumber":324,"author":{"gitId":"songgthu"},"content":"3.  EduTrack shows the updated list of classes","lastModifiedDate":"2023-09-26"},{"lineNumber":325,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":326,"author":{"gitId":"songgthu"},"content":"**Extensions**","lastModifiedDate":"2023-09-26"},{"lineNumber":327,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":328,"author":{"gitId":"seanpzk"},"content":"- 1a. Class name is not specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":329,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":330,"author":{"gitId":"seanpzk"},"content":"  - 1a1. EduTrack informs user that class name is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":331,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":332,"author":{"gitId":"songgthu"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":333,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":334,"author":{"gitId":"seanpzk"},"content":"- 1b. Class name already exists.","lastModifiedDate":"2023-10-13"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"seanpzk"},"content":"  - 1a1. EduTrack informs user that class already exists.","lastModifiedDate":"2023-10-13"},{"lineNumber":337,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":338,"author":{"gitId":"songgthu"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":339,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":340,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":341,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":342,"author":{"gitId":"DonovanJJ"},"content":"**Use case: Remove a class**","lastModifiedDate":"2023-09-27"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"DonovanJJ"},"content":"1.  User requests to view the list of classes","lastModifiedDate":"2023-09-27"},{"lineNumber":347,"author":{"gitId":"DonovanJJ"},"content":"2.  EduTrack shows a list of classes","lastModifiedDate":"2023-09-27"},{"lineNumber":348,"author":{"gitId":"DonovanJJ"},"content":"3.  User requests to delete a specific class in the list","lastModifiedDate":"2023-09-27"},{"lineNumber":349,"author":{"gitId":"DonovanJJ"},"content":"4.  EduTrack requests for confirmation and waits for y/n response from user","lastModifiedDate":"2023-09-27"},{"lineNumber":350,"author":{"gitId":"DonovanJJ"},"content":"5.  User confirms","lastModifiedDate":"2023-09-27"},{"lineNumber":351,"author":{"gitId":"DonovanJJ"},"content":"6.  EduTrack deletes the class","lastModifiedDate":"2023-09-27"},{"lineNumber":352,"author":{"gitId":"DonovanJJ"},"content":"7.  EduTrack informs the user that the class is successfully deleted","lastModifiedDate":"2023-09-27"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":358,"author":{"gitId":"seanpzk"},"content":"- 1a. Class name is not specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":362,"author":{"gitId":"seanpzk"},"content":"- 2a. User did not specify the class.","lastModifiedDate":"2023-10-13"},{"lineNumber":363,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":364,"author":{"gitId":"seanpzk"},"content":"  - 2a1. EduTrack informs user that class name is not specified in request.","lastModifiedDate":"2023-10-13"},{"lineNumber":365,"author":{"gitId":"seanpzk"},"content":"  - 2a2. EduTrack terminates the request.","lastModifiedDate":"2023-10-13"},{"lineNumber":366,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":367,"author":{"gitId":"sudarshan2401"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":368,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":369,"author":{"gitId":"seanpzk"},"content":"- 2b. EduTrack detects that the class does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":370,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":371,"author":{"gitId":"seanpzk"},"content":"  - 2b1. EduTrack informs user that the class does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":372,"author":{"gitId":"seanpzk"},"content":"  - 2b2. EduTrack terminates the request.","lastModifiedDate":"2023-10-13"},{"lineNumber":373,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":374,"author":{"gitId":"sudarshan2401"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":375,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":376,"author":{"gitId":"seanpzk"},"content":"- 3a. The given class name is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":377,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":378,"author":{"gitId":"seanpzk"},"content":"  - 3a1. EduTrack shows an error message.","lastModifiedDate":"2023-10-13"},{"lineNumber":379,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":380,"author":{"gitId":"DonovanJJ"},"content":"  Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":381,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":382,"author":{"gitId":"seanpzk"},"content":"- 3b. No class name specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":383,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":384,"author":{"gitId":"seanpzk"},"content":"  - 3b1. EduTrack informs the user he should enter a class field","lastModifiedDate":"2023-10-13"},{"lineNumber":385,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":386,"author":{"gitId":"DonovanJJ"},"content":"  Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"seanpzk"},"content":"- 4a. User does not confirm, provides a `n` input","lastModifiedDate":"2023-10-13"},{"lineNumber":389,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":390,"author":{"gitId":"seanpzk"},"content":"  - 4a1. EduTrack confirms that the cancellation is successful","lastModifiedDate":"2023-10-13"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":392,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":394,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":395,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":396,"author":{"gitId":"sudarshan2401"},"content":"**Use case: See the app populated with sample data**","lastModifiedDate":"2023-09-27"},{"lineNumber":397,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":398,"author":{"gitId":"sudarshan2401"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":399,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":400,"author":{"gitId":"sudarshan2401"},"content":"1. User launches the app for the first time.","lastModifiedDate":"2023-09-27"},{"lineNumber":401,"author":{"gitId":"sudarshan2401"},"content":"2. EduTrack populates the app with sample data for a class.","lastModifiedDate":"2023-09-27"},{"lineNumber":402,"author":{"gitId":"sudarshan2401"},"content":"3. User accesses the sample data to see how the app works.","lastModifiedDate":"2023-09-27"},{"lineNumber":403,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":404,"author":{"gitId":"sudarshan2401"},"content":"   Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":405,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":406,"author":{"gitId":"DonovanJJ"},"content":"**Use case: Updating a Class note**","lastModifiedDate":"2023-09-27"},{"lineNumber":407,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":408,"author":{"gitId":"DonovanJJ"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":409,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":410,"author":{"gitId":"DonovanJJ"},"content":"1.  User requests to view the list of classes","lastModifiedDate":"2023-09-27"},{"lineNumber":411,"author":{"gitId":"DonovanJJ"},"content":"2.  EduTrack shows a list of classes","lastModifiedDate":"2023-09-27"},{"lineNumber":412,"author":{"gitId":"DonovanJJ"},"content":"3.  User requests to update the Class notes of a particular class","lastModifiedDate":"2023-09-27"},{"lineNumber":413,"author":{"gitId":"DonovanJJ"},"content":"4.  EduTrack overwrites the Class notes of that particular class","lastModifiedDate":"2023-09-27"},{"lineNumber":414,"author":{"gitId":"DonovanJJ"},"content":"5.  EduTrack informs that user that the was successfully updated","lastModifiedDate":"2023-09-27"},{"lineNumber":415,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":416,"author":{"gitId":"DonovanJJ"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":417,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":418,"author":{"gitId":"seanpzk"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":419,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":420,"author":{"gitId":"DonovanJJ"},"content":"  Use case ends","lastModifiedDate":"2023-09-27"},{"lineNumber":421,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":422,"author":{"gitId":"seanpzk"},"content":"- 3a. The given class name is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":423,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":424,"author":{"gitId":"seanpzk"},"content":"  - 3a1. EduTrack shows an error message.","lastModifiedDate":"2023-10-13"},{"lineNumber":425,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":426,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":427,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":428,"author":{"gitId":"seanpzk"},"content":"- 3b. No class name specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":429,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":430,"author":{"gitId":"seanpzk"},"content":"  - 3b1. EduTrack informs the user he should enter a class field","lastModifiedDate":"2023-10-13"},{"lineNumber":431,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":432,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":433,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":434,"author":{"gitId":"seanpzk"},"content":"- 3c. No note details was specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":435,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":436,"author":{"gitId":"seanpzk"},"content":"  - 3c1. EduTrack informs the user that no note was specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":439,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":440,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":441,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":442,"author":{"gitId":"songgthu"},"content":"**Use case: Update a class**","lastModifiedDate":"2023-09-26"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"songgthu"},"content":"1.  User requests to view the class to be updated","lastModifiedDate":"2023-09-26"},{"lineNumber":447,"author":{"gitId":"songgthu"},"content":"2.  EduTrack shows the class","lastModifiedDate":"2023-09-26"},{"lineNumber":448,"author":{"gitId":"songgthu"},"content":"3.  User requests to update a field in the class","lastModifiedDate":"2023-09-26"},{"lineNumber":449,"author":{"gitId":"songgthu"},"content":"4.  EduTrack updates the field of the class","lastModifiedDate":"2023-09-26"},{"lineNumber":450,"author":{"gitId":"songgthu"},"content":"5.  EduTrack shows the updated list of classes","lastModifiedDate":"2023-09-26"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":456,"author":{"gitId":"seanpzk"},"content":"- 1a. Class name is not specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":457,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":458,"author":{"gitId":"seanpzk"},"content":"  - 1a1. EduTrack informs user that class name is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":459,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":460,"author":{"gitId":"songgthu"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":461,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":462,"author":{"gitId":"seanpzk"},"content":"- 1b. Class name already exists.","lastModifiedDate":"2023-10-13"},{"lineNumber":463,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":464,"author":{"gitId":"seanpzk"},"content":"  - 1a1. EduTrack informs user that class already exists.","lastModifiedDate":"2023-10-13"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"seanpzk"},"content":"- 3a. Class field is not specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":469,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":470,"author":{"gitId":"seanpzk"},"content":"  - 3a1. EduTrack informs user that class field is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":471,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":472,"author":{"gitId":"songgthu"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"seanpzk"},"content":"- 3b. Class field does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":475,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":476,"author":{"gitId":"seanpzk"},"content":"  - 3b1. EduTrack informs user that class field does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":477,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":478,"author":{"gitId":"songgthu"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"seanpzk"},"content":"- 3c. Updated information is not specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":481,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":482,"author":{"gitId":"seanpzk"},"content":"  - 3c1. EduTrack informs user that information to be updated is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":483,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":484,"author":{"gitId":"songgthu"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":485,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":486,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":487,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":488,"author":{"gitId":"DonovanJJ"},"content":"**Use case: Adding a lesson to a Class Schedule**","lastModifiedDate":"2023-09-27"},{"lineNumber":489,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":490,"author":{"gitId":"DonovanJJ"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":491,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":492,"author":{"gitId":"DonovanJJ"},"content":"1.  User requests to view the list of classes","lastModifiedDate":"2023-09-27"},{"lineNumber":493,"author":{"gitId":"DonovanJJ"},"content":"2.  EduTrack shows a list of classes","lastModifiedDate":"2023-09-27"},{"lineNumber":494,"author":{"gitId":"DonovanJJ"},"content":"3.  User requests to add a lesson for a particular class","lastModifiedDate":"2023-09-27"},{"lineNumber":495,"author":{"gitId":"DonovanJJ"},"content":"4.  EduTrack appends to the Class schedule of that particular class","lastModifiedDate":"2023-09-27"},{"lineNumber":496,"author":{"gitId":"DonovanJJ"},"content":"5.  EduTrack informs the user that the lesson was added to the class schedule","lastModifiedDate":"2023-09-27"},{"lineNumber":497,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":498,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":499,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":500,"author":{"gitId":"DonovanJJ"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":501,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":502,"author":{"gitId":"seanpzk"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":503,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":504,"author":{"gitId":"DonovanJJ"},"content":"  Use case ends","lastModifiedDate":"2023-09-27"},{"lineNumber":505,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":506,"author":{"gitId":"seanpzk"},"content":"- 3a. The given class name is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":507,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":508,"author":{"gitId":"seanpzk"},"content":"  - 3a1. EduTrack shows an error message.","lastModifiedDate":"2023-10-13"},{"lineNumber":509,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":510,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":511,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":512,"author":{"gitId":"seanpzk"},"content":"- 3b. No class name specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":513,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":514,"author":{"gitId":"seanpzk"},"content":"  - 3b1. EduTrack informs the user he should enter a class field","lastModifiedDate":"2023-10-13"},{"lineNumber":515,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":516,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":517,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":518,"author":{"gitId":"seanpzk"},"content":"- 3c. No lesson details was specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":519,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":520,"author":{"gitId":"seanpzk"},"content":"  - 3c1. EduTrack informs the user that a lesson wasn\u0027t specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":521,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":522,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":524,"author":{"gitId":"seanpzk"},"content":"- 3d. Lesson details was of invalid format.","lastModifiedDate":"2023-10-13"},{"lineNumber":525,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":526,"author":{"gitId":"seanpzk"},"content":"  - 3d1. EduTrack informs the user he should enter a lesson of the correct format","lastModifiedDate":"2023-10-13"},{"lineNumber":527,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":528,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":529,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":530,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":531,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":532,"author":{"gitId":"DonovanJJ"},"content":"**Use case: Removing a lesson from a class schedule**","lastModifiedDate":"2023-09-27"},{"lineNumber":533,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":534,"author":{"gitId":"DonovanJJ"},"content":"**MSS**","lastModifiedDate":"2023-09-27"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":536,"author":{"gitId":"DonovanJJ"},"content":"1.  User requests to view the list of classes","lastModifiedDate":"2023-09-27"},{"lineNumber":537,"author":{"gitId":"DonovanJJ"},"content":"2.  EduTrack shows a list of classes","lastModifiedDate":"2023-09-27"},{"lineNumber":538,"author":{"gitId":"DonovanJJ"},"content":"3.  User provides the lesson id to remove it from the class schedule","lastModifiedDate":"2023-09-27"},{"lineNumber":539,"author":{"gitId":"DonovanJJ"},"content":"4.  EduTrack removes from the Class schedule of that particular class","lastModifiedDate":"2023-09-27"},{"lineNumber":540,"author":{"gitId":"DonovanJJ"},"content":"5.  EduTrack informs the user that the lesson was removed from the class schedule","lastModifiedDate":"2023-09-27"},{"lineNumber":541,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":542,"author":{"gitId":"DonovanJJ"},"content":"**Extensions**","lastModifiedDate":"2023-09-27"},{"lineNumber":543,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":544,"author":{"gitId":"seanpzk"},"content":"- 2a. The list is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":545,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":546,"author":{"gitId":"DonovanJJ"},"content":"  Use case ends","lastModifiedDate":"2023-09-27"},{"lineNumber":547,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":548,"author":{"gitId":"seanpzk"},"content":"- 3a. The given class name is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":549,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":550,"author":{"gitId":"seanpzk"},"content":"  - 3a1. EduTrack shows an error message.","lastModifiedDate":"2023-10-13"},{"lineNumber":551,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":552,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":553,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":554,"author":{"gitId":"seanpzk"},"content":"- 3b. No class name specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":555,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":556,"author":{"gitId":"seanpzk"},"content":"  - 3b1. EduTrack informs the user he should enter a class field","lastModifiedDate":"2023-10-13"},{"lineNumber":557,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":558,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":559,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":560,"author":{"gitId":"seanpzk"},"content":"- 3c. No lesson id was specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":561,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":562,"author":{"gitId":"seanpzk"},"content":"  - 3c1. EduTrack informs the user that a lesson id wasn\u0027t specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":563,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":564,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":566,"author":{"gitId":"seanpzk"},"content":"- 3d. Lesson id is of invalid format or does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":567,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":568,"author":{"gitId":"seanpzk"},"content":"  - 3d1. EduTrack informs the user that the lesson does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":569,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":570,"author":{"gitId":"DonovanJJ"},"content":"    Use case ends.","lastModifiedDate":"2023-09-27"},{"lineNumber":571,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":572,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"songgthu"},"content":"**Use case: Take attendance in a lesson**","lastModifiedDate":"2023-09-26"},{"lineNumber":575,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":576,"author":{"gitId":"songgthu"},"content":"**MSS**","lastModifiedDate":"2023-09-26"},{"lineNumber":577,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":578,"author":{"gitId":"songgthu"},"content":"1.  User choose a class from the list of classes","lastModifiedDate":"2023-09-26"},{"lineNumber":579,"author":{"gitId":"songgthu"},"content":"2.  User requests to create a lesson of the class","lastModifiedDate":"2023-09-26"},{"lineNumber":580,"author":{"gitId":"songgthu"},"content":"3.  EduTrack creates a lesson monitor for the class","lastModifiedDate":"2023-09-26"},{"lineNumber":581,"author":{"gitId":"songgthu"},"content":"4.  User enters attendance of a student","lastModifiedDate":"2023-09-26"},{"lineNumber":582,"author":{"gitId":"songgthu"},"content":"5.  EduTrack updates the attendance field of the student","lastModifiedDate":"2023-09-26"},{"lineNumber":583,"author":{"gitId":"songgthu"},"content":"6.  User repeats step 3 for mutiple times","lastModifiedDate":"2023-09-26"},{"lineNumber":584,"author":{"gitId":"songgthu"},"content":"7.  User requests to end the lesson","lastModifiedDate":"2023-09-26"},{"lineNumber":585,"author":{"gitId":"songgthu"},"content":"8.  EduTrack ends the lesson and saves the data automatically","lastModifiedDate":"2023-09-26"},{"lineNumber":586,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":587,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":588,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":589,"author":{"gitId":"revdrag"},"content":"**Use case: Add a student**","lastModifiedDate":"2023-10-03"},{"lineNumber":590,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":591,"author":{"gitId":"revdrag"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":592,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":593,"author":{"gitId":"revdrag"},"content":"1. User chooses to add a student to an existing class.","lastModifiedDate":"2023-10-03"},{"lineNumber":594,"author":{"gitId":"revdrag"},"content":"2. User requests to add a new student to an existing class.","lastModifiedDate":"2023-10-03"},{"lineNumber":595,"author":{"gitId":"revdrag"},"content":"3. EduTrack adds the student into the specified class.","lastModifiedDate":"2023-10-03"},{"lineNumber":596,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":597,"author":{"gitId":"revdrag"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":598,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":599,"author":{"gitId":"seanpzk"},"content":"- 1a. Student name is not specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":600,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":601,"author":{"gitId":"seanpzk"},"content":"  - 1a1. EduTrack informs user that the student name is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":602,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":603,"author":{"gitId":"revdrag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":604,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":605,"author":{"gitId":"seanpzk"},"content":"- 1b. Class name is not specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":606,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":607,"author":{"gitId":"seanpzk"},"content":"  - 1b1. EduTrack informs user that the class name is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":608,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":609,"author":{"gitId":"revdrag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":610,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":611,"author":{"gitId":"seanpzk"},"content":"- 2a. Student name already exists.","lastModifiedDate":"2023-10-13"},{"lineNumber":612,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":613,"author":{"gitId":"seanpzk"},"content":"  - 2a1. EduTrack informs user that student name already exists.","lastModifiedDate":"2023-10-13"},{"lineNumber":614,"author":{"gitId":"seanpzk"},"content":"  - 2a2. EduTrack terminates the request.","lastModifiedDate":"2023-10-13"},{"lineNumber":615,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":616,"author":{"gitId":"revdrag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":617,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":618,"author":{"gitId":"seanpzk"},"content":"- 2b. Class does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":619,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":620,"author":{"gitId":"seanpzk"},"content":"  - 2b1. EduTrack informs user that the class is not found.","lastModifiedDate":"2023-10-13"},{"lineNumber":621,"author":{"gitId":"seanpzk"},"content":"  - 2b2. EduTrack terminates the request.","lastModifiedDate":"2023-10-13"},{"lineNumber":622,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":623,"author":{"gitId":"revdrag"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":624,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":625,"author":{"gitId":"revdrag"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":626,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":627,"author":{"gitId":"seanpzk"},"content":"**Use case: Remove a student**","lastModifiedDate":"2023-09-26"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"seanpzk"},"content":"1. User chooses to remove a student from a class.","lastModifiedDate":"2023-09-26"},{"lineNumber":632,"author":{"gitId":"seanpzk"},"content":"2. User requests to delete a specific student in a class.","lastModifiedDate":"2023-09-26"},{"lineNumber":633,"author":{"gitId":"seanpzk"},"content":"3. EduTrack deletes the student from that class.","lastModifiedDate":"2023-09-26"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"seanpzk"},"content":"- 1a. Class name is not specified.","lastModifiedDate":"2023-10-13"},{"lineNumber":640,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":641,"author":{"gitId":"seanpzk"},"content":"  - 1a1. EduTrack informs user that class name is empty.","lastModifiedDate":"2023-10-13"},{"lineNumber":642,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":643,"author":{"gitId":"songgthu"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":644,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":645,"author":{"gitId":"seanpzk"},"content":"- 1b. Class name already exists.","lastModifiedDate":"2023-10-13"},{"lineNumber":646,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":647,"author":{"gitId":"seanpzk"},"content":"  - 1a1. EduTrack informs user that class already exists.","lastModifiedDate":"2023-10-13"},{"lineNumber":648,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":649,"author":{"gitId":"songgthu"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":650,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":651,"author":{"gitId":"seanpzk"},"content":"- 4a. Student does not exist","lastModifiedDate":"2023-10-13"},{"lineNumber":652,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":653,"author":{"gitId":"seanpzk"},"content":"  - 4a1. EduTrack informs user that student is not found.","lastModifiedDate":"2023-10-13"},{"lineNumber":654,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":655,"author":{"gitId":"songgthu"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"seanpzk"},"content":"- 2a. User did not specify the class.","lastModifiedDate":"2023-10-13"},{"lineNumber":658,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":659,"author":{"gitId":"seanpzk"},"content":"  - 2a1. EduTrack informs user that class name is not specified in the request.","lastModifiedDate":"2023-10-13"},{"lineNumber":660,"author":{"gitId":"seanpzk"},"content":"  - 2a2. EduTrack terminates the request.","lastModifiedDate":"2023-10-13"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"seanpzk"},"content":"- 2b. EduTrack detects that the student is not found in the class.","lastModifiedDate":"2023-10-13"},{"lineNumber":665,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":666,"author":{"gitId":"seanpzk"},"content":"  - 2b1. EduTrack informs user that student is not found in class.","lastModifiedDate":"2023-10-13"},{"lineNumber":667,"author":{"gitId":"seanpzk"},"content":"  - 2b2. EduTrack terminates the request.","lastModifiedDate":"2023-10-13"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"seanpzk"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"seanpzk"},"content":"- 2c. EduTrack detects that the class does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":672,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":673,"author":{"gitId":"seanpzk"},"content":"  - 2c1. EduTrack informs user that the class does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":674,"author":{"gitId":"seanpzk"},"content":"  - 2c2. EduTrack terminates the request.","lastModifiedDate":"2023-10-13"},{"lineNumber":675,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":676,"author":{"gitId":"seanpzk"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":677,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":678,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":679,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":680,"author":{"gitId":"DonovanJJ"},"content":"**Use case: Modify an existing student records**","lastModifiedDate":"2023-10-02"},{"lineNumber":681,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":682,"author":{"gitId":"seanpzk"},"content":"**MSS**","lastModifiedDate":"2023-09-26"},{"lineNumber":683,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":684,"author":{"gitId":"seanpzk"},"content":"1. User requests to modify an existing student record in a class.","lastModifiedDate":"2023-09-26"},{"lineNumber":685,"author":{"gitId":"seanpzk"},"content":"2. EduTrack responds with a list of categories for user to choose to modify.","lastModifiedDate":"2023-09-26"},{"lineNumber":686,"author":{"gitId":"seanpzk"},"content":"3. User chooses a category to modify.","lastModifiedDate":"2023-09-26"},{"lineNumber":687,"author":{"gitId":"seanpzk"},"content":"4. EduTrack requests for new input in the category.","lastModifiedDate":"2023-09-26"},{"lineNumber":688,"author":{"gitId":"seanpzk"},"content":"5. User enters the new input for the category.","lastModifiedDate":"2023-09-26"},{"lineNumber":689,"author":{"gitId":"seanpzk"},"content":"6. EduTrack updates and displays the new student record.","lastModifiedDate":"2023-09-26"},{"lineNumber":690,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":691,"author":{"gitId":"seanpzk"},"content":"   Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":692,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":693,"author":{"gitId":"seanpzk"},"content":"**Extensions**","lastModifiedDate":"2023-09-26"},{"lineNumber":694,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":695,"author":{"gitId":"seanpzk"},"content":"- 1a. EduTrack detects that student or class does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":696,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":697,"author":{"gitId":"seanpzk"},"content":"  - 1a1. EduTrack informs the user that the student or the class does not exist.","lastModifiedDate":"2023-10-13"},{"lineNumber":698,"author":{"gitId":"seanpzk"},"content":"  - 1a2. EduTrack terminates the request.","lastModifiedDate":"2023-10-13"},{"lineNumber":699,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":700,"author":{"gitId":"seanpzk"},"content":"    Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":701,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":702,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":703,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":704,"author":{"gitId":"seanpzk"},"content":"**Use case: Use auto-save feature**","lastModifiedDate":"2023-09-26"},{"lineNumber":705,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":706,"author":{"gitId":"seanpzk"},"content":"**MSS**","lastModifiedDate":"2023-09-26"},{"lineNumber":707,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":708,"author":{"gitId":"seanpzk"},"content":"1. User makes any form of request that alters the database.","lastModifiedDate":"2023-09-26"},{"lineNumber":709,"author":{"gitId":"seanpzk"},"content":"2. EduTrack updates the database directly.","lastModifiedDate":"2023-09-26"},{"lineNumber":710,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":711,"author":{"gitId":"seanpzk"},"content":"   Use case ends.","lastModifiedDate":"2023-09-26"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-27"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"songgthu"},"content":"1.  **Environment requirement:**","lastModifiedDate":"2023-09-26"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":719,"author":{"gitId":"songgthu"},"content":"- Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-09-26"},{"lineNumber":720,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":721,"author":{"gitId":"songgthu"},"content":"2.  **Scalability:**","lastModifiedDate":"2023-09-26"},{"lineNumber":722,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":723,"author":{"gitId":"songgthu"},"content":"- Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-09-26"},{"lineNumber":724,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":725,"author":{"gitId":"songgthu"},"content":"3.  **Usability:**","lastModifiedDate":"2023-09-26"},{"lineNumber":726,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":727,"author":{"gitId":"songgthu"},"content":"- A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-09-26"},{"lineNumber":728,"author":{"gitId":"songgthu"},"content":"- The user interface should be intuitive and user-friendly to minimize the learning curve for TAs.","lastModifiedDate":"2023-09-26"},{"lineNumber":729,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":730,"author":{"gitId":"songgthu"},"content":"4.  **Performance**","lastModifiedDate":"2023-09-26"},{"lineNumber":731,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":732,"author":{"gitId":"songgthu"},"content":"- The system should respond to user requests within a reasonable time frame (i.e. under 2 seconds).","lastModifiedDate":"2023-09-26"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"seanpzk"},"content":"_{More to be added}_","lastModifiedDate":"2023-10-13"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"seanpzk"},"content":"- **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2023-10-13"},{"lineNumber":739,"author":{"gitId":"seanpzk"},"content":"- **Database**: A storage for all data to be stored in.","lastModifiedDate":"2023-10-13"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":741,"author":{"gitId":"seanpzk"},"content":"---","lastModifiedDate":"2023-10-13"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":749,"author":{"gitId":"seanpzk"},"content":"**Note:** These instructions only provide a starting point for testers to work on; testers are expected to do more _exploratory_ testing.","lastModifiedDate":"2023-10-13"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"seanpzk":211,"sudarshan2401":21,"songgthu":89,"DonovanJJ":104,"revdrag":21,"-":347}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"# EduTrack User Guide","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"EduTrack is a **desktop app for managing classes designed for tutors**, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Whether you are managing multiple students or just need quick access to individual student data, EduTrack empowers you with effortless control and organization.","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"## Table of Contents","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"1. [Quick start](#quick-start)","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"2. [Features](#features)","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"    - [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"    - [Adding a class : `add`](#adding-a-class--add)","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"    - [Removing a class : `remove`](#removing-a-class--remove)","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"    - [Viewing a class : `view`](#viewing-a-class--view)","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"    - [Adding a student : `add`](#adding-a-student--add)","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"    - [Removing a student : `remove`](#removing-a-student--remove)","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"    - [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    - [Adding a list of students : `coming in v1.3`](#adding-a-list-of-students--coming-in-v13)","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"    - [Updating a class : `coming in v1.3`](#updating-a-class--coming-in-v13)","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"    - [Updating a class note : `coming in v1.3`](#updating-a-class-note--coming-in-v13)","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"    - [Updating a student : `coming in v1.3`](#updating-a-student--coming-in-v13)","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    - [Adding a lesson : `coming in v1.3`](#adding-a-lesson--coming-in-v13)","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"    - [Removing a lesson : `coming in v1.3`](#removing-a-lesson--coming-in-v13)","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"    - [Taking attendance : `coming in v1.3`](#taking-attendance--coming-in-v13)","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"    - [Finding a student : `coming in v1.3`](#finding-a-student--coming-in-v13)","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"3. [FAQ](#faq)","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"4. [Known issues](#known-issues)","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"5. [Command summary](#command-summary)","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"## Quick start","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"Coming soon...","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"* Words in `UPPER_CASE` are compulsory parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"  e.g. in `add /c CLASS_NAME`, `CLASS_NAME` is a parameter which can be used as `add /c CS2103T-T15-3`.","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":65,"author":{"gitId":"songgthu"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-01"},{"lineNumber":66,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":67,"author":{"gitId":"songgthu"},"content":"**Command Format:** `help`","lastModifiedDate":"2023-10-01"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":69,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":70,"author":{"gitId":"songgthu"},"content":"### Adding a class : `add`","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"songgthu"},"content":"Adds a new class to the list of classes.","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"songgthu"},"content":"**Command Format:** `add /c CLASS_NAME`","lastModifiedDate":"2023-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME is not case-sensitive","lastModifiedDate":"2023-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME must be unique (cannot have two classes with the same name)","lastModifiedDate":"2023-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"songgthu"},"content":"**Examples:**","lastModifiedDate":"2023-10-01"},{"lineNumber":81,"author":{"gitId":"songgthu"},"content":"* `add /c cs2103t`","lastModifiedDate":"2023-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":83,"author":{"gitId":"songgthu"},"content":"**Successful Output:**","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME has been added","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"songgthu"},"content":"**Unsuccessful Output:**","lastModifiedDate":"2023-09-25"},{"lineNumber":87,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME already exists","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"songgthu"},"content":"* Class name not specified","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"DonovanJJ"},"content":"### Removing a class : `remove`","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"songgthu"},"content":"Removes an existing class from the list of classes.","lastModifiedDate":"2023-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"DonovanJJ"},"content":"**Command Format:** `remove /c CLASS_NAME`","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME is not case-sensitive","lastModifiedDate":"2023-10-01"},{"lineNumber":97,"author":{"gitId":"songgthu"},"content":"* Class must already exist","lastModifiedDate":"2023-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":99,"author":{"gitId":"songgthu"},"content":"\u003e [!Confirmation is required to remove your class]\\","lastModifiedDate":"2023-10-01"},{"lineNumber":100,"author":{"gitId":"songgthu"},"content":"\u003e Are you sure you want to remove class \"CLASS_NAME?\"\\","lastModifiedDate":"2023-10-01"},{"lineNumber":101,"author":{"gitId":"songgthu"},"content":"\u003e This action cannot be undone\\","lastModifiedDate":"2023-10-01"},{"lineNumber":102,"author":{"gitId":"songgthu"},"content":"\u003e Type \u0027y\u0027 to confirm and \u0027n\u0027 to cancel","lastModifiedDate":"2023-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":104,"author":{"gitId":"songgthu"},"content":"**Examples:**","lastModifiedDate":"2023-10-01"},{"lineNumber":105,"author":{"gitId":"songgthu"},"content":"* `remove /c cs2103t`","lastModifiedDate":"2023-10-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":107,"author":{"gitId":"songgthu"},"content":"**Successful Output:**","lastModifiedDate":"2023-10-01"},{"lineNumber":108,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME has been removed","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":110,"author":{"gitId":"songgthu"},"content":"**Unsuccessful Output:**","lastModifiedDate":"2023-10-01"},{"lineNumber":111,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME does not exist","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"songgthu"},"content":"* Class name not specified","lastModifiedDate":"2023-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":114,"author":{"gitId":"songgthu"},"content":"### Viewing a class : `view`","lastModifiedDate":"2023-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":116,"author":{"gitId":"songgthu"},"content":"Prints out the detailed information (class name, class schedule, enrolled student list) about a class.","lastModifiedDate":"2023-10-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":118,"author":{"gitId":"songgthu"},"content":"**Command Format**: `view /c CLASS_NAME`","lastModifiedDate":"2023-10-01"},{"lineNumber":119,"author":{"gitId":"DonovanJJ"},"content":"* CLASS_NAME is not case-sensitive","lastModifiedDate":"2023-09-27"},{"lineNumber":120,"author":{"gitId":"songgthu"},"content":"* Class must already exist","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":122,"author":{"gitId":"songgthu"},"content":"**Examples**:","lastModifiedDate":"2023-10-01"},{"lineNumber":123,"author":{"gitId":"songgthu"},"content":"* `view CS2103T`","lastModifiedDate":"2023-10-01"},{"lineNumber":124,"author":{"gitId":"songgthu"},"content":"* `view cs2103t`","lastModifiedDate":"2023-10-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":126,"author":{"gitId":"DonovanJJ"},"content":"**Successful Output:**","lastModifiedDate":"2023-09-27"},{"lineNumber":127,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME: Enrolled students: (...)","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":129,"author":{"gitId":"DonovanJJ"},"content":"**Unsuccessful Output:**","lastModifiedDate":"2023-09-27"},{"lineNumber":130,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME does not exist","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":132,"author":{"gitId":"revdrag"},"content":"### Adding a student : `add`","lastModifiedDate":"2023-09-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":134,"author":{"gitId":"revdrag"},"content":"Adds a new student to an existing class.","lastModifiedDate":"2023-09-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":136,"author":{"gitId":"revdrag"},"content":"**Command Format**: `add /s STUDENT_NAME /c CLASS_NAME`","lastModifiedDate":"2023-09-28"},{"lineNumber":137,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME is not case-sensitive","lastModifiedDate":"2023-10-01"},{"lineNumber":138,"author":{"gitId":"songgthu"},"content":"* Class must already exist","lastModifiedDate":"2023-10-01"},{"lineNumber":139,"author":{"gitId":"revdrag"},"content":"* STUDENT_NAME only accepts alphabetical characters","lastModifiedDate":"2023-09-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":141,"author":{"gitId":"songgthu"},"content":"**Examples**:","lastModifiedDate":"2023-10-01"},{"lineNumber":142,"author":{"gitId":"songgthu"},"content":"* `add /s John /c cs2103t`","lastModifiedDate":"2023-10-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":144,"author":{"gitId":"revdrag"},"content":"**Successful Output**:","lastModifiedDate":"2023-09-28"},{"lineNumber":145,"author":{"gitId":"songgthu"},"content":"* STUDENT_NAME has been added to CLASS_NAME","lastModifiedDate":"2023-10-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":147,"author":{"gitId":"revdrag"},"content":"**Unsuccessful Output**:","lastModifiedDate":"2023-09-28"},{"lineNumber":148,"author":{"gitId":"songgthu"},"content":"* Class name not specified","lastModifiedDate":"2023-10-01"},{"lineNumber":149,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME does not exist","lastModifiedDate":"2023-10-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"seanpzk"},"content":"### Removing a student : `remove`","lastModifiedDate":"2023-09-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"seanpzk"},"content":"Removes an existing student from a class.","lastModifiedDate":"2023-09-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"seanpzk"},"content":"**Command Format**: `remove /s STUDENT_NAME /c CLASS_NAME`","lastModifiedDate":"2023-09-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"sudarshan2401"},"content":"* CLASS_NAME is not case-sensitive","lastModifiedDate":"2023-09-27"},{"lineNumber":158,"author":{"gitId":"songgthu"},"content":"* Class and student must already exist","lastModifiedDate":"2023-10-01"},{"lineNumber":159,"author":{"gitId":"songgthu"},"content":"* STUDENT_NAME only accepts alphabetical characters","lastModifiedDate":"2023-10-01"},{"lineNumber":160,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":161,"author":{"gitId":"songgthu"},"content":"**Examples:**","lastModifiedDate":"2023-10-01"},{"lineNumber":162,"author":{"gitId":"songgthu"},"content":"* Remove /s John /c CS2103T","lastModifiedDate":"2023-10-01"},{"lineNumber":163,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":164,"author":{"gitId":"sudarshan2401"},"content":"**Successful Output:**","lastModifiedDate":"2023-09-27"},{"lineNumber":165,"author":{"gitId":"songgthu"},"content":"* STUDENT_NAME has been removed from CLASS_NAME","lastModifiedDate":"2023-10-01"},{"lineNumber":166,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":167,"author":{"gitId":"sudarshan2401"},"content":"**Unsuccessful Output:**","lastModifiedDate":"2023-09-27"},{"lineNumber":168,"author":{"gitId":"songgthu"},"content":"* Class name not specified","lastModifiedDate":"2023-10-01"},{"lineNumber":169,"author":{"gitId":"songgthu"},"content":"* CLASS_NAME does not exist","lastModifiedDate":"2023-10-01"},{"lineNumber":170,"author":{"gitId":"songgthu"},"content":"* STUDENT_NAME is not found in CLASS_NAME","lastModifiedDate":"2023-10-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"songgthu"},"content":"**Command Format:** `exit`","lastModifiedDate":"2023-10-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"songgthu"},"content":"EduTrack\u0027s data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"songgthu"},"content":"### Adding a list of students : `coming in v1.3`","lastModifiedDate":"2023-10-01"},{"lineNumber":183,"author":{"gitId":"revdrag"},"content":"[Coming soon...]","lastModifiedDate":"2023-09-28"},{"lineNumber":184,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":185,"author":{"gitId":"songgthu"},"content":"### Updating a class : `coming in v1.3`","lastModifiedDate":"2023-10-01"},{"lineNumber":186,"author":{"gitId":"DonovanJJ"},"content":"[Coming Soon...]","lastModifiedDate":"2023-09-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":188,"author":{"gitId":"songgthu"},"content":"### Updating a class note : `coming in v1.3`","lastModifiedDate":"2023-10-01"},{"lineNumber":189,"author":{"gitId":"DonovanJJ"},"content":"[Coming Soon...]","lastModifiedDate":"2023-09-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":191,"author":{"gitId":"songgthu"},"content":"### Updating a student : `coming in v1.3`","lastModifiedDate":"2023-10-01"},{"lineNumber":192,"author":{"gitId":"DonovanJJ"},"content":"[Coming Soon...]","lastModifiedDate":"2023-09-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":194,"author":{"gitId":"songgthu"},"content":"### Adding a lesson : `coming in v1.3`","lastModifiedDate":"2023-10-01"},{"lineNumber":195,"author":{"gitId":"DonovanJJ"},"content":"[Coming Soon...]","lastModifiedDate":"2023-09-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":197,"author":{"gitId":"songgthu"},"content":"### Removing a lesson : `coming in v1.3`","lastModifiedDate":"2023-10-01"},{"lineNumber":198,"author":{"gitId":"DonovanJJ"},"content":"[Coming Soon...]","lastModifiedDate":"2023-09-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":200,"author":{"gitId":"songgthu"},"content":"### Taking attendance : `coming in v1.3`","lastModifiedDate":"2023-10-01"},{"lineNumber":201,"author":{"gitId":"DonovanJJ"},"content":"[Coming Soon...]","lastModifiedDate":"2023-09-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":203,"author":{"gitId":"songgthu"},"content":"### Finding a student : `coming in v1.3`","lastModifiedDate":"2023-10-01"},{"lineNumber":204,"author":{"gitId":"DonovanJJ"},"content":"[Coming Soon...]","lastModifiedDate":"2023-09-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"songgthu"},"content":"Coming soon...","lastModifiedDate":"2023-09-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":216,"author":{"gitId":"songgthu"},"content":"Coming soon...","lastModifiedDate":"2023-09-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"songgthu"},"content":"| Action     | Format, Examples                                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-09-25"},{"lineNumber":223,"author":{"gitId":"seanpzk"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-09-26"},{"lineNumber":224,"author":{"gitId":"seanpzk"},"content":"| **add**    | **Adding a class:** \u003cbr\u003e **Format:** `add /c CLASS_NAME` \u003cbr\u003e **Eg:** `add /c CS2103T` \u003cbr\u003e \u003cbr\u003e **Adding a student:** \u003cbr\u003e **Format:** `add /s STUDENT_NAME  /c CLASS_NAME` \u003cbr\u003e **Eg:** `add /s John /c CS2103T`  \u003cbr\u003e\u003cbr\u003e **Adding a list of students** \u003cbr\u003e Coming soon |","lastModifiedDate":"2023-09-26"},{"lineNumber":225,"author":{"gitId":"seanpzk"},"content":"| **remove** | **Removing a class:** \u003cbr\u003e **Format:** `remove /c CLASS_NAME` \u003cbr\u003e **Eg:** `remove /c CS2103T` \u003cbr\u003e \u003cbr\u003e **Removing a student:** \u003cbr\u003e **Format:** `remove /s STUDENT_NAME  /c CLASS_NAME` \u003cbr\u003e **Eg:** `remove /s John /c CS2103T`                                          |","lastModifiedDate":"2023-09-26"},{"lineNumber":226,"author":{"gitId":"seanpzk"},"content":"| **view**   | **Viewing a class:** \u003cbr\u003e **Format:** `view /c CLASS_NAME` \u003cbr\u003e **Eg:** `view CS2103T`                                                                                                                                                                                      |","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"seanpzk":8,"sudarshan2401":6,"songgthu":96,"DonovanJJ":12,"revdrag":8,"-":96}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eEduTrack\u003c/a\u003e","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-T15-3/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"revdrag":2,"-":64}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(eduTrack)","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"songgthu":1,"-":38}},{"path":"docs/team/donovanjj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"layout: default.md","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"title: \"Donovan Chan Jia Jun\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"### Project: EduTrack","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"EduTrack is a desktop app for managing classes designed for tutors, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"Whether you\u0027re juggling multiple students or just need quick access to individual student data, EduTrack empowers you with effortless control and organization","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"* **New Feature**: **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":"  * What it does: **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"  * Justification: **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"  * Highlights: **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"* **New Feature**: **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"* **Code contributed**: [Code Contributed](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ddonovanjj\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"* **Project management**:","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"  * Managed releases `**{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"  * **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"  * **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"DonovanJJ"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"DonovanJJ"},"content":"  * User Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"DonovanJJ"},"content":"    * **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"DonovanJJ"},"content":"    * **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"DonovanJJ"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"DonovanJJ"},"content":"    * **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"DonovanJJ"},"content":"* **Community**:","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"DonovanJJ"},"content":"  * **{To add PR reviews}**","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"DonovanJJ"},"content":"  * **{Forum discussion}**","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"DonovanJJ"},"content":"  * **{Bug reports}**","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"DonovanJJ"},"content":"* **Tools**:","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"DonovanJJ"},"content":"  * **{To be added}**","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"DonovanJJ"},"content":"  * **{To be added}**","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"DonovanJJ":44}},{"path":"docs/team/revdrag.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"  layout: default.md","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"  title: \"Wang Helin\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"### Project: EduTrack","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"EduTrack is a desktop app for managing classes designed for tutors, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Whether you\u0027re juggling multiple students or just need quick access to individual student data, EduTrack empowers you with effortless control and organization.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"*  **Code Contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003drevdrag\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"* **New Feature**: *to be added*","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"  * What it does:","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"  * Justification:","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"  * Highlights:","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"  * Credits:","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"* **Project Management**: *to be added*","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"* **Enhancements to existing features**: *to be added*","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"  * User Guide: *to be added*","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"  * Developer Guide: *to be added*","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"* **Community**: *to be added*","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"revdrag":23}},{"path":"docs/team/seanpzk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"layout: default.md","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"title: \"Sean Phua Zeng Kiat\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"---","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"### Project: EduTrack","lastModifiedDate":"2023-09-26"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"EduTrack is a desktop app for managing classes designed for tutors, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Whether you\u0027re juggling multiple students or just need quick access to individual student data, EduTrack empowers you with effortless control and organization.","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-26"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"* **New Feature**: _To be updated_","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"    * What it does:","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"    * Justification:","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"    * Highlights:","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"    * Credits:","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dseanpzk\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-26"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"* **Project management**:","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"    * _To be updated_","lastModifiedDate":"2023-09-26"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"    * _To be updated_","lastModifiedDate":"2023-09-26"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-26"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"    * User Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"      * ##### v1.1","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"        1. Added documentation of feature `removing a student`: [\\#25](https://github.com/AY2324S1-CS2103T-T15-3/tp/pull/25)","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"        2. Tweaked documentation of feature `Saving the data`: [\\#25](https://github.com/AY2324S1-CS2103T-T15-3/tp/pull/25)","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"        3. Tweaked documentation of command format from original [UserGuide.md](https://github.com/nus-cs2103-AY2324S1/tp/blob/master/docs/UserGuide.md): [\\#25](https://github.com/AY2324S1-CS2103T-T15-3/tp/pull/25)","lastModifiedDate":"2023-09-26"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"    * Developer Guide:","lastModifiedDate":"2023-09-26"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"      * ##### v1.1","lastModifiedDate":"2023-09-26"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"        1. Added use cases for `Remove a student`, `Modify an existing student record` and `Use auto-save feature`: [\\#25](https://github.com/AY2324S1-CS2103T-T15-3/tp/pull/25)","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"        2. Added `Database` definition under glossary: [\\#25](https://github.com/AY2324S1-CS2103T-T15-3/tp/pull/25)","lastModifiedDate":"2023-09-26"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"* **Community**: _To be updated_","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"* **Tools**: _To be updated_","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"seanpzk":41}},{"path":"docs/team/songgthu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"layout: default.md","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"title: \"Sarah\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"---","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"### Project: EduTrack","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"EduTrack is a desktop app for managing classes designed for tutors, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Whether you\u0027re juggling multiple students or just need quick access to individual student data, EduTrack empowers you with effortless control and organization.","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"* **New Feature**:","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"`to be added soon`","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"* **Project management**:","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"`to be added soon`","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"  * User Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"  `to be added soon`","lastModifiedDate":"2023-09-25"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"  * Developer Guide:","lastModifiedDate":"2023-09-25"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"  `to be added soon`","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"* **Community**:","lastModifiedDate":"2023-09-25"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"`to be added soon`","lastModifiedDate":"2023-09-25"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"* **Tools**:","lastModifiedDate":"2023-09-25"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"`to be added soon`","lastModifiedDate":"2023-09-25"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"songgthu":43}},{"path":"docs/team/sudarshan2401.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sudarshan2401"},"content":"---","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"sudarshan2401"},"content":"layout: default.md","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"sudarshan2401"},"content":"title: \"Sudarshan\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"sudarshan2401"},"content":"---","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"sudarshan2401"},"content":"### Project: EduTrack","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"sudarshan2401"},"content":"EduTrack is a  product is for teaching assistants in universities who type fast and have many classes to manage. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, EduTrack can get your student and class management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"sudarshan2401"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"sudarshan2401"},"content":"* **New Feature**: to be added","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"sudarshan2401"},"content":"    * What it does:","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"sudarshan2401"},"content":"    * Justification:","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"sudarshan2401"},"content":"    * Highlights:","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"sudarshan2401"},"content":"    * Credits:","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"sudarshan2401"},"content":"* **Code contributed**: to be added [RepoSense link]()","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"sudarshan2401"},"content":"* **Project management**:","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"sudarshan2401"},"content":"    * Managed releases to be added.","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"sudarshan2401"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"sudarshan2401"},"content":"    to be added","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"sudarshan2401"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"sudarshan2401"},"content":"* **Community**:","lastModifiedDate":"2023-09-24"},{"lineNumber":29,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"sudarshan2401"},"content":"* **Tools**:","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"sudarshan2401":30}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"seanpzk"},"content":"            source.getStudentList()","lastModifiedDate":"2023-10-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"seanpzk":1,"-":310}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"import seedu.address.storage.EduTrackStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"import seedu.address.storage.JsonEduTrackStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing EduTrack ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"        EduTrackStorage eduTrackStorage \u003d new JsonEduTrackStorage(userPrefs.getEduTrackFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"songgthu"},"content":"        storage \u003d new StorageManager(eduTrackStorage, userPrefsStorage);","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"songgthu"},"content":"        logger.info(\"Using data file : \" + storage.getEduTrackFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"songgthu"},"content":"        Optional\u003cReadOnlyEduTrack\u003e addressBookOptional;","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"songgthu"},"content":"        ReadOnlyEduTrack initialData;","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"songgthu"},"content":"            addressBookOptional \u003d storage.readEduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"songgthu"},"content":"                logger.info(\"Creating a new data file \" + storage.getEduTrackFilePath()","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"songgthu"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleEduTrack);","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"songgthu"},"content":"            logger.warning(\"Data file at \" + storage.getEduTrackFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"songgthu"},"content":"            initialData \u003d new EduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songgthu":15,"-":171}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"     * @see seedu.address.model.Model#getEduTrack()","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"    ReadOnlyEduTrack getAddressBook();","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"    ObservableList\u003cStudent\u003e getFilteredPersonList();","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of classes */","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cClass\u003e getFilteredClassList();","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"seanpzk":2,"songgthu":3,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"import seedu.address.logic.parser.EduTrackParser;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d \"Could not save data to file %s due to \"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"            + \"insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"    private final EduTrackParser eduTrackParser;","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"     * {@code Storage}.","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"        eduTrackParser \u003d new EduTrackParser();","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"        Command command \u003d eduTrackParser.parseCommand(commandText);","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"            storage.saveEduTrack(model.getEduTrack());","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"songgthu"},"content":"    public ReadOnlyEduTrack getAddressBook() {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"        return model.getEduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"seanpzk"},"content":"    public ObservableList\u003cStudent\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public ObservableList\u003cClass\u003e getFilteredClassList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return model.getFilteredClassList();","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"songgthu"},"content":"        return model.getEduTrackFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"seanpzk":7,"songgthu":9,"-":79}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"    public static final String MESSAGE_INVALID_CLASS_DISPLAYED_INDEX \u003d \"The class index provided is invalid\";","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"    public static final String MESSAGE_INDEX_INPUT_TOO_LARGE \u003d \"The class index provided is invalid\";","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"    public static final String MESSAGE_EMPTY_CLASS_LIST \u003d \"There are no classes available at the moment! Create one!\";","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d \"Multiple values specified for the following single-valued \"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"            + \"field(s): \";","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"        Set\u003cString\u003e duplicateFields \u003d Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"revdrag"},"content":"     * Formats the {@code student} for display to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"revdrag"},"content":"    public static String formatStudent(Student student) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"revdrag"},"content":"        builder.append(student.getName());","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"revdrag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"revdrag"},"content":"     * Formats the {@code class} for display to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"DonovanJJ"},"content":"    public static String formatClass(Class c) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"DonovanJJ"},"content":"        builder.append(c.getClassName())","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"DonovanJJ"},"content":"                .append(\"\");","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"seanpzk":4,"DonovanJJ":5,"revdrag":7,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/AddClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"/**","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":" * Adds a class to the list of classes","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":" */","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"public class AddClassCommand extends Command {","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"    public static final String COMMAND_WORD \u003d \"add /c\";","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new class to the list of classes.\\n\"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"            + PREFIX_CLASS + \" CLASS_NAME \";","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s has been added\";","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    public static final String MESSAGE_DUPLICATE_CLASS \u003d \"%1$s already exists\";","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"    private final Class c;","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"     * Creates an AddClassCommand to add the specified {@code Class}","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"    public AddClassCommand(Class c) {","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"        requireAllNonNull(c);","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"        this.c \u003d c;","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"        if (model.hasClass(c)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_CLASS, c.getClassName()));","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"        model.addClass(c);","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, c.getClassName()));","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"            return true;","lastModifiedDate":"2023-10-01"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"        if (!(other instanceof AddClassCommand)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"            return false;","lastModifiedDate":"2023-10-01"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"        AddClassCommand e \u003d (AddClassCommand) other;","lastModifiedDate":"2023-10-01"},{"lineNumber":61,"author":{"gitId":"songgthu"},"content":"        return c.equals(e.c);","lastModifiedDate":"2023-10-01"},{"lineNumber":62,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":63,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"songgthu"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"songgthu"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"songgthu"},"content":"                .add(\"class\", c)","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"                .toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"songgthu":70}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"    public static final String COMMAND_WORD \u003d \"add \";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"    private final Student toAdd;","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"    public AddCommand(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"seanpzk"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"revdrag"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatStudent(toAdd)));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"seanpzk":5,"revdrag":2,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/AddStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":" * Adds a student to EduTrack.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"public class AddStudentCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"    public static final String COMMAND_WORD \u003d \"add /s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to a specified class index. \"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"            + PREFIX_STUDENT + \" STUDENT NAME \"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"            + PREFIX_CLASS + \" CLASS INDEX \\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"            + \" John Doe \"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"            + PREFIX_CLASS + \" 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"    public static final String MESSAGE_ADD_STUDENT_SUCCESS \u003d \"New student added: %1$s to the class: %2$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"revdrag"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the class\";","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"revdrag"},"content":"    private final Student toAdd;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"revdrag"},"content":"    private final Index classIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"revdrag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"revdrag"},"content":"     * Creates an AddStudentCommand to add the specified {@code Student}","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"revdrag"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"revdrag"},"content":"    public AddStudentCommand(Student student, Index classIndex) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"revdrag"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"revdrag"},"content":"        this.toAdd \u003d student;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"revdrag"},"content":"        this.classIndex \u003d classIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"revdrag"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"revdrag"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"revdrag"},"content":"        List\u003cClass\u003e lastShownClassList \u003d model.getFilteredClassList();","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"revdrag"},"content":"        if (classIndex.getZeroBased() \u003e\u003d lastShownClassList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"revdrag"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"revdrag"},"content":"        Class classToAddStudent \u003d lastShownClassList.get(classIndex.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"revdrag"},"content":"        if (classToAddStudent.hasStudentInClass(this.toAdd)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"revdrag"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"revdrag"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"revdrag"},"content":"        model.addStudentToClass(this.toAdd, classToAddStudent);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"revdrag"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_STUDENT_SUCCESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"revdrag"},"content":"                Messages.formatStudent(this.toAdd), Messages.formatClass(classToAddStudent)));","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"revdrag"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"revdrag"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"revdrag"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"revdrag"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"revdrag"},"content":"        if (!(other instanceof AddStudentCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"revdrag"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"revdrag"},"content":"        AddStudentCommand otherAddStudentCommand \u003d (AddStudentCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"revdrag"},"content":"        return toAdd.equals(otherAddStudentCommand.toAdd) \u0026\u0026 classIndex.equals(otherAddStudentCommand.classIndex);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"revdrag"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"revdrag"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"revdrag"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"revdrag"},"content":"                .add(\"classIndex\", classIndex)","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"revdrag"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"revdrag"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"revdrag":87}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"        model.setEduTrack(new EduTrack());","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songgthu":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"        Student personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"        model.deleteStudent(personToDelete);","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"revdrag"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.formatStudent(personToDelete)));","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"seanpzk":4,"revdrag":1,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"seanpzk"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"seanpzk"},"content":"        Student personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"        Student editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"seanpzk"},"content":"        if (!personToEdit.isSameStudent(editedPerson) \u0026\u0026 model.hasStudent(editedPerson)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"seanpzk"},"content":"        model.setStudent(personToEdit, editedPerson);","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"seanpzk"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"revdrag"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatStudent(editedPerson)));","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"seanpzk"},"content":"    private static Student createEditedPerson(Student personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"seanpzk"},"content":"        return new Student(updatedName);","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"seanpzk"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"seanpzk"},"content":"     * replace the","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"seanpzk"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"seanpzk"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address);","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":202,"author":{"gitId":"seanpzk"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address);","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"seanpzk":19,"revdrag":1,"-":195}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":" * Finds and lists all persons in address book whose name contains any of the","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":" * argument keywords.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"seanpzk":5,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/RemoveClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.module.exceptions.ClassNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":" * Deletes a Class identified using it\u0027s unique name from the EduTrack.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"public class RemoveClassCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"    public static final String COMMAND_WORD \u003d \"remove /c\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"            + \": Deletes the class identified by the index number used in the displayed class list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"            + \"Parameters: CLASSINDEX \\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"DonovanJJ"},"content":"    public static final String MESSAGE_REMOVE_CLASS_SUCCESS \u003d \"Deleted Class: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"    public static final String MESSAGE_MISSING_CLASS \u003d \"The index (%1$s) you provided does not exist!\";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"    private final Index targetClassIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"DonovanJJ"},"content":"     * Constructor for the Remove Class Command.","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"DonovanJJ"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"DonovanJJ"},"content":"     * @param classIndex Index to remove from the Class unique list","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"DonovanJJ"},"content":"    public RemoveClassCommand(Index classIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"DonovanJJ"},"content":"        requireNonNull(classIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"DonovanJJ"},"content":"        this.targetClassIndex \u003d classIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"DonovanJJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"DonovanJJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"DonovanJJ"},"content":"        Class classToRemove \u003d model.retrieveClass(targetClassIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"DonovanJJ"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"DonovanJJ"},"content":"            model.removeClass(classToRemove);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"DonovanJJ"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"DonovanJJ"},"content":"            throw new CommandException(MESSAGE_MISSING_CLASS);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"DonovanJJ"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_CLASS_SUCCESS, Messages.formatClass(classToRemove)));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"DonovanJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"DonovanJJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"DonovanJJ"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"DonovanJJ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"DonovanJJ"},"content":"        if (!(other instanceof RemoveClassCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"DonovanJJ"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand otherRemoveClassCommand \u003d (RemoveClassCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"DonovanJJ"},"content":"        return this.targetClassIndex.equals(otherRemoveClassCommand.targetClassIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"DonovanJJ"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"DonovanJJ"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"DonovanJJ"},"content":"                .add(\"classIndex\", this.targetClassIndex)","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"DonovanJJ"},"content":"                .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"DonovanJJ"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"DonovanJJ":74}},{"path":"src/main/java/seedu/address/logic/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":" * A command that informs user what specific objects they can remove.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"            + \": Removes a specified type of object from its respective storage\"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"            // Removing a student from a class","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"            + \"To remove a student from a class:\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"            + PREFIX_STUDENT + \" STUDENT_NAME \"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"            + PREFIX_CLASS + \" CLASS_NAME\"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"            + PREFIX_STUDENT + \" John Doe \"","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"            + PREFIX_CLASS + \" cs2103t\"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"            + \"\\n\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"            // Removing a class","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"            + \"To remove a class: \\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"            + \"Parameters:\"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"            + PREFIX_CLASS + \" CLASS_NAME\"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"            + PREFIX_CLASS + \" cs2103t\";","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"        return new CommandResult(String.format(MESSAGE_USAGE));","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"seanpzk":44}},{"path":"src/main/java/seedu/address/logic/commands/RemoveStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":" * Removes a Student identified by Name  from a Class.","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"public class RemoveStudentCommand extends RemoveCommand {","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"    public static final String COMMAND_WORD \u003d RemoveCommand.COMMAND_WORD + \" /s\";","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"            + \": Removes a student from a class.\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"            + PREFIX_STUDENT + \"STUDENT_NAME\"","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"            + PREFIX_CLASS + \"CLASS_NAME\"","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"            + \"\\n\"","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"            + \"Example: \"","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"            + COMMAND_WORD + \" John Doe \"","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"            + PREFIX_CLASS + \" cs2103t\";","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"    public static final String MESSAGE_REMOVE_STUDENT_SUCCESS \u003d \"%s has been removed from %s \";","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"    private final Index studentIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"    private final ClassName studentClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"     * Command to remove Student based on its index in the UniqueStudentList in Class with ClassName","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"     * @param index Index of student in List","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"     * @param studentClassName ClassName of the Student\u0027s Class","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"    public RemoveStudentCommand(Index index, ClassName studentClassName) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"seanpzk"},"content":"        requireNonNull(studentClassName);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"seanpzk"},"content":"        this.studentIndex \u003d index;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"        this.studentClassName \u003d studentClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"seanpzk"},"content":"        Class studentClass \u003d model.getClass(studentClassName);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"seanpzk"},"content":"        List\u003cStudent\u003e studentList \u003d studentClass.getStudentList();","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"seanpzk"},"content":"        if (studentIndex.getZeroBased() \u003e\u003d studentList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"        Student studentToDelete \u003d studentList.get(studentIndex.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"seanpzk"},"content":"        model.deleteStudentFromClass(studentToDelete, studentClass);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"seanpzk"},"content":"        Name studentName \u003d studentToDelete.getName();","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"revdrag"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_STUDENT_SUCCESS, studentName,","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"revdrag"},"content":"                Messages.formatClass(studentClass)));","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"seanpzk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"seanpzk"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"seanpzk"},"content":"        if (!(other instanceof RemoveStudentCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"seanpzk"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"seanpzk"},"content":"        RemoveStudentCommand otherRemoveStudentCommand \u003d (RemoveStudentCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"seanpzk"},"content":"        return studentClassName.equals(otherRemoveStudentCommand.studentClassName)","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"seanpzk"},"content":"                \u0026\u0026 studentIndex.equals(otherRemoveStudentCommand.studentIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"seanpzk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"seanpzk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"seanpzk"},"content":"                .add(\"studentClassName\", studentClassName)","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"seanpzk"},"content":"                .add(\"studentIndex\", studentIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"seanpzk"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"seanpzk":92,"revdrag":2,"-":1}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"songgthu":3,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"import seedu.address.logic.commands.AddClassCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":" * Parses input arguments and creates a new AddClassCommand object","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"public class AddClassCommandParser implements Parser\u003cAddClassCommand\u003e {","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"     * Parses the given {@code String} of arguments in the context of the AddClassCommand","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"     * and returns an AddClassCommand object for execution.","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"     * @throws ParseException if the user input does not follow the expected format","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    public AddClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CLASS);","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CLASS)","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_CLASS);","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"        ClassName className \u003d ParserUtil.parseClassName(argMultimap.getValue(PREFIX_CLASS).get());","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"revdrag"},"content":"        UniqueStudentList emptyStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"revdrag"},"content":"        Class c \u003d new Class(className, emptyStudentList);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"        return new AddClassCommand(c);","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"songgthu":41,"revdrag":3}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"                PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"        Student person \u003d new Student(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"     * in the given","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"seanpzk":7,"-":46}},{"path":"src/main/java/seedu/address/logic/parser/AddStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":" * Parses input arguments and creates a new AddStudentCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"public class AddStudentCommandParser implements Parser\u003cAddStudentCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"    public AddStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STUDENT, PREFIX_CLASS);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDENT, PREFIX_CLASS)","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"revdrag"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"revdrag"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"revdrag"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STUDENT, PREFIX_CLASS);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"revdrag"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_STUDENT).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"revdrag"},"content":"        Index classIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CLASS).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"revdrag"},"content":"        Student student \u003d new Student(name);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"revdrag"},"content":"        return new AddStudentCommand(student, classIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"revdrag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"revdrag"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"revdrag"},"content":"     * in the given","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"revdrag"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"revdrag"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"revdrag"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"revdrag"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"revdrag"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"revdrag":52}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":" * Tokenizes arguments string of the form:","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July} where prefixes","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":" * are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":" * the above example.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":" * 2. Leading and trailing whitespaces of an argument value will be","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":" * discarded.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g.","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":" * the value of {@code t/}","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"     * that maps prefixes to their","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"     * respective argument values. Only the given prefixes will be recognized in the","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"     * arguments string.","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"     * @param argsString Arguments string of the form:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"     *                   {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"     * @param argsString Arguments string of the form:","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"     *                   {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"seanpzk"},"content":"     * Extracts prefixes and their argument values, and returns an","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"seanpzk"},"content":"     * {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"seanpzk"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"seanpzk"},"content":"     * based on their zero-based positions in","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"seanpzk"},"content":"     * @param argsString      Arguments string of the form:","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"seanpzk"},"content":"     *                        {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"seanpzk"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"seanpzk"},"content":"     *                        {@code argsString}","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"seanpzk"},"content":"     * Returns the trimmed value of the argument in the arguments string specified","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"seanpzk"},"content":"     * by {@code currentPrefixPosition}.","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"seanpzk":28,"-":134}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"    public static final Prefix PREFIX_STUDENT \u003d new Prefix(\"/s\");","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"    public static final Prefix PREFIX_CLASS \u003d new Prefix(\"/c\");","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"seanpzk":2,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/EduTrackParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.AddClassCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.commands.RemoveClassCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.RemoveStudentCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"public class EduTrackParser {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT1 \u003d Pattern","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"            .compile(\"(?\u003ccommandWord\u003e\\\\S+(?:\\\\s/\\\\S+)?)(?:\\\\s(?\u003carguments\u003e.*))?\");","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT2 \u003d Pattern","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"            .compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EduTrackParser.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"     * Identifies the class of object (if any) when using commands that require","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"     * additional parameters, such as adding a student (/s) or a class (/c).","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"     * @param input The input string containing the user input.","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"     * @return A string representing the first argument of the command, including leading and trailing whitespace.","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"    public static String extractObjectClass(String input) {","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"        // Split the input string by whitespace","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"        String[] parts \u003d input.split(\"\\\\s\");","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"        // Check if there are at least two parts (words) separated by whitespace","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"        if (parts.length \u003e\u003d 2) {","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"seanpzk"},"content":"            // Return the second part (index 1)","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"seanpzk"},"content":"            return \" \" + parts[1] + \" \";","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"seanpzk"},"content":"        } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"            // Handle the case where there are not enough words","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"seanpzk"},"content":"            System.out.println(\"There is no additional parameter to indicate class of object after command word\");","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"            return null; // or throw an exception, return a default value, etc.","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":74,"author":{"gitId":"seanpzk"},"content":"        String objectClass \u003d \"\";","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"seanpzk"},"content":"        final Matcher matcher;","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"        Matcher tempMatcher \u003d BASIC_COMMAND_FORMAT1.matcher(userInput.trim());","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"seanpzk"},"content":"        if (tempMatcher.matches()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"seanpzk"},"content":"            objectClass \u003d extractObjectClass(userInput);","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"seanpzk"},"content":"            matcher \u003d tempMatcher;","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"seanpzk"},"content":"        } else {","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"seanpzk"},"content":"            matcher \u003d BASIC_COMMAND_FORMAT2.matcher(userInput.trim());","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"songgthu"},"content":"        final String arguments \u003d matcher.group(\"arguments\") \u003d\u003d null ? objectClass","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"songgthu"},"content":"                : objectClass + matcher.group(\"arguments\");","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"seanpzk"},"content":"        // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"seanpzk"},"content":"        // (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":95,"author":{"gitId":"seanpzk"},"content":"        System.out.println(\"Command word: \" + commandWord);","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"seanpzk"},"content":"        System.out.println(\"Arguments: \" + arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"songgthu"},"content":"        case AddClassCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-01"},{"lineNumber":105,"author":{"gitId":"songgthu"},"content":"            return new AddClassCommandParser().parse(arguments);","lastModifiedDate":"2023-10-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"revdrag"},"content":"        case AddStudentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"revdrag"},"content":"            return new AddStudentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"DonovanJJ"},"content":"        case RemoveClassCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"DonovanJJ"},"content":"            return new RemoveClassCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"seanpzk"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"seanpzk"},"content":"            return new RemoveCommandParser().parse(arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"seanpzk"},"content":"        case RemoveStudentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"seanpzk"},"content":"            return new RemoveStudentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"seanpzk":40,"songgthu":14,"DonovanJJ":4,"revdrag":16,"-":71}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"     * FindCommand","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"seanpzk":3,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":" * classes.","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"     * and trailing whitespaces will be","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"     *                        unsigned integer).","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"songgthu"},"content":"     * Parses a {@code String className} into a {@code ClassName}.","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"songgthu"},"content":"     * @throws ParseException if the given {@code className} is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"songgthu"},"content":"    public static ClassName parseClassName(String className) throws ParseException {","lastModifiedDate":"2023-10-01"},{"lineNumber":105,"author":{"gitId":"songgthu"},"content":"        String trimmedClassName \u003d className.trim();","lastModifiedDate":"2023-10-01"},{"lineNumber":106,"author":{"gitId":"songgthu"},"content":"        if (ClassName.isEmptyClassName(trimmedClassName)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"songgthu"},"content":"            throw new ParseException(ClassName.MESSAGE_EMPTY_CLASS_NAME);","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"songgthu"},"content":"        if (!ClassName.isValidClassName(trimmedClassName)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":110,"author":{"gitId":"songgthu"},"content":"            throw new ParseException(ClassName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":112,"author":{"gitId":"songgthu"},"content":"        return new ClassName(trimmedClassName);","lastModifiedDate":"2023-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"seanpzk":12,"songgthu":9,"-":93}},{"path":"src/main/java/seedu/address/logic/parser/RemoveClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.commands.RemoveClassCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":" * Parses input from the user and creates a RemoveClassCommand.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"public class RemoveClassCommandParser implements Parser\u003cRemoveClassCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveClassCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"     * and returns a RemoveClassCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"    public RemoveClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"DonovanJJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CLASS);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CLASS)","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"DonovanJJ"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_CLASS);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"DonovanJJ"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"DonovanJJ"},"content":"            Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_CLASS).get());","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"DonovanJJ"},"content":"            return new RemoveClassCommand(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"DonovanJJ"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"DonovanJJ"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"DonovanJJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveClassCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"DonovanJJ"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"DonovanJJ"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"DonovanJJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"DonovanJJ"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"DonovanJJ"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"DonovanJJ":48}},{"path":"src/main/java/seedu/address/logic/parser/RemoveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":" * Parses input arguments and creates a new RemoveCommand object.","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"public class RemoveCommandParser implements Parser\u003cRemoveCommand\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"     * DeleteCommand","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"    public RemoveCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"        try {","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"            return new RemoveCommand();","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"                    String.format(\"invalid msg placeholder\", RemoveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":28}},{"path":"src/main/java/seedu/address/logic/parser/RemoveStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.logic.commands.RemoveStudentCommand;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"public class RemoveStudentCommandParser implements Parser\u003cRemoveCommand\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"     * DeleteCommand","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"    public RemoveStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_STUDENT, PREFIX_CLASS);","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"        // ensures that student name and class name is provided","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDENT, PREFIX_CLASS)","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STUDENT, PREFIX_CLASS);","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"        Index studentIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_STUDENT).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"        ClassName className \u003d ParserUtil.parseClassName(argMultimap.getValue(PREFIX_CLASS).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"        return new RemoveStudentCommand(studentIndex, className);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":46}},{"path":"src/main/java/seedu/address/model/EduTrack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.UniqueClassList;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.module.exceptions.ClassNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"public class EduTrack implements ReadOnlyEduTrack {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"     * between constructors. See","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"     * ways to avoid duplication","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"    private final UniqueClassList classes;","lastModifiedDate":"2023-10-01"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"    {","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"        classes \u003d new UniqueClassList();","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"    public EduTrack() {}","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"     * Creates an EduTrack using the Students in the {@code toBeCopied}","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"    public EduTrack(ReadOnlyEduTrack toBeCopied) {","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"seanpzk"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"seanpzk"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Replaces the contents of the class list with {@code classes}.","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"DonovanJJ"},"content":"     * {@code classess} must not contain duplicate class.","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setClasses(List\u003cClass\u003e classes) {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.classes.setClasses(classes);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"songgthu"},"content":"     * Resets the existing data of this {@code EduTrack} with {@code newData}.","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"songgthu"},"content":"    public void resetData(ReadOnlyEduTrack newData) {","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"seanpzk"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"songgthu"},"content":"        setClasses(newData.getClassList());","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"seanpzk"},"content":"    //// student-level operations","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"seanpzk"},"content":"     * Returns true if a student with the same identity as {@code student} exists in","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"seanpzk"},"content":"     * the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"seanpzk"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"seanpzk"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"seanpzk"},"content":"        return students.contains(student);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"seanpzk"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"seanpzk"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"seanpzk"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"seanpzk"},"content":"        students.add(p);","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"seanpzk"},"content":"     * Replaces the given student {@code target} in the list with","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"seanpzk"},"content":"     * {@code editedStudent}.","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"seanpzk"},"content":"     * The student identity of {@code editedStudent} must not be the same as another","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"seanpzk"},"content":"     * existing student in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"seanpzk"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"seanpzk"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"seanpzk"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"songgthu"},"content":"     * Removes {@code key} from this {@code EduTrack}.","lastModifiedDate":"2023-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"seanpzk"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"seanpzk"},"content":"        students.remove(key);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"songgthu"},"content":"     * Adds a class to EduTrack.","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"seanpzk"},"content":"     * The student must not already exist in EduTrack.","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":128,"author":{"gitId":"songgthu"},"content":"    public void addClass(Class c) {","lastModifiedDate":"2023-10-01"},{"lineNumber":129,"author":{"gitId":"songgthu"},"content":"        classes.add(c);","lastModifiedDate":"2023-10-01"},{"lineNumber":130,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":131,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":132,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"songgthu"},"content":"     * Returns true if a class with the same identity as {@code c} exists in EduTrack.","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"songgthu"},"content":"    public boolean hasClass(Class c) {","lastModifiedDate":"2023-10-01"},{"lineNumber":136,"author":{"gitId":"songgthu"},"content":"        requireNonNull(c);","lastModifiedDate":"2023-10-01"},{"lineNumber":137,"author":{"gitId":"songgthu"},"content":"        return classes.contains(c);","lastModifiedDate":"2023-10-01"},{"lineNumber":138,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":139,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":140,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"DonovanJJ"},"content":"     * Removes a class from EduTrack.","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"DonovanJJ"},"content":"     * The class must exist in EduTrack","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"DonovanJJ"},"content":"    public void removeClass(Class c) throws ClassNotFoundException {","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"DonovanJJ"},"content":"        this.classes.remove(c);","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"seanpzk"},"content":"    public Class getClass(ClassName className) {","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"seanpzk"},"content":"        for (Class c : classes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"seanpzk"},"content":"            System.out.println(c.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"seanpzk"},"content":"            if (c.getClassName().equals(className)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"seanpzk"},"content":"                return c;","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"seanpzk"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"seanpzk"},"content":"        // if no matching className, class do not exist in unique class list","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"seanpzk"},"content":"        return null;","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public Class getClassByIndex(Index classIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        requireNonNull(classIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return classes.get(classIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public int getClassListSize() {","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return classes.size();","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"seanpzk"},"content":"                .add(\"students\", students)","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"seanpzk"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"seanpzk"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":181,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":182,"author":{"gitId":"songgthu"},"content":"    public ObservableList\u003cClass\u003e getClassList() {","lastModifiedDate":"2023-10-01"},{"lineNumber":183,"author":{"gitId":"songgthu"},"content":"        return classes.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-01"},{"lineNumber":184,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":185,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":193,"author":{"gitId":"songgthu"},"content":"        if (!(other instanceof EduTrack)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"songgthu"},"content":"        EduTrack otherEduTrack \u003d (EduTrack) other;","lastModifiedDate":"2023-10-07"},{"lineNumber":198,"author":{"gitId":"seanpzk"},"content":"        return students.equals(otherEduTrack.students);","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"seanpzk"},"content":"        return students.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seanpzk":56,"songgthu":37,"DonovanJJ":9,"-":103}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.module.exceptions.ClassNotFoundException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cClass\u003e PREDICATE_SHOW_ALL_CLASSES \u003d unused -\u003e true;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"    Path getEduTrackFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"    void setEduTrackFilePath(Path eduTrackFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"     * Replaces address book data with the data in {@code eduTrack}.","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"    void setEduTrack(ReadOnlyEduTrack eduTrack);","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"songgthu"},"content":"    /** Returns the EduTrack */","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"    ReadOnlyEduTrack getEduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"seanpzk"},"content":"     * the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"seanpzk"},"content":"    boolean hasStudent(Student person);","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"seanpzk"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"seanpzk"},"content":"     * Deletes the given student from class.","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"     * The person must exist in the class.","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"seanpzk"},"content":"    void deleteStudentFromClass(Student student, Class studentClass);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"seanpzk"},"content":"    void addStudent(Student person);","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"revdrag"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"revdrag"},"content":"     * Adds the given student to the class.","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"revdrag"},"content":"     * The person must not already exist in the class.","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"revdrag"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"revdrag"},"content":"    void addStudentToClass(Student student, Class studentClass);","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"seanpzk"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"seanpzk"},"content":"     * existing person in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"seanpzk"},"content":"    void setStudent(Student target, Student editedPerson);","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"revdrag"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"seanpzk"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"revdrag"},"content":"    /** Returns an unmodifiable view of the filtered class list */","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"revdrag"},"content":"    ObservableList\u003cClass\u003e getFilteredClassList();","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"seanpzk"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"seanpzk"},"content":"     * {@code predicate}.","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"seanpzk"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":113,"author":{"gitId":"songgthu"},"content":"    void addClass(Class c);","lastModifiedDate":"2023-10-01"},{"lineNumber":114,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":115,"author":{"gitId":"songgthu"},"content":"    boolean hasClass(Class c);","lastModifiedDate":"2023-10-01"},{"lineNumber":116,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"DonovanJJ"},"content":"    void removeClass(Class c) throws ClassNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"DonovanJJ"},"content":"    Class retrieveClass(Index classListIndex) throws CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"seanpzk"},"content":"    Class getClass(ClassName className);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    Class getClassByIndex(Index classIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    int getClassListSize();","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    void updateFilteredClassList(Predicate\u003cClass\u003e predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"seanpzk":23,"songgthu":11,"DonovanJJ":6,"revdrag":8,"-":80}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"    private final EduTrack eduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"    private final FilteredList\u003cClass\u003e filteredClasses;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"     * Initializes a ModelManager with the given eduTrack and userPrefs.","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"    public ModelManager(ReadOnlyEduTrack eduTrack, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"        requireAllNonNull(eduTrack, userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"        logger.fine(\"Initializing with address book: \" + eduTrack + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"        this.eduTrack \u003d new EduTrack(eduTrack);","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.eduTrack.getStudentList());","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"revdrag"},"content":"        filteredClasses \u003d new FilteredList\u003c\u003e(this.eduTrack.getClassList());","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"        this(new EduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"songgthu"},"content":"    public Path getEduTrackFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"songgthu"},"content":"        return userPrefs.getEduTrackFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"songgthu"},"content":"    public void setEduTrackFilePath(Path eduTrackFilePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"songgthu"},"content":"        requireNonNull(eduTrackFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":83,"author":{"gitId":"songgthu"},"content":"        userPrefs.setEduTrackFilePath(eduTrackFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"songgthu"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EduTrack \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"songgthu"},"content":"    public void setEduTrack(ReadOnlyEduTrack eduTrack) {","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"songgthu"},"content":"        this.eduTrack.resetData(eduTrack);","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"songgthu"},"content":"    public ReadOnlyEduTrack getEduTrack() {","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"songgthu"},"content":"        return eduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"seanpzk"},"content":"    public boolean hasStudent(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"seanpzk"},"content":"        return eduTrack.hasStudent(person);","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"seanpzk"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"seanpzk"},"content":"        eduTrack.removeStudent(target);","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"seanpzk"},"content":"    public void deleteStudentFromClass(Student student, Class studentClass) {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"seanpzk"},"content":"        studentClass.removeStudentFromClass(student);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"seanpzk"},"content":"        updateFilteredStudentList((s) -\u003e studentClass.getStudentList().contains(s));","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"seanpzk"},"content":"    public void addStudent(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"seanpzk"},"content":"        eduTrack.addStudent(person);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"revdrag"},"content":"        //    updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":121,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"revdrag"},"content":"    public void addStudentToClass(Student student, Class studentClass) {","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"revdrag"},"content":"        studentClass.addStudentToClass(student);","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"revdrag"},"content":"        updateFilteredStudentList((s) -\u003e studentClass.getStudentList().contains(s));","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":128,"author":{"gitId":"songgthu"},"content":"    public void addClass(Class c) {","lastModifiedDate":"2023-10-01"},{"lineNumber":129,"author":{"gitId":"songgthu"},"content":"        eduTrack.addClass(c);","lastModifiedDate":"2023-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        updateFilteredClassList(PREDICATE_SHOW_ALL_CLASSES);","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":132,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":133,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":134,"author":{"gitId":"songgthu"},"content":"    public boolean hasClass(Class c) {","lastModifiedDate":"2023-10-01"},{"lineNumber":135,"author":{"gitId":"songgthu"},"content":"        requireNonNull(c);","lastModifiedDate":"2023-10-01"},{"lineNumber":136,"author":{"gitId":"songgthu"},"content":"        return eduTrack.hasClass(c);","lastModifiedDate":"2023-10-07"},{"lineNumber":137,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":138,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":139,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"DonovanJJ"},"content":"    public void removeClass(Class c) {","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"DonovanJJ"},"content":"        requireNonNull(c);","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"DonovanJJ"},"content":"        eduTrack.removeClass(c);","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"DonovanJJ"},"content":"    public Class retrieveClass(Index targetClassIndex) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"DonovanJJ"},"content":"        ObservableList\u003cClass\u003e classList \u003d this.eduTrack.getClassList();","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"DonovanJJ"},"content":"        if (classList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"DonovanJJ"},"content":"            throw new CommandException(Messages.MESSAGE_EMPTY_CLASS_LIST);","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"DonovanJJ"},"content":"        if (targetClassIndex.getZeroBased() \u003e\u003d classList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"DonovanJJ"},"content":"            throw new CommandException(Messages.MESSAGE_INDEX_INPUT_TOO_LARGE);","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"DonovanJJ"},"content":"        return classList.get(targetClassIndex.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"seanpzk"},"content":"    public Class getClass(ClassName className) {","lastModifiedDate":"2023-10-13"},{"lineNumber":159,"author":{"gitId":"seanpzk"},"content":"        requireNonNull(className);","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"seanpzk"},"content":"        return eduTrack.getClass(className);","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public Class getClassByIndex(Index classIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(classIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return eduTrack.getClassByIndex(classIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public int getClassListSize() {","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return eduTrack.getClassListSize();","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":174,"author":{"gitId":"seanpzk"},"content":"    public void setStudent(Student target, Student editedPerson) {","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":177,"author":{"gitId":"seanpzk"},"content":"        eduTrack.setStudent(target, editedPerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":180,"author":{"gitId":"seanpzk"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"seanpzk"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"songgthu"},"content":"     * {@code versionedEduTrack}","lastModifiedDate":"2023-10-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"seanpzk"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"seanpzk"},"content":"        return filteredStudents;","lastModifiedDate":"2023-10-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"seanpzk"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-10-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":195,"author":{"gitId":"seanpzk"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"revdrag"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"revdrag"},"content":"    public ObservableList\u003cClass\u003e getFilteredClassList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"revdrag"},"content":"        return filteredClasses;","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void updateFilteredClassList(Predicate\u003cClass\u003e predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        filteredClasses.setPredicate(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"songgthu"},"content":"        return eduTrack.equals(otherModelManager.eduTrack)","lastModifiedDate":"2023-10-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"seanpzk"},"content":"                \u0026\u0026 filteredStudents.equals(otherModelManager.filteredStudents);","lastModifiedDate":"2023-10-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seanpzk":29,"songgthu":31,"DonovanJJ":17,"revdrag":13,"-":136}},{"path":"src/main/java/seedu/address/model/ReadOnlyEduTrack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"public interface ReadOnlyEduTrack {","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"    ObservableList\u003cClass\u003e getClassList();","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seanpzk":2,"songgthu":3,"-":14}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"    Path getEduTrackFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"songgthu":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"    private Path eduTrackFilePath \u003d Paths.get(\"data\" , \"edutrack.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"        setEduTrackFilePath(newUserPrefs.getEduTrackFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"    public Path getEduTrackFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"        return eduTrackFilePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"songgthu"},"content":"    public void setEduTrackFilePath(Path eduTrackFilePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"        requireNonNull(eduTrackFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"        this.eduTrackFilePath \u003d eduTrackFilePath;","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"songgthu"},"content":"                \u0026\u0026 eduTrackFilePath.equals(otherUserPrefs.eduTrackFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"songgthu"},"content":"        return Objects.hash(guiSettings, eduTrackFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"songgthu"},"content":"        sb.append(\"\\nLocal data file location : \" + eduTrackFilePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songgthu":10,"-":78}},{"path":"src/main/java/seedu/address/model/module/Class.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":" * Represents a Class in EduTrack.","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"public class Class {","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"    private final ClassName className;","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"     * Constructs a {@code Class} object.","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"     * @param className The name of the class. Must not be null.","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"    public Class(ClassName className, UniqueStudentList students) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"        requireNonNull(className);","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"        this.students \u003d students;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"    public ClassName getClassName() {","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"        return className;","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"     * Checks if the given class is the same as this class.","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"     * @param otherClass The other class to compare with.","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"     * @return True if the classes have the same class name, false otherwise.","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"    public boolean isSameClass(Class otherClass) {","lastModifiedDate":"2023-10-01"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"        if (otherClass \u003d\u003d this) {","lastModifiedDate":"2023-10-01"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"            return true;","lastModifiedDate":"2023-10-01"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"        return otherClass !\u003d null","lastModifiedDate":"2023-10-01"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"                \u0026\u0026 otherClass.getClassName().equals(getClassName());","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"revdrag"},"content":"    public void addStudentToClass(Student toAdd) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"revdrag"},"content":"        students.add(toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"    public void removeStudentFromClass(Student s) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"seanpzk"},"content":"        students.remove(s);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"seanpzk"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"seanpzk"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"songgthu"},"content":"     * Checks if this class is equal to another object.","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"songgthu"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"songgthu"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":73,"author":{"gitId":"songgthu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-01"},{"lineNumber":74,"author":{"gitId":"songgthu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-01"},{"lineNumber":75,"author":{"gitId":"songgthu"},"content":"            return true;","lastModifiedDate":"2023-10-01"},{"lineNumber":76,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":77,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":78,"author":{"gitId":"songgthu"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-01"},{"lineNumber":79,"author":{"gitId":"songgthu"},"content":"        if (!(other instanceof Class)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"songgthu"},"content":"            return false;","lastModifiedDate":"2023-10-01"},{"lineNumber":81,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":82,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":83,"author":{"gitId":"songgthu"},"content":"        Class otherClass \u003d (Class) other;","lastModifiedDate":"2023-10-01"},{"lineNumber":84,"author":{"gitId":"songgthu"},"content":"        return className.equals(otherClass.className);","lastModifiedDate":"2023-10-01"},{"lineNumber":85,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":86,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"songgthu"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"songgthu"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-01"},{"lineNumber":90,"author":{"gitId":"songgthu"},"content":"        return Objects.hash(className);","lastModifiedDate":"2023-10-01"},{"lineNumber":91,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":92,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":93,"author":{"gitId":"revdrag"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"revdrag"},"content":"     * Returns true if a student with the same identity as {@code student} exists in","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"revdrag"},"content":"     * the class.","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"revdrag"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"revdrag"},"content":"    public boolean hasStudentInClass(Student student) {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"revdrag"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"revdrag"},"content":"        return students.contains(student);","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":103,"author":{"gitId":"songgthu"},"content":"    public String toString() {","lastModifiedDate":"2023-10-01"},{"lineNumber":104,"author":{"gitId":"songgthu"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-01"},{"lineNumber":105,"author":{"gitId":"songgthu"},"content":"                .add(\"class name\", className)","lastModifiedDate":"2023-10-01"},{"lineNumber":106,"author":{"gitId":"songgthu"},"content":"                .toString();","lastModifiedDate":"2023-10-01"},{"lineNumber":107,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":108,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"seanpzk":16,"songgthu":78,"revdrag":15}},{"path":"src/main/java/seedu/address/model/module/ClassName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":" * Represents the name of a class in EduTrack.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClassName(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"public class ClassName {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Class name should not contain spaces.\";","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"    public static final String MESSAGE_EMPTY_CLASS_NAME \u003d \"Class name not specified.\";","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[^\\\\s]*$\";","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"    public final String className;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"     * Constructs a {@code ClassName}.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"     * @param className A valid class name.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"     * @throws IllegalArgumentException If the given class name is invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"    public ClassName(String className) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"        requireNonNull(className);","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"DonovanJJ"},"content":"        checkArgument(isValidClassName(className), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"        this.className \u003d className.toUpperCase();","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"DonovanJJ"},"content":"     * Returns true if a given string is a valid class name.","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"DonovanJJ"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"DonovanJJ"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"DonovanJJ"},"content":"     * @return True if the string is a valid class name, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"DonovanJJ"},"content":"    public static boolean isValidClassName(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"     * Returns true if a given string is not empty string.","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"     * @return True if the string is not empty, false otherwise.","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"    public static boolean isEmptyClassName(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"        return test.trim().isEmpty();","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"DonovanJJ"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"DonovanJJ"},"content":"        return className;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"DonovanJJ"},"content":"     * Checks if this class name is equal to another object.","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"DonovanJJ"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"DonovanJJ"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"DonovanJJ"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"DonovanJJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"DonovanJJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"DonovanJJ"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"DonovanJJ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"DonovanJJ"},"content":"        if (!(other instanceof ClassName)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"DonovanJJ"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"DonovanJJ"},"content":"        ClassName otherName \u003d (ClassName) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"DonovanJJ"},"content":"        return className.equals(otherName.className);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"DonovanJJ"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"DonovanJJ"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"DonovanJJ"},"content":"        return className.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"DonovanJJ"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"songgthu":15,"DonovanJJ":65}},{"path":"src/main/java/seedu/address/model/module/UniqueClassList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.module.exceptions.ClassNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.exceptions.DuplicateClassException;","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":" * A list of classes that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":" * A class is considered unique by comparing using {@code Class#isSameClass(Class)}. As such, adding and updating of","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":" * classes uses Class#isSameClass(Class) for equality to ensure that the class being added or updated is","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":" * unique in terms of identity in the UniqueClassList. However, the removal of a class uses Class#equals(Object)","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":" * to ensure that the class with exactly the same fields will be removed.","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":" *","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":" * @see Class#isSameClass(Class)","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"public class UniqueClassList implements Iterable\u003cClass\u003e {","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"    private final ObservableList\u003cClass\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"    private final ObservableList\u003cClass\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"     * Returns true if the list contains an equivalent class as the given argument.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"     * @param toCheck The class to check for in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"     * @return True if the list contains an equivalent class, false otherwise.","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    public boolean contains(Class toCheck) {","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClass);","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"     * Adds a class to the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"     * The class must not already exist in the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"     * @param toAdd The class to add.","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"     * @throws DuplicateClassException If adding the class would result in duplicate classes.","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"    public void add(Class toAdd) {","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-01"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"            throw new DuplicateClassException();","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":54,"author":{"gitId":"songgthu"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-01"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":57,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"DonovanJJ"},"content":"     * Removes a class from the list","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"DonovanJJ"},"content":"     * The Class must already exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"DonovanJJ"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"DonovanJJ"},"content":"     * @param toRemove The class to remove.","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"DonovanJJ"},"content":"     * @throws ClassNotFoundException If the class to be removed is not found in the existing list.","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"DonovanJJ"},"content":"    public void remove(Class toRemove) throws ClassNotFoundException {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"DonovanJJ"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"DonovanJJ"},"content":"        if (!this.contains(toRemove)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"DonovanJJ"},"content":"            throw new ClassNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"DonovanJJ"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"DonovanJJ"},"content":"        this.internalList.remove(toRemove);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the class at the specified index in the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The index must be within the bounds of the list.","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param index The index of the class to remove.","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void remove(Index index) {","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d internalList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        internalList.remove(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"songgthu"},"content":"    public void setClasses(UniqueClassList replacement) {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"songgthu"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"songgthu"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"songgthu"},"content":"     * Replaces the contents of this list with {@code classes}.","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"songgthu"},"content":"     * {@code classes} must not contain duplicate classes.","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"songgthu"},"content":"    public void setClasses(List\u003cClass\u003e classes) {","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"songgthu"},"content":"        requireAllNonNull(classes);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"songgthu"},"content":"        if (!classesAreUnique(classes)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"songgthu"},"content":"            throw new DuplicateClassException();","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"songgthu"},"content":"        internalList.setAll(classes);","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns the class at the specified index in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The index must be within the bounds of the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param index The index of the class to retrieve.","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Class get(Index index) {","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d internalList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalList.get(index.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"songgthu"},"content":"     * Returns an unmodifiable view of the list of classes.","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"songgthu"},"content":"     * @return An unmodifiable view of the list of classes.","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"songgthu"},"content":"    public ObservableList\u003cClass\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"songgthu"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-01"},{"lineNumber":122,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":123,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":124,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":125,"author":{"gitId":"songgthu"},"content":"    public Iterator\u003cClass\u003e iterator() {","lastModifiedDate":"2023-10-01"},{"lineNumber":126,"author":{"gitId":"songgthu"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-01"},{"lineNumber":127,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":128,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":129,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":130,"author":{"gitId":"songgthu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-01"},{"lineNumber":131,"author":{"gitId":"songgthu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-01"},{"lineNumber":132,"author":{"gitId":"songgthu"},"content":"            return true;","lastModifiedDate":"2023-10-01"},{"lineNumber":133,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":134,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":135,"author":{"gitId":"songgthu"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-01"},{"lineNumber":136,"author":{"gitId":"songgthu"},"content":"        if (!(other instanceof UniqueClassList)) {","lastModifiedDate":"2023-10-01"},{"lineNumber":137,"author":{"gitId":"songgthu"},"content":"            return false;","lastModifiedDate":"2023-10-01"},{"lineNumber":138,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-01"},{"lineNumber":139,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":140,"author":{"gitId":"songgthu"},"content":"        UniqueClassList otherUniqueClassList \u003d (UniqueClassList) other;","lastModifiedDate":"2023-10-01"},{"lineNumber":141,"author":{"gitId":"songgthu"},"content":"        return internalList.equals(otherUniqueClassList.internalList);","lastModifiedDate":"2023-10-01"},{"lineNumber":142,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":143,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":144,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":145,"author":{"gitId":"songgthu"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-01"},{"lineNumber":146,"author":{"gitId":"songgthu"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-01"},{"lineNumber":147,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":148,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":149,"author":{"gitId":"songgthu"},"content":"    @Override","lastModifiedDate":"2023-10-01"},{"lineNumber":150,"author":{"gitId":"songgthu"},"content":"    public String toString() {","lastModifiedDate":"2023-10-01"},{"lineNumber":151,"author":{"gitId":"songgthu"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-01"},{"lineNumber":152,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":153,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public int size() {","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return internalList.size();","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Sets the class at the specified index in the list to the specified class.","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param index The index of the class to set.","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param classToSet The class to set.","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void setClass(Index index, Class classToSet) {","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(classToSet);","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d internalList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        internalList.set(index.getZeroBased(), classToSet);","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Returns true if {@code classes} contains only unique classes.","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean classesAreUnique(List\u003cClass\u003e classes) {","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c classes.size() - 1; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c classes.size(); j++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                if (classes.get(i).isSameClass(classes.get(j))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"songgthu":110,"DonovanJJ":15,"-":59}},{"path":"src/main/java/seedu/address/model/module/exceptions/ClassNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"public class ClassNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"DonovanJJ":6}},{"path":"src/main/java/seedu/address/model/module/exceptions/DuplicateClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.model.module.exceptions;","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"/**","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":" * Signals that the operation will result in duplicate Classes (Classes are considered duplicates if they have the same","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":" * identity).","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":" */","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"public class DuplicateClassException extends RuntimeException {","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"     * Constructs a {@code DuplicateClassException} with an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"    public DuplicateClassException() {","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"        super(\"Operation would result in duplicate classes\");","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"songgthu":16}},{"path":"src/main/java/seedu/address/model/student/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":" * Guarantees: immutable; is valid as declared in","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":" * {@link #isValidAddress(String)}","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"seanpzk":3,"-":63}},{"path":"src/main/java/seedu/address/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"seanpzk":1,"-":78}},{"path":"src/main/java/seedu/address/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"            \"Names should only contain alphanumeric characters and \"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"                    + \"spaces, and it should not be blank\";","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"seanpzk":3,"-":64}},{"path":"src/main/java/seedu/address/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":" * given.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"seanpzk":6,"-":39}},{"path":"src/main/java/seedu/address/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Phone numbers \"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"            + \"should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"seanpzk":3,"-":57}},{"path":"src/main/java/seedu/address/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":" * immutable.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"public class Student {","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"    // Identity fields","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"    private final Name name;","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"    // Data fields","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"    public Student(Name name) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"        return name;","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"            return true;","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"                \u0026\u0026 otherStudent.getName().equals(getName());","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"            return true;","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"seanpzk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"seanpzk"},"content":"            return false;","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"seanpzk"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"        return name.equals(otherStudent.name);","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"seanpzk"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"seanpzk"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"seanpzk"},"content":"        return Objects.hash(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"seanpzk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"seanpzk"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"seanpzk"},"content":"                .toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":81}},{"path":"src/main/java/seedu/address/model/student/TempClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":" * Stub for Class class","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"public class TempClass {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":7}},{"path":"src/main/java/seedu/address/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":" * A list of students that enforces uniqueness between its elements and does not","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":" * allow nulls.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":" * A student is considered unique by comparing using","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":" * {@code Student#isSameStudent(Student)}. As such, adding and updating of","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":" * students uses Student#isSameStudent(Student) for equality so as to ensure","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":" * that the student being added or updated is","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":" * unique in terms of identity in the UniqueStudentList. However, the removal of","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":" * a student uses Student#equals(Object) so","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":" * as to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":" *","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":" *","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":" * @see Student#isSameStudent(Student)","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"     * Returns true if the list contains an equivalent student as the given","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"     * argument.","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStudent);","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"     * Adds a student to the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"seanpzk"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"seanpzk"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"seanpzk"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"seanpzk"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"seanpzk"},"content":"     * The student identity of {@code editedStudent} must not be the same as another","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"     * existing student in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"seanpzk"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"seanpzk"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"seanpzk"},"content":"        if (!target.isSameStudent(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"seanpzk"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"seanpzk"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"seanpzk"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"seanpzk"},"content":"     * The student must exist in the list.","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"seanpzk"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"seanpzk"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"seanpzk"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"seanpzk"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"seanpzk"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"seanpzk"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"seanpzk"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"seanpzk"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"seanpzk"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"seanpzk"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"seanpzk"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"seanpzk"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"seanpzk"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"seanpzk"},"content":"        internalList.setAll(students);","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"seanpzk"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"seanpzk"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"seanpzk"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"seanpzk"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"seanpzk"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"seanpzk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"seanpzk"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"seanpzk"},"content":"            return true;","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"seanpzk"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"seanpzk"},"content":"        if (!(other instanceof UniqueStudentList)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"seanpzk"},"content":"            return false;","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"seanpzk"},"content":"        UniqueStudentList otherUniqueStudentList \u003d (UniqueStudentList) other;","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"seanpzk"},"content":"        return internalList.equals(otherUniqueStudentList.internalList);","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"seanpzk"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"seanpzk"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"seanpzk"},"content":"    @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"seanpzk"},"content":"    public String toString() {","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"seanpzk"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"seanpzk"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"seanpzk"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"seanpzk"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"seanpzk"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"seanpzk"},"content":"                if (students.get(i).isSameStudent(students.get(j))) {","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"seanpzk"},"content":"                    return false;","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"seanpzk"},"content":"                }","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"seanpzk"},"content":"            }","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"seanpzk"},"content":"        return true;","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":156}},{"path":"src/main/java/seedu/address/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":" * Signals that the operation will result in duplicate Persons (Persons are","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":" * considered duplicates if they have the same","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":" * identity).","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":12}},{"path":"src/main/java/seedu/address/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student.exceptions;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"public class StudentNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":" * Contains utility methods for populating {@code EduTrack} with sample data.","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"    public static Student[] getSamplePersons() {","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"        return new Student[] {","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"            new Student(new Name(\"Alex Yeoh\")),","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"            new Student(new Name(\"Bernice Yu\")),","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"            new Student(new Name(\"Charlotte Oliveiro\")),","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"            new Student(new Name(\"David Li\")),","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"            new Student(new Name(\"Irfan Ibrahim\")),","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"            new Student(new Name(\"Roy Balakrishnan\"))","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"    public static ReadOnlyEduTrack getSampleEduTrack() {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"        EduTrack sampleAb \u003d new EduTrack();","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"        for (Student samplePerson : getSamplePersons()) {","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"            sampleAb.addStudent(samplePerson);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"seanpzk":13,"songgthu":4,"-":15}},{"path":"src/main/java/seedu/address/storage/EduTrackStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":" * Represents a storage for {@link EduTrack}.","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"public interface EduTrackStorage {","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"    Path getEduTrackFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"     * Returns EduTrack data as a {@link ReadOnlyEduTrack}.","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"    Optional\u003cReadOnlyEduTrack\u003e readEduTrack() throws DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"     * @see #getEduTrackFilePath()","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"    Optional\u003cReadOnlyEduTrack\u003e readEduTrack(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"     * Saves the given {@link ReadOnlyEduTrack} to the storage.","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"     * @param eduTrack cannot be null.","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"    void saveEduTrack(ReadOnlyEduTrack eduTrack) throws IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"     * @see #saveEduTrack(ReadOnlyEduTrack)","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"    void saveEduTrack(ReadOnlyEduTrack eduTrack, Path filePath) throws IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"songgthu":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":" * Jackson-friendly version of {@link Class}.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"class JsonAdaptedClass {","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Class\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"    private final String className;","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"    private final List\u003cJsonAdaptedStudent\u003e studentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"     * Constructs a {@code JsonAdaptedClass} with the given class details.","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"    public JsonAdaptedClass(@JsonProperty(\"className\") String className,","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"                            @JsonProperty(\"studentList\") List\u003cJsonAdaptedStudent\u003e studentList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"revdrag"},"content":"        if (studentList !\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"revdrag"},"content":"            this.studentList.addAll(studentList);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"revdrag"},"content":"     * Converts a given {@code Class} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"    public JsonAdaptedClass(Class source) {","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"        className \u003d source.getClassName().className;","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"revdrag"},"content":"        studentList.addAll(source.getStudentList().stream()","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"revdrag"},"content":"                .map(JsonAdaptedStudent::new)","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"revdrag"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"revdrag"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Class} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"    public Class toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"revdrag"},"content":"        final UniqueStudentList students \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"revdrag"},"content":"        for (JsonAdaptedStudent student : studentList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"revdrag"},"content":"            students.add(student.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"        if (className \u003d\u003d null) {","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"songgthu"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"                    ClassName.class.getSimpleName()));","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"songgthu"},"content":"        if (!ClassName.isValidClassName(className)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"songgthu"},"content":"            throw new IllegalValueException(ClassName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"songgthu"},"content":"        final ClassName modelClassName \u003d new ClassName(className);","lastModifiedDate":"2023-10-06"},{"lineNumber":66,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"revdrag"},"content":"        return new Class(modelClassName, students);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"songgthu":47,"revdrag":23}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"/**","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":" */","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"    private final String name;","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name) {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"    /**","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"revdrag"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"revdrag"},"content":"     * {@code Student} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"     *","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"revdrag"},"content":"     *                               the adapted student.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"     */","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"seanpzk"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"        return new Student(modelName);","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":49,"revdrag":6}},{"path":"src/main/java/seedu/address/storage/JsonEduTrackStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":" * A class to access EduTrack data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"public class JsonEduTrackStorage implements EduTrackStorage {","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonEduTrackStorage.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"    public JsonEduTrackStorage(Path filePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"    public Path getEduTrackFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"    public Optional\u003cReadOnlyEduTrack\u003e readEduTrack() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"        return readEduTrack(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"     * Similar to {@link #readEduTrack()}.","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"    public Optional\u003cReadOnlyEduTrack\u003e readEduTrack(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"        Optional\u003cJsonSerializableEduTrack\u003e jsonEduTrack \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"                filePath, JsonSerializableEduTrack.class);","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"        if (!jsonEduTrack.isPresent()) {","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"            return Optional.of(jsonEduTrack.get().toModelType());","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"songgthu"},"content":"    public void saveEduTrack(ReadOnlyEduTrack eduTrack) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"        saveEduTrack(eduTrack, filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"     * Similar to {@link #saveEduTrack(ReadOnlyEduTrack)}.","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"songgthu"},"content":"    public void saveEduTrack(ReadOnlyEduTrack eduTrack, Path filePath) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"songgthu"},"content":"        requireNonNull(eduTrack);","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"songgthu"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableEduTrack(eduTrack), filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"songgthu":20,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"    private final List\u003cJsonAdaptedStudent\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedStudent\u003e persons) {","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"     *               {@code JsonSerializableAddressBook}.","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"    public JsonSerializableAddressBook(ReadOnlyEduTrack source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"        persons.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"seanpzk"},"content":"    public EduTrack toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"        EduTrack addressBook \u003d new EduTrack();","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"        for (JsonAdaptedStudent jsonAdaptedPerson : persons) {","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"            Student person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"            if (addressBook.hasStudent(person)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"            addressBook.addStudent(person);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"seanpzk":15,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonSerializableEduTrack.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":" * An Immutable EduTrack that is serializable to JSON format.","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"@JsonRootName(value \u003d \"edutrack\")","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"class JsonSerializableEduTrack {","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    public static final String MESSAGE_DUPLICATE_CLASS \u003d \"Class list contains duplicate classes.\";","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    private final List\u003cJsonAdaptedClass\u003e classes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"     * Constructs a {@code JsonSerializableEduTrack} with the given students.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"    public JsonSerializableEduTrack(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students,","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"                                    @JsonProperty(\"classes\") List\u003cJsonAdaptedClass\u003e classes) {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"        this.students.addAll(students);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"        this.classes.addAll(classes);","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"     * Converts a given {@code ReadOnlyEduTrack} into this class for Jackson use.","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableEduTrack}.","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"    public JsonSerializableEduTrack(ReadOnlyEduTrack source) {","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"        classes.addAll(source.getClassList().stream().map(JsonAdaptedClass::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"     * Converts this address book into the model\u0027s {@code EduTrack} object.","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"    public EduTrack toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"        EduTrack eduTrack \u003d new EduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"        for (JsonAdaptedClass jsonAdaptedClass : classes) {","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"songgthu"},"content":"            Class c \u003d jsonAdaptedClass.toModelType();","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"            if (eduTrack.hasClass(c)) {","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"songgthu"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLASS);","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"songgthu"},"content":"            }","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"songgthu"},"content":"            eduTrack.addClass(c);","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"seanpzk"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"seanpzk"},"content":"            if (eduTrack.hasStudent(student)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"seanpzk"},"content":"            eduTrack.addStudent(student);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"songgthu"},"content":"        return eduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"seanpzk":10,"songgthu":27,"-":38}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"public interface Storage extends EduTrackStorage, UserPrefsStorage {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"    Path getEduTrackFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"    Optional\u003cReadOnlyEduTrack\u003e readEduTrack() throws DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"    void saveEduTrack(ReadOnlyEduTrack eduTrack) throws IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"songgthu":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":" * Manages storage of EduTrack data in local storage.","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"    private EduTrackStorage eduTrackStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"     * Creates a {@code StorageManager} with the given {@code EduTrackStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"    public StorageManager(EduTrackStorage eduTrackStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"        this.eduTrackStorage \u003d eduTrackStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EduTrack methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"    public Path getEduTrackFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"        return eduTrackStorage.getEduTrackFilePath();","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"    public Optional\u003cReadOnlyEduTrack\u003e readEduTrack() throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"        return readEduTrack(eduTrackStorage.getEduTrackFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"songgthu"},"content":"    public Optional\u003cReadOnlyEduTrack\u003e readEduTrack(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"        return eduTrackStorage.readEduTrack(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"    public void saveEduTrack(ReadOnlyEduTrack eduTrack) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"songgthu"},"content":"        saveEduTrack(eduTrack, eduTrackStorage.getEduTrackFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"songgthu"},"content":"    public void saveEduTrack(ReadOnlyEduTrack eduTrack, Path filePath) throws IOException {","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"songgthu"},"content":"        eduTrackStorage.saveEduTrack(eduTrack, filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"songgthu":17,"-":61}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"    private StudentListPanel personListPanel;","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ClassListPanel classListPanel;","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane classListPanelPlaceholder;","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void displayListPanel(Node listPanel) {","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        listPanelPlaceholder.getChildren().setAll(listPanel);","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        classListPanel \u003d new ClassListPanel(logic.getFilteredClassList());","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        listPanelPlaceholder.getChildren().add(classListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"seanpzk"},"content":"    public StudentListPanel getPersonListPanel() {","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isView()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                //add the person list panel","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                personListPanel \u003d new StudentListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                displayListPanel(personListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (commandResult.isList()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                //add the class list panel","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                classListPanel \u003d new ClassListPanel(logic.getFilteredClassList());","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                displayListPanel(classListPanel.getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"seanpzk":2,"-":218}},{"path":"src/main/java/seedu/address/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"    public final Student person;","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"     * display.","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"seanpzk"},"content":"    public StudentCard(Student person, int displayedIndex) {","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"seanpzk":11,"-":44}},{"path":"src/main/java/seedu/address/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"    private ListView\u003cStudent\u003e personListView;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e personList) {","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"     * a {@code PersonCard}.","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"    class PersonListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"        protected void updateItem(Student person, boolean empty) {","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"                setGraphic(new StudentCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"seanpzk":10,"-":40}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"import seedu.address.storage.JsonEduTrackStorage;","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"        JsonEduTrackStorage addressBookStorage \u003d","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"                new JsonEduTrackStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"songgthu"},"content":"    //    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"songgthu"},"content":"    //    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"songgthu"},"content":"    //        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"    //        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"songgthu"},"content":"    //    }","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"songgthu"},"content":"    //    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"songgthu"},"content":"    //    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"songgthu"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"songgthu"},"content":"    //                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"songgthu"},"content":"    //    }","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"songgthu"},"content":"    //","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"songgthu"},"content":"    //    @Test","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"songgthu"},"content":"    //    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"songgthu"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"songgthu"},"content":"    //                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"songgthu"},"content":"    //    }","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"seanpzk"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"seanpzk"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"seanpzk"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"seanpzk"},"content":"     * result message is correct.","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"seanpzk"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"seanpzk"},"content":"     * result message is correct.","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"seanpzk"},"content":"     * Executes the command, confirms that the exception is thrown and that the","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"seanpzk"},"content":"     * result message is correct.","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"songgthu"},"content":"        Model expectedModel \u003d new ModelManager(model.getEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"seanpzk"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"seanpzk"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"seanpzk"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"seanpzk"},"content":"     * Storage component.","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"seanpzk"},"content":"     * @param expectedMessage the message expected inside exception thrown by the","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"seanpzk"},"content":"     *                        Logic component","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"songgthu"},"content":"        JsonEduTrackStorage addressBookStorage \u003d new JsonEduTrackStorage(prefPath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"songgthu"},"content":"            public void saveEduTrack(ReadOnlyEduTrack addressBook, Path filePath)","lastModifiedDate":"2023-10-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"seanpzk"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"seanpzk"},"content":"                temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"seanpzk"},"content":"        Student expectedPerson \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"seanpzk"},"content":"        expectedModel.addStudent(expectedPerson);","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void testGetFilteredClassList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClassList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void getFilteredClassList_noClasses_returnsEmptyList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(logic.getFilteredClassList().size(), 0);","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"seanpzk":23,"songgthu":23,"-":147}},{"path":"src/test/java/seedu/address/logic/commands/AddClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"class AddClassCommandTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"    private static final String CLASSNAME_STUB \u003d \"cs2103t\";","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    final ClassName className \u003d new ClassName(CLASSNAME_STUB);","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"    final Class c \u003d new Class(className, new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    private Model model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"    public void constructor_nullClass_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddClassCommand(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    public void execute_addClass_success() {","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"        AddClassCommand addClassCommand \u003d new AddClassCommand(c);","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"        String expectedMessage \u003d String.format(AddClassCommand.MESSAGE_SUCCESS, CLASSNAME_STUB.toUpperCase());","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"        Model expectedModel \u003d new ModelManager(new EduTrack(model.getEduTrack()), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"        assertCommandSuccess(addClassCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"    public void execute_duplicateClass_throwsCommandException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"        AddClassCommand addClassCommand1 \u003d new AddClassCommand(c);","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"        try {","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"            addClassCommand1.execute(model);","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"        AddClassCommand addClassCommand2 \u003d new AddClassCommand(c);","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"        assertThrows(CommandException.class, String.format(AddClassCommand.MESSAGE_DUPLICATE_CLASS,","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"                CLASSNAME_STUB.toUpperCase()), () -\u003e addClassCommand2.execute(model));","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"songgthu"},"content":"    public void equals() {","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"songgthu"},"content":"        ClassName className1 \u003d new ClassName(\"CS2103T\");","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"        ClassName className2 \u003d new ClassName(\"CS2100\");","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"revdrag"},"content":"        Class sampleClass1 \u003d new Class(className1, new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"revdrag"},"content":"        Class sampleClass2 \u003d new Class(className2, new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"        AddClassCommand command1 \u003d new AddClassCommand(sampleClass1);","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"songgthu"},"content":"        AddClassCommand command2 \u003d new AddClassCommand(sampleClass1);","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"songgthu"},"content":"        AddClassCommand command3 \u003d new AddClassCommand(sampleClass2);","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"songgthu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"songgthu"},"content":"        assertTrue(command1.equals(command1));","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"songgthu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"songgthu"},"content":"        assertTrue(command1.equals(command2));","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"songgthu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"songgthu"},"content":"        assertFalse(command1.equals(1));","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"songgthu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"songgthu"},"content":"        assertFalse(command1.equals(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"songgthu"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"songgthu"},"content":"        assertFalse(command1.equals(command3));","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"songgthu"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"songgthu"},"content":"        ClassName className \u003d new ClassName(\"CS2103T\");","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"revdrag"},"content":"        Class sampleClass \u003d new Class(className, new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"songgthu"},"content":"        AddClassCommand command \u003d new AddClassCommand(sampleClass);","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"songgthu"},"content":"        String expected \u003d AddClassCommand.class.getCanonicalName() + \"{class\u003d\" + sampleClass + \"}\";","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"songgthu"},"content":"        assertEquals(expected, command.toString());","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"seanpzk":1,"songgthu":92,"revdrag":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":" * {@code AddCommand}.","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"        model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"        Model expectedModel \u003d new ModelManager(model.getEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"revdrag"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.formatStudent(validStudent)),","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"        Student studentInList \u003d model.getEduTrack().getStudentList().get(0);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"        assertCommandFailure(new AddCommand(studentInList), model,","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"seanpzk":11,"songgthu":2,"revdrag":1,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"revdrag"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.formatStudent(validPerson)),","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"seanpzk"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"songgthu"},"content":"        public Path getEduTrackFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"songgthu"},"content":"        public void setEduTrackFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"seanpzk"},"content":"        public void addStudent(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"songgthu"},"content":"        public void setEduTrack(ReadOnlyEduTrack newData) {","lastModifiedDate":"2023-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"songgthu"},"content":"        public ReadOnlyEduTrack getEduTrack() {","lastModifiedDate":"2023-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"seanpzk"},"content":"        public boolean hasStudent(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"seanpzk"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"seanpzk"},"content":"        public void deleteStudentFromClass(Student student, Class studentClass) {","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"seanpzk"},"content":"            // to be filled after implementation of class\u0027 delete student function","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"revdrag"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"revdrag"},"content":"        public void addStudentToClass(Student student, Class classToAdd) {","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"revdrag"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"revdrag"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"seanpzk"},"content":"        @Override","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"seanpzk"},"content":"        public void setStudent(Student target, Student editedPerson) {","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"seanpzk"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"seanpzk"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":175,"author":{"gitId":"songgthu"},"content":"        public boolean hasClass(Class c) {","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":178,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":179,"author":{"gitId":"seanpzk"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"seanpzk"},"content":"        public Class getClass(ClassName className) {","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"seanpzk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"seanpzk"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":184,"author":{"gitId":"songgthu"},"content":"        @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":185,"author":{"gitId":"songgthu"},"content":"        public void addClass(Class c) {","lastModifiedDate":"2023-10-02"},{"lineNumber":186,"author":{"gitId":"songgthu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-02"},{"lineNumber":187,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Class getClassByIndex(Index classIndex) {","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"sudarshan2401"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"DonovanJJ"},"content":"        public void removeClass(Class c) {","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public int getClassListSize() {","lastModifiedDate":"2023-10-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public ObservableList\u003cClass\u003e getFilteredClassList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public void updateFilteredClassList(Predicate\u003cClass\u003e predicate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"DonovanJJ"},"content":"        public Class retrieveClass(Index classListIndex) {","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"DonovanJJ"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"seanpzk"},"content":"        private final Student person;","lastModifiedDate":"2023-10-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"seanpzk"},"content":"        ModelStubWithPerson(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"seanpzk"},"content":"        public boolean hasStudent(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"seanpzk"},"content":"            return this.person.isSameStudent(person);","lastModifiedDate":"2023-10-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"seanpzk"},"content":"        final ArrayList\u003cStudent\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"seanpzk"},"content":"        public boolean hasStudent(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"seanpzk"},"content":"            return personsAdded.stream().anyMatch(person::isSameStudent);","lastModifiedDate":"2023-10-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"seanpzk"},"content":"        public void addStudent(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"songgthu"},"content":"        public ReadOnlyEduTrack getEduTrack() {","lastModifiedDate":"2023-10-07"},{"lineNumber":258,"author":{"gitId":"songgthu"},"content":"            return new EduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"seanpzk":33,"sudarshan2401":1,"songgthu":14,"DonovanJJ":3,"revdrag":6,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/AddStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"import static seedu.address.testutil.TypicalClasses.getTypicalEduTrack;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLASS;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_CLASS;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"public class AddStudentCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"        model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"revdrag"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"revdrag"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"revdrag"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddStudentCommand(null, Index.fromZeroBased(0)));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"revdrag"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"revdrag"},"content":"    public void execute_studentAcceptedByClass_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"revdrag"},"content":"        Class classToAddStudent \u003d model.getFilteredClassList().get(INDEX_FIRST_CLASS.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"revdrag"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"revdrag"},"content":"        AddStudentCommand addStudentCommand \u003d new AddStudentCommand(validPerson, INDEX_FIRST_CLASS);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"revdrag"},"content":"        String expectedMessage \u003d String.format(AddStudentCommand.MESSAGE_ADD_STUDENT_SUCCESS,","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"revdrag"},"content":"                Messages.formatStudent(validPerson), Messages.formatClass(classToAddStudent));","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"revdrag"},"content":"        CommandResult result \u003d addStudentCommand.execute(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"revdrag"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"revdrag"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"revdrag"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"revdrag"},"content":"        Class classToAddStudent \u003d model.getFilteredClassList().get(INDEX_SECOND_CLASS.getZeroBased());","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"revdrag"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"revdrag"},"content":"        model.addStudentToClass(validPerson, classToAddStudent);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"revdrag"},"content":"        AddStudentCommand addStudent \u003d new AddStudentCommand(validPerson, INDEX_SECOND_CLASS);","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"revdrag"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"revdrag"},"content":"                AddStudentCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addStudent.execute(model));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"revdrag"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"revdrag"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"revdrag"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"revdrag"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"revdrag"},"content":"        AddStudentCommand addAliceCommand \u003d new AddStudentCommand(alice, INDEX_FIRST_CLASS);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"revdrag"},"content":"        AddStudentCommand addBobCommand \u003d new AddStudentCommand(bob, INDEX_FIRST_CLASS);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"revdrag"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"revdrag"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"revdrag"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"revdrag"},"content":"        AddStudentCommand addAliceCommandCopy \u003d new AddStudentCommand(alice, INDEX_FIRST_CLASS);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"revdrag"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"revdrag"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"revdrag"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"revdrag"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"revdrag"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"revdrag"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"revdrag"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"revdrag"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"revdrag"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"revdrag"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"revdrag"},"content":"        AddStudentCommand addStudentCommand \u003d new AddStudentCommand(alice, INDEX_FIRST_CLASS);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"revdrag"},"content":"        String expected \u003d AddStudentCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"revdrag"},"content":"                + \"{toAdd\u003d\" + alice","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"revdrag"},"content":"                + \", classIndex\u003d\" + INDEX_FIRST_CLASS + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"revdrag"},"content":"        assertEquals(expected, addStudentCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"revdrag"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"revdrag":96}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"        Model model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"        expectedModel.setEduTrack(new EduTrack());","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"seanpzk":1,"songgthu":4,"-":27}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"revdrag"},"content":"    public static final String INVALID_STUDENT_DESC \u003d \" \" + PREFIX_STUDENT + \" Bob\u0026\"; // \u0027\u0026\u0027 not allowed in student name","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"revdrag"},"content":"    public static final String INVALID_CLASS_INDEX_DESC \u003d \" \" + PREFIX_CLASS + \"@1\"; // \u0027@\u0027 not allowed in class index","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"seanpzk"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"seanpzk"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"seanpzk"},"content":"     * Convenience wrapper to","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"seanpzk"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"seanpzk"},"content":"     * - the address book, filtered person list and selected person in","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"seanpzk"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"songgthu"},"content":"        EduTrack expectedEduTrack \u003d new EduTrack(actualModel.getEduTrack());","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"seanpzk"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":120,"author":{"gitId":"songgthu"},"content":"        assertEquals(expectedEduTrack, actualModel.getEduTrack());","lastModifiedDate":"2023-10-07"},{"lineNumber":121,"author":{"gitId":"seanpzk"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"seanpzk"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"seanpzk"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"seanpzk"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"seanpzk"},"content":"        Student person \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"seanpzk"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"seanpzk"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the class at the given","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void showClassAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        model.getClassListSize();","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getClassListSize());","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Class classToView \u003d model.getClassByIndex(targetIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        model.updateFilteredStudentList(student -\u003e classToView.getStudentList().contains(student));","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(classToView.getStudentList().size(), model.getFilteredStudentList().size());","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"seanpzk":18,"songgthu":3,"revdrag":4,"-":129}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"    private Model model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"revdrag"},"content":"                Messages.formatStudent(studentToDelete));","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"seanpzk"},"content":"        Student personToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"revdrag"},"content":"                Messages.formatStudent(personToDelete));","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"songgthu"},"content":"        Model expectedModel \u003d new ModelManager(model.getEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"seanpzk"},"content":"        expectedModel.deleteStudent(personToDelete);","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEduTrack().getStudentList().size());","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"seanpzk"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"seanpzk"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"seanpzk":10,"songgthu":3,"revdrag":2,"-":106}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":" * EditCommand.","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    private Model model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"        Student editedPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"revdrag"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"revdrag"},"content":"                Messages.formatStudent(editedPerson));","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"        Model expectedModel \u003d new ModelManager(new EduTrack(model.getEduTrack()), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"seanpzk"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedPerson);","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"seanpzk"},"content":"        Student lastPerson \u003d model.getFilteredStudentList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"seanpzk"},"content":"        StudentBuilder personInList \u003d new StudentBuilder(lastPerson);","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"        Student editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"revdrag"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"revdrag"},"content":"                Messages.formatStudent(editedPerson));","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"songgthu"},"content":"        Model expectedModel \u003d new ModelManager(new EduTrack(model.getEduTrack()), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"seanpzk"},"content":"        expectedModel.setStudent(lastPerson, editedPerson);","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"seanpzk"},"content":"        Student editedPerson \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"revdrag"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"revdrag"},"content":"                Messages.formatStudent(editedPerson));","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"songgthu"},"content":"        Model expectedModel \u003d new ModelManager(new EduTrack(model.getEduTrack()), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"seanpzk"},"content":"        Student personInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"seanpzk"},"content":"        Student editedPerson \u003d new StudentBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"revdrag"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"revdrag"},"content":"                Messages.formatStudent(editedPerson));","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"songgthu"},"content":"        Model expectedModel \u003d new ModelManager(new EduTrack(model.getEduTrack()), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"seanpzk"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedPerson);","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"seanpzk"},"content":"        Student firstPerson \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"seanpzk"},"content":"        Student studentInList \u003d model.getEduTrack().getStudentList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"seanpzk"},"content":"                new EditPersonDescriptorBuilder(studentInList).build());","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"seanpzk"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"seanpzk"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEduTrack().getStudentList().size());","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"seanpzk":21,"songgthu":6,"revdrag":8,"-":154}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"seanpzk":1,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.CARL;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":" * {@code FindCommand}.","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"    private Model model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"                Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"                Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"seanpzk"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"seanpzk":15,"songgthu":2,"-":75}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showClassAtIndex;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalClasses.getTypicalEduTrack;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"    //    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"    //    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"    //        showClassAtIndex(model, Index.fromOneBased(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"    //        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"revdrag"},"content":"    //    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"revdrag":7,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/RemoveClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.testutil.TypicalClasses.getEmptyEduTrack;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.testutil.TypicalClasses.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"class RemoveClassCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"    private static final String CLASSNAME_STUB \u003d \"cs2102\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"    private Model model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"    public void constructor_nullClass_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new RemoveClassCommand(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"DonovanJJ"},"content":"    public void execute_nonEmptyClassList_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand removeClassCommand \u003d new RemoveClassCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"DonovanJJ"},"content":"        String expectedOutcomeMessage \u003d String.format(RemoveClassCommand.MESSAGE_REMOVE_CLASS_SUCCESS,","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"DonovanJJ"},"content":"                CLASSNAME_STUB.toUpperCase());","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"DonovanJJ"},"content":"        Model expectedModel \u003d new ModelManager(model.getEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"DonovanJJ"},"content":"        assertCommandSuccess(removeClassCommand, model, expectedOutcomeMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"DonovanJJ"},"content":"    public void execute_emptyClassList_throwsCommandException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"DonovanJJ"},"content":"        Model emptyModel \u003d new ModelManager(getEmptyEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"DonovanJJ"},"content":"        Index classIndexToRemove \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand removeClassCommand \u003d new RemoveClassCommand(classIndexToRemove);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"DonovanJJ"},"content":"        assertCommandFailure(removeClassCommand, emptyModel, Messages.MESSAGE_EMPTY_CLASS_LIST);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"DonovanJJ"},"content":"    public void execute_outOfBoundsClassIndex_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"DonovanJJ"},"content":"        Index classIndexToRemove \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand removeClassCommand \u003d new RemoveClassCommand(classIndexToRemove);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"DonovanJJ"},"content":"        assertCommandFailure(removeClassCommand, model, Messages.MESSAGE_INDEX_INPUT_TOO_LARGE);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"DonovanJJ"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand firstRemoveClassCommand \u003d new RemoveClassCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand secondRemoveClassCommand \u003d new RemoveClassCommand(","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"DonovanJJ"},"content":"                Index.fromOneBased(2));","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"DonovanJJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"DonovanJJ"},"content":"        assertTrue(firstRemoveClassCommand.equals(firstRemoveClassCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"DonovanJJ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand removeFirstClassCommand \u003d new RemoveClassCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"DonovanJJ"},"content":"        assertTrue(firstRemoveClassCommand.equals(removeFirstClassCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"DonovanJJ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"DonovanJJ"},"content":"        assertFalse(firstRemoveClassCommand.equals(1));","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"DonovanJJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"DonovanJJ"},"content":"        assertFalse(firstRemoveClassCommand.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"DonovanJJ"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"DonovanJJ"},"content":"        assertFalse(firstRemoveClassCommand.equals(secondRemoveClassCommand));","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"DonovanJJ"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"DonovanJJ"},"content":"        Index indexToRemove \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand removeClassCommand \u003d new RemoveClassCommand(indexToRemove);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"DonovanJJ"},"content":"        String expected \u003d RemoveClassCommand.class.getCanonicalName() + \"{classIndex\u003d\" + indexToRemove.toString() + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"DonovanJJ"},"content":"        assertEquals(expected, removeClassCommand.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"DonovanJJ"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"DonovanJJ":87}},{"path":"src/test/java/seedu/address/logic/commands/RemoveStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"//import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"//import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"public class RemoveStudentCommandTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"    private static final String CLASSNAME_STUB \u003d \"cs2103t\";","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"    final ClassName classNameStub \u003d new ClassName(CLASSNAME_STUB);","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"    final Class classStub \u003d new Class(classNameStub, new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"    private Model model \u003d new ModelManager(getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"    //    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"    //    public void execute_validStudentName_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"    //        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"    //        Name studentName \u003d studentToDelete.getName();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"    //        RemoveCommand removeStudentCommand \u003d new RemoveStudentCommand(INDEX_FIRST_PERSON, classNameStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"    //        String expectedMessage \u003d String.format(RemoveStudentCommand.MESSAGE_REMOVE_STUDENT_SUCCESS, studentName,","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"    //        classNameStub.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"    //        ModelManager expectedModel \u003d new ModelManager(model.getEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"    //        expectedModel.deleteStudentFromClass(studentToDelete, classStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"    //","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"    //        assertCommandSuccess(removeStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"    //    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"    // MORE TESTS TO BE WRITTEN AFTER IMPLEMENTATION OF \"CLASS\" CLASS","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":42,"revdrag":2}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalClasses;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(TypicalClasses.getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalClasses.getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_viewClass_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String expectedClass \u003d model.getClassByIndex(Index.fromOneBased(1)).getClassName().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_SUCCESS, expectedClass);","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_viewClass_failure() {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(100));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, () -\u003e viewCommand.execute(model));","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ClassName className \u003d new ClassName(\"cs2103\");","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ViewCommand viewCommandCopy \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ViewCommand viewCommandDiff \u003d new ViewCommand(Index.fromOneBased(2));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(viewCommand.equals(viewCommand));","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(viewCommand.equals(viewCommandCopy));","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(viewCommand.equals(viewCommandDiff));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(viewCommand.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"revdrag"},"content":"        assertFalse(viewCommand.equals(new AddClassCommand(new Class(className, new UniqueStudentList()))));","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // expected : ViewCommand{classIndex\u003dseedu.address.commons.core.index.Index{zeroBasedIndex\u003d0}}","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expected \u003d ViewCommand.class.getSimpleName() + \"{classIndex\u003d\" + Index.fromOneBased(1) + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, viewCommand.toString());","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"revdrag":2,"-":57}},{"path":"src/test/java/seedu/address/logic/parser/AddClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"import seedu.address.logic.commands.AddClassCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"public class AddClassCommandParserTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"    private AddClassCommandParser parser \u003d new AddClassCommandParser();","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"    private final String invalidClassName \u003d \"cs 2103t\";","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"    private final String validClassName \u003d \"cs2103t\";","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"        ClassName className \u003d new ClassName(\"cs2103t\");","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"        Class expectedClass \u003d new Class(className, new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"        AddClassCommand expectedCommand \u003d new AddClassCommand(expectedClass);","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"        assertParseSuccess(parser, \" /c \" + validClassName, expectedCommand);","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"        assertParseFailure(parser, \" add /c \" + invalidClassName,","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"songgthu":31,"revdrag":3}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"seanpzk"},"content":"        Student expectedPerson \u003d new StudentBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"        Student expectedPersonMultipleTags \u003d new StudentBuilder(BOB)","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"seanpzk"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"seanpzk"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"seanpzk"},"content":"                        + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"seanpzk"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"seanpzk"},"content":"                        PREFIX_PHONE));","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"seanpzk"},"content":"        Student expectedPerson \u003d new StudentBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"seanpzk":15,"-":160}},{"path":"src/test/java/seedu/address/logic/parser/AddStudentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"revdrag"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.Messages.getErrorMessageForDuplicatePrefixes;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CLASS_INDEX_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENT_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"revdrag"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_CLASS;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"import seedu.address.logic.commands.AddStudentCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"revdrag"},"content":"public class AddStudentCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"revdrag"},"content":"    private AddStudentCommandParser parser \u003d new AddStudentCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"revdrag"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"        Student expectedPerson \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"revdrag"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"revdrag"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + \" /s Bob /c 1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"revdrag"},"content":"                new AddStudentCommand(expectedPerson, INDEX_FIRST_CLASS));","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"revdrag"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"revdrag"},"content":"    public void parse_repeatedFields_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"revdrag"},"content":"        String validExpectedCommandString \u003d \" /s Bob /c 1\";","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"revdrag"},"content":"        // multiple student names","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, \" /s Amy\" + validExpectedCommandString,","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"revdrag"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT));","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"revdrag"},"content":"        // multiple classes","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, \" /c 2\" + validExpectedCommandString,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"revdrag"},"content":"                getErrorMessageForDuplicatePrefixes(PREFIX_CLASS));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"revdrag"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"revdrag"},"content":"        // invalid student name","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, INVALID_STUDENT_DESC + validExpectedCommandString,","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"revdrag"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT));","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"revdrag"},"content":"        // invalid class index","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, INVALID_CLASS_INDEX_DESC + validExpectedCommandString,","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"revdrag"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_CLASS));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"revdrag"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"revdrag"},"content":"        // invalid student name","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, validExpectedCommandString + INVALID_STUDENT_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"revdrag"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENT));","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"revdrag"},"content":"        // invalid class index","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, validExpectedCommandString + INVALID_CLASS_INDEX_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"revdrag"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_CLASS));","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"revdrag"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"revdrag"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"revdrag"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"revdrag"},"content":"        // missing student prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, \"Bob /c 1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"revdrag"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"revdrag"},"content":"        // missing class prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, \"/s Bob 1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"revdrag"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"revdrag"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, \"Bob 1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"revdrag"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"revdrag"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"revdrag"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"revdrag"},"content":"        // invalid student name","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, INVALID_STUDENT_DESC + \" /c 1\", Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"revdrag"},"content":"        // invalid class index","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, \" /s Bob\" + INVALID_CLASS_INDEX_DESC, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"revdrag"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"revdrag"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + \" /s Bob /c 1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"revdrag"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"revdrag"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"revdrag"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"revdrag":100}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"            EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"seanpzk"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"seanpzk"},"content":"        // Person} being edited,","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"seanpzk":9,"-":181}},{"path":"src/test/java/seedu/address/logic/parser/EduTrackParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"import seedu.address.logic.commands.AddClassCommand;","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.commands.RemoveClassCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"public class EduTrackParserTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"    private final EduTrackParser parser \u003d new EduTrackParser();","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    public void parseCommand_addClass() throws Exception {","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"        ClassName className \u003d new ClassName(\"test\");","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"revdrag"},"content":"        Class c \u003d new Class(className, new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"        AddClassCommand command \u003d (AddClassCommand) parser.parseCommand(\"add /c test\");","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"        assertEquals(new AddClassCommand(c), command);","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"    //    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"    //    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"    //        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"    //                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"    //        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"    //    }","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"    //","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"    //    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"    //    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"    //        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"    //        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"    //        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"songgthu"},"content":"    //                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"    //        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"    //    }","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"    //    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"songgthu"},"content":"    //    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"songgthu"},"content":"    //        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"songgthu"},"content":"    //        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"    //                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"songgthu"},"content":"    //        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"songgthu"},"content":"    //    }","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"DonovanJJ"},"content":"    public void parseCommand_removeClass() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand command \u003d (RemoveClassCommand) parser.parseCommand(\"remove /c 1\");","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"DonovanJJ"},"content":"        assertEquals(new RemoveClassCommand(Index.fromOneBased(1)), command);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_viewCommand() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                ViewCommand.COMMAND_WORD + \" \" + \"1\");","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(new ViewCommand(Index.fromOneBased(1)), command);","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_viewCommandInvalidIndex_throwsParseException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, ViewCommand.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX, () -\u003e parser.parseCommand(","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                ViewCommand.COMMAND_WORD + \" \" + \"0\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"songgthu":31,"DonovanJJ":7,"revdrag":2,"-":74}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"seanpzk":3,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"    private static final String INVALID_CLASSNAME \u003d \"cs 2103t\";","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"    private static final String VALID_CLASSNAME \u003d \"cs2103t\";","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, () -\u003e ParserUtil.parseIndex(","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"                Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"songgthu"},"content":"    public void parseClassName_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseClassName((String) null));","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"songgthu"},"content":"    public void parseClassName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"songgthu"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClassName(INVALID_CLASSNAME));","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"songgthu"},"content":"    public void parseClassName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"songgthu"},"content":"        ClassName expectedClassName \u003d new ClassName(VALID_CLASSNAME);","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"songgthu"},"content":"        assertEquals(expectedClassName, ParserUtil.parseClassName(VALID_CLASSNAME));","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"songgthu"},"content":"    public void parseClassName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"songgthu"},"content":"        String classNameWithWhitespace \u003d WHITESPACE + VALID_CLASSNAME + WHITESPACE;","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"songgthu"},"content":"        ClassName expectedClassName \u003d new ClassName(VALID_CLASSNAME);","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"songgthu"},"content":"        assertEquals(expectedClassName, ParserUtil.parseClassName(classNameWithWhitespace));","lastModifiedDate":"2023-10-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"seanpzk":7,"songgthu":13,"-":149}},{"path":"src/test/java/seedu/address/logic/parser/RemoveClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DonovanJJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"DonovanJJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"DonovanJJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.commands.RemoveClassCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"DonovanJJ"},"content":"public class RemoveClassCommandParserTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"DonovanJJ"},"content":"    private RemoveClassCommandParser parser \u003d new RemoveClassCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"DonovanJJ"},"content":"    private final String missingClassName \u003d \"cs0000\";","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"DonovanJJ"},"content":"    public void parse_validArgs_returnRemoveClassCommand() {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"DonovanJJ"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"DonovanJJ"},"content":"        Index classIndexToRemove \u003d Index.fromOneBased(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"        RemoveClassCommand expectedCommand \u003d new RemoveClassCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"DonovanJJ"},"content":"        assertParseSuccess(parser, \" /c \" + index, expectedCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"DonovanJJ"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"        // Argument should be numbers","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"        assertParseFailure(parser, \"/c\" + missingClassName,","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"DonovanJJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"DonovanJJ"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"DonovanJJ":30}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalClasses;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Index validClassIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(TypicalClasses.getTypicalEduTrack(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ClassName className \u003d new ClassName(\"cs2103t\");","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"        model.addClass(new Class(className, new UniqueStudentList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ViewCommand expectedCommand \u003d new ViewCommand(validClassIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" /c \" + \"1\", expectedCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \" /c \" + \"0\",","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(ViewCommand.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX));","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parse_prefixMissing_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"revdrag":2,"-":43}},{"path":"src/test/java/seedu/address/model/EduTrackTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"public class EduTrackTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"    private final EduTrack eduTrack \u003d new EduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"        assertEquals(Collections.emptyList(), eduTrack.getStudentList());","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e eduTrack.resetData(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"        EduTrack newData \u003d getTypicalEduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"        eduTrack.resetData(newData);","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"        assertEquals(newData, eduTrack);","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"        List\u003cStudent\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"        EduTrackStub newData \u003d new EduTrackStub(newPersons);","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"seanpzk"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e eduTrack.resetData(newData));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"        assertThrows(NullPointerException.class, () -\u003e eduTrack.hasStudent(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"seanpzk"},"content":"        assertFalse(eduTrack.hasStudent(ALICE));","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"        eduTrack.addStudent(ALICE);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"seanpzk"},"content":"        assertTrue(eduTrack.hasStudent(ALICE));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"seanpzk"},"content":"        eduTrack.addStudent(ALICE);","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"seanpzk"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"seanpzk"},"content":"        assertTrue(eduTrack.hasStudent(editedAlice));","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"seanpzk"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e eduTrack.getStudentList().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"seanpzk"},"content":"        String expected \u003d EduTrack.class.getCanonicalName() + \"{students\u003d\" + eduTrack.getStudentList() + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"songgthu"},"content":"        assertEquals(expected, eduTrack.toString());","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"seanpzk"},"content":"    public void addStudent_listSizeIncreasesByOne_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"seanpzk"},"content":"        EduTrack newData \u003d getTypicalEduTrack();","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"seanpzk"},"content":"        eduTrack.resetData(newData);","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"seanpzk"},"content":"        int originalSize \u003d eduTrack.getStudentList().size();","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"seanpzk"},"content":"        Name studentNameStub \u003d new Name(\"studentNameStub\");","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"seanpzk"},"content":"        Student studentStub \u003d new Student(studentNameStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"seanpzk"},"content":"        eduTrack.addStudent(studentStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"seanpzk"},"content":"        int newSize \u003d eduTrack.getStudentList().size();","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"seanpzk"},"content":"        int diff \u003d newSize - originalSize;","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"seanpzk"},"content":"        assertEquals(diff, 1);","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"seanpzk"},"content":"    // This test needs to be refined but just putting here for now to increase coverage to push PR","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"seanpzk"},"content":"    // for others to start working.","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"seanpzk"},"content":"    public void removeStudent_listSizeDecreasesByOne_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"seanpzk"},"content":"        EduTrack newData \u003d getTypicalEduTrack();","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"seanpzk"},"content":"        eduTrack.resetData(newData);","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"seanpzk"},"content":"        int originalSize \u003d eduTrack.getStudentList().size();","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"seanpzk"},"content":"        Name studentNameStub \u003d new Name(\"studentNameStub\");","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"seanpzk"},"content":"        Student studentStub \u003d new Student(studentNameStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"seanpzk"},"content":"        eduTrack.addStudent(studentStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"seanpzk"},"content":"        eduTrack.removeStudent(studentStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"seanpzk"},"content":"        int newSize \u003d eduTrack.getStudentList().size();","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"seanpzk"},"content":"        int diff \u003d newSize - originalSize;","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"seanpzk"},"content":"        assertEquals(diff, 0);","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"seanpzk"},"content":"    public void getClass_eduTrackWithNoClass_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"seanpzk"},"content":"        EduTrack newData \u003d getTypicalEduTrack();","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"seanpzk"},"content":"        eduTrack.resetData(newData);","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"seanpzk"},"content":"        ClassName classNameStub \u003d new ClassName(\"classNameStub\");","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"seanpzk"},"content":"        assertEquals(eduTrack.getClass(classNameStub), null);","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"seanpzk"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"seanpzk"},"content":"     * constraints.","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"songgthu"},"content":"    private static class EduTrackStub implements ReadOnlyEduTrack {","lastModifiedDate":"2023-10-07"},{"lineNumber":139,"author":{"gitId":"seanpzk"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"songgthu"},"content":"        private final ObservableList\u003cClass\u003e classes \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"seanpzk"},"content":"        EduTrackStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"seanpzk"},"content":"            this.students.setAll(students);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"seanpzk"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"seanpzk"},"content":"            return students;","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":152,"author":{"gitId":"songgthu"},"content":"        @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"songgthu"},"content":"        public ObservableList\u003cClass\u003e getClassList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"songgthu"},"content":"            return classes;","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"seanpzk":67,"songgthu":16,"-":75}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLASSES;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalClasses.CS2102;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"import seedu.address.testutil.EduTrackBuilder;","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"        assertEquals(new EduTrack(), new EduTrack(modelManager.getEduTrack()));","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"        userPrefs.setEduTrackFilePath(Paths.get(\"edu/track/file/path\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"        userPrefs.setEduTrackFilePath(Paths.get(\"new/edu/track/file/path\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"songgthu"},"content":"    public void setEduTrackFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEduTrackFilePath(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"songgthu"},"content":"    public void setEduTrackFilePath_validPath_setsEduTrackFilePath() {","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"songgthu"},"content":"        Path path \u003d Paths.get(\"edu/track/file/path\");","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"songgthu"},"content":"        modelManager.setEduTrackFilePath(path);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"songgthu"},"content":"        assertEquals(path, modelManager.getEduTrackFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"seanpzk"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"songgthu"},"content":"    public void hasPerson_personNotInEduTrack_returnsFalse() {","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"seanpzk"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"songgthu"},"content":"    public void hasPerson_personInEduTrack_returnsTrue() {","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"seanpzk"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"seanpzk"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"DonovanJJ"},"content":"    public void retrieveClass_emptyClassList_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"DonovanJJ"},"content":"        assertThrows(CommandException.class, () -\u003e modelManager.retrieveClass(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"DonovanJJ"},"content":"    public void retrieveClass_indexLargerThanClassList_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"revdrag"},"content":"        modelManager.addClass(new Class(new ClassName(\"class1\"), new UniqueStudentList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"revdrag"},"content":"        modelManager.addClass(new Class(new ClassName(\"class2\"), new UniqueStudentList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"DonovanJJ"},"content":"        assertThrows(CommandException.class, () -\u003e modelManager.retrieveClass(Index.fromOneBased(3)));","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"DonovanJJ"},"content":"    public void retrieveClass_validIndexInClassList_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"revdrag"},"content":"        modelManager.addClass(new Class(new ClassName(\"class1\"), new UniqueStudentList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"revdrag"},"content":"        modelManager.addClass(new Class(new ClassName(\"class2\"), new UniqueStudentList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"DonovanJJ"},"content":"        assertDoesNotThrow(() -\u003e modelManager.retrieveClass(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"seanpzk"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void getFilteredClassList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClassList().remove(0));","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void getClassByIndex_validIndex_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.addClass(CS2102);","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(modelManager.getClassByIndex(Index.fromOneBased(1)),","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                CS2102);","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void getClassByIndex_invalidIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        modelManager.addClass(CS2102);","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e modelManager.getClassByIndex(Index.fromOneBased(2)));","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void getClassListSize_validIndex_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        modelManager.addClass(CS2102);","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(modelManager.getClassListSize(), 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void getClassListSize_invalidIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        modelManager.addClass(CS2102);","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e modelManager.getClassByIndex(Index.fromOneBased(2)));","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void updateFilteredClassList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredClassList(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void updateFilteredClassList_validPredicate_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        modelManager.addClass(CS2102);","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredClassList(PREDICATE_SHOW_ALL_CLASSES);","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(modelManager.getFilteredClassList().size(), 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"songgthu"},"content":"        EduTrack eduTrack \u003d new EduTrackBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-10-07"},{"lineNumber":169,"author":{"gitId":"songgthu"},"content":"        EduTrack differentEduTrack \u003d new EduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"songgthu"},"content":"        modelManager \u003d new ModelManager(eduTrack, userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":174,"author":{"gitId":"songgthu"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(eduTrack, userPrefs);","lastModifiedDate":"2023-10-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"songgthu"},"content":"        // different eduTrack -\u003e returns false","lastModifiedDate":"2023-10-07"},{"lineNumber":187,"author":{"gitId":"songgthu"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentEduTrack, userPrefs)));","lastModifiedDate":"2023-10-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":191,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":192,"author":{"gitId":"seanpzk"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-04"},{"lineNumber":193,"author":{"gitId":"songgthu"},"content":"        assertFalse(modelManager.equals(new ModelManager(eduTrack, userPrefs)));","lastModifiedDate":"2023-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":196,"author":{"gitId":"seanpzk"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"songgthu"},"content":"        differentUserPrefs.setEduTrackFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":201,"author":{"gitId":"songgthu"},"content":"        assertFalse(modelManager.equals(new ModelManager(eduTrack, differentUserPrefs)));","lastModifiedDate":"2023-10-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"seanpzk":12,"songgthu":21,"DonovanJJ":14,"revdrag":5,"-":151}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"    public void setEduTrackFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setEduTrackFilePath(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"songgthu":2,"-":19}},{"path":"src/test/java/seedu/address/model/module/ClassNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"public class ClassNameTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"    public void isValidClassName() {","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"        // null name","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e ClassName.isValidClassName(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"        // invalid name","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"        assertFalse(ClassName.isValidClassName(\"cs 2103t\")); // contains spaces","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"        // valid name","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"        assertTrue(ClassName.isValidClassName(\"abc\")); // alphabets only","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"        assertTrue(ClassName.isValidClassName(\"123\")); // numbers only","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"        assertTrue(ClassName.isValidClassName(\"cs2103_t\")); // contains special characters","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"        assertTrue(ClassName.isValidClassName(\"cs2103t\")); // alphanumeric characters","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"    public void isEmptyClassName() {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e ClassName.isEmptyClassName(null));","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"        assertTrue(ClassName.isEmptyClassName(\"\")); // empty string","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"        assertTrue(ClassName.isEmptyClassName(\" \")); // spaces only","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"        assertFalse(ClassName.isEmptyClassName(\"abc\")); // alphabets only","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"        assertFalse(ClassName.isEmptyClassName(\"123\")); // numbers only","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"        assertFalse(ClassName.isEmptyClassName(\"cs2103t\")); // alphanumeric characters","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"    public void equals() {","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"        ClassName className \u003d new ClassName(\"cs2103t\");","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"        assertTrue(className.equals(new ClassName(\"cs2103t\")));","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"        assertTrue(className.equals(className));","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"        assertFalse(className.equals(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"        assertFalse(className.equals(5.0f));","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"        assertFalse(className.equals(new ClassName(\"cs2100\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"seanpzk":1,"songgthu":57}},{"path":"src/test/java/seedu/address/model/module/ClassTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"class ClassTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"    private final Class c \u003d new Class(new ClassName(\"abc\"), new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Class(null, new UniqueStudentList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"    public void equals() {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"        assertTrue(c.equals(new Class(new ClassName(\"abc\"), new UniqueStudentList())));","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"        assertTrue(c.equals(c));","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"        assertFalse(c.equals(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"        assertFalse(c.equals(5.0f));","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"revdrag"},"content":"        assertFalse(c.equals(new Class(new ClassName(\"def\"), new UniqueStudentList())));","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"        String expected \u003d Class.class.getCanonicalName() + \"{class name\u003d\" + c.getClassName() + \"}\";","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"        assertEquals(expected, c.toString());","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"songgthu":37,"revdrag":6}},{"path":"src/test/java/seedu/address/model/module/UniqueClassListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.model.module;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"DonovanJJ"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"import static seedu.address.testutil.TypicalClasses.CS2040;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"import static seedu.address.testutil.TypicalClasses.CS2102;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"DonovanJJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"DonovanJJ"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"DonovanJJ"},"content":"import seedu.address.model.module.exceptions.ClassNotFoundException;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.exceptions.DuplicateClassException;","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"public class UniqueClassListTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    private final UniqueClassList uniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"DonovanJJ"},"content":"    private final ClassName sampleClassName1 \u003d new ClassName(\"cs2103t\");","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"DonovanJJ"},"content":"    private final ClassName sampleClassName2 \u003d new ClassName(\"cs2105\");","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"revdrag"},"content":"    private final Class sampleClass1 \u003d new Class(sampleClassName1, new UniqueStudentList());","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"revdrag"},"content":"    private final Class sampleClass2 \u003d new Class(sampleClassName2, new UniqueStudentList());","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"    public void contains_nullClass_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.contains(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    public void contains_classNotInList_returnsFalse() {","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"DonovanJJ"},"content":"        assertFalse(uniqueClassList.contains(sampleClass1));","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"    public void contains_classInList_returnsTrue() {","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"DonovanJJ"},"content":"        uniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"DonovanJJ"},"content":"        assertTrue(uniqueClassList.contains(sampleClass1));","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"DonovanJJ"},"content":"        uniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"revdrag"},"content":"        Class c \u003d new Class(sampleClassName1, new UniqueStudentList());","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"        assertTrue(uniqueClassList.contains(c));","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"    public void add_nullClass_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.add(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"    public void add_duplicateClass_throwsDuplicateClassException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"DonovanJJ"},"content":"        uniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"DonovanJJ"},"content":"        assertThrows(DuplicateClassException.class, () -\u003e uniqueClassList.add(sampleClass1));","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"DonovanJJ"},"content":"    public void remove_existingClass_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"DonovanJJ"},"content":"        uniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"DonovanJJ"},"content":"        Assertions.assertDoesNotThrow(() -\u003e uniqueClassList.remove(sampleClass1));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"DonovanJJ"},"content":"    public void remove_notExistingClass_throwClassNotFoundException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"DonovanJJ"},"content":"        assertThrows(ClassNotFoundException.class, () -\u003e uniqueClassList.remove(sampleClass1));","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"DonovanJJ"},"content":"    public void setClasses_emptyClasses_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"DonovanJJ"},"content":"        assertDoesNotThrow(() -\u003e uniqueClassList.setClasses(new ArrayList\u003cClass\u003e()));","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"DonovanJJ"},"content":"    public void setClasses_nonEmptyClasses_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"DonovanJJ"},"content":"        ArrayList\u003cClass\u003e classListToAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"DonovanJJ"},"content":"        classListToAdd.add(sampleClass1);","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"DonovanJJ"},"content":"        classListToAdd.add(sampleClass2);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"DonovanJJ"},"content":"        assertDoesNotThrow(() -\u003e uniqueClassList.setClasses(classListToAdd));","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"DonovanJJ"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"DonovanJJ"},"content":"    public void setClasses_duplicateClasses_throwDuplicateClassException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"DonovanJJ"},"content":"        ArrayList\u003cClass\u003e classListToAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"DonovanJJ"},"content":"        classListToAdd.add(sampleClass1);","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"DonovanJJ"},"content":"        classListToAdd.add(sampleClass1);","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"DonovanJJ"},"content":"        classListToAdd.add(sampleClass2);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"DonovanJJ"},"content":"        assertThrows(DuplicateClassException.class, () -\u003e uniqueClassList.setClasses(classListToAdd));","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"songgthu"},"content":"    public void setClasses_nullUniqueClassList_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClasses((List\u003cClass\u003e) null));","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"songgthu"},"content":"    public void setClasses_uniqueClassList_replacesOwnListWithProvidedUniqueClassList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"songgthu"},"content":"        uniqueClassList.add(CS2040);","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"songgthu"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"songgthu"},"content":"        expectedUniqueClassList.add(CS2102);","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"songgthu"},"content":"        uniqueClassList.setClasses(expectedUniqueClassList);","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"songgthu"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"songgthu"},"content":"    public void setClasses_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClasses((List\u003cClass\u003e) null));","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"songgthu"},"content":"    public void setClasses_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"songgthu"},"content":"        uniqueClassList.add(CS2040);","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"songgthu"},"content":"        List\u003cClass\u003e classList \u003d Collections.singletonList(CS2102);","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"songgthu"},"content":"        uniqueClassList.setClasses(classList);","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"songgthu"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"songgthu"},"content":"        expectedUniqueClassList.add(CS2102);","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"songgthu"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"songgthu"},"content":"    public void setClasses_listWithDuplicateClasses_throwsDuplicateClassException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"songgthu"},"content":"        List\u003cClass\u003e listWithDuplicateClasses \u003d Arrays.asList(CS2040, CS2040);","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"songgthu"},"content":"        assertThrows(DuplicateClassException.class, () -\u003e uniqueClassList.setClasses(listWithDuplicateClasses));","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"songgthu"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"songgthu"},"content":"        assertEquals(uniqueClassList.asUnmodifiableObservableList().toString(), uniqueClassList.toString());","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Test for classesAreUnique method","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void classesAreUnique_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.classesAreUnique(null));","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void classesAreUnique_listWithDuplicateClasses_returnsFalse() {","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cClass\u003e listWithDuplicateClasses \u003d Arrays.asList(CS2040, CS2040);","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(uniqueClassList.classesAreUnique(listWithDuplicateClasses));","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Test for size method","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void classesSize() {","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(uniqueClassList.asUnmodifiableObservableList().size(), uniqueClassList.size());","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Test for setClass method","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void setClass_nullClass_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClass(null, sampleClass1));","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void setClass_indexOutOfBounds_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, ()","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                        -\u003e uniqueClassList.setClass(Index.fromOneBased(1), sampleClass1));","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void setClass_validClass_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        uniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        uniqueClassList.setClass(Index.fromOneBased(1), CS2040);","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        expectedUniqueClassList.add(CS2040);","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void remove_nullClass_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.remove((Class) null));","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void remove_indexOutOfBounds_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e uniqueClassList.remove(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void remove_validClass_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        uniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        uniqueClassList.remove(Index.fromOneBased(1));","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void testEquals() {","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        uniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        expectedUniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertTrue(uniqueClassList.equals(expectedUniqueClassList));","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void testHashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        uniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        expectedUniqueClassList.add(sampleClass1);","lastModifiedDate":"2023-10-16"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertEquals(uniqueClassList.hashCode(), expectedUniqueClassList.hashCode());","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":218,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"songgthu":87,"DonovanJJ":45,"revdrag":4,"-":82}},{"path":"src/test/java/seedu/address/model/student/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"seanpzk":1,"-":55}},{"path":"src/test/java/seedu/address/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"seanpzk":1,"-":87}},{"path":"src/test/java/seedu/address/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"seanpzk"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"seanpzk"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"seanpzk":9,"-":76}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"seanpzk":1,"-":59}},{"path":"src/test/java/seedu/address/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"seanpzk":1,"-":59}},{"path":"src/test/java/seedu/address/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"public class StudentTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"    public void isSameStudent() {","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"        editedBob \u003d new StudentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"        assertFalse(BOB.isSameStudent(editedBob));","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"seanpzk"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"seanpzk"},"content":"        String expected \u003d Student.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"                + \"}\";","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"seanpzk":20,"-":56}},{"path":"src/test/java/seedu/address/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seanpzk"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"seanpzk"},"content":"import java.util.List;","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"seanpzk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"seanpzk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"seanpzk"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"        assertFalse(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"        assertTrue(uniqueStudentList.contains(ALICE));","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"                .build();","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"seanpzk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"seanpzk"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.add(ALICE));","lastModifiedDate":"2023-10-04"},{"lineNumber":59,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(null, ALICE));","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":66,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":67,"author":{"gitId":"seanpzk"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":68,"author":{"gitId":"seanpzk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudent(ALICE, null));","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":70,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":71,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"seanpzk"},"content":"    public void setPerson_targetPersonNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"seanpzk"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.setStudent(ALICE, ALICE));","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"seanpzk"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":78,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":79,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.setStudent(ALICE, ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":80,"author":{"gitId":"seanpzk"},"content":"        UniqueStudentList expectedUniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"seanpzk"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"seanpzk"},"content":"        assertEquals(expectedUniquePersonList, uniqueStudentList);","lastModifiedDate":"2023-10-04"},{"lineNumber":83,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"seanpzk"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":88,"author":{"gitId":"seanpzk"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-04"},{"lineNumber":89,"author":{"gitId":"seanpzk"},"content":"                .build();","lastModifiedDate":"2023-10-04"},{"lineNumber":90,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.setStudent(ALICE, editedAlice);","lastModifiedDate":"2023-10-04"},{"lineNumber":91,"author":{"gitId":"seanpzk"},"content":"        UniqueStudentList expectedUniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"seanpzk"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"seanpzk"},"content":"        assertEquals(expectedUniquePersonList, uniqueStudentList);","lastModifiedDate":"2023-10-04"},{"lineNumber":94,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":97,"author":{"gitId":"seanpzk"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.setStudent(ALICE, BOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"seanpzk"},"content":"        UniqueStudentList expectedUniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":101,"author":{"gitId":"seanpzk"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":102,"author":{"gitId":"seanpzk"},"content":"        assertEquals(expectedUniquePersonList, uniqueStudentList);","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":105,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"seanpzk"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":108,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(BOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"seanpzk"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudent(ALICE, BOB));","lastModifiedDate":"2023-10-04"},{"lineNumber":110,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":111,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":112,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":113,"author":{"gitId":"seanpzk"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":114,"author":{"gitId":"seanpzk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.remove(null));","lastModifiedDate":"2023-10-04"},{"lineNumber":115,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":116,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":117,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":118,"author":{"gitId":"seanpzk"},"content":"    public void remove_personDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":119,"author":{"gitId":"seanpzk"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniqueStudentList.remove(ALICE));","lastModifiedDate":"2023-10-04"},{"lineNumber":120,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":122,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":123,"author":{"gitId":"seanpzk"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2023-10-04"},{"lineNumber":124,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":125,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.remove(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":126,"author":{"gitId":"seanpzk"},"content":"        UniqueStudentList expectedUniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"seanpzk"},"content":"        assertEquals(expectedUniquePersonList, uniqueStudentList);","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":129,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":130,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"seanpzk"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":132,"author":{"gitId":"seanpzk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2023-10-04"},{"lineNumber":133,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":136,"author":{"gitId":"seanpzk"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":137,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":138,"author":{"gitId":"seanpzk"},"content":"        UniqueStudentList expectedUniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":139,"author":{"gitId":"seanpzk"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.setStudents(expectedUniquePersonList);","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"seanpzk"},"content":"        assertEquals(expectedUniquePersonList, uniqueStudentList);","lastModifiedDate":"2023-10-04"},{"lineNumber":142,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":144,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":145,"author":{"gitId":"seanpzk"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":146,"author":{"gitId":"seanpzk"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2023-10-04"},{"lineNumber":147,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":148,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":149,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"seanpzk"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.add(ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"seanpzk"},"content":"        List\u003cStudent\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"seanpzk"},"content":"        uniqueStudentList.setStudents(personList);","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"seanpzk"},"content":"        UniqueStudentList expectedUniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"seanpzk"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"seanpzk"},"content":"        assertEquals(expectedUniquePersonList, uniqueStudentList);","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"seanpzk"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"seanpzk"},"content":"        List\u003cStudent\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"seanpzk"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniqueStudentList.setStudents(listWithDuplicatePersons));","lastModifiedDate":"2023-10-04"},{"lineNumber":163,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"seanpzk"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"seanpzk"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"seanpzk"},"content":"                -\u003e uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"seanpzk"},"content":"    @Test","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"seanpzk"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"seanpzk"},"content":"        assertEquals(uniqueStudentList.asUnmodifiableObservableList().toString(), uniqueStudentList.toString());","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"seanpzk"},"content":"    }","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"seanpzk"},"content":"}","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"seanpzk":175}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedClassTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import static seedu.address.storage.JsonAdaptedClass.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"import static seedu.address.testutil.TypicalClasses.CS2105;","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"revdrag"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"revdrag"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"public class JsonAdaptedClassTest {","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"    private static final String INVALID_CLASS_NAME \u003d \"cs 2103t\";","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"    private static final List\u003cJsonAdaptedStudent\u003e EMPTY_STUDENT_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"    public void toModelType_validClassDetails_returnsClass() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"revdrag"},"content":"        JsonAdaptedClass c \u003d new JsonAdaptedClass(\"CS2105\", EMPTY_STUDENT_LIST);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"        assertEquals(CS2105, c.toModelType());","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"    public void toModelType_invalidClassName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"        JsonAdaptedClass c \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"revdrag"},"content":"                new JsonAdaptedClass(INVALID_CLASS_NAME, EMPTY_STUDENT_LIST);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"        String expectedMessage \u003d ClassName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, c::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"    public void toModelType_nullClassName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"revdrag"},"content":"        JsonAdaptedClass c \u003d new JsonAdaptedClass((String) null, new ArrayList\u003cJsonAdaptedStudent\u003e());","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ClassName.class.getSimpleName());","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, c::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"songgthu":34,"revdrag":7}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"seanpzk"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(INVALID_NAME);","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent((String) null);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"seanpzk":11,"-":38}},{"path":"src/test/java/seedu/address/storage/JsonEduTrackStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.HOON;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.IDA;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"public class JsonEduTrackStorageTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonEduTrackStorageTest\");","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    @TempDir","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    public void readEduTrack_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e readEduTrack(null));","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"    private java.util.Optional\u003cReadOnlyEduTrack\u003e readEduTrack(String filePath) throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"        return new JsonEduTrackStorage(Paths.get(filePath)).readEduTrack(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":37,"author":{"gitId":"songgthu"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-10-07"},{"lineNumber":38,"author":{"gitId":"songgthu"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-10-07"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"                : null;","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"        assertFalse(readEduTrack(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readEduTrack(\"notJsonFormatEduTrack.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":54,"author":{"gitId":"songgthu"},"content":"    public void readEduTrack_invalidPersonEduTrack_throwDataLoadingException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readEduTrack(\"invalidPersonEduTrack.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"songgthu"},"content":"    public void readEduTrack_invalidAndValidPersonEduTrack_throwDataLoadingException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readEduTrack(\"invalidAndValidPersonEduTrack.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"    public void readAndSaveEduTrack_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"songgthu"},"content":"        Path filePath \u003d testFolder.resolve(\"TempEduTrack.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"songgthu"},"content":"        EduTrack original \u003d getTypicalEduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":67,"author":{"gitId":"songgthu"},"content":"        JsonEduTrackStorage jsonEduTrackStorage \u003d new JsonEduTrackStorage(filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"songgthu"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"songgthu"},"content":"        jsonEduTrackStorage.saveEduTrack(original, filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":71,"author":{"gitId":"songgthu"},"content":"        ReadOnlyEduTrack readBack \u003d jsonEduTrackStorage.readEduTrack(filePath).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":72,"author":{"gitId":"songgthu"},"content":"        assertEquals(original, new EduTrack(readBack));","lastModifiedDate":"2023-10-07"},{"lineNumber":73,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":74,"author":{"gitId":"songgthu"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"seanpzk"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"        original.removeStudent(ALICE);","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"songgthu"},"content":"        jsonEduTrackStorage.saveEduTrack(original, filePath);","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"songgthu"},"content":"        readBack \u003d jsonEduTrackStorage.readEduTrack(filePath).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"songgthu"},"content":"        assertEquals(original, new EduTrack(readBack));","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":81,"author":{"gitId":"songgthu"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-10-07"},{"lineNumber":82,"author":{"gitId":"seanpzk"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"songgthu"},"content":"        jsonEduTrackStorage.saveEduTrack(original); // file path not specified","lastModifiedDate":"2023-10-07"},{"lineNumber":84,"author":{"gitId":"songgthu"},"content":"        readBack \u003d jsonEduTrackStorage.readEduTrack().get(); // file path not specified","lastModifiedDate":"2023-10-07"},{"lineNumber":85,"author":{"gitId":"songgthu"},"content":"        assertEquals(original, new EduTrack(readBack));","lastModifiedDate":"2023-10-07"},{"lineNumber":86,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":87,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":88,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":89,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":90,"author":{"gitId":"songgthu"},"content":"    public void saveEduTrack_nullEduTrack_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":91,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEduTrack(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":92,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":93,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":94,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":95,"author":{"gitId":"songgthu"},"content":"     * Saves {@code EduTrack} at the specified {@code filePath}.","lastModifiedDate":"2023-10-07"},{"lineNumber":96,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":97,"author":{"gitId":"songgthu"},"content":"    private void saveEduTrack(ReadOnlyEduTrack eduTrack, String filePath) {","lastModifiedDate":"2023-10-07"},{"lineNumber":98,"author":{"gitId":"songgthu"},"content":"        try {","lastModifiedDate":"2023-10-07"},{"lineNumber":99,"author":{"gitId":"songgthu"},"content":"            new JsonEduTrackStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-07"},{"lineNumber":100,"author":{"gitId":"songgthu"},"content":"                    .saveEduTrack(eduTrack, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-07"},{"lineNumber":101,"author":{"gitId":"songgthu"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-10-07"},{"lineNumber":102,"author":{"gitId":"songgthu"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-10-07"},{"lineNumber":103,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":104,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":105,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":106,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-07"},{"lineNumber":107,"author":{"gitId":"songgthu"},"content":"    public void saveEduTrack_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-07"},{"lineNumber":108,"author":{"gitId":"songgthu"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEduTrack(new EduTrack(), null));","lastModifiedDate":"2023-10-07"},{"lineNumber":109,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":110,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"seanpzk":7,"songgthu":103}},{"path":"src/test/java/seedu/address/storage/JsonSerializableEduTrackTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"import seedu.address.testutil.TypicalClasses;","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"import seedu.address.testutil.TypicalStudents;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"public class JsonSerializableEduTrackTest {","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableEduTrackTest\");","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsEduTrack.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonEduTrack.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonEduTrack.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"    private static final Path TYPICAL_CLASSES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalClassesEduTrack.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"    private static final Path INVALID_CLASSES_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClassEduTrack.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"    private static final Path DUPLICATE_CLASS_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClassEduTrack.json\");","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"        JsonSerializableEduTrack dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"                JsonSerializableEduTrack.class).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"        EduTrack eduTrackFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"seanpzk"},"content":"        EduTrack typicalPersonsEduTrack \u003d TypicalStudents.getTypicalEduTrack();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"        assertEquals(eduTrackFromFile, typicalPersonsEduTrack);","lastModifiedDate":"2023-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"songgthu"},"content":"        JsonSerializableEduTrack dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"songgthu"},"content":"                JsonSerializableEduTrack.class).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableEduTrack.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"songgthu"},"content":"    public void toModelType_typicalClassesFile_success() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"songgthu"},"content":"        JsonSerializableEduTrack dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CLASSES_FILE,","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"songgthu"},"content":"                JsonSerializableEduTrack.class).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"songgthu"},"content":"        EduTrack eduTrackFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-07"},{"lineNumber":50,"author":{"gitId":"songgthu"},"content":"        EduTrack typicalClassesEduTrack \u003d TypicalClasses.getTypicalEduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":51,"author":{"gitId":"songgthu"},"content":"        assertEquals(eduTrackFromFile, typicalClassesEduTrack);","lastModifiedDate":"2023-10-07"},{"lineNumber":52,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"songgthu"},"content":"    public void toModelType_invalidClassFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"songgthu"},"content":"        JsonSerializableEduTrack dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLASSES_FILE,","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"                JsonSerializableEduTrack.class).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"songgthu"},"content":"    @Test","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"songgthu"},"content":"    public void toModelType_duplicateClasses_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"songgthu"},"content":"        JsonSerializableEduTrack dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLASS_FILE,","lastModifiedDate":"2023-10-07"},{"lineNumber":64,"author":{"gitId":"songgthu"},"content":"                JsonSerializableEduTrack.class).get();","lastModifiedDate":"2023-10-07"},{"lineNumber":65,"author":{"gitId":"songgthu"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableEduTrack.MESSAGE_DUPLICATE_CLASS,","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"songgthu"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-06"},{"lineNumber":67,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"seanpzk":2,"songgthu":42,"-":25}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"songgthu"},"content":"        userPrefs.setEduTrackFilePath(Paths.get(\"edutrack.json\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"songgthu":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalEduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.ReadOnlyEduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"        JsonEduTrackStorage addressBookStorage \u003d new JsonEduTrackStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"songgthu"},"content":"        EduTrack original \u003d getTypicalEduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":58,"author":{"gitId":"songgthu"},"content":"        storageManager.saveEduTrack(original);","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"songgthu"},"content":"        ReadOnlyEduTrack retrieved \u003d storageManager.readEduTrack().get();","lastModifiedDate":"2023-10-07"},{"lineNumber":60,"author":{"gitId":"songgthu"},"content":"        assertEquals(original, new EduTrack(retrieved));","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"songgthu"},"content":"        assertNotNull(storageManager.getEduTrackFilePath());","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seanpzk":1,"songgthu":8,"-":59}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"     * {@code person}\u0027s details","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"seanpzk"},"content":"    public EditPersonDescriptorBuilder(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"seanpzk"},"content":"     * building.","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"seanpzk"},"content":"     * building.","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"     * building.","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"     * building.","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"seanpzk"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2023-10-04"},{"lineNumber":72,"author":{"gitId":"seanpzk"},"content":"     * {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"seanpzk":18,"-":64}},{"path":"src/test/java/seedu/address/testutil/EduTrackBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-07"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"/**","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":" * A utility class to help with building EduTrack objects.","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":" *     {@code EduTrack ab \u003d new EduTrackBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"songgthu"},"content":" */","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"public class EduTrackBuilder {","lastModifiedDate":"2023-10-07"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":"    private EduTrack eduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"    public EduTrackBuilder() {","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"        eduTrack \u003d new EduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":17,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":18,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":19,"author":{"gitId":"songgthu"},"content":"    public EduTrackBuilder(EduTrack eduTrack) {","lastModifiedDate":"2023-10-07"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"        this.eduTrack \u003d eduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"     * Adds a new {@code Person} to the {@code EduTrack} that we are building.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"seanpzk"},"content":"    public EduTrackBuilder withPerson(Student student) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"        eduTrack.addStudent(student);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"        return this;","lastModifiedDate":"2023-10-07"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"    public EduTrack build() {","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"        return eduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"seanpzk":3,"songgthu":31}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Address;","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Email;","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Name;","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Phone;","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"seanpzk"},"content":"public class StudentBuilder {","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"    public StudentBuilder() {","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"    public StudentBuilder(Student personToCopy) {","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"seanpzk"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"seanpzk"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"seanpzk"},"content":"     * {@code Person} that we are building.","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"    public StudentBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"seanpzk"},"content":"    public StudentBuilder withAddress(String address) {","lastModifiedDate":"2023-10-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"seanpzk"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2023-10-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"seanpzk"},"content":"    public Student build() {","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"seanpzk"},"content":"        return new Student(name);","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"seanpzk":17,"-":68}},{"path":"src/test/java/seedu/address/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"seanpzk"},"content":"public class StudentUtil {","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"seanpzk"},"content":"    public static String getAddCommand(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"    public static String getPersonDetails(Student person) {","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"seanpzk"},"content":"     * Returns the part of command string for the given","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"     * {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"seanpzk":6,"-":39}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"seanpzk"},"content":"     * path.","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"seanpzk"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"    public static Student getPerson(Model model, Index index) {","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"seanpzk"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2023-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seanpzk":7,"-":49}},{"path":"src/test/java/seedu/address/testutil/TypicalClasses.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songgthu"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"songgthu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"songgthu"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"songgthu"},"content":"import java.util.List;","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.Class;","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"songgthu"},"content":"import seedu.address.model.module.ClassName;","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"revdrag"},"content":"import seedu.address.model.student.UniqueStudentList;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"songgthu"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"songgthu"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"songgthu"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"songgthu"},"content":"public class TypicalClasses {","lastModifiedDate":"2023-10-06"},{"lineNumber":16,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"revdrag"},"content":"    public static final Class CS2102 \u003d new Class(new ClassName(\"cs2102\"), new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"revdrag"},"content":"    public static final Class CS2105 \u003d new Class(new ClassName(\"cs2105\"), new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"revdrag"},"content":"    public static final Class CS2040 \u003d new Class(new ClassName(\"cs2040\"), new UniqueStudentList());","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"songgthu"},"content":"    private TypicalClasses() {} // prevents instantiation","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"songgthu"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"songgthu"},"content":"     * Returns an {@code EduTrack} with all the typical persons.","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"songgthu"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"songgthu"},"content":"    public static EduTrack getTypicalEduTrack() {","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"songgthu"},"content":"        EduTrack et \u003d new EduTrack();","lastModifiedDate":"2023-10-07"},{"lineNumber":28,"author":{"gitId":"songgthu"},"content":"        for (Class c : getTypicalClasses()) {","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"songgthu"},"content":"            et.addClass(c);","lastModifiedDate":"2023-10-07"},{"lineNumber":30,"author":{"gitId":"songgthu"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"songgthu"},"content":"        return et;","lastModifiedDate":"2023-10-07"},{"lineNumber":32,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"songgthu"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"DonovanJJ"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"DonovanJJ"},"content":"     * returns an {@code EduTrack} with no classes inside.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"DonovanJJ"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"DonovanJJ"},"content":"    public static EduTrack getEmptyEduTrack() {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"DonovanJJ"},"content":"        return new EduTrack();","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"DonovanJJ"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"DonovanJJ"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"songgthu"},"content":"    public static List\u003cClass\u003e getTypicalClasses() {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"songgthu"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2102, CS2105, CS2040));","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"songgthu"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"songgthu"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"songgthu":33,"DonovanJJ":7,"revdrag":4}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"revdrag"},"content":"    public static final Index INDEX_FIRST_CLASS \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"revdrag"},"content":"    public static final Index INDEX_SECOND_CLASS \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"revdrag":2,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.EduTrack;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"seanpzk"},"content":"import seedu.address.model.student.Student;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"seanpzk"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"seanpzk"},"content":" * tests.","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"seanpzk"},"content":"public class TypicalStudents {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"seanpzk"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"seanpzk"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"seanpzk"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"seanpzk"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"seanpzk"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"seanpzk"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"seanpzk"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"seanpzk"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"seanpzk"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"seanpzk"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"seanpzk"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"seanpzk"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"seanpzk"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"seanpzk"},"content":"    private TypicalStudents() {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"seanpzk"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"seanpzk"},"content":"     * Returns an {@code EduTrack} with all the typical persons.","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"seanpzk"},"content":"    public static EduTrack getTypicalEduTrack() {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"seanpzk"},"content":"        EduTrack ab \u003d new EduTrack();","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"seanpzk"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"seanpzk"},"content":"            ab.addStudent(student);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"seanpzk"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"seanpzk":26,"-":53}}]

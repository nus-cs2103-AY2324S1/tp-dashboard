[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T09-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-T09-4/tp/actions)","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T09-4/tp/graph/badge.svg?token\u003dZD7IOSM5SQ)](https://codecov.io/gh/AY2324S1-CS2103T-T09-4/tp)","lastModifiedDate":"2023-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"![TAvigator Logo](docs/images/TAvigator%20LogoBanner%20(Light%20Theme).png#gh-light-mode-only)","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"![TAvigator Logo](docs/images/TAvigator%20LogoBanner%20(Dark%20Theme).png#gh-dark-mode-only)","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"# TAvigator","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"\u003e Your personal navigator as a Teaching Assistant (TA)","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"**TAvigator** streamlines the teaching process for TAs around the world. Our software understands the various roles a TA has to play, from meticulous record-keeping to fostering connections with students.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"Tavigator is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TAvigator can get your lesson management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"## Key Features","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"### Beta Stage","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"- Mark attendance of students","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"- View summary of attendance records","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"- Create/Edit student contacts","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"- Search students up by name or student ID","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"- View a list of your students","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"- Filter for specific tutorial groups","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"### Upcoming","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"- Organise student contacts by modules","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"- Create additional notes for students","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"- Search contacts using keywords","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"*Many more to come...*","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"## Site Map","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"-  [User Guide](https://ay2324s1-cs2103t-t09-4.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"-  [Developer Guide](https://ay2324s1-cs2103t-t09-4.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"-  [About Us](https://ay2324s1-cs2103t-t09-4.github.io/tp/AboutUs.html)","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"## Issues \u0026 Bugs","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"Spot a bug? Let us know by launching a Bug Report at theÂ [Issues tab](https://github.com/AY2324S1-CS2103T-T09-4/tp/issues)!","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ElginTZM":17,"anthonytamzil":1,"Zjinnnn":21,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"anthonytamzil"},"content":"    archiveFileName \u003d \u0027tavigator.jar\u0027","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"anthonytamzil"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"anthonytamzil":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"### Anthony Tamzil","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"\u003cimg src\u003d\"images/anthonytamzil.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"[[github](https://github.com/anthonytamzil)]","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"[[portfolio](team/anthonytamzil.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"* Role: Team Lead","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"fuyiqiao"},"content":"### Fu Yiqiao","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"fuyiqiao"},"content":"\u003cimg src\u003d\"images/fuyiqiao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"fuyiqiao"},"content":"[[github](http://github.com/fuyiqiao)]","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"fuyiqiao"},"content":"[[portfolio](team/fuyiqiao.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"fuyiqiao"},"content":"* Role: Developer","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"fuyiqiao"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"### Elgin Tan Zhi Ming","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"\u003cimg src\u003d\"images/elgintzm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"[[github](http://github.com/ElginTZM)]","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"[[portfolio](team/elgintzm.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"### Tan Liyan","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"\u003cimg src\u003d\"images/spatuly.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"[[github](http://github.com/spatuly)]","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"[[portfolio](team/spatuly.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-10-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"### Quek Zong Jin","lastModifiedDate":"2023-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"\u003cimg src\u003d\"images/zjinnnn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"[[github](http://github.com/Zjinnnn)]","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"[[portfolio](team/zjinnnn.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"* Responsibilities: Deliverables and Deadlines","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"fuyiqiao":6,"ElginTZM":5,"spatuly":5,"anthonytamzil":5,"Zjinnnn":5,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâs preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"spatuly"},"content":"### List features","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"spatuly"},"content":"Two types of list commands, `list students` and `list attendance`, have been implemented.","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"spatuly"},"content":"`list students` allows users to return to the full list of students.","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"spatuly"},"content":"`list attendance` allows users to view a summary of the attendances for each week.","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"spatuly"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"spatuly"},"content":"Both list commands are parsed with `ListCommandParser`. If parsed successfully, it returns either","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"spatuly"},"content":"a `ListStudentsCommand` or `ListAttendanceCommand`.","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"spatuly"},"content":"The following is a class diagram depicting `ListCommand`, `ListStudentsCommand` and `ListAttendanceCommand`:","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"spatuly"},"content":"![ListCommandClassDiagram](images/ListCommandClassDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"spatuly"},"content":"Shown below is the sequence diagram of `ListStudentsCommand` when `list students` is entered by the User:","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"spatuly"},"content":"![ListStudentsSeqDiagram](images/ListStudentsSeqDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"spatuly"},"content":"The following sequence diagram shows how `ListAttendanceCommand` works:","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"spatuly"},"content":"![ListAttendanceSeqDiagram](images/ListAttendanceSeqDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"spatuly"},"content":"In this example, the user enters `list attendance w/1 tg/G2`.","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"spatuly"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"spatuly"},"content":"**Aspect: Class Structure of ListCommands:**","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"spatuly"},"content":"* **Alternative 1 (current choice):** Separating ListAttendanceCommand and ListStudentsCommand into two classes that extend from ListCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"spatuly"},"content":"    * Pros: Improves OOP, allows for additional List commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"spatuly"},"content":"    * Cons: ListCommand currently does not have any functionality, might be redundant.","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"spatuly"},"content":"* **Alternative 2:** Only using ListCommand, splitting Attendance and Students into the 2 cases.","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"spatuly"},"content":"    * Pros: Simplifies class structure.","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"spatuly"},"content":"    * Cons: Reduces OOP and extensibility.","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"spatuly"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"Zjinnnn"},"content":"### Mark attendance feature","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"Zjinnnn"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"Zjinnnn"},"content":"The mark attendance feature is implemented using the `MarkAttendanceCommand` class. It is parsed by the `MarkAttendanceCommandParser` class.","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"Zjinnnn"},"content":"If parsed successfully, it returns a `MarkAttendanceCommand` object.","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"Zjinnnn"},"content":"The following activity diagram shows how the `MarkAttendanceCommand` works:","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"Zjinnnn"},"content":"![MarkAttendanceActivityDiagram](images/MarkAttendanceActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"Zjinnnn"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"Zjinnnn"},"content":"`MarkAttendanceCommand` was implemented this way with the idea of providing flexibility to the user. By allowing user to mark attendance using either the student\u0027s name or ID, it caters to different user preferences. The check for existing attendance for the current week ensures that the user does not accidentally create duplicate records for the same week.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"Zjinnnn"},"content":"#### Alternative implementations considered but not adopted:","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"Zjinnnn"},"content":"- Using a separate command for updating attendance","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"Zjinnnn"},"content":"    \u003e Instead of having the command handle both marking and updating attendance, we could have a seperate command, say `UpdateAttendanceCommand`, to handle updates.","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"Zjinnnn"},"content":"    ","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"Zjinnnn"},"content":"    **Pros:** ","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"Zjinnnn"},"content":"    - Easier to understand and maintain: Developers can quickly grasp the purpose of each command.","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"Zjinnnn"},"content":"        ","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"Zjinnnn"},"content":"    **Cons:**","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"Zjinnnn"},"content":"    - Increased complexity: Introducing more commands can make the system more complex and harder for users to remember.","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"Zjinnnn"},"content":"    - Redundancy: Both commands would have overlapping code, leading to potential redundancy.","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"Zjinnnn"},"content":"    ","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"ElginTZM"},"content":"    **Evaluation:**","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"Zjinnnn"},"content":"    ","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"Zjinnnn"},"content":"    The current implementation is preferred as it is simpler and more straightforward. It reduces the need for users to remember additional commands, while resolving potential user mistakes behind the scene, providing convenience and a better user experience. The additional complexity introduced by having a separate command for updating attendance is not justified.","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"Zjinnnn"},"content":"- Not checking for same week\u0027s attendance","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"Zjinnnn"},"content":"  \u003e Instead of checking if the attendance for the same week, we could simply add a new attendance record every time the command is invoked. ","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"Zjinnnn"},"content":"  **Pros:**","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"Zjinnnn"},"content":"    - Simplicity: Implementation would be straightforward without the need for additional checks.","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"Zjinnnn"},"content":"    - Flexibility: Allows for multiple attendance records within the same week, which might be useful in some scenarios.","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"Zjinnnn"},"content":"  **Cons:**","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"Zjinnnn"},"content":"    - Redundancy: Multiple attendance records for the same week can lead to confusion and redundancy.","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"Zjinnnn"},"content":"    - Inefficiency: Consumes more memory and might make querying slower if there are many redundant records.","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"ElginTZM"},"content":"  **Evaluation:**","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"Zjinnnn"},"content":"    ","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"Zjinnnn"},"content":"  The current implementation is preferred as the pros simply do not outweigh the cons. The potential scenario that multiple attendance records within the same week being potentially useful is not justified as it is virtually unlikely to happen. The current implementation is much better preferred as the check prevents potential user mistakes behind the scene, providing convenience and a better user experience.","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"fuyiqiao"},"content":"### View Tallied Attendance feature","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"fuyiqiao"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"fuyiqiao"},"content":"The tallied attendance feature is implemented as a method in the Person class, where attendance records are currently being stored as an arrayList of Attendance objects. The getTalliedAttendance method iterates through the attendance records to return the ratio of tutorials attended to the total number of tutorials.","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"fuyiqiao"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"fuyiqiao"},"content":"This feature is implemented this way, where it is displayed to the user without any additional commands, so that the user can quickly view a summary of the student\u0027s attendance records at a glance. ","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"fuyiqiao"},"content":"#### Alternative implementations considered but not adopted:","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"fuyiqiao"},"content":"Another possible way to implement this feature would be to abstract the attendance records into a separate class.","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"fuyiqiao"},"content":"**Pros:**","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"fuyiqiao"},"content":"- Extendability: This method will increase the ease of implementing features relating to attendance in future.","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"fuyiqiao"},"content":"**Cons:**","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"fuyiqiao"},"content":"- Redundancy: At the current stage, abstracting it into a separate class will greatly increase code complexity without bringing much convenience.","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"anthonytamzil"},"content":"### View Detailed Attendance Records feature ","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"anthonytamzil"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"anthonytamzil"},"content":"The view feature allows the user to view the detailed attendance records of the students in the contact list. This ","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"anthonytamzil"},"content":"feature is implemented using the `ViewCommand` class. It is parsed by the `ViewCommandParser` class. If parsed ","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"anthonytamzil"},"content":"successfully, it returns a `ViewCommand` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"anthonytamzil"},"content":"#### Design considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"anthonytamzil"},"content":"The feature is implemented this way in order to access each individual\u0027s attendance records in a quick and efficient","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"anthonytamzil"},"content":"manner. By using the index of the contact, the user need not type out the individual\u0027s full name, keeping the command","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"anthonytamzil"},"content":"short and quick, especially when the user may have to view multiple attendance records in quick succession.","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"anthonytamzil"},"content":"#### Alternative implementations considered but not adopted:","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"anthonytamzil"},"content":"- Integrate the attendance records to be part of the UI ","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"anthonytamzil"},"content":"  \u003e Instead of having the user to enter a command to view indiviudal attendance records, we could have the attendance records being shown constantly on the UI for every single contact","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"anthonytamzil"},"content":"  **Pros:**","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"anthonytamzil"},"content":"    - Implementation would be quite straightforward and simple without having to add a new command `ViewCommand` and its parser `ViewCommandParser`.","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"anthonytamzil"},"content":"    - Theoretically, users would be able to view every student\u0027s attendance records almost instantly.","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"anthonytamzil"},"content":"  **Cons:**","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"anthonytamzil"},"content":"    - The UI could end up being extremely cluttered especially considering that each student might have 13 rows of attendance to show. This could result in information overload and drastically reduce the user friendliness of the UI.","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"anthonytamzil"},"content":"  **Evaluation**:","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"anthonytamzil"},"content":"  The current implementation, despite having to add new classes, is the optimal way to go about implementing this feature as we believe that having a user-friendly UI is a priority.","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"ElginTZM"},"content":"### \\[Proposed\\] Multiple Address Books for each Course","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"ElginTZM"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"ElginTZM"},"content":"In the `ModelManager` class, instead of storing an `AddressBook`, we instead store a `AddressBookManager`. ","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"ElginTZM"},"content":"The `AddressBookManager` has a few responsibilities:","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"ElginTZM"},"content":"- Adding or deleting `AddressBook`","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"ElginTZM"},"content":"- Setting the active `AddressBook`","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"ElginTZM"},"content":"- Getting the active `AddressBook`","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"ElginTZM"},"content":"The `getAddressBook` method in `ModelManager` is now a wrapper for the `getActiveAddressBook` method in","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"ElginTZM"},"content":"`AddressBookManager`. This ensures that any existing commands will still \"see\" the model as having one `AddressBook`,","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"ElginTZM"},"content":"and not break any existing functionality.","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"ElginTZM"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":306,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":307,"author":{"gitId":"ElginTZM"},"content":"The `getAddressBook` method in `ModelManager` is now a wrapper for the `getActiveAddressBook` method in","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"ElginTZM"},"content":"`AddressBookManager`. This ensures that any existing commands will still \"see\" the model as having one `AddressBook`,","lastModifiedDate":"2023-10-27"},{"lineNumber":309,"author":{"gitId":"ElginTZM"},"content":"and not break any existing functionality.","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":311,"author":{"gitId":"ElginTZM"},"content":"#### Alternative implementations considered but not adopted:","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"ElginTZM"},"content":"- Updating the structure in `ModelManager`","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"ElginTZM"},"content":"  \u003e Instead of having a new class `AddressBookManager`, we simply update the existing structure to use a","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"ElginTZM"},"content":"  \u003e `HashMap\u003cString, AddressBook\u003e`.","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":318,"author":{"gitId":"ElginTZM"},"content":"  **Pros:**","lastModifiedDate":"2023-10-27"},{"lineNumber":319,"author":{"gitId":"ElginTZM"},"content":"    - Easier to understand: Developers who are new to the codebase do not need to learn and understand the","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"ElginTZM"},"content":"    `AddressBookManager` class and its interactions, which could potentially increase the learning curve.","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"ElginTZM"},"content":"  **Cons:**","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"ElginTZM"},"content":"    - Harder to maintain: In the future, should any changes be needed for address book management, there may need to refactor a significant portion of the codebase, as the logic is distributed. This can be error-prone and time-consuming.","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"ElginTZM"},"content":"    - Harder to Store: Without a dedicated AddressBookManager class, there is a need to refactor a significant portion of the existing storage mechanism to take in a HashMap of `AddressBook`.","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"ElginTZM"},"content":"  **Evaluation:**","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"ElginTZM"},"content":"  The proposed implementation is preferred as even though it introduces additional complexity, it allows for better maintainability of the codebase as the responsibility of handling `AddressBook` is now handled by the `AddressBookManager` class. The ease of extensibility outweighs the complexity introduced.","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`âââSaves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`âââRestores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`âââRestores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â¦â` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâââit calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â¦â` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"spatuly"},"content":"* is a Teaching Assistant (TA) for National University of Singapore Computer Science modules","lastModifiedDate":"2023-10-04"},{"lineNumber":433,"author":{"gitId":"spatuly"},"content":"* has a need to manage a significant number of student information","lastModifiedDate":"2023-10-04"},{"lineNumber":434,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":437,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"spatuly"},"content":"**Value proposition**: provide a convenient one-stop platform for tutors to keep track of the work submission and attendance of each student","lastModifiedDate":"2023-10-04"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"| Priority | As a â¦â         | I want to â¦â                                                       | So that I canâ¦â                                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"fuyiqiao"},"content":"|----------|-----------------|--------------------------------------------------------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-27"},{"lineNumber":448,"author":{"gitId":"spatuly"},"content":"| `* * *`  | meticulous user | mark attendance for each student separately                        | make sure each students\u0027 attendace record is accurate                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":449,"author":{"gitId":"spatuly"},"content":"| `* * *`  | user            | see a summary of attendance records                                | verify the attendance records                                                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":450,"author":{"gitId":"spatuly"},"content":"| `* * *`  | user            | easily create new or edit contacts                                 | easily add or remove contacts                                                             |","lastModifiedDate":"2023-10-04"},{"lineNumber":451,"author":{"gitId":"spatuly"},"content":"| `* * *`  | user            | search for a student by name or student ID                         | quickly access their attendance and assignment records                                    |","lastModifiedDate":"2023-10-04"},{"lineNumber":452,"author":{"gitId":"spatuly"},"content":"| `* * *`  | user            | view a list of all my students                                     | quickly scan who\u0027s in my tutorial groups                                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":453,"author":{"gitId":"spatuly"},"content":"| `* * *`  | user            | filter for specific tutorial groups                                | efficiently engage in tutorial-group-based tasks such as marking attendace after a lesson |","lastModifiedDate":"2023-10-04"},{"lineNumber":454,"author":{"gitId":"spatuly"},"content":"| `* *`    | frequent user   | organise my students\u0027 contacts by modules                          | better manage my students                                                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":455,"author":{"gitId":"spatuly"},"content":"| `* *`    | forgetful user  | add additional notes for my students                               | better remember my students                                                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":456,"author":{"gitId":"spatuly"},"content":"| `* *`    | user            | indicate reason for absence                                        | know when there is a valid excuse                                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":457,"author":{"gitId":"spatuly"},"content":"| `* *`    | user            | be able to search for contacts using keywords (modules)            | more easily find contacts                                                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":458,"author":{"gitId":"spatuly"},"content":"| `* *`    | user            | categorize students into different tutorial groups                 | manage and monitor each group efficiently                                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":459,"author":{"gitId":"spatuly"},"content":"| `* *`    | user            | view the tallied attendance over the semester of each student      | submit their overall attendance mark quickly                                              |","lastModifiedDate":"2023-10-04"},{"lineNumber":460,"author":{"gitId":"spatuly"},"content":"| `* *`    | user            | remove students from the address book                              | avoid having unnecessary contacts                                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":461,"author":{"gitId":"spatuly"},"content":"| `* *`    | impatient user  | mass mark attendance for all my students                           | mark attendance more efficiently                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":462,"author":{"gitId":"spatuly"},"content":"| `* *`    | long-term user  | delete all contacts from tutorial group at once                    | avoid doing so one-by-one after the module ends                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":463,"author":{"gitId":"spatuly"},"content":"| `* *`    | long-term user  | archive past module records                                        | have a less cluttered worksapce                                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":464,"author":{"gitId":"spatuly"},"content":"| `* *`    | new user        | have the application feel intuitive                                | easily learn the various functions                                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":465,"author":{"gitId":"spatuly"},"content":"| `* *`    | careless user   | undo my last action                                                | recover any important data                                                                |","lastModifiedDate":"2023-10-04"},{"lineNumber":466,"author":{"gitId":"spatuly"},"content":"| `*`      | new user        | import my contacts from another database                           | easily get started using the app                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":467,"author":{"gitId":"spatuly"},"content":"| `*`      | user            | export my attendance records to another database                   | easily upload attendance records                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":468,"author":{"gitId":"spatuly"},"content":"| `*`      | forgetful user  | be reminded on incomplete attendance records                       | rectify any potential gaps in the records                                                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":469,"author":{"gitId":"spatuly"},"content":"| `*`      | user            | add pictures to the contacts                                       | easily identify my students                                                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":470,"author":{"gitId":"spatuly"},"content":"| `*`      | forgetful user  | merge duplicate contacts                                           | avoid having duplicate contacts jamming up the application                                |","lastModifiedDate":"2023-10-04"},{"lineNumber":471,"author":{"gitId":"spatuly"},"content":"| `*`      | busy user       | set reminders if I have a meeting with the student                 | remember all one-on-one meetings that I have with the students                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":472,"author":{"gitId":"spatuly"},"content":"| `*`      | user            | view a count of how many sessions each student has missed          | identify frequent absentees                                                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":473,"author":{"gitId":"spatuly"},"content":"| `*`      | user            | add simple notes next to a student\u0027s name (like \"late submission\") | remember specific incidents                                                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":474,"author":{"gitId":"spatuly"},"content":"| `*`      | user            | add and edit status of work submissions                            | keep track of the studentsâ work                                                          |","lastModifiedDate":"2023-10-04"},{"lineNumber":475,"author":{"gitId":"spatuly"},"content":"| `*`      | user            | track the submission status of each student\u0027s assignments          | be aware of who has or hasn\u0027t turned in their work                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":476,"author":{"gitId":"spatuly"},"content":"| `*`      | user            | add and view my studentâs preferred name                           | call on them with the correct name                                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"spatuly"},"content":"(For all use cases below, the **System** is `TAvigator` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-04"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"fuyiqiao"},"content":"**Use case: UC01 - Creating a new contact and editing relevant information**","lastModifiedDate":"2023-10-04"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":486,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"fuyiqiao"},"content":"1. User creates a new contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":492,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":494,"author":{"gitId":"fuyiqiao"},"content":"1a. User edits the contact name.","lastModifiedDate":"2023-10-04"},{"lineNumber":495,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":496,"author":{"gitId":"fuyiqiao"},"content":"1b. User edits the Module Code associated with the contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":497,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":498,"author":{"gitId":"fuyiqiao"},"content":"1c. User edits the Tutorial Group Number associated with the contact.","lastModifiedDate":"2023-10-04"},{"lineNumber":499,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":500,"author":{"gitId":"Zjinnnn"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":501,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":503,"author":{"gitId":"spatuly"},"content":"**Use case: UC02 - View Summary of Attendance Records**","lastModifiedDate":"2023-10-04"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"spatuly"},"content":"1.  User requests to view a summary of attendance records and enters a week and a tutorial group ID.","lastModifiedDate":"2023-10-26"},{"lineNumber":508,"author":{"gitId":"spatuly"},"content":"2.  TAvigator shows a summary of attendance records for the corresponding week and tutorial group.","lastModifiedDate":"2023-10-26"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":513,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"spatuly"},"content":"* 2a. The given ID is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":516,"author":{"gitId":"spatuly"},"content":"    * 2a1. TAvigator shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":517,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":518,"author":{"gitId":"spatuly"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":519,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":520,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":521,"author":{"gitId":"spatuly"},"content":"* 2b. User leaves the tutorial group ID blank.","lastModifiedDate":"2023-10-04"},{"lineNumber":522,"author":{"gitId":"spatuly"},"content":"    * 2b1. TAvigator shows a summary of all attendance records for the week and the contact list of absentees.","lastModifiedDate":"2023-10-26"},{"lineNumber":523,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":524,"author":{"gitId":"spatuly"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":525,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":526,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":527,"author":{"gitId":"spatuly"},"content":"* 2c. User leaves the week blank.","lastModifiedDate":"2023-10-26"},{"lineNumber":528,"author":{"gitId":"spatuly"},"content":"    * 2c1. TAvigator shows an error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"spatuly"},"content":"**Use case: UC03 - View List of Students**","lastModifiedDate":"2023-10-04"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"spatuly"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":535,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":536,"author":{"gitId":"spatuly"},"content":"1.  User requests to view a list of students.","lastModifiedDate":"2023-10-26"},{"lineNumber":537,"author":{"gitId":"spatuly"},"content":"2.  TAvigator shows a list of all students.","lastModifiedDate":"2023-10-26"},{"lineNumber":538,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":539,"author":{"gitId":"spatuly"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"spatuly"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":542,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":543,"author":{"gitId":"spatuly"},"content":"* 2a. The given ID is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":544,"author":{"gitId":"spatuly"},"content":"    * 2a1. TAvigator shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":545,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":546,"author":{"gitId":"spatuly"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":547,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":548,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":549,"author":{"gitId":"spatuly"},"content":"* 2b. User leaves the tutorial group ID blank.","lastModifiedDate":"2023-10-04"},{"lineNumber":550,"author":{"gitId":"spatuly"},"content":"    * 2b1. TAvigator shows a list of all students and their tutorial group ID.","lastModifiedDate":"2023-10-04"},{"lineNumber":551,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":552,"author":{"gitId":"spatuly"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"fuyiqiao"},"content":"**Use case: UC04 - Mark Student Attendance Separately**","lastModifiedDate":"2023-10-05"},{"lineNumber":555,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":556,"author":{"gitId":"fuyiqiao"},"content":"**MSS**","lastModifiedDate":"2023-10-05"},{"lineNumber":557,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":558,"author":{"gitId":"Zjinnnn"},"content":"1.  User requests to mark attendance for a student and enters student name or ID, followed by the attendance status and week and reason if any.","lastModifiedDate":"2023-10-26"},{"lineNumber":559,"author":{"gitId":"Zjinnnn"},"content":"2.  TAvigator marks the attendance of student and displays message for confirmation of attendance.","lastModifiedDate":"2023-10-26"},{"lineNumber":560,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":561,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":562,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":563,"author":{"gitId":"fuyiqiao"},"content":"**Extensions**","lastModifiedDate":"2023-10-05"},{"lineNumber":564,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":565,"author":{"gitId":"fuyiqiao"},"content":"* 1a. The given student name or ID is invalid","lastModifiedDate":"2023-10-05"},{"lineNumber":566,"author":{"gitId":"fuyiqiao"},"content":"    * 1a1. TAvigator shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":567,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":568,"author":{"gitId":"fuyiqiao"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":569,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":570,"author":{"gitId":"fuyiqiao"},"content":"* 1b. The given attendance record is invalid","lastModifiedDate":"2023-10-05"},{"lineNumber":571,"author":{"gitId":"fuyiqiao"},"content":"    * 1b1. TAvigator shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":572,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":573,"author":{"gitId":"fuyiqiao"},"content":"      Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":574,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":575,"author":{"gitId":"Zjinnnn"},"content":"* 1c. The given week is invalid ","lastModifiedDate":"2023-10-26"},{"lineNumber":576,"author":{"gitId":"Zjinnnn"},"content":"    * 1c1. TAvigator shows an error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":577,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":578,"author":{"gitId":"Zjinnnn"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":579,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":580,"author":{"gitId":"Zjinnnn"},"content":"* 1d. The given reason is not provided for absence","lastModifiedDate":"2023-10-26"},{"lineNumber":581,"author":{"gitId":"Zjinnnn"},"content":"    * 1d1. TAvigator shows an error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":582,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":583,"author":{"gitId":"Zjinnnn"},"content":"      Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":584,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":585,"author":{"gitId":"ElginTZM"},"content":"**Use case: UC05 - Adding a filter**","lastModifiedDate":"2023-10-05"},{"lineNumber":586,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":587,"author":{"gitId":"ElginTZM"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":588,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":589,"author":{"gitId":"ElginTZM"},"content":"1.  User requests to add a filter and enters a tutorial group ID or course ID.","lastModifiedDate":"2023-10-04"},{"lineNumber":590,"author":{"gitId":"ElginTZM"},"content":"2.  TAvigator shows a list of students matching the filters applied.","lastModifiedDate":"2023-10-04"},{"lineNumber":591,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":592,"author":{"gitId":"ElginTZM"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":593,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":594,"author":{"gitId":"ElginTZM"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":595,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":596,"author":{"gitId":"ElginTZM"},"content":"* 1a. The given tutorial group ID is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":597,"author":{"gitId":"ElginTZM"},"content":"    * 1a1. TAvigator shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":598,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":599,"author":{"gitId":"ElginTZM"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":600,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":601,"author":{"gitId":"ElginTZM"},"content":"* 1b. The given course ID is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":602,"author":{"gitId":"ElginTZM"},"content":"    * 1b1. TAvigator shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":603,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":604,"author":{"gitId":"ElginTZM"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":605,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":606,"author":{"gitId":"ElginTZM"},"content":"* 1c. User does not specify a tutorial group ID or course ID.","lastModifiedDate":"2023-10-05"},{"lineNumber":607,"author":{"gitId":"ElginTZM"},"content":"    * 1c1. TAvigator shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":608,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":609,"author":{"gitId":"ElginTZM"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":610,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":611,"author":{"gitId":"ElginTZM"},"content":"**Use case: UC06 - Removing a filter**","lastModifiedDate":"2023-10-05"},{"lineNumber":612,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":613,"author":{"gitId":"ElginTZM"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":614,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":615,"author":{"gitId":"ElginTZM"},"content":"1.  User requests to remove a filter and enters a tutorial group ID or course ID.","lastModifiedDate":"2023-10-04"},{"lineNumber":616,"author":{"gitId":"ElginTZM"},"content":"2.  TAvigator shows a list of students with the updated filters.","lastModifiedDate":"2023-10-04"},{"lineNumber":617,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":618,"author":{"gitId":"ElginTZM"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":619,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":620,"author":{"gitId":"ElginTZM"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":621,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":622,"author":{"gitId":"ElginTZM"},"content":"* 1a. The given tutorial group ID is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":623,"author":{"gitId":"ElginTZM"},"content":"    * 1a1. TAvigator shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":624,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":625,"author":{"gitId":"ElginTZM"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":626,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":627,"author":{"gitId":"ElginTZM"},"content":"* 1b. The given course ID is invalid.","lastModifiedDate":"2023-10-05"},{"lineNumber":628,"author":{"gitId":"ElginTZM"},"content":"    * 1b1. TAvigator shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":629,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":630,"author":{"gitId":"ElginTZM"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":631,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":632,"author":{"gitId":"ElginTZM"},"content":"* 1c. User does not specify a tutorial group ID or course ID.","lastModifiedDate":"2023-10-05"},{"lineNumber":633,"author":{"gitId":"ElginTZM"},"content":"    * 1c1. TAvigator removes all applied filters.","lastModifiedDate":"2023-10-05"},{"lineNumber":634,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":635,"author":{"gitId":"ElginTZM"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":636,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":637,"author":{"gitId":"anthonytamzil"},"content":"**Use case: UC07 - Search For Contacts via Student Name or ID**","lastModifiedDate":"2023-10-05"},{"lineNumber":638,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":639,"author":{"gitId":"anthonytamzil"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":640,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":641,"author":{"gitId":"anthonytamzil"},"content":"1. User requests to search for a contact via student name or ID.","lastModifiedDate":"2023-10-04"},{"lineNumber":642,"author":{"gitId":"anthonytamzil"},"content":"2. User enters desired student name or ID.","lastModifiedDate":"2023-10-04"},{"lineNumber":643,"author":{"gitId":"anthonytamzil"},"content":"3. TAvigator shows list of students with matching name or ID.","lastModifiedDate":"2023-10-04"},{"lineNumber":644,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":645,"author":{"gitId":"anthonytamzil"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":646,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":647,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":648,"author":{"gitId":"anthonytamzil"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":649,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":650,"author":{"gitId":"anthonytamzil"},"content":"* 3a. The given ID or name does not exist.","lastModifiedDate":"2023-10-04"},{"lineNumber":651,"author":{"gitId":"anthonytamzil"},"content":"    * 3a1. TAvigator shows message indicating that contacts with the specified names or ID do not exist.","lastModifiedDate":"2023-10-04"},{"lineNumber":652,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":653,"author":{"gitId":"anthonytamzil"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":654,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":655,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":656,"author":{"gitId":"anthonytamzil"},"content":"* 3b. User leaves the student name or ID blank","lastModifiedDate":"2023-10-04"},{"lineNumber":657,"author":{"gitId":"anthonytamzil"},"content":"    * 3b1. TAvigator shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":658,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":659,"author":{"gitId":"anthonytamzil"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":662,"author":{"gitId":"anthonytamzil"},"content":"* 3c. User enters an invalid student name or ID","lastModifiedDate":"2023-10-04"},{"lineNumber":663,"author":{"gitId":"anthonytamzil"},"content":"    * 3c1. TAvigator shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":665,"author":{"gitId":"anthonytamzil"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":668,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"anthonytamzil"},"content":"4.  Should retain a majority of the core functionality even without internet access","lastModifiedDate":"2023-10-04"},{"lineNumber":676,"author":{"gitId":"anthonytamzil"},"content":"5.  Application should not exceed file size of 50MB","lastModifiedDate":"2023-10-04"},{"lineNumber":677,"author":{"gitId":"anthonytamzil"},"content":"6.  Should respond to user inputs within approximately 2 seconds","lastModifiedDate":"2023-10-04"},{"lineNumber":678,"author":{"gitId":"anthonytamzil"},"content":"7.  Should show understandable messages to users and not crash under recoverable errors","lastModifiedDate":"2023-10-04"},{"lineNumber":679,"author":{"gitId":"anthonytamzil"},"content":"8.  Application should have an intuitive and user-friendly interface, following design principles","lastModifiedDate":"2023-10-04"},{"lineNumber":680,"author":{"gitId":"anthonytamzil"},"content":"9.  Should provide clear and comprehensive user documentation to assist users in using the application effectively","lastModifiedDate":"2023-10-04"},{"lineNumber":681,"author":{"gitId":"anthonytamzil"},"content":"10. Should maintain technical documentation for developers, detailing the software architecture","lastModifiedDate":"2023-10-04"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"1. _{ more test cases â¦â }_","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"1. _{ more test cases â¦â }_","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"1. _{ more test cases â¦â }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"fuyiqiao":45,"ElginTZM":92,"spatuly":101,"anthonytamzil":67,"Zjinnnn":66,"-":370}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"fuyiqiao"},"content":"TAvigator is a **desktop app** targeted towards Teaching Assistants **for managing contacts, optimized for use via a ","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"fuyiqiao"},"content":"Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type ","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"fuyiqiao"},"content":"fast, TAvigator can get your contact management tasks done faster than traditional GUI apps. We offer a one-stop","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"fuyiqiao"},"content":"solution to manage your student details, including attendance records and assignment details.","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"fuyiqiao"},"content":"### Table of Contents","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"fuyiqiao"},"content":"- [Quick start](#Quick-start)","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"fuyiqiao"},"content":"- [Features](#features)","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"fuyiqiao"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"fuyiqiao"},"content":"- [Known issues](#known-issues)","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"fuyiqiao"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"fuyiqiao"},"content":"2. Download the latest `tavigator.jar` from [here](https://github.com/AY2324S1-CS2103T-T09-4/tp/releases).","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"fuyiqiao"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TAvigator.","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"fuyiqiao"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar tavigator.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"fuyiqiao"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"   * `list students` : Lists all contacts.","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"   * `add n/Fu Yiqiao p/91234567 e/fyq@gmail.com id/A1234567E t/G10` : Adds a contact named `Fu Yiqiao` to TAvigator.","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"fuyiqiao"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"* Items with `|` indicate that the command accepts either parameters.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"  e.g `mark /name STUDENTNAME | /id STUDENTID` takes in `STUDENTNAME` or `STUDENTID` as its first argument.","lastModifiedDate":"2023-10-04"},{"lineNumber":64,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":65,"author":{"gitId":"anthonytamzil"},"content":"* Items with `â¦â` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"anthonytamzil"},"content":"  e.g. `[t/TAG]â¦â` can be used as many times as desired (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"fuyiqiao"},"content":"### Adding a new contact: `add`","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"fuyiqiao"},"content":"Creates a new contact with the specified name and course code.","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"anthonytamzil"},"content":"![add contact](images/addContact.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"anthonytamzil"},"content":"Format: `add n/STUDENT_NAME p/PHONE_NUMBER e/EMAIL id/STUDENT_ID [t/COURSE_CODE TUTORIAL_GROUP]â¦`","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"fuyiqiao"},"content":"* `STUDENT_NAME` should be a string made up of alphabetical characters, with no numbers or special characters.","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"fuyiqiao"},"content":"* `PHONE_NUMBER` should be a string made up of numbers","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"fuyiqiao"},"content":"* `STUDENT_ID` should be a string made up of alphanumeric characters, with no special characters or space.","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"fuyiqiao"},"content":"* `add n/Fu Yiqiao p/91234567 e/fyq@gmail.com id/A1234567E`","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"fuyiqiao"},"content":"* `add n/Fu Yiqiao p/91234567 e/fyq@gmail.com id/A1234567E t/CS2103T G2`","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"fuyiqiao"},"content":"### Editing a contact : `edit`","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"fuyiqiao"},"content":"Edits the contact details.","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"fuyiqiao"},"content":"![edit contact](images/editContact.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"fuyiqiao"},"content":"Format: `edit INDEX [n/STUDENT_NAME] [p/PHONE] [e/EMAIL] [id/STUDENT_ID] [t/COURSE_CODE TUTORIAL_GROUP]...`","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"fuyiqiao"},"content":"* Edits the person at the specified INDEX. The index refers to the index number shown in the displayed person list. The index must be a positive integer 1, 2, 3, â¦","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"fuyiqiao"},"content":"* You can remove all the personâs tags by typing t/ without specifying any tags after it.","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"fuyiqiao"},"content":"Examples:","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"fuyiqiao"},"content":"*  `edit 1 n/Tan Liyan` Edits the name of the first person to be Tan Liyan.","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"fuyiqiao"},"content":"*  `edit 2 p/92345678 t/` Edits the phone number of the second person and removes all tags.","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"Zjinnnn"},"content":"### Marking attendance of student: `mark`","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":121,"author":{"gitId":"anthonytamzil"},"content":"Format: `mark n/STUDENT_NAME[, STUDENT_NAME]â¦ | id/STUDENT_ID[, STUDENT_ID]â¦ a/ATTENDANCE w/WEEKNUMBER","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"anthonytamzil"},"content":"[r/REASON_OF_ABSENCE]`","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"anthonytamzil"},"content":"* Marks the attendance of one or more student corresponding to the `STUDENT_NAME` or `STUDENT_ID`.","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"anthonytamzil"},"content":"* To mark attendance for multiple students, provide a comma-separated list of `STUDENT_NAME` or `STUDENT_ID`.","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"anthonytamzil"},"content":"* If a student is present, `REASON_OF_ABSENCE` is not required.","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"anthonytamzil"},"content":"* If a student is absent, `REASON_OF_ABSENCE` is mandatory.","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"anthonytamzil"},"content":"* `STUDENT_NAME` should be a string made up of alphabetical characters, with no numbers or special characters.","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"fuyiqiao"},"content":"* `STUDENT_ID` should be a string made up of alphanumeric characters, with no special characters or space.","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"Zjinnnn"},"content":"* `ATTENDANCE` should only be 0 or 1, where 0 indicates student is absent and 1 indicates student is present.","lastModifiedDate":"2023-10-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"anthonytamzil"},"content":"![mark attendance](images/markAttendance.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"anthonytamzil"},"content":"* `mark n/Zong Jin, Fu Yiqiao a/1 w/1` Marks students named, Zong Jin and Fu Yiqiao, as present for the tutorial in Week 1.","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"anthonytamzil"},"content":"* `mark n/Zong Jin a/0 w/1 r/not feeling well` Marks student named, Zong Jin, as absent for the tutorial in Week 1 as he is not feeling well.","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"anthonytamzil"},"content":"* `mark id/A0123456E, A0123457E a/1 w/1` Marks students with student IDs, A0123456E and A0123457E, as present for the tutorial in Week 1.","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"anthonytamzil"},"content":"* `mark id/A0123456E a/0 w/1 r/no valid reason` Marks student with student ID, A0123456E, as absent for the tutorial in Week 1 with no valid reason.","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"ElginTZM"},"content":"### Viewing summary of attendance : `list attendance`","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"ElginTZM"},"content":"Shows a summary of attendance records including list of absentees.","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"anthonytamzil"},"content":"![list attendance](images/listAttendance.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"spatuly"},"content":"Format: `list attendance w/WEEKNUMBER [tg/TUTORIALGROUPID]`","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"spatuly"},"content":"*  Shows a list of absentees and summary of the attendance records of all students or students corresponding to the specified tutorial group for the specified week number.","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"spatuly"},"content":"* `TUTORIALGROUPID` is optional.","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":150,"author":{"gitId":"spatuly"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":151,"author":{"gitId":"spatuly"},"content":"*  `list attendance w/1` Shows a summary of attendance records of all students for Week 1.","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"spatuly"},"content":"*  `list attendance w/3 tg/G01` Shows a summary of attendance records of the students in the tutorial group G01 for Week 3.","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"anthonytamzil"},"content":"### Searching for student\u0027s contact via keyword : `find`","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"anthonytamzil"},"content":"Finds a student\u0027s or multiple students\u0027 contact either via their name or student ID.","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"anthonytamzil"},"content":"![find command](images/findCommand.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":160,"author":{"gitId":"anthonytamzil"},"content":"Format: `find n/STUDENT_NAME [STUDENT_NAME]â¦ | id/STUDENT_ID [STUDENT_ID]â¦`","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"anthonytamzil"},"content":"* `STUDENT_NAME` should be a string made up of alphabetical characters, with no numbers or special characters.","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"anthonytamzil"},"content":"* `STUDENT_ID` should be a string made up of alphabetical characters and numbers, with no special characters or space.","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"anthonytamzil"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":166,"author":{"gitId":"anthonytamzil"},"content":"*  `find n/Anthony Yiqiao` Finds all contacts with the name \"Anthony\" and \"Yiqiao\".","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"anthonytamzil"},"content":"*  `find id/A0123456H` Finds all contacts with the student ID \"A0123456H\".","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"ElginTZM"},"content":"### Listing students : `list students`","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"spatuly"},"content":"Shows a list of students.","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"anthonytamzil"},"content":"![list students](images/listStudents.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"ElginTZM"},"content":"Format: `list students`","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"ElginTZM"},"content":"*  Shows a list of all students.","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"ElginTZM"},"content":"### Adding a filter: `filter add`","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"ElginTZM"},"content":"Shows a list of students from a specified tutorial group","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"anthonytamzil"},"content":"![add filter](images/addFilter.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"spatuly"},"content":"Format: `filter add coursetg/COURSECODE [tg/TUTORIALGROUPID]`","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"ElginTZM"},"content":"* Filters students that are in the tutorial group specified by `TUTORIALGROUPID` or course specified by `COURSECODE`","lastModifiedDate":"2023-10-04"},{"lineNumber":187,"author":{"gitId":"ElginTZM"},"content":"* `COURSECODE` should be a string made up of alphabetical characters and numbers, with no special characters.","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"ElginTZM"},"content":"* `TUTORIALGROUPID` should be a string made up of alphabetical characters and numbers, with no special characters.","lastModifiedDate":"2023-10-04"},{"lineNumber":189,"author":{"gitId":"ElginTZM"},"content":"* `TUTORIALGROUPID` must correspond to an existing tutorial group.","lastModifiedDate":"2023-10-04"},{"lineNumber":190,"author":{"gitId":"ElginTZM"},"content":"* `COURSECODE` must correspond to an existing course.","lastModifiedDate":"2023-10-04"},{"lineNumber":191,"author":{"gitId":"ElginTZM"},"content":"* `COURSECODE` must be specified.","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"ElginTZM"},"content":"* `TUTORIALGROUPID` is optional.","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"spatuly"},"content":"* `filter add coursetg/CS2103T tg/G08` returns a list of students from tutorial group G08 for course CS2103T.","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"ElginTZM"},"content":"* `filter add coursetg/CS2103T` returns a list of students in the course CS2103T.","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"ElginTZM"},"content":"### Removing filters: `filter remove`","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"ElginTZM"},"content":"Removes specified applied filter","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"spatuly"},"content":"Format: `filter remove coursetg/COURSECODE [tg/TUTORIALGROUPID]`","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"ElginTZM"},"content":"* Remove the tutorial group filter specified by `TUTORIALGROUPID` or course filter specified by `COURSECODE`","lastModifiedDate":"2023-10-04"},{"lineNumber":205,"author":{"gitId":"ElginTZM"},"content":"* `COURSECODE` should be a string made up of alphabetical characters and numbers, with no special characters.","lastModifiedDate":"2023-10-04"},{"lineNumber":206,"author":{"gitId":"ElginTZM"},"content":"* `COURSECODE` must correspond to an existing course.","lastModifiedDate":"2023-10-04"},{"lineNumber":207,"author":{"gitId":"ElginTZM"},"content":"* `TUTORIALGROUPID` should be a string made up of alphabetical characters and numbers, with no special characters.","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"ElginTZM"},"content":"* `TUTORIALGROUPID` must correspond to an existing tutorial group.","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"ElginTZM"},"content":"* `COURSECODE` must be specified.","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"ElginTZM"},"content":"* `TUTORIALGROUPID` is optional.","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"spatuly"},"content":"* `filter remove coursetg/CS2103T tg/G08` returns a list of students containing those from tutorial group G08 for course CS2103T.","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"ElginTZM"},"content":"* `filter remove coursetg/CS2103T` returns a list of students containing those in the course CS2103T.","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"ElginTZM"},"content":"### Removing all filters: `filter clear`","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"ElginTZM"},"content":"Removes all applied filters","lastModifiedDate":"2023-10-19"},{"lineNumber":219,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"anthonytamzil"},"content":"![filter clear](images/filterClear.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"ElginTZM"},"content":"Format: `filter clear`","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"ElginTZM"},"content":"Examples:","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"ElginTZM"},"content":"* `filter clear` returns the list of all students","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"anthonytamzil"},"content":"Deletes the specified person from TAvigator.","lastModifiedDate":"2023-10-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"anthonytamzil"},"content":"![delete contact](images/deleteContact.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â¦â","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"spatuly"},"content":"* `list students` followed by `delete 2` deletes the 2nd person in TAvigator.","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"fuyiqiao"},"content":"### Deleting all students : `delete all`","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"spatuly"},"content":"Deletes all students from current address book or the specified tutorial group in the current address book.","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"anthonytamzil"},"content":"![delete all](images/deleteAll.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"spatuly"},"content":"Format: `delete all [tg/TUTORIALGROUPID]`","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"spatuly"},"content":"* Deletes all students or the students from the specified tutorial group.","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"spatuly"},"content":"* `TUTORIALGROUPID` is optional.","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"spatuly"},"content":"Examples:","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"spatuly"},"content":"* `delete all` deletes all students from the current address book.","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"spatuly"},"content":"* `delete all tg/G02` deletes all students from tutorial group G02.","lastModifiedDate":"2023-10-24"},{"lineNumber":257,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"anthonytamzil"},"content":"Clears all entries from the TAvigator.","lastModifiedDate":"2023-10-06"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"anthonytamzil"},"content":"![clear](images/clear.png)","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"anthonytamzil"},"content":"TAvigator data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":278,"author":{"gitId":"anthonytamzil"},"content":"TAvigator data are saved automatically as a JSON file `[JAR file location]/data/tavigator.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-06"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":281,"author":{"gitId":"anthonytamzil"},"content":"If your changes to the data file makes its format invalid, TAvigator will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-06"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"anthonytamzil"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TAvigator home folder.","lastModifiedDate":"2023-10-06"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"fuyiqiao"},"content":"| Action     | Format, Examples                                                                                                                                                            |","lastModifiedDate":"2023-10-17"},{"lineNumber":306,"author":{"gitId":"spatuly"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"anthonytamzil"},"content":"| **Add**    | `add n/STUDENT_NAME p/PHONE_NUMBER e/EMAIL id/STUDENT_ID [t/COURSE_CODE TUTORIAL_GROUP]â¦` \u003cbr\u003e e.g., `add n/Fu Yiqiao p/91234567 e/fyq@gmail.com id/A1234567E t/CS2103T G2` |","lastModifiedDate":"2023-10-24"},{"lineNumber":308,"author":{"gitId":"fuyiqiao"},"content":"| **Clear**  | `clear`                                                                                                                                                                     |","lastModifiedDate":"2023-10-17"},{"lineNumber":309,"author":{"gitId":"spatuly"},"content":"| **Delete** | `delete all [tg/TUTORIALGROUPID]` `delete INDEX` \u003cbr\u003e e.g., `delete all tg/G10` `delete 3`                                                                                  |","lastModifiedDate":"2023-10-23"},{"lineNumber":310,"author":{"gitId":"anthonytamzil"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [id/STUDENT_ID] [t/COURSECODE TUTORIALGROUPID]...`\u003cbr\u003e e.g., `edit 1 n/Tan Liyan` `edit 2 p/92345678 t/`                           |","lastModifiedDate":"2023-10-24"},{"lineNumber":311,"author":{"gitId":"anthonytamzil"},"content":"| **Exit**   | `exit`                                                                                                                                                                      |","lastModifiedDate":"2023-10-24"},{"lineNumber":312,"author":{"gitId":"anthonytamzil"},"content":"| **Filter** | `filter [add/delete/clear] [coursetg/COURSECODE] [tg/TUTORIALGROUPID]`                                                                                                      |","lastModifiedDate":"2023-10-24"},{"lineNumber":313,"author":{"gitId":"anthonytamzil"},"content":"| **Find**   | `find n/STUDENT_NAME [STUDENT_NAME]â¦ \\                                                                                                                                      | id/STUDENT_ID [STUDENT_ID]â¦`\u003cbr\u003e e.g., `find n/Anthony Yiqiao`                                                                                                          |","lastModifiedDate":"2023-10-24"},{"lineNumber":314,"author":{"gitId":"spatuly"},"content":"| **List**   | `list attendance w/WEEKNUMBER [tg/TUTORIALGROUPID]` `list students`                                                                                                         |                                                           |","lastModifiedDate":"2023-10-25"},{"lineNumber":315,"author":{"gitId":"fuyiqiao"},"content":"| **Help**   | `help`                                                                                                                                                                      |","lastModifiedDate":"2023-10-17"},{"lineNumber":316,"author":{"gitId":"anthonytamzil"},"content":"| **Mark**   | `mark n/STUDENT_NAME[, STUDENT_NAME]â¦ \\                                                                                                                                     | id/STUDENT_ID[, STUDENT_ID]â¦ a/ATTENDANCE w/WEEKNUMBER [r/REASON_OF_ABSENCE]`\u003cbr/\u003e e.g., `mark id/A0123456E, A0123457E a/1 w/1` `mark id/A0123456E, A0123457E a/1 w/1` |","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"fuyiqiao":40,"ElginTZM":34,"spatuly":30,"anthonytamzil":58,"Zjinnnn":6,"-":148}},{"path":"docs/diagrams/ListAttendanceSeqDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"participant \":ListCommandParser\" as ListCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"participant \"la:ListAttendanceCommand\" as ListAttendanceCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"[-\u003e LogicManager : execute(\"list attendance w/1 tg/G2\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"list attendance w/1 tg/G2\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"create ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"AddressBookParser -\u003e ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"activate ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"ListCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"deactivate ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"AddressBookParser -\u003e ListCommandParser : parse(\"attendance w/1 tg/G2\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"activate ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"create ListAttendanceCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"ListCommandParser -\u003e ListAttendanceCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"activate ListAttendanceCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"ListAttendanceCommand --\u003e ListCommandParser : la","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"deactivate ListAttendanceCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"ListCommandParser --\u003e AddressBookParser : la","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"deactivate ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"ListCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"destroy ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"AddressBookParser --\u003e LogicManager : la","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"LogicManager -\u003e ListAttendanceCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"activate ListAttendanceCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"ListAttendanceCommand -\u003e Model : addFilter(tutorialPredicate(G2))","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"ListAttendanceCommand -\u003e ListAttendanceCommand : getUnmarkedPersons()","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"ListAttendanceCommand -\u003e Model : addFilter(absencePredicate(1))","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"ListAttendanceCommand -\u003e ListAttendanceCommand : getAttendanceSummary()","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"Model --\u003e ListAttendanceCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"ListAttendanceCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"CommandResult --\u003e ListAttendanceCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"ListAttendanceCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"deactivate ListAttendanceCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"spatuly":76}},{"path":"docs/diagrams/ListCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"Class \"{abstract}\\nListCommand\" as ListCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"Command \u003c|-- ListCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"ListCommand \u003c|-- ListAttendanceCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"ListCommand \u003c|-- ListStudentsCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"spatuly":14}},{"path":"docs/diagrams/ListStudentsSeqDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"participant \":ListCommandParser\" as ListCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"participant \"ls:ListStudentsCommand\" as ListStudentsCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"[-\u003e LogicManager : execute(\"list students\")","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"list students\")","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"create ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"AddressBookParser -\u003e ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"activate ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"ListCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"deactivate ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"AddressBookParser -\u003e ListCommandParser : parse(\"students\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"activate ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"create ListStudentsCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"ListCommandParser -\u003e ListStudentsCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"activate ListStudentsCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"ListStudentsCommand --\u003e ListCommandParser : ls","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"deactivate ListStudentsCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"ListCommandParser --\u003e AddressBookParser : ls","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"deactivate ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"ListCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"destroy ListCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"AddressBookParser --\u003e LogicManager : ls","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"LogicManager -\u003e ListStudentsCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"activate ListStudentsCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"ListStudentsCommand -\u003e Model : clearFilters()","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"Model --\u003e ListStudentsCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"ListStudentsCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"CommandResult --\u003e ListStudentsCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"ListStudentsCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"deactivate ListStudentsCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"spatuly":70}},{"path":"docs/diagrams/MarkAttendanceCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":":User enters mark attendance command;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":":Parse user input;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"if (Is input valid?) then ([yes])","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"  :Create MarkAttendanceCommand object;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"  if (Does attendance for the week exist?) then ([yes])","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"    :Update existing attendance record;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"  else ([no])","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"    :Add new attendance record;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"  endif","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"else ([no])","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"  :Show error message;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"endif","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Zjinnnn":16}},{"path":"docs/team/anthonytamzil.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"title: Anthony\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"### Project: TAvigator","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"TAs sometimes have many tutorial groups to manage, it could be chaotic to manage the attendance and work submission of","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"each individual student. TAvigator aims to provide a one-stop platform for National University of Singapore","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"Computer Science modulesâ Teaching Assistants (TAs) to keep track of the work submission and attendance of each student","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"via a contact management application.","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003danthonytamzil\u0026tabRepo\u003dAY2324S1-CS2103T-T09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"* **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"  * User Guide: to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"  * Developer Guide: to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"* **Review / mentoring contributions**: to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"* **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"anthonytamzil":25}},{"path":"docs/team/elgintzm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"title: Elgin\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"### Project: TAvigator","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"**TAvigator** aims to provide a one-stop platform for tutors to keep track of the work submission and attendance of each student via a contact management application. Allowing tutors to manage their tutorial groups with ease, from marking attendance to tracking individual work submissions.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"* **New Feature**: To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dElginTZM\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"  * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"  * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"  * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"  * To be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"ElginTZM":29}},{"path":"docs/team/fuyiqiao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"fuyiqiao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"fuyiqiao"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"fuyiqiao"},"content":"title: Yiqiao\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"fuyiqiao"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"fuyiqiao"},"content":"### Project: TAvigator","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"fuyiqiao"},"content":"TAs sometimes have many tutorial groups to manage, it could be chaotic to manage the attendance and work submission of","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"fuyiqiao"},"content":"each individual student. TAvigator aims to provide a one-stop platform for National University of Singapore","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"fuyiqiao"},"content":"Computer Science modulesâ Teaching Assistants (TAs) to keep track of the work submission and attendance of each student","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"fuyiqiao"},"content":"via a contact management application.","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"fuyiqiao"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"fuyiqiao"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"fuyiqiao"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003danthonytamzil\u0026tabRepo\u003dAY2324S1-CS2103T-T09-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"fuyiqiao"},"content":"* **Contributions to team-based tasks**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"fuyiqiao"},"content":"* **Enhancements to existing features**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"fuyiqiao"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"fuyiqiao"},"content":"    * User Guide: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"fuyiqiao"},"content":"    * Developer Guide: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"fuyiqiao"},"content":"* **Review / mentoring contributions**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"fuyiqiao"},"content":"* **Contributions beyond the project team**: to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"fuyiqiao":24}},{"path":"docs/team/spatuly.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"title: Liyan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"### Project: TAvigator","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"TAvigators is a desktop address book application used by tutors to keep track of students\u0027 work submission and attendance. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about (TBA) kLoC.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"* **Code contributed**: [RepoSense](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"        * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"        * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"spatuly":30}},{"path":"docs/team/zjinnnn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"title: Zong Jin\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"# Project: TAvigator","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"### Overview","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"**TAvigator**Â streamlines the teaching process for TAs around the world. Our software understands the various roles a TA has to play, from meticulous record-keeping to fostering connections with students.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"Tavigator is optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TAvigator can get your lesson management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"    * What it does:","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"    * Justification:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"    * Highlights:","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"    * Credits:","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dZjinnnn\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"    * User Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"        * To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"        * To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"* PRs reviewed (with non-trivial review comments): To be added","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"* Contributed to forum discussions (examples: To be added)","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"* Reported bugs and suggestions for other teams in the class (examples: To be added)","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"* Some parts of the history feature I added was adopted by several other class mates (To be added)","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Zjinnnn":45}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâââ`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâll assume that you have already set up the development environment as outlined in the Developerâs Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Letâs start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâs keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâs change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâs change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâs change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now letâs move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâs take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâs find out what we need to do in order to obtain the Index and String that we need. Letâs look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâs input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Donât forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, letâs lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the personâs name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Letâs change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, letâs go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donât worryâââwe will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"Thatâs it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external libraryâââJackson. Letâs update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"ElginTZM"},"content":":exclamation: You must delete AddressBookâs storage file located at `/data/tavigator.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-10-19"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâââwe went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donât slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Letâs verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Letâs create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, letâs change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Letâs use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"ElginTZM":1,"-":398}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"        Optional\u003cAddressBookManager\u003e addressBookManagerOptional;","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager initialData;","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"ElginTZM"},"content":"            addressBookManagerOptional \u003d storage.readAddressBooks();","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"ElginTZM"},"content":"            if (!addressBookManagerOptional.isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"            initialData \u003d addressBookManagerOptional.orElseGet(SampleDataUtil::getSampleAddressBookManager);","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":91,"author":{"gitId":"ElginTZM"},"content":"            initialData \u003d new AddressBookManager();","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ElginTZM":9,"-":178}},{"path":"src/main/java/seedu/address/commons/core/FilterSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.SerializablePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":" * A Serializable class that contains the filter settings.","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":" * Guarantees: immutable.","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"public class FilterSettings implements Serializable {","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"    private static final HashSet\u003cSerializablePredicate\u003e DEFAULT_FILTERS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"    private final HashSet\u003cSerializablePredicate\u003e filters;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"     * Constructs a {@code FilterSettings} with the default filter.","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"    public FilterSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"        this.filters \u003d DEFAULT_FILTERS;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"     * Constructs a {@code FilterSettings} with the specified filter.","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"    public FilterSettings(HashSet\u003cSerializablePredicate\u003e filters) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"        HashSet\u003cSerializablePredicate\u003e clonedFilter \u003d (HashSet\u003cSerializablePredicate\u003e) filters.clone();","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"        this.filters \u003d clonedFilter;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"    public HashSet\u003cSerializablePredicate\u003e getFilters() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"        HashSet\u003cSerializablePredicate\u003e filters \u003d (HashSet\u003cSerializablePredicate\u003e) this.filters.clone();","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"        return filters;","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"    public Predicate\u003cPerson\u003e getComposedFilter() {","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"        SerializablePredicate composedFilter \u003d new SerializablePredicate(unused -\u003e true);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        for (SerializablePredicate predicate : filters) {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"            composedFilter \u003d composedFilter.and(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"        return composedFilter.getPredicate();","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"        if (!(other instanceof FilterSettings)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"        FilterSettings otherFilterSettings \u003d (FilterSettings) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"        return filters.equals(otherFilterSettings.filters);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"        return Objects.hash(filters);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"    public String toString() {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"                .add(\"filters\", filters)","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"                .toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ElginTZM":79}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    public static Index create(@JsonProperty(\"zeroBasedIndex\") int zeroBasedIndex) {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ElginTZM":8,"-":69}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import javafx.beans.value.ObservableStringValue;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.core.FilterSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"    /** Returns an unmodifiable view of the unfiltered list of persons */","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"    ObservableList\u003cPerson\u003e getUnfilteredPersonList();","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"     * Returns the user prefs\u0027 filter settings.","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"    FilterSettings getFilterSettings();","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"     * Sets the user prefs\u0027 filter settings.","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"    void setFilterSettings(FilterSettings filterSettings);","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"     * Returns the user course list.","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    ObservableList\u003cString\u003e getCourseList();","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"     * Returns the selected course.","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"    ObservableStringValue getObservableCourseCode();","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"     * Sets the active address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"    void setActiveAddressBook(String courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ElginTZM":30,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import javafx.beans.value.ObservableStringValue;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.core.FilterSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"            storage.saveAddressBooks(model.getAddressBookManager());","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"    public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"        return model.getUnfilteredPersonList();","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"ElginTZM"},"content":"    public FilterSettings getFilterSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"ElginTZM"},"content":"        return model.getFilterSettings();","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"ElginTZM"},"content":"    public void setFilterSettings(FilterSettings filterSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"ElginTZM"},"content":"        model.setFilterSettings(filterSettings);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"ElginTZM"},"content":"    public ObservableList\u003cString\u003e getCourseList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"ElginTZM"},"content":"        return model.getCourseList();","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"ElginTZM"},"content":"    public ObservableStringValue getObservableCourseCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"ElginTZM"},"content":"        return model.getObservableCourseCode();","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"ElginTZM"},"content":"    public void setActiveAddressBook(String courseCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"ElginTZM"},"content":"        model.setActiveAddressBook(courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ElginTZM":33,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_ATTENDANCE_SUMMARY_WITH_TAG \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"            \"%1$d of %2$d students present for Week %3$d from %4$s!\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_ATTENDANCE_SUMMARY_NO_TAG \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"            \"%1$d of %2$d students present for Week %3$d!\\n\";","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"spatuly":5,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"fuyiqiao"},"content":"            + PREFIX_ID + \"STUDENT_ID \"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"fuyiqiao"},"content":"            + PREFIX_NAME + \"Fu Yiqiao \"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"fuyiqiao"},"content":"            + PREFIX_EMAIL + \"fyq@example.com \"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"            + PREFIX_ID + \" A1234567M \"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"            + PREFIX_TAG + \"CS2103T G2\";","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fuyiqiao":3,"ElginTZM":3,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"        model.setAddressBook(new AddressBook(model.getAddressBook().getCourseCode()));","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElginTZM":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CourseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSETUTORIAL;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.parser.ParserUtil.CourseOperation;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":" * Adds, deletes or clears filters.","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"public class CourseCommand extends Command {","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"    public static final String COMMAND_WORD \u003d \"course\";","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"            + \": Create, delete or switch address books\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"            + \"Parameters: OPERATION (either create, delete or switch) \\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"            + PREFIX_COURSETUTORIAL + \"COURSE_CODE \\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"            + \"add \"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"            + PREFIX_COURSETUTORIAL + \"CS2103T \";","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"    public static final String MESSAGE_CREATE_SUCCESS \u003d \"Created %1$s address book.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    public static final String MESSAGE_DELETE_SUCCESS \u003d \"Deleted %1$s address book.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"    public static final String MESSAGE_SWITCH_SUCCESS \u003d \"Switched to %1$s address book.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    public static final String MESSAGE_INVALID_OPERATION_FAILURE \u003d \"Invalid course operation\";","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"    public static final String MESSAGE_CREATE_DUPLICATE_FAILURE \u003d \"%1$s address book exists\";","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"    public static final String MESSAGE_NO_EXIST_FAILURE \u003d \"%1$s address book does not exist\";","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"    private final CourseOperation operation;","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    private final String courseCode;","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"     * Creates an FilterCommand to add, delete or clear the filter based on {@code FilterOperation}","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"     * and {@code Optional\u003cString\u003e course} and {@code Optional\u003cString\u003e tutorial}","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"    public CourseCommand(CourseOperation operation, String courseCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(operation);","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"        this.operation \u003d operation;","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        this.courseCode \u003d courseCode;","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"    private CommandResult addAddressBookHelper(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"        if (model.hasAddressBook(courseCode)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"            throw new CommandException(String.format(MESSAGE_CREATE_DUPLICATE_FAILURE, courseCode));","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"        model.addAddressBook(new AddressBook(courseCode));","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"        return new CommandResult(String.format(MESSAGE_CREATE_SUCCESS, courseCode));","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"    private CommandResult deleteAddressBookHelper(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        if (!model.hasAddressBook(courseCode)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"            throw new CommandException(String.format(MESSAGE_NO_EXIST_FAILURE, courseCode));","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"        model.deleteAddressBook(courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SUCCESS, courseCode));","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"    private CommandResult changeAddressBookHelper(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"        if (!model.hasAddressBook(courseCode)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"            throw new CommandException(String.format(MESSAGE_NO_EXIST_FAILURE, courseCode));","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"        model.setActiveAddressBook(courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"        return new CommandResult(String.format(MESSAGE_SWITCH_SUCCESS, courseCode));","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"ElginTZM"},"content":"        if (operation \u003d\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"ElginTZM"},"content":"            throw new CommandException(MESSAGE_INVALID_OPERATION_FAILURE);","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"ElginTZM"},"content":"        switch (operation) {","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"ElginTZM"},"content":"        case CREATE:","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"            return addAddressBookHelper(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"        case DELETE:","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"ElginTZM"},"content":"            return deleteAddressBookHelper(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"ElginTZM"},"content":"        case SWITCH:","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"ElginTZM"},"content":"            return changeAddressBookHelper(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"ElginTZM"},"content":"        default:","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"ElginTZM"},"content":"            throw new CommandException(MESSAGE_INVALID_OPERATION_FAILURE);","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"ElginTZM"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"ElginTZM"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"ElginTZM"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"ElginTZM"},"content":"        if (!(other instanceof CourseCommand)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"ElginTZM"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"ElginTZM"},"content":"        CourseCommand e \u003d (CourseCommand) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"ElginTZM"},"content":"        return operation.equals(e.operation)","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"ElginTZM"},"content":"                \u0026\u0026 courseCode.equals(e.courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ElginTZM":111}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTORIALGROUP;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.predicate.ContainsTagPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"            + \": Deletes the student identified by the index number used in the displayed person list,\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"            + \" all students identified by the tutorial group ID entered or all students.\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"            + \"Parameters: INDEX (must be a positive integer) || \"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"            + \"all [\" + PREFIX_TUTORIALGROUP + \"TUTORIAL_GROUP_ID]\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"            + \"Examples: \" + COMMAND_WORD + \" 1, \" + COMMAND_WORD + \" all, \"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"            + COMMAND_WORD + \" all \" + PREFIX_TUTORIALGROUP + \"G01\";","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_DELETE_TAGGED_SUCCESS \u003d \"Deleted all contacts from Tutorial Group %1$s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_DELETE_NO_TAG_SUCCESS \u003d \"Deleted all contacts\";","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    private final Optional\u003cTag\u003e tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"    private final ContainsTagPredicate tagPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"     * @param targetIndex Index number used in the displayed person list of the target","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"        this.tag \u003d null;","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"        this.tagPredicate \u003d null;","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"     * @param tag Course and tutorial groups to delete all students from","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"     * @param tagPredicate Predicate used to filter for students in the course and tutorial group","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"    public DeleteCommand(Optional\u003cTag\u003e tag, ContainsTagPredicate tagPredicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"        if (!(targetIndex \u003d\u003d null)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"        if (tag.isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"            model.addFilter(tagPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"        List\u003cPerson\u003e toDeleteList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"        List\u003cPerson\u003e copyDeleteList \u003d new ArrayList\u003c\u003e(toDeleteList);","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"        for (Person p : copyDeleteList) {","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"            model.deletePerson(p);","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"        model.clearFilters();","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"spatuly"},"content":"        return tag.isPresent()","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"                ? new CommandResult(String.format(MESSAGE_DELETE_TAGGED_SUCCESS, tag.get().getTagName()))","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"                : new CommandResult(String.format(MESSAGE_DELETE_NO_TAG_SUCCESS));","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"        if (tag \u003d\u003d null \u0026\u0026 otherDeleteCommand.tag \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"        return tag.equals(otherDeleteCommand.tag);","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"spatuly":48,"-":72}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"            + \"[\" + PREFIX_ID + \"ID] \"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"        // TODO: Revise if this is intended behaviour","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"        model.clearFilters();","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"Zjinnnn"},"content":"        ID updatedId \u003d editPersonDescriptor.getId().orElse(personToEdit.getId());","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"anthonytamzil"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedId, updatedTags);","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"Zjinnnn"},"content":"        private ID id;","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"Zjinnnn"},"content":"            setId(toCopy.id);","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"anthonytamzil"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, id, tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"Zjinnnn"},"content":"        public void setId(ID id) {","lastModifiedDate":"2023-10-11"},{"lineNumber":188,"author":{"gitId":"Zjinnnn"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-10-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":191,"author":{"gitId":"Zjinnnn"},"content":"        public Optional\u003cID\u003e getId() {","lastModifiedDate":"2023-10-11"},{"lineNumber":192,"author":{"gitId":"Zjinnnn"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2023-10-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"Zjinnnn"},"content":"                    \u0026\u0026 Objects.equals(id, otherEditPersonDescriptor.id)","lastModifiedDate":"2023-10-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"ElginTZM":2,"anthonytamzil":2,"Zjinnnn":11,"-":226}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.SerializablePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":" * Finds and lists all student in contact list whose name or ID contains any of the argument keywords.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names or IDs contain any of \"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"            + \"Parameters: \" + PREFIX_NAME + \" STUDENT_NAME | \" + PREFIX_ID + \" STUDENT_ID\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \" Anthony\";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"    private final SerializablePredicate predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"    public FindCommand(SerializablePredicate predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        model.clearFilters();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"        model.addFilter(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ElginTZM":5,"anthonytamzil":6,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/ListAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTORIALGROUP;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.AbsentFromTutorialPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.ContainsTagPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"public class ListAttendanceCommand extends ListCommand {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"    public static final String COMMAND_WORD \u003d \"attendance\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_USAGE \u003d \"list \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"            + \": Lists summary of attendance and absent students.\\n\"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"            + PREFIX_WEEK + \"WEEK_NUMBER \"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"            + \"[\" + PREFIX_TUTORIALGROUP + \"TUTORIAL_GROUP_ID]\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"            + \"Example: list \" + COMMAND_WORD + \" w/3 \" + \"tg/G02\";","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all absent students:\";","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_INCOMPLETE_ATTENDANCE \u003d \"Unable to show summary: \"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"            + \"Attendance records are incomplete for week %d.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_NO_STUDENTS \u003d \"There are no students in tutorial group %s!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"    private final Week week;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"    private final AbsentFromTutorialPredicate absencePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    private final Optional\u003cTag\u003e tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"    private final ContainsTagPredicate tutorialPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"     * @param tag               Tutorial group to list","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"     * @param week              Tutorial number to list","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"     * @param tutorialPredicate Predicate used to filter for students in the tutorial group","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"     * @param absencePredicate  Predicate used to filter for students absent","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"    public ListAttendanceCommand(Optional\u003cTag\u003e tag, Week week,","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"                                 ContainsTagPredicate tutorialPredicate,","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"                                 AbsentFromTutorialPredicate absencePredicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"        requireNonNull(week);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"        this.week \u003d week;","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"        this.absencePredicate \u003d absencePredicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"        this.tutorialPredicate \u003d tutorialPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"     * Returns string containing summary of attendance.","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"     * @param isWithTag If there is a tag entered","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"     * @param numberOfPresentees Number of students who were present","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"     * @param numberOfStudents Number of students in total or in tutorial group","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"    public String getAttendanceSummary(boolean isWithTag, int numberOfPresentees, int numberOfStudents) {","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"        return isWithTag","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"                ? String.format(Messages.MESSAGE_ATTENDANCE_SUMMARY_WITH_TAG, numberOfPresentees, numberOfStudents,","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"                        week.getWeekNumber(), tag.get().getTagName())","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"                : String.format(Messages.MESSAGE_ATTENDANCE_SUMMARY_NO_TAG, numberOfPresentees, numberOfStudents,","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"                        week.getWeekNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"    public ArrayList\u003cPerson\u003e getUnmarkedPersons(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"        ArrayList\u003cPerson\u003e unmarkedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"        for (Person p : personList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"            if (!p.getAttendanceRecords().stream().anyMatch(atd -\u003e atd.getWeek().equals(week))) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"                unmarkedPersons.add(p);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"        return unmarkedPersons;","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"ElginTZM"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"ElginTZM"},"content":"        if (!(other instanceof ListAttendanceCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"ElginTZM"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"ElginTZM"},"content":"        ListAttendanceCommand otherListAttendanceCommand \u003d (ListAttendanceCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"spatuly"},"content":"        return tag.equals(otherListAttendanceCommand.tag) \u0026\u0026 week.equals(otherListAttendanceCommand.week);","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"        boolean isWithTag \u003d false;","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"ElginTZM"},"content":"        int numberOfStudents \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"        if (tag.isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"            model.addFilter(tutorialPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"            isWithTag \u003d true;","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"ElginTZM"},"content":"            numberOfStudents \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"            if (numberOfStudents \u003d\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"                return new CommandResult(String.format(MESSAGE_NO_STUDENTS, tag.get().getTagName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"        ArrayList\u003cPerson\u003e unmarkedPersons \u003d getUnmarkedPersons(model.getFilteredPersonList());","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"        if (!unmarkedPersons.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"            String nameList \u003d unmarkedPersons.stream().map(person -\u003e person.getName().toString())","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"spatuly"},"content":"                    .collect(Collectors.joining(\", \"));","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"            return new CommandResult(String.format(MESSAGE_INCOMPLETE_ATTENDANCE, week.getWeekNumber())","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"                    + \"\\n\" + \"Students with unmarked attendance: \" + nameList);","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"ElginTZM"},"content":"        model.addFilter(absencePredicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"spatuly"},"content":"        int numberOfAbsentees \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"spatuly"},"content":"        int numberOfPresentees \u003d numberOfStudents - numberOfAbsentees;","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"spatuly"},"content":"        String attendanceSummary \u003d getAttendanceSummary(isWithTag, numberOfPresentees, numberOfStudents);","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"ElginTZM"},"content":"        return new CommandResult(attendanceSummary + MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ElginTZM":28,"spatuly":104}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTORIALGROUP;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"public abstract class ListCommand extends Command {","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"            + \": Lists either students or attendance.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"            + \"LIST_TYPE (must be either \u0027students\u0027 or \u0027attendance\u0027)\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"            + \"(applicable for list attendance only): \"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"            + PREFIX_WEEK + \"WEEK_NUMBER \"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"            + \"[\" + PREFIX_TUTORIALGROUP + \"TUTORIAL_GROUP_ID]\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"            + \"Example: \"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"            + COMMAND_WORD + \" students, \"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"            + COMMAND_WORD + \" attendance w/1 tg/G01\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"spatuly":15,"-":13}},{"path":"src/main/java/seedu/address/logic/commands/ListStudentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"public class ListStudentsCommand extends ListCommand {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"    public static final String COMMAND_WORD \u003d \"students\";","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_USAGE \u003d \"list \" + COMMAND_WORD","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"            + \": Lists all students.\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"            + \"Example: list \" + COMMAND_WORD;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students!\";","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"        return other instanceof ListStudentsCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"        model.clearFilters();","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ElginTZM":6,"spatuly":23}},{"path":"src/main/java/seedu/address/logic/commands/MarkAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REASON;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":" * Represents a command to mark the attendance of a student.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"public class MarkAttendanceCommand extends Command {","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the attendance of a student.\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"            + PREFIX_NAME + \" STUDENT_NAME | \" + PREFIX_ID + \" STUDENT_ID \"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"            + PREFIX_ATTENDANCE + \" ATTENDANCE \"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"            + PREFIX_WEEK + \" WEEK_NUMBER \"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"            + \"[\" + PREFIX_REASON + \" REASON_OF_ABSENCE]\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \" Zong Jin \" + PREFIX_ATTENDANCE + \" 1 \"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"            + PREFIX_WEEK + \" 1\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \" Zong Jin \" + PREFIX_ATTENDANCE + \" 0 \"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"            + PREFIX_WEEK + \" 2 \" + PREFIX_REASON + \" Took a MC\\n\";","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Attendance marked for person: \";","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"    public static final String MESSAGE_ABSENT \u003d \" is absent for week \";","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"    public static final String MESSAGE_PRESENT \u003d \" is present for week \";","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"    public static final String MESSAGE_UPDATED_SUCCESS \u003d \"Attendance updated for person: \";","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"Person not found.\";","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"    private final List\u003cString\u003e identifiers; // This can be either studentName or studentID","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"    private final boolean isPresent;","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"    private final Week week;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"    private final String reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"     * Constructs a MarkAttendanceCommand to mark the specified student\u0027s attendance as absent.","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"     * @param identifiers The student\u0027s name or ID.","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"     * @param isPresent The attendance status.","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"     * @param week The week of the attendance.","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"     * @param reason The reason why the student is absent.","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"    public MarkAttendanceCommand(List\u003cString\u003e identifiers, boolean isPresent, Week week, String reason) {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"anthonytamzil"},"content":"        this.identifiers \u003d identifiers;","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"anthonytamzil"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"anthonytamzil"},"content":"        this.week \u003d week;","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"Zjinnnn"},"content":"        StringBuilder successMessage \u003d new StringBuilder();","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"Zjinnnn"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance;","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"Zjinnnn"},"content":"        for (String identifier : identifiers) {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"Zjinnnn"},"content":"            Person targetPerson \u003d lastShownList.stream()","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"                    .filter(person -\u003e person.getName().fullName.equals(identifier) || person.getId().value.equals(","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"Zjinnnn"},"content":"                            identifier))","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"Zjinnnn"},"content":"                    .findFirst()","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"Zjinnnn"},"content":"                    .orElse(null);","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"Zjinnnn"},"content":"            if (targetPerson \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"Zjinnnn"},"content":"                throw new CommandException(MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"anthonytamzil"},"content":"            Optional\u003cAttendance\u003e existingAttendance \u003d targetPerson.getAttendanceForSpecifiedWeek(week);","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"Zjinnnn"},"content":"            if (existingAttendance.isPresent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"Zjinnnn"},"content":"                // Modify the existing attendance record","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"anthonytamzil"},"content":"                attendance \u003d existingAttendance.get();","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"Zjinnnn"},"content":"                attendance.setAttendance(isPresent);","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"anthonytamzil"},"content":"                if (isPresent) {","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"anthonytamzil"},"content":"                    successMessage.append(String.format(MESSAGE_UPDATED_SUCCESS + \"%s\\n%s\" + MESSAGE_PRESENT + \"%d\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"anthonytamzil"},"content":"                            targetPerson.getName(), targetPerson.getName(), week.getWeekNumber()));","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"anthonytamzil"},"content":"                } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"anthonytamzil"},"content":"                    attendance.setReason(this.reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"anthonytamzil"},"content":"                    successMessage.append(String.format(MESSAGE_UPDATED_SUCCESS + \"%s\\n%s\" + MESSAGE_ABSENT + \"%d\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"anthonytamzil"},"content":"                            + \"Reason: %s\\n\", targetPerson.getName(), targetPerson.getName(), week.getWeekNumber(),","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"anthonytamzil"},"content":"                            reason));","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"anthonytamzil"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"Zjinnnn"},"content":"            } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"Zjinnnn"},"content":"                // Add a new attendance record for the current week","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"anthonytamzil"},"content":"                if (isPresent) {","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"anthonytamzil"},"content":"                    attendance \u003d new Attendance(week, true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"anthonytamzil"},"content":"                } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"anthonytamzil"},"content":"                    attendance \u003d new Attendance(week, false, reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"anthonytamzil"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"anthonytamzil"},"content":"                targetPerson.addAttendance(attendance);","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"anthonytamzil"},"content":"                if (attendance.isPresent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"anthonytamzil"},"content":"                    successMessage.append(String.format(MESSAGE_SUCCESS + \"%s\\n%s\" + MESSAGE_PRESENT + \"%d\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"anthonytamzil"},"content":"                            targetPerson.getName(), targetPerson.getName(), attendance.getWeek().getWeekNumber()));","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"anthonytamzil"},"content":"                } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"anthonytamzil"},"content":"                    successMessage.append(String.format(MESSAGE_SUCCESS + \"%s\\n%s\" + MESSAGE_ABSENT","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"anthonytamzil"},"content":"                                    + \"%d\\nReason: %s\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"anthonytamzil"},"content":"                            targetPerson.getName(), targetPerson.getName(), attendance.getWeek().getWeekNumber(),","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"anthonytamzil"},"content":"                            attendance.getReason()));","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"anthonytamzil"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"spatuly"},"content":"        // Allows marked attendance to be shown immediately, but breaks all MarkAttendanceCommandTests","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"spatuly"},"content":"        // ArrayList\u003cPerson\u003e copyList \u003d new ArrayList\u003c\u003e(lastShownList);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"spatuly"},"content":"        // model.addFilter(new SerializablePredicate(person -\u003e copyList.contains(person)));","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Zjinnnn"},"content":"        return new CommandResult(successMessage.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"Zjinnnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"Zjinnnn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"Zjinnnn"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"Zjinnnn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"Zjinnnn"},"content":"        if (!(other instanceof MarkAttendanceCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Zjinnnn"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"Zjinnnn"},"content":"        MarkAttendanceCommand otherMarkAttendanceCommand \u003d (MarkAttendanceCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"Zjinnnn"},"content":"        return identifiers.equals(otherMarkAttendanceCommand.identifiers)","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"Zjinnnn"},"content":"                \u0026\u0026 isPresent \u003d\u003d otherMarkAttendanceCommand.isPresent","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"anthonytamzil"},"content":"                \u0026\u0026 week.equals(otherMarkAttendanceCommand.week);","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"spatuly":4,"anthonytamzil":62,"Zjinnnn":72}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":" * Represents command to view full detailed attendance record of a student.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows student\u0027s attendance record in detail.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"    public static final String MESSAGE_NO_ATTENDANCE_RECORD \u003d \" has no attendance records.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"    public static final String MESSAGE_HEADER \u003d \"\u0027s attendance records\\n\";","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"     * @param targetIndex Index number used in the displayed person list of the target","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"        StringBuilder attendanceRecordString \u003d new StringBuilder();","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"        if (targetIndex \u003d\u003d null || targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"        List\u003cAttendance\u003e personAttendanceRecord \u003d personToView.getAttendanceRecords();","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"        if (personAttendanceRecord.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"            return new CommandResult(personToView.getName() + MESSAGE_NO_ATTENDANCE_RECORD);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"anthonytamzil"},"content":"        attendanceRecordString.append(personToView.getName() + MESSAGE_HEADER);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"        for (Attendance record : personAttendanceRecord) {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"anthonytamzil"},"content":"            String attendanceStatus \u003d record.isPresent()","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"anthonytamzil"},"content":"                    ? \"Present\"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"anthonytamzil"},"content":"                    : \"Absent - \" + record.getReason();","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"anthonytamzil"},"content":"            attendanceRecordString.append(\"Week \" + record.getWeek() + \" : \" + attendanceStatus + \"\\n\");","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"anthonytamzil"},"content":"        return new CommandResult(attendanceRecordString.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"anthonytamzil"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"anthonytamzil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"anthonytamzil"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"anthonytamzil"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"anthonytamzil"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"anthonytamzil"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"anthonytamzil"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"anthonytamzil"},"content":"        return otherViewCommand.targetIndex.equals(this.targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"anthonytamzil":80}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ID)","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ID);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"        ID id \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"        Person person \u003d new Person(name, phone, email, id, tagList);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"anthonytamzil":4,"Zjinnnn":3,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.commands.CourseCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"Zjinnnn"},"content":"        case MarkAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"Zjinnnn"},"content":"            return new MarkAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"        case CourseCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"            return new CourseCommandParser().parse(arguments);","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"anthonytamzil"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"anthonytamzil"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ElginTZM":4,"spatuly":1,"anthonytamzil":4,"Zjinnnn":3,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"fuyiqiao"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"    public static final Prefix PREFIX_COURSETUTORIAL \u003d new Prefix(\"coursetg/\");","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    public static final Prefix PREFIX_TUTORIALGROUP \u003d new Prefix(\"tg/\");","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"    public static final Prefix PREFIX_ATTENDANCE \u003d new Prefix(\"a/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"    public static final Prefix PREFIX_WEEK \u003d new Prefix(\"w/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"    public static final Prefix PREFIX_REASON \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"fuyiqiao":1,"spatuly":2,"anthonytamzil":3,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/CourseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COURSETUTORIAL;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.commands.CourseCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.parser.ParserUtil.CourseOperation;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"public class CourseCommandParser implements Parser\u003cCourseCommand\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"     * and returns an FilterCommand object for execution.","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"    public CourseCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_COURSETUTORIAL);","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"        CourseOperation operation;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"        if (argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CourseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"            operation \u003d ParserUtil.parseFilterOperation(argMultimap.getPreamble());","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CourseCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_COURSETUTORIAL)","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"                || argMultimap.getValue(PREFIX_COURSETUTORIAL).isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CourseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_COURSETUTORIAL);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"        return new CourseCommand(operation, argMultimap.getValue(PREFIX_COURSETUTORIAL).get());","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ElginTZM":57}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTORIALGROUP;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.predicate.ContainsTagPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":" * Parses input arguments and creates a new DeleteCommand object.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"        if (!trimmedArgs.startsWith(\"all\")) {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TUTORIALGROUP);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag \u003d Optional.empty();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"        if (argMultimap.getValue(PREFIX_TUTORIALGROUP).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"            tag \u003d Optional.of(ParserUtil.parseTag(argMultimap.getValue(PREFIX_TUTORIALGROUP).get()));","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"        if (trimmedArgs.equals(\"all\")) {","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"            return new DeleteCommand(tag, new ContainsTagPredicate(tag));","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"        if (!argMultimap.getValue(PREFIX_TUTORIALGROUP).isPresent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"        return new DeleteCommand(tag, new ContainsTagPredicate(tag));","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"spatuly":24,"anthonytamzil":1,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ID);","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"            editPersonDescriptor.setId(ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"anthonytamzil":2,"Zjinnnn":3,"-":80}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.IdContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"        String[] keywords;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"        if ((!arePrefixesPresent(argMultimap, PREFIX_NAME) \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_ID))","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"                || (argMultimap.getValue(PREFIX_NAME).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_ID).isEmpty())","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"            keywords \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()).fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"            keywords \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get()).value.split(\"\\\\s+\");","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"            return new FindCommand(new IdContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ElginTZM":4,"anthonytamzil":22,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TUTORIALGROUP;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"import seedu.address.logic.commands.ListAttendanceCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"import seedu.address.logic.commands.ListStudentsCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.AbsentFromTutorialPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.ContainsTagPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"spatuly"},"content":"    private static final Pattern LIST_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"        final Matcher matcher \u003d LIST_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(arguments, PREFIX_TUTORIALGROUP, PREFIX_WEEK);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag \u003d Optional.empty();","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"        if (argMultimap.getValue(PREFIX_TUTORIALGROUP).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"            tag \u003d Optional.of(ParserUtil.parseTag(argMultimap.getValue(PREFIX_TUTORIALGROUP).get()));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"        switch (commandWord.trim()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"        case ListAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"            if (!argMultimap.getValue(PREFIX_WEEK).isPresent() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"                        ListAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"            String weekString \u003d argMultimap.getValue(PREFIX_WEEK).get();","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"            Week week \u003d ParserUtil.parseWeek(weekString);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"            return new ListAttendanceCommand(tag, week, new ContainsTagPredicate(tag),","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"                    new AbsentFromTutorialPredicate(week, tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"        case ListStudentsCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"            if (arguments.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"                return new ListStudentsCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListStudentsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"ElginTZM":2,"spatuly":68}},{"path":"src/main/java/seedu/address/logic/parser/MarkAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REASON;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":" * Parses input arguments and creates a new MarkAttendanceCommand object.","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"public class MarkAttendanceCommandParser implements Parser\u003cMarkAttendanceCommand\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkAttendanceCommand","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"     * and returns a MarkAttendanceCommand object for execution.","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"     * @param args Parses the user input into a command for execution.","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"     * @return A MarkAttendanceCommand object.","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"    public MarkAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ID, PREFIX_ATTENDANCE,","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"                PREFIX_WEEK, PREFIX_REASON);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ATTENDANCE, PREFIX_WEEK)","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"                || (argMultimap.getValue(PREFIX_NAME).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_ID).isEmpty())","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"                || (argMultimap.getValue(PREFIX_ATTENDANCE).get().equals(\"0\")","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"                        \u0026\u0026 argMultimap.getValue(PREFIX_REASON).isEmpty())","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"        List\u003cString\u003e identifiers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"            String[] names \u003d argMultimap.getValue(PREFIX_NAME).get().split(\",\");","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"            for (String name : names) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"                identifiers.add(ParserUtil.parseName(name.trim()).fullName);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"        } else {","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"            String[] ids \u003d argMultimap.getValue(PREFIX_ID).get().split(\",\");","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"            for (String id : ids) {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"                identifiers.add(ParserUtil.parseId(id.trim()).value);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"        boolean isPresent \u003d ParserUtil.parseAttendance(argMultimap.getValue(PREFIX_ATTENDANCE).get());","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"anthonytamzil"},"content":"        Week week \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_WEEK).get());","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"anthonytamzil"},"content":"        if (isPresent) {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"anthonytamzil"},"content":"            return new MarkAttendanceCommand(identifiers, true, week, null);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"anthonytamzil"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"anthonytamzil"},"content":"            String reason \u003d argMultimap.getValue(PREFIX_REASON).get();","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"            return new MarkAttendanceCommand(identifiers, false, week, reason);","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"Zjinnnn"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"Zjinnnn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"Zjinnnn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"anthonytamzil":19,"Zjinnnn":56}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"     * Enum for filter operations.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    public static enum CourseOperation {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"        CREATE, DELETE, SWITCH","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"        return Index.fromOneBased(parseInt(trimmedIndex));","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"Zjinnnn"},"content":"     * Parses a {@code String id} into an ID.","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"Zjinnnn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"Zjinnnn"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"Zjinnnn"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"Zjinnnn"},"content":"    public static ID parseId(String id) throws ParseException {","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"Zjinnnn"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"Zjinnnn"},"content":"        String trimmedID \u003d id.trim();","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"Zjinnnn"},"content":"        if (!ID.isValidID(trimmedID)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"Zjinnnn"},"content":"            throw new ParseException(ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"Zjinnnn"},"content":"        return new ID(trimmedID);","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":109,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"Zjinnnn"},"content":"     * Parses a {@code String attendance} into a boolean.","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"Zjinnnn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"Zjinnnn"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"Zjinnnn"},"content":"     * @throws ParseException if the given {@code attendance} is invalid.","lastModifiedDate":"2023-10-11"},{"lineNumber":114,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"Zjinnnn"},"content":"    public static boolean parseAttendance(String attendance) throws ParseException {","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"Zjinnnn"},"content":"        requireNonNull(attendance);","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"Zjinnnn"},"content":"        String trimmedAttendance \u003d attendance.trim();","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"Zjinnnn"},"content":"        if (!trimmedAttendance.equals(\"0\") \u0026\u0026 !trimmedAttendance.equals(\"1\")) {","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"Zjinnnn"},"content":"            throw new ParseException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"Zjinnnn"},"content":"        return trimmedAttendance.equals(\"1\");","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"anthonytamzil"},"content":"     * Parses a {@code String week} into a {@code Week}.","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"anthonytamzil"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"anthonytamzil"},"content":"     * @throws ParseException if the given {@code week} is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"anthonytamzil"},"content":"    public static Week parseWeek(String week) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"anthonytamzil"},"content":"        requireNonNull(week);","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"anthonytamzil"},"content":"        String trimmedWeek \u003d week.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"anthonytamzil"},"content":"        int weekNumber;","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"anthonytamzil"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"anthonytamzil"},"content":"            weekNumber \u003d parseInt(trimmedWeek);","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"anthonytamzil"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"anthonytamzil"},"content":"            throw new ParseException(Week.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"anthonytamzil"},"content":"        if (!Week.isValidWeek(weekNumber)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"anthonytamzil"},"content":"            throw new ParseException(Week.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"anthonytamzil"},"content":"        return new Week(weekNumber);","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"ElginTZM"},"content":"     * Parses {@code String operation} into a {@code FilterOperation}.","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"ElginTZM"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"ElginTZM"},"content":"     * @throws ParseException if the given {@code operation} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"ElginTZM"},"content":"    public static CourseOperation parseFilterOperation(String operation) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(operation);","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"ElginTZM"},"content":"        String trimmedOperation \u003d operation.trim().toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"ElginTZM"},"content":"        switch (trimmedOperation) {","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"ElginTZM"},"content":"        case \"create\":","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"ElginTZM"},"content":"            return CourseOperation.CREATE;","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"ElginTZM"},"content":"        case \"delete\":","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"ElginTZM"},"content":"            return CourseOperation.DELETE;","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"ElginTZM"},"content":"        case \"switch\":","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"ElginTZM"},"content":"            return CourseOperation.SWITCH;","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"ElginTZM"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"ElginTZM"},"content":"            throw new ParseException(\"Invalid course operation\");","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"ElginTZM":27,"anthonytamzil":25,"Zjinnnn":33,"-":107}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":" * Parses input arguments and creates a new ViewCommand object.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"        Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"            index \u003d ParserUtil.parseIndex(trimmedArgs);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"        } catch (ParseException p) {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), p","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"            );","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"        return new ViewCommand(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"anthonytamzil":33}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"    private String courseCode;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"     * Creates an empty AddressBook with the given {@code courseCode}.","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"    public AddressBook(String courseCode) {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(courseCode);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        this.courseCode \u003d courseCode.toUpperCase();","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied} and {@code courseCode}.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    public AddressBook(String courseCode, ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(courseCode);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(toBeCopied);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"        this.courseCode \u003d courseCode.toUpperCase();","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}.","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"    public static AddressBook createFromAddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(toBeCopied);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"        return new AddressBook(toBeCopied.getCourseCode(), toBeCopied);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"    ///// course level operations","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"    public void setCourseCode(String courseCode) {","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(courseCode);","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"        this.courseCode \u003d courseCode.toUpperCase();","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"    public String getCourseCode() {","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"        return courseCode;","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"        setCourseCode(newData.getCourseCode());","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"ElginTZM"},"content":"        return persons.equals(otherAddressBook.persons)","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"ElginTZM"},"content":"                \u0026\u0026 courseCode.equalsIgnoreCase(otherAddressBook.courseCode);","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"ElginTZM"},"content":"        return Objects.hash(persons, courseCode);","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ElginTZM":38,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBookManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.core.JsonGenerator;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.core.JsonParser;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.databind.JsonDeserializer;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.databind.JsonSerializer;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.databind.SerializerProvider;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.databind.annotation.JsonDeserialize;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.databind.annotation.JsonSerialize;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.databind.node.ObjectNode;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"import javafx.beans.value.ObservableStringValue;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.storage.JsonSerializableAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":" * Manages all address books in the application.","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"@JsonSerialize(using \u003d AddressBookManager.AddressBookManagerSerializer.class)","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"@JsonDeserialize(using \u003d AddressBookManager.AddressBookManagerDeserializer.class)","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"public class AddressBookManager implements ReadOnlyAddressBookManager {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"    private final SimpleStringProperty activeCourseCode;","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"    private final ObservableList\u003cString\u003e internalCourseList;","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"    private final ObservableList\u003cString\u003e courseList;","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"    private final HashMap\u003cString, ReadOnlyAddressBook\u003e addressBooks;","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"    private AddressBook currentAddressBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        this.activeCourseCode \u003d new SimpleStringProperty();","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        this.internalCourseList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"        this.courseList \u003d new SortedList\u003c\u003e(internalCourseList, String::compareToIgnoreCase);","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"     * Creates an empty address book manager.","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"    public AddressBookManager() {","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"        this.addressBooks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        activeCourseCode.set(\"Temp\");","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"        setAddressBook(new AddressBook(\"Temp\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"     * Creates an address book manager with the given read only addressBookManager.","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"    public AddressBookManager(ReadOnlyAddressBookManager addressBookManager) {","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"        this(addressBookManager.getAddressBooks(), addressBookManager.getActiveCourseCode());","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"     * Creates an address book manager with the given address books and active address book course code.","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    public AddressBookManager(HashMap\u003cString, ReadOnlyAddressBook\u003e addressBooks, String currentCourseCode) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"        this.addressBooks \u003d addressBooks;","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"        this.internalCourseList.setAll(addressBooks.keySet());","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"        activeCourseCode.set(currentCourseCode.toUpperCase());","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"        this.currentAddressBook \u003d getActiveAddressBook();","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"    public AddressBook getActiveAddressBook() {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"        if (this.currentAddressBook !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"            return this.currentAddressBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"ElginTZM"},"content":"        return addressBooks.containsKey(activeCourseCode.get())","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"ElginTZM"},"content":"                ? (AddressBook) addressBooks.get(activeCourseCode.get())","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"ElginTZM"},"content":"                : new AddressBook(activeCourseCode.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"ElginTZM"},"content":"        removeAddressBook(activeCourseCode.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"ElginTZM"},"content":"        addAddressBook(addressBook);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"ElginTZM"},"content":"        activeCourseCode.set(addressBook.getCourseCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"ElginTZM"},"content":"        setActiveAddressBook(activeCourseCode.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"ElginTZM"},"content":"    public void setActiveAddressBook(String courseCode) {","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(courseCode);","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"ElginTZM"},"content":"        activeCourseCode.set(courseCode.toUpperCase());","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"ElginTZM"},"content":"        if (!this.addressBooks.containsKey(activeCourseCode.get())) {","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"ElginTZM"},"content":"            throw new IllegalArgumentException(\"Address book does not exist\");","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"ElginTZM"},"content":"        this.currentAddressBook \u003d (AddressBook) this.addressBooks.get(activeCourseCode.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"ElginTZM"},"content":"     * Returns true if an address book with the given {@code courseCode} exists.","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"ElginTZM"},"content":"    public boolean hasAddressBook(String courseCode) {","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(courseCode);","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"ElginTZM"},"content":"        return this.addressBooks.containsKey(courseCode.toUpperCase());","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"ElginTZM"},"content":"     * Adds an address book to the address book manager.","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"ElginTZM"},"content":"     * {@code addressBook} must not already exist in the address book manager.","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"ElginTZM"},"content":"    public void addAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"ElginTZM"},"content":"        requireAllNonNull(addressBook);","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"ElginTZM"},"content":"        internalCourseList.add(addressBook.getCourseCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"ElginTZM"},"content":"        this.addressBooks.put(addressBook.getCourseCode(), addressBook);","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"ElginTZM"},"content":"     * Deletes an address book from the address book manager.","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"ElginTZM"},"content":"     * {@code courseCode} must exist in the address book manager.","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"ElginTZM"},"content":"    public void removeAddressBook(String courseCode) {","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(courseCode);","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"ElginTZM"},"content":"        internalCourseList.remove(courseCode.toUpperCase());","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"ElginTZM"},"content":"        this.addressBooks.remove(courseCode.toUpperCase());","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"ElginTZM"},"content":"    public ObservableList\u003cString\u003e getCourseList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"ElginTZM"},"content":"        return courseList;","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"ElginTZM"},"content":"    public ObservableStringValue getObservableCourseCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"ElginTZM"},"content":"        return activeCourseCode;","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"ElginTZM"},"content":"    public HashMap\u003cString, ReadOnlyAddressBook\u003e getAddressBooks() {","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"ElginTZM"},"content":"        HashMap\u003cString, ReadOnlyAddressBook\u003e copiedAddressBooks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"ElginTZM"},"content":"        addressBooks.forEach((courseCode, addressBook) -\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"ElginTZM"},"content":"                copiedAddressBooks.put(courseCode, new AddressBook(courseCode, addressBook)));","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"ElginTZM"},"content":"        return copiedAddressBooks;","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"ElginTZM"},"content":"    public String getActiveCourseCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"ElginTZM"},"content":"        return activeCourseCode.get();","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"ElginTZM"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"ElginTZM"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"ElginTZM"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"ElginTZM"},"content":"        if (!(other instanceof AddressBookManager)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"ElginTZM"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager otherModelManager \u003d (AddressBookManager) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"ElginTZM"},"content":"        return addressBooks.equals(otherModelManager.addressBooks)","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"ElginTZM"},"content":"                \u0026\u0026 currentAddressBook.equals(otherModelManager.currentAddressBook);","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"ElginTZM"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"ElginTZM"},"content":"        return Objects.hash(addressBooks, currentAddressBook, activeCourseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"ElginTZM"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"ElginTZM"},"content":"        return new StringBuilder()","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"ElginTZM"},"content":"                .append(\"Address books: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"ElginTZM"},"content":"                .append(addressBooks)","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"ElginTZM"},"content":"                .append(\"\\n\")","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"ElginTZM"},"content":"                .append(\"Current address book: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"ElginTZM"},"content":"                .append(currentAddressBook)","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"ElginTZM"},"content":"                .append(\"\\n\")","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"ElginTZM"},"content":"                .append(\"Current course code: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"ElginTZM"},"content":"                .append(activeCourseCode.get())","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"ElginTZM"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"ElginTZM"},"content":"     * Serializes an {@code AddressBookManager} into JSON format.","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"ElginTZM"},"content":"    public static class AddressBookManagerSerializer extends JsonSerializer\u003cAddressBookManager\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"ElginTZM"},"content":"        public void serialize(AddressBookManager addressBookManager, JsonGenerator jsonGenerator,","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"ElginTZM"},"content":"                SerializerProvider serializerProvider) throws IOException, JsonProcessingException {","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"ElginTZM"},"content":"            jsonGenerator.writeStartObject();","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"ElginTZM"},"content":"            jsonGenerator.writeStringField(\"currentCourseCode\", addressBookManager.activeCourseCode.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"ElginTZM"},"content":"            jsonGenerator.writeObjectFieldStart(\"addressBooks\");","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"ElginTZM"},"content":"            for (HashMap.Entry\u003cString, ReadOnlyAddressBook\u003e entry : addressBookManager.addressBooks.entrySet()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"ElginTZM"},"content":"                JsonSerializableAddressBook jsonSerializableAddressBook \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"ElginTZM"},"content":"                        new JsonSerializableAddressBook(entry.getValue());","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"ElginTZM"},"content":"                jsonGenerator.writeObjectField(entry.getKey(), jsonSerializableAddressBook);","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"ElginTZM"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"ElginTZM"},"content":"            jsonGenerator.writeEndObject();","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"ElginTZM"},"content":"            jsonGenerator.writeEndObject();","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"ElginTZM"},"content":"     * Deserializes a JSON object into an {@code AddressBookManager}.","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"ElginTZM"},"content":"    public static class AddressBookManagerDeserializer extends JsonDeserializer\u003cAddressBookManager\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"ElginTZM"},"content":"        private ObjectMapper mapper \u003d new ObjectMapper();","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"ElginTZM"},"content":"        public AddressBookManager deserialize(JsonParser jsonParser,","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"ElginTZM"},"content":"                DeserializationContext deserializationContext) throws IOException {","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"ElginTZM"},"content":"            JsonNode node \u003d jsonParser.getCodec().readTree(jsonParser);","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"ElginTZM"},"content":"            String currentCourseCode \u003d node.get(\"currentCourseCode\").asText();","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"ElginTZM"},"content":"            JsonNode addressBooksNode \u003d node.get(\"addressBooks\");","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"ElginTZM"},"content":"            HashMap\u003cString, ReadOnlyAddressBook\u003e addressBooks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"ElginTZM"},"content":"            if (addressBooksNode.isObject()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"ElginTZM"},"content":"                addressBooksNode.fields().forEachRemaining(entry -\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"ElginTZM"},"content":"                    String courseCode \u003d entry.getKey();","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"ElginTZM"},"content":"                    JsonNode addressBookNode \u003d entry.getValue();","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"ElginTZM"},"content":"                    try {","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"ElginTZM"},"content":"                        addressBookNode \u003d addCourseCodeToJsonNode(addressBookNode, courseCode);","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"ElginTZM"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"ElginTZM"},"content":"                        e.printStackTrace();","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"ElginTZM"},"content":"                    }","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"ElginTZM"},"content":"                    JsonSerializableAddressBook addressBook \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"ElginTZM"},"content":"                    try {","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"ElginTZM"},"content":"                        addressBook \u003d mapper.treeToValue(addressBookNode, JsonSerializableAddressBook.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"ElginTZM"},"content":"                    } catch (JsonProcessingException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"ElginTZM"},"content":"                        e.printStackTrace();","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"ElginTZM"},"content":"                    }","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"ElginTZM"},"content":"                    if (addressBook !\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"ElginTZM"},"content":"                        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":248,"author":{"gitId":"ElginTZM"},"content":"                            addressBooks.put(courseCode, addressBook.toModelType());","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"ElginTZM"},"content":"                        } catch (IllegalValueException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"ElginTZM"},"content":"                            e.printStackTrace();","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"ElginTZM"},"content":"                        }","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"ElginTZM"},"content":"                    }","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"ElginTZM"},"content":"                });","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"ElginTZM"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"ElginTZM"},"content":"            return new AddressBookManager(addressBooks, currentCourseCode);","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"ElginTZM"},"content":"        private static JsonNode addCourseCodeToJsonNode(JsonNode json, String courseCode)","lastModifiedDate":"2023-10-26"},{"lineNumber":260,"author":{"gitId":"ElginTZM"},"content":"                throws IllegalArgumentException {","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"ElginTZM"},"content":"            if (json.isObject()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"ElginTZM"},"content":"                ObjectNode objectNode \u003d (ObjectNode) json;","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"ElginTZM"},"content":"                objectNode.put(\"courseCode\", courseCode);","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"ElginTZM"},"content":"                return objectNode;","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"ElginTZM"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"ElginTZM"},"content":"            throw new IllegalArgumentException(\"Input JSON is not an object.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"ElginTZM":270}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import javafx.beans.value.ObservableStringValue;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.core.FilterSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.SerializablePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"     * Returns the user prefs\u0027 filter settings.","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"    FilterSettings getFilterSettings();","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"     * Sets the user prefs\u0027 filter settings.","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    void setFilterSettings(FilterSettings filterSettings);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"    /** Returns the AddressBookManager */","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"    ReadOnlyAddressBookManager getAddressBookManager();","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"     * Adds the given address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"     * {@code addressBook} must not already exist in the address book manager.","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"    void addAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"     * Deletes the given address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"     * {@code addressBook} must exist in the address book manager.","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"    void deleteAddressBook(String courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"ElginTZM"},"content":"     * Sets the active address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"ElginTZM"},"content":"     * {@code courseCode} address book must exist in the address book manager.","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"ElginTZM"},"content":"    void setActiveAddressBook(String courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"     * Returns true if an address book with the given {@code courseCode} exists.","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"ElginTZM"},"content":"    boolean hasAddressBook(String courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"ElginTZM"},"content":"     * Returns a view of the address book list.","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"ElginTZM"},"content":"    ObservableList\u003cString\u003e getCourseList();","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"ElginTZM"},"content":"     * Returns a observable string value of the active course code.","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"ElginTZM"},"content":"    ObservableStringValue getObservableCourseCode();","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"ElginTZM"},"content":"    /** Returns an unmodifiable view of the unfiltered person list */","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"ElginTZM"},"content":"    ObservableList\u003cPerson\u003e getUnfilteredPersonList();","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"ElginTZM"},"content":"     * Adds the given predicate to filter list.","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"ElginTZM"},"content":"     * {@code predicate} must not already exist in the address book.","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"ElginTZM"},"content":"    void addFilter(SerializablePredicate predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"ElginTZM"},"content":"     * Deletes the given predicate.","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"ElginTZM"},"content":"     * The predicate must exist in the filter list.","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"ElginTZM"},"content":"    void deleteFilter(SerializablePredicate predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"ElginTZM"},"content":"     * Clears all filters.","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"ElginTZM"},"content":"    void clearFilters();","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ElginTZM":66,"-":80}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import javafx.beans.value.ObservableStringValue;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.core.FilterSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.SerializablePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    private final AddressBookManager addressBookManager;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"    private final UniquePersonList uniquePersonList;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"     * Initializes a ModelManager with the given addressBookManager and userPrefs.","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    public ModelManager(ReadOnlyAddressBookManager addressBookManager, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"        requireAllNonNull(addressBookManager, userPrefs);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"        logger.fine(\"Initializing with address book manager: \" + addressBookManager + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"        this.addressBookManager \u003d new AddressBookManager(addressBookManager);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"        this.uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(uniquePersonList.asUnmodifiableObservableList());","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"        if (getAddressBook() !\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"            updateFilteredPersonList();","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"        this(new AddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"    public FilterSettings getFilterSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"        return userPrefs.getFilterSettings();","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"ElginTZM"},"content":"    public void setFilterSettings(FilterSettings filterSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(filterSettings);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"ElginTZM"},"content":"        userPrefs.setFilterSettings(filterSettings);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"ElginTZM"},"content":"        addressBookManager.setAddressBook(addressBook);","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"ElginTZM"},"content":"        updateFilteredPersonList();","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"ElginTZM"},"content":"        return addressBookManager.getActiveAddressBook();","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"ElginTZM"},"content":"        return getActiveAddressBook().hasPerson(person);","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"ElginTZM"},"content":"        getActiveAddressBook().removePerson(target);","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"ElginTZM"},"content":"        updateFilteredPersonList();","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":126,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"ElginTZM"},"content":"        getActiveAddressBook().addPerson(person);","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"ElginTZM"},"content":"        updateFilteredPersonList();","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":134,"author":{"gitId":"ElginTZM"},"content":"        getActiveAddressBook().setPerson(target, editedPerson);","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"ElginTZM"},"content":"        updateFilteredPersonList();","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"ElginTZM"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBookManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"ElginTZM"},"content":"    public ReadOnlyAddressBookManager getAddressBookManager() {","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"ElginTZM"},"content":"        return addressBookManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"ElginTZM"},"content":"    private AddressBook getActiveAddressBook() {","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"ElginTZM"},"content":"        return addressBookManager.getActiveAddressBook();","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"ElginTZM"},"content":"    public void addAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"ElginTZM"},"content":"        addressBookManager.addAddressBook(addressBook);","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"ElginTZM"},"content":"    public void deleteAddressBook(String courseCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"ElginTZM"},"content":"        addressBookManager.removeAddressBook(courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"ElginTZM"},"content":"    public void setActiveAddressBook(String courseCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"ElginTZM"},"content":"        addressBookManager.setActiveAddressBook(courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"ElginTZM"},"content":"        updateFilteredPersonList();","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"ElginTZM"},"content":"    public boolean hasAddressBook(String courseCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"ElginTZM"},"content":"        return addressBookManager.hasAddressBook(courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"ElginTZM"},"content":"    public ObservableList\u003cString\u003e getCourseList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"ElginTZM"},"content":"        return addressBookManager.getCourseList();","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"ElginTZM"},"content":"    public ObservableStringValue getObservableCourseCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"ElginTZM"},"content":"        return addressBookManager.getObservableCourseCode();","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":181,"author":{"gitId":"ElginTZM"},"content":"    private void updateFilteredPersonList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"ElginTZM"},"content":"        uniquePersonList.setPersons(getAddressBook().getPersonList());","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"ElginTZM"},"content":"    public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"ElginTZM"},"content":"        return uniquePersonList.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":200,"author":{"gitId":"ElginTZM"},"content":"    public void addFilter(SerializablePredicate predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":202,"author":{"gitId":"ElginTZM"},"content":"        HashSet\u003cSerializablePredicate\u003e currentFilters \u003d this.getFilterSettings().getFilters();","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"ElginTZM"},"content":"        currentFilters.add(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"ElginTZM"},"content":"        this.setFilterSettings(new FilterSettings(currentFilters));","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"ElginTZM"},"content":"        filteredPersons.setPredicate(this.getFilterSettings().getComposedFilter());","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"ElginTZM"},"content":"    public void deleteFilter(SerializablePredicate predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"ElginTZM"},"content":"        HashSet\u003cSerializablePredicate\u003e currentFilters \u003d this.getFilterSettings().getFilters();","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"ElginTZM"},"content":"        currentFilters.remove(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"ElginTZM"},"content":"        this.setFilterSettings(new FilterSettings(currentFilters));","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"ElginTZM"},"content":"        filteredPersons.setPredicate(this.getFilterSettings().getComposedFilter());","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"ElginTZM"},"content":"    public void clearFilters() {","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"ElginTZM"},"content":"        this.setFilterSettings(new FilterSettings());","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"ElginTZM"},"content":"        filteredPersons.setPredicate(this.getFilterSettings().getComposedFilter());","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":235,"author":{"gitId":"ElginTZM"},"content":"        return addressBookManager.equals(otherModelManager.addressBookManager)","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ElginTZM":106,"-":134}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"     * Returns the course code of the address book.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"    String getCourseCode();","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ElginTZM":5,"-":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBookManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":" * Unmodifiable view of an address book manager","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"public interface ReadOnlyAddressBookManager {","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"     * Returns an unmodifiable view of the address books hashmap.","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"     * This list will not contain any duplicate address books.","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"    HashMap\u003cString, ReadOnlyAddressBook\u003e getAddressBooks();","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"     * Returns the course code of the active address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"    String getActiveCourseCode();","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"ElginTZM":21}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.core.FilterSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"    FilterSettings getFilterSettings();","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ElginTZM":3,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.core.FilterSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    private FilterSettings filterSettings \u003d new FilterSettings();","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"tavigator.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"        setFilterSettings(newUserPrefs.getFilterSettings());","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"    public FilterSettings getFilterSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"        return filterSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"    public void setFilterSettings(FilterSettings filterSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(filterSettings);","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"        this.filterSettings \u003d filterSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"ElginTZM"},"content":"                \u0026\u0026 filterSettings.equals(otherUserPrefs.filterSettings)","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"ElginTZM"},"content":"        return Objects.hash(guiSettings, filterSettings, addressBookFilePath);","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"ElginTZM"},"content":"        sb.append(\"\\nFilter Settings : \" + filterSettings);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ElginTZM":16,"-":86}},{"path":"src/main/java/seedu/address/model/person/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":" * Represents a Student\u0027s attendance in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"public class Attendance {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Attendance should only be 0 or 1, where 0 indicates student is \"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"            + \"absent and 1 indicates student is present\";","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"    private final Week week;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"    private boolean isPresent;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"    private String reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"     * Constructs an {@code Attendance}.","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"     * @param week A week from 0 to 13.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"     * @param isPresent A valid attendance status.","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"     * @param reason A valid reason for student to be absent if applicable.","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"    public Attendance(Week week, boolean isPresent, String reason) {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"        this.week \u003d week;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the reason for student\u0027s absence.","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"     * @return A string representing the reason for the student\u0027s absence.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"    public String getReason() {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"        return this.reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"     * Returns the week of the attendance.","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"     * @return An int representing the date of the attendance.","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"    public Week getWeek() {","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"        return week;","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"     * Returns the attendance status.","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"     * @return A boolean representing the attendance status.","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"    public boolean isPresent() {","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"        return isPresent;","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"     * Sets the attendance for the person.","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"     * @param isPresent The attendance record to set.","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"    public void setAttendance(boolean isPresent) {","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"anthonytamzil"},"content":"     * Sets the reason for person\u0027s absence.","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"anthonytamzil"},"content":"     * @param reason String of reason why student is late.","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"anthonytamzil"},"content":"    public void setReason(String reason) {","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"        this.reason \u003d reason;","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"Zjinnnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"Zjinnnn"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"Zjinnnn"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"Zjinnnn"},"content":"        if (!(other instanceof Attendance)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"Zjinnnn"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"Zjinnnn"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"Zjinnnn"},"content":"        Attendance otherAttendance \u003d (Attendance) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"anthonytamzil"},"content":"        return this.week.equals(otherAttendance.week)","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"Zjinnnn"},"content":"                \u0026\u0026 isPresent \u003d\u003d otherAttendance.isPresent;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"Zjinnnn"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"anthonytamzil"},"content":"        return Objects.hash(week, isPresent);","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"anthonytamzil"},"content":"        return \"Week: \" + week + \", Present: \" + isPresent;","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"anthonytamzil":37,"Zjinnnn":59}},{"path":"src/main/java/seedu/address/model/person/ID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":" * Represents a student\u0027s ID.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidID(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"public class ID {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Please enter the full ID! IDs should only contain alphanumeric \"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"            + \"characters, with no special characters or space, and it should not be blank\";","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"    /*","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"     * The ID format is A followed by 7 digits and ending with a letter.","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"    public static final String VALIDATION_REGEX \u003d \"A\\\\d{7}[A-Za-z](?:\\\\s+A\\\\d{7}[A-Za-z])*\";","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"     * Constructs an {@code ID}.","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"     * @param id A valid ID.","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"    public ID(String id) {","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"        requireNonNull(id);","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"        checkArgument(isValidID(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"        value \u003d id;","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"     * Returns true if a given string is a valid ID.","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"    public static boolean isValidID(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"                || (other instanceof ID // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"                \u0026\u0026 value.equals(((ID) other).value)); // state check","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"anthonytamzil":3,"Zjinnnn":54}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"    private final ID id;","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"    private final List\u003cAttendance\u003e attendanceRecords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"    public Person(Name name, Phone phone, Email email, ID id, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"        requireAllNonNull(name, phone, email, id, tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"    public ID getId() {","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"        return id;","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"    public List\u003cAttendance\u003e getAttendanceRecords() {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"        return attendanceRecords;","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"Zjinnnn"},"content":"     * Retrieves the Attendance object for the current week, if it exists.","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"Zjinnnn"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"     * @return An Optional containing the Attendance object for the current week, or an empty Optional if not found.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"    public Optional\u003cAttendance\u003e getAttendanceForSpecifiedWeek(Week week) {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"Zjinnnn"},"content":"        return attendanceRecords.stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"                .filter(attendance -\u003e attendance.getWeek().equals(week))","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"Zjinnnn"},"content":"                .findFirst();","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"Zjinnnn"},"content":"    public void addAttendance(Attendance attendance) {","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"Zjinnnn"},"content":"        attendanceRecords.add(attendance);","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"fuyiqiao"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"fuyiqiao"},"content":"     * Returns a string representation of the number of tutorials that the person attended and missed.","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"fuyiqiao"},"content":"     * @return number of tutorials attanded, total tutorials, number of tutorials missed","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"fuyiqiao"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"fuyiqiao"},"content":"    public String getTalliedAttendance() {","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"fuyiqiao"},"content":"        int tutorialsAttended \u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"fuyiqiao"},"content":"        int totalTutorials \u003d attendanceRecords.size();","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"fuyiqiao"},"content":"        for (int i \u003d 0; i \u003c totalTutorials; i++) {","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"fuyiqiao"},"content":"            if (attendanceRecords.get(i).isPresent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"fuyiqiao"},"content":"                tutorialsAttended++;","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"fuyiqiao"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"fuyiqiao"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"fuyiqiao"},"content":"        if (totalTutorials \u003d\u003d 0) {","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"fuyiqiao"},"content":"            return \"Attendance : No attendance records.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"fuyiqiao"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"fuyiqiao"},"content":"        return \"Attendance : \" + tutorialsAttended + \" / \" + totalTutorials + \" (\"","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"fuyiqiao"},"content":"                + (totalTutorials - tutorialsAttended) + \" tutorials missed)\";","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"fuyiqiao"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"Zjinnnn"},"content":"                \u0026\u0026 id.equals(otherPerson.id)","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"anthonytamzil"},"content":"        return Objects.hash(name, phone, email, id, tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"Zjinnnn"},"content":"                .add(\"id\", id)","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fuyiqiao":21,"spatuly":4,"anthonytamzil":5,"Zjinnnn":26,"-":108}},{"path":"src/main/java/seedu/address/model/predicate/AbsentFromTutorialPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches the tag given.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"public class AbsentFromTutorialPredicate extends SerializablePredicate {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"    private final Week week;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"    private final Optional\u003cTag\u003e tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"     * Constructor a {@code AbsentFromTutorialPredicate} with index and tutorial group.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"     * @param week Week number to get the attendance list for.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"     * @param tag  Tutorial group to get the attendance list for.","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"    public AbsentFromTutorialPredicate(Week week, Optional\u003cTag\u003e tag) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"        super(person -\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"            Stream\u003cAttendance\u003e attendanceStream \u003d person.getAttendanceRecords().stream();","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"            boolean isAbsentForWeek \u003d !attendanceStream.anyMatch(atd -\u003e atd.getWeek().equals(week) \u0026\u0026 atd.isPresent());","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"            if (tag.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"                return isAbsentForWeek;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"            // Implicit else","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"            return person.getTags().stream().anyMatch(personTag -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"                    StringUtil.containsWordIgnoreCase(personTag.getTagName(), tag.get().getTagName()))","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"                    \u0026\u0026 isAbsentForWeek;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"        });","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"        this.week \u003d week;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"    public static AbsentFromTutorialPredicate create(@JsonProperty(\"week\") Week week,","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"                                                     @JsonProperty(\"tag\") Optional\u003cTag\u003e tag) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"        return new AbsentFromTutorialPredicate(week, tag);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"        if (!(other instanceof AbsentFromTutorialPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"        AbsentFromTutorialPredicate otherPredicate \u003d (AbsentFromTutorialPredicate) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"        return week.equals(otherPredicate.week) \u0026\u0026 tag.equals(otherPredicate.tag);","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"        return Objects.hash(week, tag);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"        return \"Attendance Filter: \" + week + \" \" + tag.get().getTagName();","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ElginTZM":53,"spatuly":24}},{"path":"src/main/java/seedu/address/model/predicate/ContainsTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches the tag given.","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"public class ContainsTagPredicate extends SerializablePredicate {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"    private final Optional\u003cTag\u003e tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"     * Constructor a {@code ContainsTagPredicate} with a tag.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"     * @param tag Tag to check for in a person.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    public ContainsTagPredicate(Optional\u003cTag\u003e tag) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        super(person -\u003e person.getTags().stream().anyMatch(","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"                personTag -\u003e StringUtil.containsWordIgnoreCase(personTag.getTagName(), tag.get().getTagName())));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    public static ContainsTagPredicate create(@JsonProperty(\"tag\") Optional\u003cTag\u003e tag) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"        return new ContainsTagPredicate(tag);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"        if (!(other instanceof ContainsTagPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        ContainsTagPredicate otherPredicate \u003d (ContainsTagPredicate) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        return tag.equals(otherPredicate.tag);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"        return tag.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"        return \"Tag Filter: \" + tag.get().getTagName();","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ElginTZM":49,"spatuly":9}},{"path":"src/main/java/seedu/address/model/predicate/IdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":" * Tests that a {@code Person}\u0027s {@code ID} matches the id given.","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"public class IdContainsKeywordsPredicate extends SerializablePredicate {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"     * Constructor a {@code IdContainsKeywordsPredicate} with keywords.","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"     * @param keywords Keywords to check for in a person\u0027s id.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"    public IdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"        super(person -\u003e keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"                StringUtil.containsWordIgnoreCase(person.getId().value, keyword)));","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    public static IdContainsKeywordsPredicate create(@JsonProperty(\"keywords\") List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"        return new IdContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"        if (!(other instanceof IdContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"        IdContainsKeywordsPredicate otherPredicate \u003d (IdContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        HashSet\u003cString\u003e keywords \u003d new HashSet\u003cString\u003e(this.keywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        HashSet\u003cString\u003e otherKeywords \u003d new HashSet\u003cString\u003e(otherPredicate.keywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"        return keywords.equals(otherKeywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"        return keywords.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"        return \"ID Filter: \" + keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ElginTZM":59}},{"path":"src/main/java/seedu/address/model/predicate/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":" * Tests that a {@code Person}\u0027s {@code Name} contains the keywords given.","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"public class NameContainsKeywordsPredicate extends SerializablePredicate {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"     * Constructor a {@code NameContainsKeywordsPredicate} with keywords.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"     * @param keywords Keywords to check for in a person\u0027s name.","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"        super(person -\u003e keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"                StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword)));","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"    public static NameContainsKeywordsPredicate create(@JsonProperty(\"keywords\") List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"        return new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        NameContainsKeywordsPredicate otherPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        HashSet\u003cString\u003e keywords \u003d new HashSet\u003cString\u003e(this.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"        HashSet\u003cString\u003e otherKeywords \u003d new HashSet\u003cString\u003e(otherPredicate.keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"        return keywords.equals(otherKeywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"        return keywords.hashCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ElginTZM":60}},{"path":"src/main/java/seedu/address/model/predicate/SerializablePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonIgnore;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":" * A serializable wrapper class for Predicate of type Person.","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"@JsonTypeInfo(use \u003d JsonTypeInfo.Id.CLASS, include \u003d JsonTypeInfo.As.PROPERTY, property \u003d \"type\")","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"public class SerializablePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"    @JsonIgnore","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"    private Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    public SerializablePredicate() {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"    public SerializablePredicate(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    public boolean test(Person t) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"        return predicate.test(t);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"    public SerializablePredicate and(SerializablePredicate other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"        return new SerializablePredicate(predicate.and(other.predicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    public SerializablePredicate or(SerializablePredicate other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"        return new SerializablePredicate(predicate.or(other.predicate));","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"    public SerializablePredicate negate() {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"        return new SerializablePredicate(predicate.negate());","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"    public Predicate\u003cPerson\u003e getPredicate() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"        return predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"        if (!(other instanceof SerializablePredicate)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"        SerializablePredicate otherPredicate \u003d (SerializablePredicate) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        return otherPredicate.predicate.equals(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"        return predicate.hashCode();","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"        throw new UnsupportedOperationException(String.format(\"toString() was not overriden by %s.\", this.getClass()));","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ElginTZM":70}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonIgnore;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"fuyiqiao"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"    @JsonIgnore","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"fuyiqiao"},"content":"    public final String courseCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"    @JsonIgnore","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"fuyiqiao"},"content":"    public final String tutorialGroup;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"fuyiqiao"},"content":"     * @param tagName A valid tagName.","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        String[] str \u003d tagName.split(\" \", 2);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"fuyiqiao"},"content":"        String courseCode \u003d str[0];","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"fuyiqiao"},"content":"        String tutorialGroup \u003d str.length \u003d\u003d 2 ? str[1] : null;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"fuyiqiao"},"content":"        this.courseCode \u003d courseCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"fuyiqiao"},"content":"        this.tutorialGroup \u003d tutorialGroup;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"    public static Tag create(@JsonProperty(\"tagName\") String tag) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"        return new Tag(tag);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"    public String getTagName() {","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"        return this.tagName;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"fuyiqiao"},"content":"    public String getCourseCode() {","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"fuyiqiao"},"content":"        return courseCode;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"fuyiqiao"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"fuyiqiao"},"content":"    public String getTutorialGroup() {","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"fuyiqiao"},"content":"        return tutorialGroup;","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"fuyiqiao"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"fuyiqiao":16,"ElginTZM":12,"spatuly":2,"-":61}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"    public static Person[] getSampleCS2103TPersons() {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"                new ID(\"A1234567E\"), getTagSet(\"CS2103T\")),","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"                new ID(\"A1234567B\"), getTagSet(\"CS2103T\")),","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"                new ID(\"A1234567X\"), getTagSet(\"CS2103T\"))","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"        };","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"    public static Person[] getSampleCS2030SPersons() {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        return new Person[] {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"                new ID(\"A1234567F\"), getTagSet(\"CS2030S\")),","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"                new ID(\"A1234567K\"), getTagSet(\"CS2030S\")),","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"                new ID(\"A1234567A\"), getTagSet(\"CS2030S\"))","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"    public static AddressBookManager getSampleAddressBookManager() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager sampleAbm \u003d new AddressBookManager();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        AddressBook sampleCS2103TAb \u003d new AddressBook(\"CS2103T\");","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        for (Person samplePerson : getSampleCS2103TPersons()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"            sampleCS2103TAb.addPerson(samplePerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"        AddressBook sampleCS2030SAb \u003d new AddressBook(\"CS2030S\");","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"        for (Person samplePerson : getSampleCS2030SPersons()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"            sampleCS2030SAb.addPerson(samplePerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        sampleAbm.setAddressBook(sampleCS2103TAb);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"        sampleAbm.addAddressBook(sampleCS2030SAb);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        return sampleAbm;","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ElginTZM":24,"anthonytamzil":5,"Zjinnnn":1,"-":41}},{"path":"src/main/java/seedu/address/model/week/Week.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"package seedu.address.model.week;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":" * Represents a Week in TAvigator.","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":" * Guarantees: immutable; week is valid as declared in {@link #isValidWeek(int)}","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"public class Week {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Week should be an integer from 0 to 13\";","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"    private final int weekNumber;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"     * Constructs a {@code Week}.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"     * @param weekNumber A valid week number.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"    public Week(int weekNumber) {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"        checkArgument(isValidWeek(weekNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"        this.weekNumber \u003d weekNumber;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"     * Returns true if a given week is a valid week in the semester.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"    public static boolean isValidWeek(int weekNumber) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"        return weekNumber \u003c\u003d 13 \u0026\u0026 weekNumber \u003e\u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"    public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"        return \"\" + this.weekNumber;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"    public int getWeekNumber() {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"        return this.weekNumber;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"            return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"        if (!(other instanceof Week)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"            return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"        Week otherWeek \u003d (Week) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"anthonytamzil"},"content":"        return this.weekNumber \u003d\u003d otherWeek.weekNumber;","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"anthonytamzil":56}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.ReadOnlyAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"     * Returns AddressBook data as a {@link AddressBookManager}.","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"    Optional\u003cAddressBookManager\u003e readAddressBooks() throws DataLoadingException;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    Optional\u003cAddressBookManager\u003e readAddressBooks(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"     * Saves the given {@link AddressBookManager} to the storage.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"     * @param addressBookManager cannot be null.","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"    void saveAddressBooks(ReadOnlyAddressBookManager addressBookManager) throws IOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"     * @see #saveAddressBook(AddressBookManager)","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    void saveAddressBooks(ReadOnlyAddressBookManager addressBookManager, Path filePath) throws IOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ElginTZM":10,"-":36}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"    private final String id;","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"Zjinnnn"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"Zjinnnn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, ID.class.getSimpleName()));","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"Zjinnnn"},"content":"        if (!ID.isValidID(id)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"Zjinnnn"},"content":"            throw new IllegalValueException(ID.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"Zjinnnn"},"content":"        final ID modelId \u003d new ID(id);","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelId, modelTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"spatuly":3,"anthonytamzil":1,"Zjinnnn":9,"-":97}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.ReadOnlyAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"    public Optional\u003cAddressBookManager\u003e readAddressBooks() throws DataLoadingException {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"        return readAddressBooks(filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"    public Optional\u003cAddressBookManager\u003e readAddressBooks(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"        Optional\u003cAddressBookManager\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"                filePath, AddressBookManager.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        return jsonAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"    public void saveAddressBooks(ReadOnlyAddressBookManager addressBookManager) throws IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"        saveAddressBooks(addressBookManager, filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"     * Similar to {@link #saveAddressBook(AddressBookManager)}.","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"    public void saveAddressBooks(ReadOnlyAddressBookManager addressBookManager, Path filePath) throws IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"        requireNonNull(addressBookManager);","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"        JsonUtil.saveJsonFile(addressBookManager, filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ElginTZM":15,"-":61}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import com.fasterxml.jackson.annotation.JsonIgnore;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"// TODO: Change access modifier to package-private","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"    @JsonIgnore","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    private final String courseCode;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"            @JsonProperty(\"courseCode\") String courseCode) {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"        this.courseCode \u003d Objects.requireNonNullElse(courseCode, \"\");;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        courseCode \u003d source.getCourseCode();","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        AddressBook addressBook \u003d new AddressBook(courseCode);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ElginTZM":11,"-":55}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.ReadOnlyAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"    Optional\u003cAddressBookManager\u003e readAddressBooks() throws DataLoadingException;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"    void saveAddressBooks(ReadOnlyAddressBookManager addressBooks) throws IOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ElginTZM":4,"-":29}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.ReadOnlyAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"    public Optional\u003cAddressBookManager\u003e readAddressBooks() throws DataLoadingException {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"        return readAddressBooks(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"    public Optional\u003cAddressBookManager\u003e readAddressBooks(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"        return addressBookStorage.readAddressBooks(filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    public void saveAddressBooks(ReadOnlyAddressBookManager addressBookManager) throws IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"        saveAddressBooks(addressBookManager, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"    public void saveAddressBooks(ReadOnlyAddressBookManager addressBookManager, Path filePath) throws IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"        addressBookStorage.saveAddressBooks(addressBookManager, filePath);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ElginTZM":10,"-":69}},{"path":"src/main/java/seedu/address/ui/CourseListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import javafx.beans.value.ObservableStringValue;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":" * Panel containing the list of courses.","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"public class CourseListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"    private static final String FXML \u003d \"CourseListPanel.fxml\";","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CourseListPanel.class);","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"    @FXML","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"    private ListView\u003cString\u003e courseListView;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"    public CourseListPanel(Logic logic, ObservableList\u003cString\u003e courseList, ObservableStringValue selectedCourse) {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"        super(FXML);","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        courseListView.setItems(courseList);","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"        courseListView.setCellFactory(listView -\u003e new CourseListViewCell(logic, selectedCourse));","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"        courseListView.getSelectionModel().select(selectedCourse.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"        selectedCourse.addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"            courseListView.getSelectionModel().select(newValue);","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        });","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    class CourseListViewCell extends ListCell\u003cString\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        public CourseListViewCell(Logic logic, ObservableStringValue selectedCourse) {","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"            setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"                if (getItem() !\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"                    logic.setActiveAddressBook(getItem());","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"                    logger.info(\"Course clicked: \" + getItem());","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"            });","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"        protected void updateItem(String courseCode, boolean empty) {","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"            super.updateItem(courseCode, empty);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"            if (empty || courseCode \u003d\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"                setText(null);","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"            } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"                Label courseLabel \u003d new Label(courseCode);","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"                courseLabel.setTextAlignment(TextAlignment.CENTER);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"                courseLabel.setAlignment(Pos.CENTER);","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"                courseLabel.setMaxWidth(Double.MAX_VALUE);","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"                setGraphic(courseLabel);","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ElginTZM":71}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t09-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"anthonytamzil":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    private CourseListPanel courseListPanel;","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"    private StatusBarFooter statusBarFooter;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"    @FXML","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"    private StackPane courseListPanelPlaceholder;","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"ElginTZM"},"content":"        courseListPanel \u003d new CourseListPanel(logic, logic.getCourseList(), logic.getObservableCourseCode());","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"ElginTZM"},"content":"        courseListPanelPlaceholder.getChildren().add(courseListPanel.getRoot());","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"ElginTZM"},"content":"        statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath(),","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"ElginTZM"},"content":"                logic.getUnfilteredPersonList(), logic.getFilteredPersonList());","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"ElginTZM"},"content":"    public CourseListPanel getCourseListPanel() {","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"ElginTZM"},"content":"        return courseListPanel;","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"ElginTZM"},"content":"    public StatusBarFooter getStatusBarFooter() {","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"ElginTZM"},"content":"        return statusBarFooter;","lastModifiedDate":"2023-10-22"},{"lineNumber":185,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ElginTZM":18,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"    private Label personId;","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"fuyiqiao"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"fuyiqiao"},"content":"    private Label talliedAttendance;","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"        personId.setText(person.getId().value);","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"fuyiqiao"},"content":"        talliedAttendance.setText(person.getTalliedAttendance());","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"fuyiqiao":3,"Zjinnnn":3,"-":58}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        Label placeholderLabel \u003d new Label(\"No students to display.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"        personListView.setPlaceholder(placeholderLabel);","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ElginTZM":4,"-":49}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"    private ObservableList\u003cPerson\u003e unfilteredList;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"    private ObservableList\u003cPerson\u003e filteredList;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"    @FXML","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    private Label studentCountStatus;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"    public StatusBarFooter(Path saveLocation, ObservableList\u003cPerson\u003e unfilteredList,","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"            ObservableList\u003cPerson\u003e filteredList) {","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"        this.unfilteredList \u003d unfilteredList;","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"        this.filteredList \u003d filteredList;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        unfilteredList.addListener(new PersonListChangeListener());","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"        filteredList.addListener(new PersonListChangeListener());","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"        updateCountStatus();","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    private void updateCountStatus() {","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        studentCountStatus.setText(String.format(\"Showing %d of %d students\",","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"                filteredList.size(), unfilteredList.size()));","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"    private class PersonListChangeListener implements ListChangeListener\u003cPerson\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"        public void onChanged(Change\u003c? extends Person\u003e change) {","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"            updateCountStatus();","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ElginTZM":28,"-":27}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/tavigator.png\";","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"anthonytamzil":1,"-":87}},{"path":"src/main/resources/view/CourseListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"  \u003cListView fx:id\u003d\"courseListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ElginTZM":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"         title\u003d\"TAvigator\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"    \u003cImage url\u003d\"@/images/tavigator.png\" /\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"          \u003cVBox fx:id\u003d\"courseList\" styleClass\u003d\"pane-with-border\" maxWidth\u003d\"170\" prefWidth\u003d\"170\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"            \u003cStackPane fx:id\u003d\"courseListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ElginTZM":11,"anthonytamzil":2,"-":57}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"      \u003cLabel fx:id\u003d\"personId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$personId\" /\u003e","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"fuyiqiao"},"content":"      \u003cLabel fx:id\u003d\"talliedAttendance\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$talliedAttendance\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"fuyiqiao":1,"Zjinnnn":1,"-":35}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"  \u003cLabel fx:id\u003d\"studentCountStatus\" textAlignment\u003d\"RIGHT\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"ElginTZM":3,"-":11}},{"path":"src/test/java/seedu/address/commons/core/FilterSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"public class FilterSettingsTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"        FilterSettings filterSettings \u003d new FilterSettings();","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"        String expected \u003d FilterSettings.class.getCanonicalName() + \"{filters\u003d\" + filterSettings.getFilters() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(expected, filterSettings.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ElginTZM":14}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    public void create() {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"        Index index \u003d Index.create(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"        Index expected \u003d Index.fromZeroBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(expected, index);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ElginTZM":8,"-":67}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"        assertNotNull(AppUtil.getImage(\"/images/tavigator.png\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"anthonytamzil":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"import seedu.address.logic.commands.ListStudentsCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.ReadOnlyAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"tavigator.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"        String listCommand \u003d \"list students\";","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"        assertCommandSuccess(listCommand, ListStudentsCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"    public void getUnfilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getUnfilteredPersonList().remove(0));","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"ElginTZM"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"ElginTZM"},"content":"            public void saveAddressBooks(ReadOnlyAddressBookManager addressBookManager, Path filePath)","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"spatuly"},"content":"                + EMAIL_DESC_AMY + ID_DESC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ElginTZM":9,"spatuly":4,"Zjinnnn":1,"-":166}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"        model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ElginTZM":3,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"import javafx.beans.value.ObservableStringValue;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.core.FilterSettings;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.ReadOnlyAddressBookManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.SerializablePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"ElginTZM"},"content":"        public FilterSettings getFilterSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"ElginTZM"},"content":"        public void setFilterSettings(FilterSettings filterSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"ElginTZM"},"content":"        public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"ElginTZM"},"content":"        public void addFilter(SerializablePredicate predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"ElginTZM"},"content":"        public void deleteFilter(SerializablePredicate predicate) {","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":184,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"ElginTZM"},"content":"        public void clearFilters() {","lastModifiedDate":"2023-10-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"ElginTZM"},"content":"        public ReadOnlyAddressBookManager getAddressBookManager() {","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"ElginTZM"},"content":"        public void addAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"ElginTZM"},"content":"        public void deleteAddressBook(String courseCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"ElginTZM"},"content":"        public void setActiveAddressBook(String courseCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"ElginTZM"},"content":"        public boolean hasAddressBook(String courseCode) {","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"ElginTZM"},"content":"        public ObservableList\u003cString\u003e getCourseList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"ElginTZM"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":217,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":219,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":220,"author":{"gitId":"ElginTZM"},"content":"        public ObservableStringValue getObservableCourseCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"ElginTZM"},"content":"            return new AddressBook(\"Test Course Code\");","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ElginTZM":64,"-":203}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"        expectedModel.setAddressBook(new AddressBook(getTypicalAddressBook().getCourseCode()));","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ElginTZM":4,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"    public static final String VALID_ID_AMY \u003d \"A1234567B\";","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"    public static final String VALID_ID_BOB \u003d \"A1234567S\";","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"    public static final String VALID_TAG_G01 \u003d \"G01\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"    public static final String VALID_TAG_T09 \u003d \"T09\";","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"    public static final String TAG_DESC_G01 \u003d \" \" + PREFIX_TAG + VALID_TAG_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"    public static final String TAG_DESC_T09 \u003d \" \" + PREFIX_TAG + VALID_TAG_T09;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_ID + \"A\u0026000000X\"; // \u0027\u0026\u0027 not allowed in id","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"fuyiqiao"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"CS2103T*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"                .withId(VALID_ID_AMY).withTags(VALID_TAG_T09).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"anthonytamzil"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"                .withId(VALID_ID_BOB).withTags(VALID_TAG_G01, VALID_TAG_T09).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"ElginTZM"},"content":"        AddressBook expectedAddressBook \u003d AddressBook.createFromAddressBook(actualModel.getAddressBook());","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"ElginTZM"},"content":"        model.clearFilters();","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"ElginTZM"},"content":"        model.addFilter(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"fuyiqiao":1,"ElginTZM":4,"spatuly":6,"anthonytamzil":2,"Zjinnnn":6,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/CourseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"public class CourseCommandTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"    // @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"    // public void execute_addValidFilter_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"    //     Optional\u003cTag\u003e tag \u003d Optional.of(new Tag(\"G02\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"    //     ContainsTagPredicate predicate \u003d new ContainsTagPredicate(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    //     CourseCommand filterCommand \u003d new CourseCommand(CourseOperation.ADD, tag.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"    //     String expectedMessage \u003d String.format(CourseCommand.MESSAGE_ADD_SUCCESS, predicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"    //     ModelManager expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"    //     expectedModel.addFilter(predicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"    //     assertCommandSuccess(filterCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    // }","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"    // @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    // public void execute_removeValidFilter_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"    //     Optional\u003cTag\u003e tag \u003d Optional.of(new Tag(\"T02\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    //     ContainsTagPredicate predicate \u003d new ContainsTagPredicate(tag);","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    //     model.addFilter(predicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"    //     CourseCommand filterCommand \u003d new CourseCommand(CourseOperation.DELETE, tag.get());","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"    //     String expectedMessage \u003d String.format(CourseCommand.MESSAGE_DELETE_SUCCESS, predicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"    //     ModelManager expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"    //     assertCommandSuccess(filterCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"    // }","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"    // @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"    // public void execute_clearFilters_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"    //     Optional\u003cTag\u003e firstTag \u003d Optional.of(new Tag(\"G01\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"    //     Optional\u003cTag\u003e secondTag \u003d Optional.of(new Tag(\"G02\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"    //     ContainsTagPredicate firstPredicate \u003d new ContainsTagPredicate(firstTag);","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"    //     ContainsTagPredicate secondPredicate \u003d new ContainsTagPredicate(secondTag);","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"    //     model.addFilter(firstPredicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"    //     model.addFilter(secondPredicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"    //     CourseCommand filterCommand \u003d new CourseCommand(CourseOperation.CLEAR, null);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"    //     String expectedMessage \u003d CourseCommand.MESSAGE_CLEAR_SUCCESS;","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"    //     ModelManager expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"    //     assertCommandSuccess(filterCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"    // }","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"    // @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"    // public void execute_invalidOperation_throwsCommandException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"    //     CourseCommand filterCommand \u003d new CourseCommand(null, new Tag(\"CS2103T\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    //     assertCommandFailure(filterCommand, model, CourseCommand.MESSAGE_INVALID_OPERATION_FAILURE);","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"    // }","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"ElginTZM":71}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.predicate.ContainsTagPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.SerializablePredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"    public void execute_allWithNoTag_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag \u003d Optional.empty();","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"        ContainsTagPredicate pred \u003d new ContainsTagPredicate(tag);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(tag, pred);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_NO_TAG_SUCCESS);","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"        List\u003cPerson\u003e personsToDelete \u003d new ArrayList\u003c\u003e(expectedModel.getFilteredPersonList());","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"        for (Person p : personsToDelete) {","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"            expectedModel.deletePerson(p);","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"spatuly"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"    // TODO: Fix this testcase, currently failing due to the filters not being equal","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"ElginTZM"},"content":"        // assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"    // TODO: Additional test case for execute_AllWithTag after filter equality is fixed","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"ElginTZM"},"content":"        model.clearFilters();","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"ElginTZM"},"content":"        model.addFilter(new SerializablePredicate(unused -\u003e false));","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ElginTZM":10,"spatuly":23,"-":115}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"                .withTags(VALID_TAG_G01).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_G01).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"ElginTZM"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"ElginTZM":6,"spatuly":3,"-":174}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_G01).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"anthonytamzil"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"spatuly":2,"anthonytamzil":1,"-":62}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"        expectedModel.clearFilters();","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"        expectedModel.addFilter(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"        expectedModel.clearFilters();","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"        expectedModel.addFilter(predicate);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"anthonytamzil"},"content":"     * Parses {@code userInput} into a {@code ContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ElginTZM":8,"anthonytamzil":1,"-":84}},{"path":"src/test/java/seedu/address/logic/commands/ListAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.ListAttendanceCommand.MESSAGE_NO_STUDENTS;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.commands.ListAttendanceCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.AbsentFromTutorialPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.ContainsTagPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListAttendanceCommand.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"public class ListAttendanceCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"    private Model model;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"        model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e firstTag \u003d Optional.of(new Tag(\"G10\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e secondTag \u003d Optional.of(new Tag(\"G01\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"        Week firstWeek \u003d new Week(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"        Week secondWeek \u003d new Week(2);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"        ListAttendanceCommand listAttendanceFirstCommand \u003d new ListAttendanceCommand(firstTag, firstWeek,","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"                new ContainsTagPredicate(firstTag),","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"spatuly"},"content":"                new AbsentFromTutorialPredicate(firstWeek, firstTag));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"spatuly"},"content":"        ListAttendanceCommand listAttendanceSecondCommand \u003d new ListAttendanceCommand(secondTag, secondWeek,","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"                new ContainsTagPredicate(secondTag),","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"spatuly"},"content":"                new AbsentFromTutorialPredicate(secondWeek, firstTag));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(listAttendanceFirstCommand.equals(listAttendanceFirstCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"spatuly"},"content":"        ListAttendanceCommand listAttendanceFirstCommandCopy \u003d new ListAttendanceCommand(firstTag, firstWeek,","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"                new ContainsTagPredicate(firstTag),","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"                new AbsentFromTutorialPredicate(firstWeek, firstTag));","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(listAttendanceFirstCommand.equals(listAttendanceFirstCommandCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(listAttendanceFirstCommand.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(listAttendanceFirstCommand.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(listAttendanceFirstCommand.equals(listAttendanceSecondCommand));","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"    public void execute_listAttendanceWithTag_success() {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"spatuly"},"content":"        ALICE.addAttendance(new Attendance(new Week(2), false, \"Sick\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag \u003d Optional.of(new Tag(\"G02\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"        Week week \u003d new Week(2);","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"spatuly"},"content":"        ListAttendanceCommand command \u003d new ListAttendanceCommand(tag, week,","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"spatuly"},"content":"                new ContainsTagPredicate(tag), new AbsentFromTutorialPredicate(week, tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"spatuly"},"content":"        String expectedSummary \u003d String.format(Messages.MESSAGE_ATTENDANCE_SUMMARY_WITH_TAG, 0, 1, week.getWeekNumber(),","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"spatuly"},"content":"                tag.get().getTagName());","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"ElginTZM"},"content":"        expectedModel.addFilter(new ContainsTagPredicate(tag));","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"        expectedModel.addFilter(new AbsentFromTutorialPredicate(week, tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"ElginTZM"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedSummary + MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"ElginTZM"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"    public void execute_listWithNoStudentsWithTag_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag \u003d Optional.of(new Tag(\"TAG1\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"        Week week \u003d new Week(2);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"spatuly"},"content":"        ListAttendanceCommand command \u003d new ListAttendanceCommand(tag, week,","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"                new ContainsTagPredicate(tag), new AbsentFromTutorialPredicate(week, tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"spatuly"},"content":"        expectedModel.addFilter(new ContainsTagPredicate(tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"spatuly"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"spatuly"},"content":"                String.format(MESSAGE_NO_STUDENTS, tag.get().getTagName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"    public void execute_listWithIncompleteAttendance_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"anthonytamzil"},"content":"        ALICE.addAttendance(new Attendance(new Week(3), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"anthonytamzil"},"content":"        BENSON.addAttendance(new Attendance(new Week(3), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"anthonytamzil"},"content":"        CARL.addAttendance(new Attendance(new Week(3), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"anthonytamzil"},"content":"        ELLE.addAttendance(new Attendance(new Week(3), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"anthonytamzil"},"content":"        FIONA.addAttendance(new Attendance(new Week(3), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"anthonytamzil"},"content":"        GEORGE.addAttendance(new Attendance(new Week(3), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag \u003d Optional.empty();","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"spatuly"},"content":"        Week week \u003d new Week(3);","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"spatuly"},"content":"        ListAttendanceCommand command \u003d new ListAttendanceCommand(tag, week,","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"spatuly"},"content":"                new ContainsTagPredicate(tag), new AbsentFromTutorialPredicate(week, tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"spatuly"},"content":"        String message \u003d String.format(ListAttendanceCommand.MESSAGE_INCOMPLETE_ATTENDANCE + \"\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"spatuly"},"content":"                + \"Students with unmarked attendance: Daniel Meier\", week.getWeekNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"spatuly"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(message);","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"spatuly"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"spatuly"},"content":"    public void execute_listAttendanceNoTag_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"anthonytamzil"},"content":"        ALICE.addAttendance(new Attendance(new Week(1), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"anthonytamzil"},"content":"        BENSON.addAttendance(new Attendance(new Week(1), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"anthonytamzil"},"content":"        CARL.addAttendance(new Attendance(new Week(1), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"anthonytamzil"},"content":"        DANIEL.addAttendance(new Attendance(new Week(1), false, \"Late\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"anthonytamzil"},"content":"        ELLE.addAttendance(new Attendance(new Week(1), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"anthonytamzil"},"content":"        FIONA.addAttendance(new Attendance(new Week(1), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"anthonytamzil"},"content":"        GEORGE.addAttendance(new Attendance(new Week(1), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag \u003d Optional.empty();","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"spatuly"},"content":"        Week week \u003d new Week(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"spatuly"},"content":"        ListAttendanceCommand command \u003d new ListAttendanceCommand(tag, week,","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"spatuly"},"content":"                new ContainsTagPredicate(tag), new AbsentFromTutorialPredicate(week, tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"ElginTZM"},"content":"        int total \u003d expectedModel.getFilteredPersonList().size();","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"ElginTZM"},"content":"        String expectedSummary \u003d String.format(Messages.MESSAGE_ATTENDANCE_SUMMARY_NO_TAG, total - 1, total, 1);","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"spatuly"},"content":"        expectedModel.addFilter(new AbsentFromTutorialPredicate(week, tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"ElginTZM"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedSummary + MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"ElginTZM"},"content":"        assertCommandSuccess(command, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ElginTZM":81,"spatuly":61,"anthonytamzil":14}},{"path":"src/test/java/seedu/address/logic/commands/ListStudentsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"spatuly"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"spatuly"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.ListStudentsCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"spatuly"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"spatuly"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListStudentsCommand.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"public class ListStudentsCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"spatuly"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"        model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"        ListStudentsCommand listStudentsFirstCommand \u003d new ListStudentsCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"        ListStudentsCommand listStudentsSecondCommand \u003d new ListStudentsCommand();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"        assertTrue(listStudentsFirstCommand.equals(listStudentsFirstCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"        // both instanceof ListStudentsCommand -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"        assertTrue(listStudentsFirstCommand.equals(listStudentsSecondCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"    public void execute_listStudents_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"        assertCommandSuccess(new ListStudentsCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"ElginTZM":3,"spatuly":43}},{"path":"src/test/java/seedu/address/logic/commands/MarkAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.commands.MarkAttendanceCommand.MESSAGE_ABSENT;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.MarkAttendanceCommand.MESSAGE_PERSON_NOT_FOUND;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.commands.MarkAttendanceCommand.MESSAGE_PRESENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.MarkAttendanceCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.MarkAttendanceCommand.MESSAGE_UPDATED_SUCCESS;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":" * Test class for MarkAttendanceCommand.","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":" *","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":" * Tests include checking for valid name and ID inputs, as well as the equality of command objects.","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"public class MarkAttendanceCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"     * Test for marking attendance as present using a valid person\u0027s name.","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_marksAttendanceAsPresentWithValidPersonName_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"Amy Bee\"), true,","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS + \"%s\\n\" + \"%s\" + MESSAGE_PRESENT + \"1\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"                amy.getName(), amy.getName());","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"        Person expectedAmy \u003d new PersonBuilder(amy)","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"                .withAttendance(new Attendance(new Week(1), true, null))","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"                .build();","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"        expectedModel.addPerson(expectedAmy);","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"        assertCommandSuccess(markAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"anthonytamzil"},"content":"     * Test for marking attendance as absent using a valid person\u0027s name.","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_marksAttendanceAsAbsentWithValidPersonName_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"Amy Bee\"), false,","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), \"Late\");","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS + \"%s\\n\" + \"%s\" + MESSAGE_ABSENT + \"1\\nReason: %s\\n\",","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"anthonytamzil"},"content":"                amy.getName(), amy.getName(), \"Late\");","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"anthonytamzil"},"content":"        Person expectedAmy \u003d new PersonBuilder(amy)","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"                .withAttendance(new Attendance(new Week(1), true, null))","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"anthonytamzil"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"        expectedModel.addPerson(expectedAmy);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"anthonytamzil"},"content":"        assertCommandSuccess(markAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"anthonytamzil"},"content":"     * Test for marking attendance as present using a valid person\u0027s ID.","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_marksAttendanceAsPresentWithValidPersonID_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"anthonytamzil"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"anthonytamzil"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"A1234567E\"), true,","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS + \"%s\\n\" + \"%s\" + MESSAGE_PRESENT + \"1\\n\",","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"anthonytamzil"},"content":"                amy.getName(), amy.getName());","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"anthonytamzil"},"content":"        Person expectedAmy \u003d new PersonBuilder(amy)","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"anthonytamzil"},"content":"                .withAttendance(new Attendance(new Week(1), true, null))","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"anthonytamzil"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"anthonytamzil"},"content":"        expectedModel.addPerson(expectedAmy);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"anthonytamzil"},"content":"        assertCommandSuccess(markAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"anthonytamzil"},"content":"     * Test for marking attendance as absent using a valid person\u0027s ID.","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_marksAttendanceAsAbsentWithValidPersonID_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"Zjinnnn"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"Zjinnnn"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"A1234567E\"), true,","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS + \"%s\\n\" + \"%s\" + MESSAGE_PRESENT + \"1\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"anthonytamzil"},"content":"                amy.getName(), amy.getName());","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"anthonytamzil"},"content":"        Person expectedAmy \u003d new PersonBuilder(amy)","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"anthonytamzil"},"content":"                .withAttendance(new Attendance(new Week(1), true, null))","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"anthonytamzil"},"content":"                .build();","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"Zjinnnn"},"content":"        expectedModel.addPerson(expectedAmy);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"Zjinnnn"},"content":"        assertCommandSuccess(markAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Zjinnnn"},"content":"     * Test for marking attendance using an invalid person\u0027s name.","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"Zjinnnn"},"content":"    public void execute_marksAttendanceWithInvalidPersonName_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"Zjinnnn"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"Zjinnnn"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"Bobby\"), true,","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Zjinnnn"},"content":"        assertCommandFailure(markAttendanceCommand, model, MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"Zjinnnn"},"content":"     * Test for marking attendance using an invalid person\u0027s ID.","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"Zjinnnn"},"content":"    public void execute_marksAttendanceWithInvalidPersonID_failure() {","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"Zjinnnn"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"Zjinnnn"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"A1234555E\"), true,","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Zjinnnn"},"content":"        assertCommandFailure(markAttendanceCommand, model, MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"Zjinnnn"},"content":"     * Tests if the attendance of a person is correctly updated when an attendance","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"anthonytamzil"},"content":"     * record for the current week already exists, updating attendance to present.","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_personWithExistingAttendanceMarkedAsPresent_updatesAttendanceAsPresent() {","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Zjinnnn"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"anthonytamzil"},"content":"        Week testWeek \u003d new Week(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"Zjinnnn"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"anthonytamzil"},"content":"        amy.addAttendance(new Attendance(testWeek, false, \"Late\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"Zjinnnn"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"A1234567E\"), true,","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"anthonytamzil"},"content":"                testWeek, null);","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UPDATED_SUCCESS + \"%s\\n%s\" + MESSAGE_PRESENT + \"%d\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"anthonytamzil"},"content":"                amy.getName(), amy.getName(), 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"anthonytamzil"},"content":"        Person expectedAmy \u003d new PersonBuilder(amy).withAttendance(new Attendance(testWeek, true, null)).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"Zjinnnn"},"content":"        expectedModel.addPerson(expectedAmy);","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"anthonytamzil"},"content":"        assertCommandSuccess(markAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"anthonytamzil"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"anthonytamzil"},"content":"     * Tests if the attendance of a person is correctly updated when an attendance","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"anthonytamzil"},"content":"     * record for the current week already exists, updating attendance to absent.","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"anthonytamzil"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_personWithExistingAttendanceMarkedAsAbsent_updatesAttendanceAsAbsent() {","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"anthonytamzil"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"anthonytamzil"},"content":"        Week testWeek \u003d new Week(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"anthonytamzil"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"anthonytamzil"},"content":"        amy.addAttendance(new Attendance(testWeek, true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"A1234567E\"), false,","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"anthonytamzil"},"content":"                testWeek, \"Late\");","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UPDATED_SUCCESS + \"%s\\n\" + \"%s\" + MESSAGE_ABSENT","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"anthonytamzil"},"content":"                        + \"1\\nReason: %s\\n\",","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"anthonytamzil"},"content":"                amy.getName(), amy.getName(), \"Late\");","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"anthonytamzil"},"content":"        Person expectedAmy \u003d new PersonBuilder(amy).withAttendance(new Attendance(testWeek, true, null)).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"anthonytamzil"},"content":"        expectedModel.addPerson(expectedAmy);","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"Zjinnnn"},"content":"        assertCommandSuccess(markAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"Zjinnnn"},"content":"     * Tests if the attendance of a person is correctly added when no attendance record for the current week exists.","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"Zjinnnn"},"content":"    public void execute_personWithoutExistingAttendance_addsAttendance() {","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"Zjinnnn"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"anthonytamzil"},"content":"        Week testWeek \u003d new Week(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"Zjinnnn"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"Zjinnnn"},"content":"        MarkAttendanceCommand markAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"A1234567E\"), true,","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"anthonytamzil"},"content":"            testWeek, null);","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SUCCESS + \"%s\\n\" + \"%s\" + MESSAGE_PRESENT + \"1\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"anthonytamzil"},"content":"                amy.getName(), amy.getName());","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"anthonytamzil"},"content":"        Person expectedAmy \u003d new PersonBuilder(amy).withAttendance(new Attendance(testWeek, true, null)).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"Zjinnnn"},"content":"        expectedModel.addPerson(expectedAmy);","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"Zjinnnn"},"content":"        assertCommandSuccess(markAttendanceCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"Zjinnnn"},"content":"     * Test for the equality of MarkAttendanceCommand objects.","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"Zjinnnn"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markAmyAttendanceFirstCommand \u003d new MarkAttendanceCommand(List.of(\"Amy Bee\"), true,","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markBobAttendanceCommand \u003d new MarkAttendanceCommand(List.of(\"Bob\"), false,","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), \"Late\");","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"Zjinnnn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"Zjinnnn"},"content":"        assertEquals(markAmyAttendanceFirstCommand, markAmyAttendanceFirstCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"Zjinnnn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":218,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand markAmyAttendanceFirstCommandCopy \u003d new MarkAttendanceCommand(List.of(\"Amy Bee\"), true,","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"Zjinnnn"},"content":"        assertEquals(markAmyAttendanceFirstCommand, markAmyAttendanceFirstCommandCopy);","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"Zjinnnn"},"content":"        // null -\u003e returns not equals","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"Zjinnnn"},"content":"        assertNotEquals(markAmyAttendanceFirstCommand, null);","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"Zjinnnn"},"content":"        // different values -\u003e returns not equals","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"Zjinnnn"},"content":"        assertNotEquals(markAmyAttendanceFirstCommand, markBobAttendanceCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ElginTZM":3,"anthonytamzil":104,"Zjinnnn":122}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":" * Contains integration tests (interaction with the Model) and unit tests","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":" * for {@code ViewCommand}.","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookManager(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_nullTargetIndex_throwCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(null);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_outOfBoundTargetIndex_throwCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"        ViewCommand firstInvalidViewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"        assertCommandFailure(firstInvalidViewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_validTargetIndexWithNoAttendance_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"        Person amy \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"        Index amyIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().indexOf(amy));","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(amyIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d amy.getName().toString() + ViewCommand.MESSAGE_NO_ATTENDANCE_RECORD;","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, model);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_validTargetIndexWithPresentAttendance_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"anthonytamzil"},"content":"        Week testWeek \u003d new Week(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"anthonytamzil"},"content":"        Person amy \u003d new PersonBuilder()","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"anthonytamzil"},"content":"                .build();","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"anthonytamzil"},"content":"        amy.addAttendance(new Attendance(testWeek, true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"anthonytamzil"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"anthonytamzil"},"content":"        Index amyIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().indexOf(amy));","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(amyIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d String.format(\"%s\" + ViewCommand.MESSAGE_HEADER + \"Week \" + \"%d\" + \" : Present\\n\",","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"anthonytamzil"},"content":"                amy.getName(), testWeek.getWeekNumber());","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"anthonytamzil"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, model);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"anthonytamzil"},"content":"    public void execute_validTargetIndexWithAbsentAttendance_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"        Week testWeek \u003d new Week(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"anthonytamzil"},"content":"        Person amy \u003d new PersonBuilder()","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"anthonytamzil"},"content":"                .build();","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"anthonytamzil"},"content":"        amy.addAttendance(new Attendance(testWeek, false, \"Late\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"anthonytamzil"},"content":"        model.addPerson(amy);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"anthonytamzil"},"content":"        Index amyIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().indexOf(amy));","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"anthonytamzil"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(amyIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance \u003d amy.getAttendanceRecords().get(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"anthonytamzil"},"content":"        String expectedMessage \u003d String.format(\"%s\" + ViewCommand.MESSAGE_HEADER + \"Week \" + \"%d\" + \" : Absent - %s\\n\",","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"anthonytamzil"},"content":"                amy.getName(), testWeek.getWeekNumber(), attendance.getReason());","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"anthonytamzil"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, model);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"anthonytamzil"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"anthonytamzil"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"anthonytamzil"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"anthonytamzil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"anthonytamzil"},"content":"        assertEquals(viewFirstCommand, viewFirstCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"anthonytamzil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"anthonytamzil"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"anthonytamzil"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"anthonytamzil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"anthonytamzil"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"anthonytamzil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"anthonytamzil"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"anthonytamzil"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"anthonytamzil"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"ElginTZM":2,"anthonytamzil":107}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_T09;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_T09;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_T09).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"                + ID_DESC_BOB + TAG_DESC_T09, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"spatuly"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_T09, VALID_TAG_G01)","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":60,"author":{"gitId":"anthonytamzil"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"                + TAG_DESC_G01 + TAG_DESC_T09, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"                + ID_DESC_BOB + TAG_DESC_T09;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"anthonytamzil"},"content":"        // multiple ids","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, ID_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"anthonytamzil"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ID));","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"anthonytamzil"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ID_DESC_AMY","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"anthonytamzil"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_EMAIL, PREFIX_PHONE, PREFIX_ID));","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":124,"author":{"gitId":"spatuly"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ID_DESC_AMY,","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB,","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ID_DESC_BOB,","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ID_DESC_BOB,","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + ID_DESC_BOB,","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"spatuly"},"content":"                + TAG_DESC_G01 + TAG_DESC_T09, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"spatuly"},"content":"                + TAG_DESC_G01 + TAG_DESC_T09, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ID_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"spatuly"},"content":"                + TAG_DESC_G01 + TAG_DESC_T09, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"spatuly"},"content":"                + INVALID_TAG_DESC + VALID_TAG_T09, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ID_DESC_BOB,","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"spatuly"},"content":"                + ID_DESC_BOB + TAG_DESC_G01 + TAG_DESC_T09,","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"spatuly":16,"anthonytamzil":15,"Zjinnnn":2,"-":143}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.commands.CourseCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"anthonytamzil"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_NAME + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"anthonytamzil"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" attendance w/1\") instanceof ListCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"spatuly"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" students\") instanceof ListCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"anthonytamzil"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"anthonytamzil"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"anthonytamzil"},"content":"                MarkAttendanceCommand.COMMAND_WORD + \" n/foo a/1 w/1\") instanceof MarkAttendanceCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"anthonytamzil"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"anthonytamzil"},"content":"                MarkAttendanceCommand.COMMAND_WORD + \" n/foo a/1 w/1 r/Late\") instanceof MarkAttendanceCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"anthonytamzil"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"anthonytamzil"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"anthonytamzil"},"content":"                ViewCommand.COMMAND_WORD + \" 1\") instanceof ViewCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"ElginTZM"},"content":"    public void parseCommand_course() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"ElginTZM"},"content":"                CourseCommand.COMMAND_WORD + \" create coursetg/CS2103T\") instanceof CourseCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"ElginTZM"},"content":"                CourseCommand.COMMAND_WORD + \" delete coursetg/CS2103T\") instanceof CourseCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"ElginTZM"},"content":"                CourseCommand.COMMAND_WORD + \" switch coursetg/CS2103T\") instanceof CourseCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ElginTZM":10,"spatuly":2,"anthonytamzil":19,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.predicate.ContainsTagPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag \u003d Optional.empty();","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"        assertParseSuccess(parser, \"all\", new DeleteCommand(tag, new ContainsTagPredicate(tag)));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag2 \u003d Optional.of(new Tag(\"G10\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"        assertParseSuccess(parser, \"all tg/G10\", new DeleteCommand(tag2, new ContainsTagPredicate(tag)));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, \"all 123\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"spatuly":12,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_T09;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_T09;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_T09 + TAG_DESC_G01 + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_T09 + TAG_EMPTY + TAG_DESC_G01, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_T09 + TAG_DESC_G01, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_G01","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"spatuly"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_T09;","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"anthonytamzil"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"spatuly"},"content":"                .withTags(VALID_TAG_G01, VALID_TAG_T09).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"spatuly"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_T09;","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"spatuly"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_T09).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"spatuly"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_T09 + PHONE_DESC_AMY","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"spatuly"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_T09 + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"anthonytamzil"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"anthonytamzil"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC + INVALID_PHONE_DESC","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"anthonytamzil"},"content":"                + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"anthonytamzil"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"spatuly":14,"anthonytamzil":6,"-":174}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.commands.CourseCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"    private CourseCommandParser parser \u003d new CourseCommandParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"        // TODO: To be done after FilterCommand and FilterCommandParser is improved","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CourseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"        assertParseFailure(parser, \" \",","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CourseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, \"add tg/2\",","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CourseCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ElginTZM":26,"spatuly":1}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.predicate.IdContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \" Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"        assertParseSuccess(parser, \"       \" + PREFIX_NAME + \"        Alice         Bob      \",","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"                expectedFindCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"    public void parse_validIdArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"                new FindCommand(new IdContainsKeywordsPredicate(Arrays.asList(\"A1234567B\", \"A1234567E\")));","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_ID + \" A1234567B A1234567E\", expectedFindCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"        assertParseSuccess(parser, \"       \" + PREFIX_ID + \"        A1234567E         A1234567B      \",","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"                expectedFindCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"ElginTZM":1,"anthonytamzil":20,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.commands.ListAttendanceCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.commands.ListStudentsCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.AbsentFromTutorialPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.ContainsTagPredicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"spatuly"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"spatuly"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"spatuly"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"        assertParseFailure(parser, \"  abc   \",","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"    public void parse_listStudentsInvalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, \"students 123\",","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListStudentsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"    public void parse_listAttendanceMissingArgs_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, \"  attendance  tg/G02 \",","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, \"  attendance  \",","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"spatuly"},"content":"    public void parse_listAttendanceExtraPreamble_throwsParseException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"spatuly"},"content":"        assertParseFailure(parser, \" attendance abc w/1 tg/G02 \",","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"    public void parse_validArgs_returnsListStudentsCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"        ListStudentsCommand expectedListStudentsCommand \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"                new ListStudentsCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"        assertParseSuccess(parser, \" students\", expectedListStudentsCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"        assertParseSuccess(parser, \"       students      \", expectedListStudentsCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"    public void parse_validArgs_returnsListAttendanceCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"spatuly"},"content":"        // with leading and trailing whitespaces","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e tag \u003d Optional.of(new Tag(\"G02\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"        Week week \u003d new Week(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"        ListAttendanceCommand expectedListAttendanceCommand \u003d new ListAttendanceCommand(tag, week,","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"                new ContainsTagPredicate(tag), new AbsentFromTutorialPredicate(week, tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"        assertParseSuccess(parser, \" attendance tg/G02 w/1 \", expectedListAttendanceCommand);","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"spatuly"},"content":"        assertParseSuccess(parser, \"    attendance      tg/     G02     w/    1      \",","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"                expectedListAttendanceCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ElginTZM":46,"spatuly":32}},{"path":"src/test/java/seedu/address/logic/parser/MarkAttendanceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REASON;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.logic.commands.MarkAttendanceCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":" * Test class for MarkAttendanceCommandParser.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":" *","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":" * Tests include parsing valid arguments to return a MarkAttendanceCommand object and handling invalid arguments.","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"public class MarkAttendanceCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"    private MarkAttendanceCommandParser parser \u003d new MarkAttendanceCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the parsing of valid arguments using a name to return a {@code MarkAttendanceCommand}.","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"    public void parse_validArgsWithName_returnsMarkAttendanceCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"        String userInput \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY + \" \" + PREFIX_ATTENDANCE + \" 1 \"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"                + PREFIX_WEEK + \" 1\";","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand expectedCommand \u003d new MarkAttendanceCommand(List.of(VALID_NAME_AMY), true,","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the parsing of valid arguments using an ID to return a {@code MarkAttendanceCommand}.","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"    public void parse_validArgsWithId_returnsMarkAttendanceCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"        String userInput \u003d \" \" + PREFIX_ID + \" \" + VALID_ID_AMY + \" \" + PREFIX_ATTENDANCE + \" 1 \" + PREFIX_WEEK + \" 1\";","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"        MarkAttendanceCommand expectedCommand \u003d new MarkAttendanceCommand(List.of(VALID_ID_AMY), true,","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the parsing of valid arguments using multiple names to return a {@code MarkAttendanceCommand}.","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"    public void parse_validArgsWithMultipleNames_returnsMarkAttendanceCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"anthonytamzil"},"content":"        String userInput \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY + \",\" + VALID_NAME_BOB + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"anthonytamzil"},"content":"                + PREFIX_ATTENDANCE + \" 1 \" + PREFIX_WEEK + \" 1\";","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"        MarkAttendanceCommand expectedCommand \u003d new MarkAttendanceCommand(List.of(VALID_NAME_AMY, VALID_NAME_BOB), true,","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), null);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Zjinnnn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the parsing of valid arguments using multiple IDs to return a {@code MarkAttendanceCommand}.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"Zjinnnn"},"content":"    public void parse_validArgsWithMultipleIds_returnsMarkAttendanceCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"anthonytamzil"},"content":"        String reasonForAbsence \u003d \"Late\";","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"anthonytamzil"},"content":"        String userInput \u003d \" \" + PREFIX_ID + \" \" + VALID_ID_AMY + \",\" + VALID_ID_BOB + \" \" + PREFIX_ATTENDANCE + \" 0 \"","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"anthonytamzil"},"content":"                + PREFIX_WEEK + \" 1 \" + PREFIX_REASON + \" \" + reasonForAbsence;","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"Zjinnnn"},"content":"        MarkAttendanceCommand expectedCommand \u003d new MarkAttendanceCommand(List.of(VALID_ID_AMY, VALID_ID_BOB), false,","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"anthonytamzil"},"content":"                new Week(1), reasonForAbsence);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"Zjinnnn"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the parsing of arguments with unexpected preamble data to ensure a {@code ParseException} is thrown.","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Zjinnnn"},"content":"    public void parse_unexpectedPreamble_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"Zjinnnn"},"content":"        // Unexpected preamble data \"unexpected\" before the valid arguments","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, \"unexpected \" + PREFIX_NAME + \" \" + VALID_NAME_AMY + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"anthonytamzil"},"content":"                        + PREFIX_ATTENDANCE + \" 1\",","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"Zjinnnn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"Zjinnnn"},"content":"        // Unexpected preamble data \"unexpected\" before the valid arguments with ID","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, \"unexpected \" + PREFIX_ID + \" \" + VALID_ID_AMY + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"anthonytamzil"},"content":"                        + PREFIX_ATTENDANCE + \" 0\",","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"Zjinnnn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the parsing of invalid arguments to ensure a {@code ParseException} is thrown.","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"Zjinnnn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"Zjinnnn"},"content":"        // Invalid attendance value","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY + \" \"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"anthonytamzil"},"content":"                        + PREFIX_ATTENDANCE + \" 2 \" + PREFIX_WEEK + \" 1\",","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"Zjinnnn"},"content":"                String.format(Attendance.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"Zjinnnn"},"content":"        // Missing name prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, VALID_NAME_AMY + \" \" + PREFIX_ATTENDANCE + \" 1 \" + PREFIX_WEEK + \" 1\",","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"Zjinnnn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"Zjinnnn"},"content":"        // Missing attendance prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY + \" 1 \" + PREFIX_WEEK + \" 1\",","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"anthonytamzil"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"anthonytamzil"},"content":"        // Missing week prefix","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY + \" 1\",","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"Zjinnnn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"anthonytamzil":32,"Zjinnnn":87}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"import static java.lang.Integer.parseInt;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.logic.parser.ParserUtil.CourseOperation;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.person.ID;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"    private static final String INVALID_ID \u003d \"E12345678\";","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    private static final String INVALID_FILTER_OPERATION \u003d \"update\";","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"    private static final String INVALID_WEEK \u003d \"25\";","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"    private static final String INVALID_WEEK_UNPARSEABLE \u003d \":\";","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"    private static final String VALID_ID \u003d \"A1234567H\";","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"    private static final String VALID_CREATE_OPERATION \u003d \"create\";","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"    private static final String VALID_DELETE_OPERATION \u003d \"delete\";","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    private static final String VALID_SWITCH_OPERATION \u003d \"switch\";","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"    private static final String VALID_WEEK \u003d \"2\";","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"anthonytamzil"},"content":"    public void parseId_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"anthonytamzil"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseId((String) null));","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"anthonytamzil"},"content":"    public void parseId_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"anthonytamzil"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseId(INVALID_ID));","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"anthonytamzil"},"content":"    public void parseId_validValueWithoutWhitespace_returnsId() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"anthonytamzil"},"content":"        ID expectedId \u003d new ID(VALID_ID);","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"anthonytamzil"},"content":"        assertEquals(expectedId, ParserUtil.parseId(VALID_ID));","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"anthonytamzil"},"content":"    public void parseId_validValueWithWhitespace_returnsTrimmedId() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"anthonytamzil"},"content":"        String idWithWhitespace \u003d WHITESPACE + VALID_ID + WHITESPACE;","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"anthonytamzil"},"content":"        ID expectedId \u003d new ID(VALID_ID);","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"anthonytamzil"},"content":"        assertEquals(expectedId, ParserUtil.parseId(idWithWhitespace));","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"anthonytamzil"},"content":"    public void parseWeek_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"anthonytamzil"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseWeek(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"anthonytamzil"},"content":"    public void parseWeek_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"anthonytamzil"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeek(INVALID_WEEK));","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"anthonytamzil"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeek(INVALID_WEEK_UNPARSEABLE));","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"anthonytamzil"},"content":"    public void parseWeek_validValueWithoutWhitespace_returnsWeek() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"anthonytamzil"},"content":"        Week expectedWeek \u003d new Week(parseInt(VALID_WEEK));","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"anthonytamzil"},"content":"        assertEquals(expectedWeek, ParserUtil.parseWeek(VALID_WEEK));","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"anthonytamzil"},"content":"    public void parseWeek_validValueWithWhitespace_returnsTrimmedWeek() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"anthonytamzil"},"content":"        String weekWithWhitespace \u003d WHITESPACE + VALID_WEEK + WHITESPACE;","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"anthonytamzil"},"content":"        Week expectedWeek \u003d new Week(parseInt(VALID_WEEK));","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"anthonytamzil"},"content":"        assertEquals(expectedWeek, ParserUtil.parseWeek(weekWithWhitespace));","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"ElginTZM"},"content":"    public void parseFilterOperation_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"ElginTZM"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFilterOperation((String) null));","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"ElginTZM"},"content":"    public void parseFilterOperation_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"ElginTZM"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFilterOperation(INVALID_FILTER_OPERATION));","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"ElginTZM"},"content":"    public void parseFilterOperation_validValueWithputWhiteSpace_returnsFilterOperation() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(CourseOperation.CREATE, ParserUtil.parseFilterOperation(VALID_CREATE_OPERATION));","lastModifiedDate":"2023-10-28"},{"lineNumber":245,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(CourseOperation.DELETE, ParserUtil.parseFilterOperation(VALID_DELETE_OPERATION));","lastModifiedDate":"2023-10-28"},{"lineNumber":246,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(CourseOperation.SWITCH, ParserUtil.parseFilterOperation(VALID_SWITCH_OPERATION));","lastModifiedDate":"2023-10-28"},{"lineNumber":247,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"ElginTZM"},"content":"    public void parseFilterOperation_validValueWithWhiteSpace_returnsFilterOperation() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"ElginTZM"},"content":"        String addOperationWithWhitespace \u003d WHITESPACE + VALID_CREATE_OPERATION + WHITESPACE;","lastModifiedDate":"2023-10-28"},{"lineNumber":252,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(CourseOperation.CREATE, ParserUtil.parseFilterOperation(addOperationWithWhitespace));","lastModifiedDate":"2023-10-28"},{"lineNumber":253,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"ElginTZM"},"content":"        String deleteOperationWithWhitespace \u003d WHITESPACE + VALID_DELETE_OPERATION + WHITESPACE;","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(CourseOperation.DELETE, ParserUtil.parseFilterOperation(deleteOperationWithWhitespace));","lastModifiedDate":"2023-10-28"},{"lineNumber":256,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"ElginTZM"},"content":"        String clearOperationWithWhitespace \u003d WHITESPACE + VALID_SWITCH_OPERATION + WHITESPACE;","lastModifiedDate":"2023-10-28"},{"lineNumber":258,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(CourseOperation.SWITCH, ParserUtil.parseFilterOperation(clearOperationWithWhitespace));","lastModifiedDate":"2023-10-28"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ElginTZM":35,"anthonytamzil":43,"-":183}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":" * Test class for ViewCommandParser.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":" *","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":" * Tests include parsing valid arguments to return a ViewCommand object and handling invalid arguments.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"anthonytamzil":30}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    private final AddressBook addressBook \u003d new AddressBook(\"Test Course Code\");","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_G01).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_G01).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"ElginTZM"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"ElginTZM"},"content":"        public String getCourseCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"ElginTZM"},"content":"            return \"Test Course Code\";","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"ElginTZM"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ElginTZM":6,"spatuly":3,"-":101}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.commons.core.FilterSettings;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.testutil.AddressBookManagerBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(new FilterSettings(), modelManager.getFilterSettings());","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(new AddressBookManager(), modelManager.getAddressBookManager());","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        userPrefs.setFilterSettings(new FilterSettings(new HashSet\u003c\u003e()));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"    public void setFilterSettings_nullFilterSettings_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setFilterSettings(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"    public void setFilterSettings_validFilterSettings_setsFilterSettings() {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"        FilterSettings filterSettings \u003d new FilterSettings(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"        modelManager.setFilterSettings(filterSettings);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(filterSettings, modelManager.getFilterSettings());","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"ElginTZM"},"content":"    public void getUnfilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"ElginTZM"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getUnfilteredPersonList().remove(0));","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"ElginTZM"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder(\"Test Course Code\")","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"ElginTZM"},"content":"                .withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager addressBookManager \u003d new AddressBookManagerBuilder().withAddressBook(addressBook).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager differentAddressBookManager \u003d new AddressBookManager();","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"ElginTZM"},"content":"        modelManager \u003d new ModelManager(addressBookManager, userPrefs);","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"ElginTZM"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBookManager, userPrefs);","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBookManager, userPrefs)));","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":144,"author":{"gitId":"ElginTZM"},"content":"        modelManager.addFilter(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBookManager, userPrefs)));","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":148,"author":{"gitId":"ElginTZM"},"content":"        modelManager.clearFilters();","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":153,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBookManager, differentUserPrefs)));","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ElginTZM":35,"-":120}},{"path":"src/test/java/seedu/address/model/person/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":" * Test class for the Attendance model.","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"public class AttendanceTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the equality of two Attendance objects.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance1 \u003d new Attendance(new Week(1), true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance2 \u003d new Attendance(new Week(1), true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance3 \u003d new Attendance(new Week(1), false, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"        assertEquals(attendance1, attendance1);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"        assertEquals(attendance1, attendance2);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"        assertNotEquals(1, attendance1);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"        assertNotEquals(null, attendance1);","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"        // different attendance status -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"        assertNotEquals(attendance1, attendance3);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the retrieval of the date from an Attendance object.","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"    public void getDate_validAttendance_dateRetrieved() {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"        Week testDate \u003d new Week(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance \u003d new Attendance(testDate, true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"        assertEquals(testDate, attendance.getWeek());","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the setting of attendance status in an Attendance object.","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"    public void setAttendance_changeAttendanceStatus_attendanceStatusChanged() {","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance \u003d new Attendance(new Week(1), true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"        attendance.setAttendance(false);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"        assertFalse(attendance.isPresent());","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the hash code generation for an Attendance object.","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"Zjinnnn"},"content":"    public void hashCode_validAttendance_correctHashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"anthonytamzil"},"content":"        Week testDate \u003d new Week(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance1 \u003d new Attendance(testDate, true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance2 \u003d new Attendance(testDate, true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"        assertEquals(attendance1.hashCode(), attendance2.hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance3 \u003d new Attendance(testDate, false, \"Late\");","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Zjinnnn"},"content":"        assertNotEquals(attendance1.hashCode(), attendance3.hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the string representation of an Attendance object.","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"Zjinnnn"},"content":"    public void toString_validAttendance_correctStringRepresentation() {","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"anthonytamzil"},"content":"        Week testDate \u003d new Week(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance \u003d new Attendance(testDate, true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"anthonytamzil"},"content":"        String expectedString \u003d \"Week: \" + testDate + \", Present: true\";","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"Zjinnnn"},"content":"        assertEquals(expectedString, attendance.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"anthonytamzil":16,"Zjinnnn":69}},{"path":"src/test/java/seedu/address/model/person/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zjinnnn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Zjinnnn"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"Zjinnnn"},"content":" * Test class for the ID model.","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Zjinnnn"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"Zjinnnn"},"content":"public class IdTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the construction of ID with null input.","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Zjinnnn"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"Zjinnnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ID(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the construction of ID with invalid input.","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"Zjinnnn"},"content":"    public void constructor_invalidID_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"        String invalidID \u003d \"12345678\";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ID(invalidID));","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the validity of various ID formats.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"    public void isValidID() {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"Zjinnnn"},"content":"        // null ID","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"        assertThrows(NullPointerException.class, () -\u003e ID.isValidID(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"        // invalid IDs","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"Zjinnnn"},"content":"        assertFalse(ID.isValidID(\"\")); // empty string","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"Zjinnnn"},"content":"        assertFalse(ID.isValidID(\" \")); // spaces only","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"Zjinnnn"},"content":"        assertFalse(ID.isValidID(\"12345678\")); // 8 numbers","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Zjinnnn"},"content":"        assertFalse(ID.isValidID(\"A12345678Z\")); // 2 letters","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"Zjinnnn"},"content":"        assertFalse(ID.isValidID(\"A1234567\")); // missing last letter","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"        assertFalse(ID.isValidID(\"A1234567B A0252\")); // only first id is valid","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"        assertFalse(ID.isValidID(\"A1234567 A1234567E\")); // only second id is valid","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"        // valid IDs","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Zjinnnn"},"content":"        assertTrue(ID.isValidID(\"A1234567E\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"        assertTrue(ID.isValidID(\"A9876543Z\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"        assertTrue(ID.isValidID(\"A1234567F A1234567E\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Zjinnnn"},"content":"     * Tests the hash code generation for an ID object.","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"    public void hashCode_validID_correctHashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"        ID id1 \u003d new ID(\"A1234567E\");","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"Zjinnnn"},"content":"        ID id2 \u003d new ID(\"A1234567E\");","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"        assertEquals(id1.hashCode(), id2.hashCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"Zjinnnn"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"anthonytamzil":3,"Zjinnnn":61}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"Zjinnnn"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"Zjinnnn"},"content":"        Person editedAlice \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"Zjinnnn"},"content":"                new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"spatuly"},"content":"                .withTags(VALID_TAG_G01).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Zjinnnn"},"content":"     * Tests if an empty Optional is returned when there\u0027s no attendance record for the current week.","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"Zjinnnn"},"content":"    public void getAttendanceForCurrentWeek_noAttendance_emptyOptional() {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Zjinnnn"},"content":"        Person emptyAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"        Optional\u003cAttendance\u003e result \u003d emptyAlice.getAttendanceForSpecifiedWeek(new Week(1));","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"Zjinnnn"},"content":"        System.out.println(result);","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"Zjinnnn"},"content":"        assertFalse(result.isPresent());","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"Zjinnnn"},"content":"     * Tests if an attendance record for the current week is correctly retrieved when it exists.","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"Zjinnnn"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"Zjinnnn"},"content":"    public void getAttendanceForCurrentWeek_attendanceExists_optionalWithAttendance() {","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"anthonytamzil"},"content":"        Week testWeek \u003d new Week(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance \u003d new Attendance(testWeek, true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Zjinnnn"},"content":"        Person emptyAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"Zjinnnn"},"content":"        emptyAlice.addAttendance(attendance);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"anthonytamzil"},"content":"        Optional\u003cAttendance\u003e result \u003d emptyAlice.getAttendanceForSpecifiedWeek(testWeek);","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"Zjinnnn"},"content":"        assertTrue(result.isPresent());","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"anthonytamzil"},"content":"        assertTrue(result.get().getWeek().equals(testWeek));","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":114,"author":{"gitId":"spatuly"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_G01).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"anthonytamzil"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", id\u003d\" + ALICE.getId() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"spatuly":3,"anthonytamzil":7,"Zjinnnn":25,"-":89}},{"path":"src/test/java/seedu/address/model/person/TalliedAttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"fuyiqiao"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"fuyiqiao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"fuyiqiao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"fuyiqiao"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"fuyiqiao"},"content":"public class TalliedAttendanceTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"fuyiqiao"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"fuyiqiao"},"content":"    public void getTalliedAttendance_noAttendanceRecords() {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"fuyiqiao"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"fuyiqiao"},"content":"        String expectedString \u003d \"Attendance : No attendance records.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"fuyiqiao"},"content":"        String actualString \u003d person.getTalliedAttendance();","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"fuyiqiao"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"fuyiqiao"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"fuyiqiao"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"fuyiqiao"},"content":"    public void getTalliedAttendance_allAbsent() {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"fuyiqiao"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"        Week testDate \u003d new Week(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance1 \u003d new Attendance(testDate, false, \"Late\");","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance2 \u003d new Attendance(testDate, false, \"Late\");","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"fuyiqiao"},"content":"        person.addAttendance(attendance1);","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"fuyiqiao"},"content":"        person.addAttendance(attendance2);","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"fuyiqiao"},"content":"        String expectedString \u003d \"Attendance : 0 / 2 (2 tutorials missed)\";","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"fuyiqiao"},"content":"        String actualString \u003d person.getTalliedAttendance();","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"fuyiqiao"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"fuyiqiao"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"fuyiqiao"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"fuyiqiao"},"content":"    public void getTalliedAttendance_allPresent() {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"fuyiqiao"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"        Week testDate \u003d new Week(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance1 \u003d new Attendance(testDate, true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance2 \u003d new Attendance(testDate, true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"fuyiqiao"},"content":"        person.addAttendance(attendance1);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"fuyiqiao"},"content":"        person.addAttendance(attendance2);","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"fuyiqiao"},"content":"        String expectedString \u003d \"Attendance : 2 / 2 (0 tutorials missed)\";","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"fuyiqiao"},"content":"        String actualString \u003d person.getTalliedAttendance();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"fuyiqiao"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"fuyiqiao"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"fuyiqiao"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"fuyiqiao"},"content":"    public void getTalliedAttendance_mixedAttendanceRecords() {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"fuyiqiao"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"        Week testDate \u003d new Week(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance1 \u003d new Attendance(testDate, true, null);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"anthonytamzil"},"content":"        Attendance attendance2 \u003d new Attendance(testDate, false, \"Late\");","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"fuyiqiao"},"content":"        person.addAttendance(attendance1);","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"fuyiqiao"},"content":"        person.addAttendance(attendance2);","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"fuyiqiao"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"fuyiqiao"},"content":"        String expectedString \u003d \"Attendance : 1 / 2 (1 tutorials missed)\";","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"fuyiqiao"},"content":"        String actualString \u003d person.getTalliedAttendance();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"fuyiqiao"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"fuyiqiao"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"fuyiqiao"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"fuyiqiao":53,"anthonytamzil":10}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"spatuly"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_G01).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"spatuly":2,"-":163}},{"path":"src/test/java/seedu/address/model/predicate/AbsentFromTutorialPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"import seedu.address.model.week.Week;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"public class AbsentFromTutorialPredicateTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"    public void test_absentFromTutorialNum_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"        // With person absent","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"        AbsentFromTutorialPredicate predicate \u003d new AbsentFromTutorialPredicate(","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"spatuly"},"content":"                new Week(1), Optional.of(new Tag(\"G02\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"        Person person \u003d new PersonBuilder().withTags(\"G02\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"        person.addAttendance(new Attendance(new Week(1), false, \"Sick\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(predicate.test(person));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"        // Ignore case","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"        AbsentFromTutorialPredicate predicate2 \u003d new AbsentFromTutorialPredicate(","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"                new Week(1), Optional.of(new Tag(\"G02\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"        Person person2 \u003d new PersonBuilder().withTags(\"g02\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"        person2.addAttendance(new Attendance(new Week(1), false, \"Sick\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(predicate2.test(person2));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"        // With no tag","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"        AbsentFromTutorialPredicate predicate3 \u003d new AbsentFromTutorialPredicate(","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"                new Week(1), Optional.empty());","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"        Person person3 \u003d new PersonBuilder().withTags(\"G10\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"        person3.addAttendance(new Attendance(new Week(1), false, \"Sick\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(predicate3.test(person3));","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"    public void test_absentFromTutorialNum_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"        // With person not absent","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        AbsentFromTutorialPredicate predicate \u003d new AbsentFromTutorialPredicate(","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"                new Week(1), Optional.of(new Tag(\"G01\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"spatuly"},"content":"        Person person \u003d new PersonBuilder().withTags(\"G01\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"        person.addAttendance(new Attendance(new Week(1), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(predicate.test(person));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"        // With multiple attendances","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"        AbsentFromTutorialPredicate predicate2 \u003d new AbsentFromTutorialPredicate(","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"spatuly"},"content":"                new Week(1), Optional.of(new Tag(\"G01\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"        Person person2 \u003d new PersonBuilder().withTags(\"CS2103T\").build();","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"anthonytamzil"},"content":"        person2.addAttendance(new Attendance(new Week(1), false, \"Late\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"        person2.addAttendance(new Attendance(new Week(1), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"anthonytamzil"},"content":"        person2.addAttendance(new Attendance(new Week(1), true, null));","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(predicate2.test(person2));","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"        // With wrong tag","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"        AbsentFromTutorialPredicate predicate3 \u003d new AbsentFromTutorialPredicate(","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"spatuly"},"content":"                new Week(1), Optional.of(new Tag(\"G01\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"        Person person3 \u003d new PersonBuilder().withTags(\"G02\").build();","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"anthonytamzil"},"content":"        person.addAttendance(new Attendance(new Week(1), false, \"Late\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(predicate3.test(person3));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e firstTag \u003d Optional.of(new Tag(\"first\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"spatuly"},"content":"        Optional\u003cTag\u003e secondTag \u003d Optional.of(new Tag(\"second\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"spatuly"},"content":"        Week firstWeek \u003d new Week(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"        Week secondWeek \u003d new Week(2);","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"spatuly"},"content":"        AbsentFromTutorialPredicate firstPredicate \u003d new AbsentFromTutorialPredicate(firstWeek, firstTag);","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"spatuly"},"content":"        AbsentFromTutorialPredicate secondPredicate \u003d new AbsentFromTutorialPredicate(secondWeek, secondTag);","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"ElginTZM"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"spatuly"},"content":"        AbsentFromTutorialPredicate firstPredicateCopy \u003d new AbsentFromTutorialPredicate(firstWeek, firstTag);","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"ElginTZM"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"ElginTZM"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"ElginTZM"},"content":"    public void create() {","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"spatuly"},"content":"        Tag tag \u003d Tag.create(\"T02\");","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"spatuly"},"content":"        Week week \u003d new Week(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"        AbsentFromTutorialPredicate predicate \u003d AbsentFromTutorialPredicate.create(week, Optional.of(tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"        AbsentFromTutorialPredicate expected \u003d new AbsentFromTutorialPredicate(week, Optional.of(tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(expected, predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"ElginTZM"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"spatuly"},"content":"        Tag tag \u003d Tag.create(\"T02\");","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"spatuly"},"content":"        Week week \u003d new Week(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"spatuly"},"content":"        AbsentFromTutorialPredicate predicate \u003d AbsentFromTutorialPredicate.create(week, Optional.of(tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"spatuly"},"content":"        assertEquals(\"Attendance Filter: \" + week + \" \" + tag.getTagName(), predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ElginTZM":77,"spatuly":25,"anthonytamzil":12}},{"path":"src/test/java/seedu/address/model/predicate/ContainsTagPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"spatuly"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"public class ContainsTagPredicateTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"    public void test_idContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"        Tag tag \u003d new Tag(\"first\");","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"spatuly"},"content":"        ContainsTagPredicate predicate \u003d new ContainsTagPredicate(Optional.of(tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"first\", \"second\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"    public void test_idDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"        Tag tag \u003d new Tag(\"first\");","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"        // Non-matching tag","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"        ContainsTagPredicate predicate \u003d new ContainsTagPredicate(Optional.of(tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"second\", \"third\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"        Tag firstTag \u003d new Tag(\"first\");","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"        Tag secondTag \u003d new Tag(\"second\");","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"        ContainsTagPredicate firstPredicate \u003d new ContainsTagPredicate(Optional.of(firstTag));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"spatuly"},"content":"        ContainsTagPredicate secondPredicate \u003d new ContainsTagPredicate(Optional.of(secondTag));","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"spatuly"},"content":"        ContainsTagPredicate firstPredicateCopy \u003d new ContainsTagPredicate(Optional.of(firstTag));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"    public void create() {","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"spatuly"},"content":"        Tag tag \u003d Tag.create(\"T02\");","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"spatuly"},"content":"        ContainsTagPredicate predicate \u003d ContainsTagPredicate.create(Optional.of(tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"spatuly"},"content":"        ContainsTagPredicate expected \u003d new ContainsTagPredicate(Optional.of(tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(expected, predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"spatuly"},"content":"        Tag tag \u003d Tag.create(\"T02\");","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"spatuly"},"content":"        ContainsTagPredicate predicate \u003d new ContainsTagPredicate(Optional.of(tag));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(\"Tag Filter: \" + tag.getTagName(), predicate.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ElginTZM":62,"spatuly":12}},{"path":"src/test/java/seedu/address/model/predicate/IdContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"public class IdContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    public void test_idContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"        // One keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"        IdContainsKeywordsPredicate predicate \u003d new IdContainsKeywordsPredicate(Collections.singletonList(\"A1234567B\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(predicate.test(new PersonBuilder().withId(\"A1234567B\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"        predicate \u003d new IdContainsKeywordsPredicate(Arrays.asList(\"A1234567B\", \"A1234568C\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(predicate.test(new PersonBuilder().withId(\"A1234567B\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"        predicate \u003d new IdContainsKeywordsPredicate(Arrays.asList(\"A1234567B\", \"5678B\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(predicate.test(new PersonBuilder().withId(\"A1234567B\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"        // Mixed-case keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        predicate \u003d new IdContainsKeywordsPredicate(Arrays.asList(\"a1234567B\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(predicate.test(new PersonBuilder().withId(\"A1234567B\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"    public void test_idDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"        IdContainsKeywordsPredicate predicate \u003d new IdContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(predicate.test(new PersonBuilder().withId(\"A1234567B\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"        predicate \u003d new IdContainsKeywordsPredicate(Arrays.asList(\"A1234567C\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(predicate.test(new PersonBuilder().withId(\"A1234567B\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"        predicate \u003d new IdContainsKeywordsPredicate(Arrays.asList(\"12346\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12346\")","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"                .withEmail(\"alice@email.com\").withId(\"A1234567B\").build()));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"        IdContainsKeywordsPredicate firstPredicate \u003d new IdContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        IdContainsKeywordsPredicate secondPredicate \u003d new IdContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"        IdContainsKeywordsPredicate firstPredicateCopy \u003d new IdContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"    public void create() {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"ElginTZM"},"content":"        IdContainsKeywordsPredicate predicate \u003d IdContainsKeywordsPredicate.create(keywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"ElginTZM"},"content":"        IdContainsKeywordsPredicate expected \u003d new IdContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(expected, predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"ElginTZM"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"ElginTZM"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"ElginTZM"},"content":"        IdContainsKeywordsPredicate predicate \u003d new IdContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(\"ID Filter: \" + keywords, predicate.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ElginTZM":93}},{"path":"src/test/java/seedu/address/model/predicate/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"anthonytamzil"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"    public void create() {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"ElginTZM"},"content":"        NameContainsKeywordsPredicate predicate \u003d NameContainsKeywordsPredicate.create(keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"ElginTZM"},"content":"        NameContainsKeywordsPredicate expected \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(expected, predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ElginTZM":8,"anthonytamzil":1,"-":85}},{"path":"src/test/java/seedu/address/model/predicate/SerializablePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.model.predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"public class SerializablePredicateTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"        Predicate\u003cPerson\u003e predicate \u003d unused -\u003e true;","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"        SerializablePredicate serializablePredicate \u003d new SerializablePredicate(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(serializablePredicate, serializablePredicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"        assertNotEquals(serializablePredicate, predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(serializablePredicate, new SerializablePredicate(predicate));","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"    public void toStringMethod_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e new SerializablePredicate().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"ElginTZM":27}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"    public void getTagName() {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"        String validTagName \u003d \"CS2103T T02\";","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"        Tag tag \u003d new Tag(validTagName);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(validTagName, tag.getTagName());","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"    public void getCourseCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        String validTagName \u003d \"CS2103T T02\";","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"        Tag tag \u003d new Tag(validTagName);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(\"CS2103T\", tag.getCourseCode());","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"    public void getTutorialGroup() {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ElginTZM"},"content":"        String validTagName \u003d \"CS2103T T02\";","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ElginTZM"},"content":"        Tag tag \u003d new Tag(validTagName);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(\"T02\", tag.getTutorialGroup());","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"ElginTZM"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"        Tag firstTag \u003d new Tag(\"first\");","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"ElginTZM"},"content":"        Tag secondTag \u003d new Tag(\"second\");","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(firstTag.equals(firstTag));","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"        Tag firstTagCopy \u003d new Tag(\"first\");","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"        assertTrue(firstTag.equals(firstTagCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstTag.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstTag.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"ElginTZM"},"content":"        assertFalse(firstTag.equals(secondTag));","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"    public void create() {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"ElginTZM"},"content":"        String validTagName \u003d \"tagName\";","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"ElginTZM"},"content":"        Tag tag \u003d Tag.create(validTagName);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"        Tag expected \u003d new Tag(validTagName);","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(expected, tag);","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"ElginTZM":54,"-":26}},{"path":"src/test/java/seedu/address/model/week/WeekTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"anthonytamzil"},"content":"package seedu.address.model.week;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"anthonytamzil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"anthonytamzil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"anthonytamzil"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"anthonytamzil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"anthonytamzil"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"anthonytamzil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"anthonytamzil"},"content":"public class WeekTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"anthonytamzil"},"content":"    public void constructor_invalidWeekNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"anthonytamzil"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Week(14));","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"anthonytamzil"},"content":"    public void isValidWeek() {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"anthonytamzil"},"content":"        // invalid week number","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"anthonytamzil"},"content":"        assertFalse(Week.isValidWeek(14));","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"anthonytamzil"},"content":"        assertFalse(Week.isValidWeek(-1));","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"anthonytamzil"},"content":"        // valid week number","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"anthonytamzil"},"content":"        assertTrue(Week.isValidWeek(5));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"anthonytamzil"},"content":"        assertTrue(Week.isValidWeek(0));","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"anthonytamzil"},"content":"    public void getWeekNumber() {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"anthonytamzil"},"content":"        int weekNumber \u003d 5;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"anthonytamzil"},"content":"        Week week \u003d new Week(weekNumber);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"anthonytamzil"},"content":"        assertEquals(weekNumber, week.getWeekNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"anthonytamzil"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"anthonytamzil"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"anthonytamzil"},"content":"        Week firstWeek \u003d new Week(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"anthonytamzil"},"content":"        Week secondWeek \u003d new Week(2);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"anthonytamzil"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"anthonytamzil"},"content":"        assertEquals(firstWeek, firstWeek);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"anthonytamzil"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"anthonytamzil"},"content":"        Week firstWeekCopy \u003d new Week(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"anthonytamzil"},"content":"        assertEquals(firstWeekCopy, firstWeek);","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"anthonytamzil"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"anthonytamzil"},"content":"        assertNotEquals(1, firstWeek);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"anthonytamzil"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"anthonytamzil"},"content":"        assertNotEquals(null, firstWeek);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"anthonytamzil"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"anthonytamzil"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"anthonytamzil"},"content":"        assertNotEquals(firstWeek, secondWeek);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"anthonytamzil"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"anthonytamzil"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"anthonytamzil":57}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"    private static final String INVALID_ID \u003d \"XXXXX777L\";","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Zjinnnn"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"spatuly"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"anthonytamzil"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ID,","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"spatuly"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"spatuly"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"spatuly"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"spatuly"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"spatuly"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"spatuly"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ID, invalidTags);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"spatuly":7,"anthonytamzil":1,"Zjinnnn":2,"-":84}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    private java.util.Optional\u003cAddressBookManager\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBooks(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"ElginTZM"},"content":"    // TODO: Update format of invalidPersonAddressBook.json","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"ElginTZM"},"content":"        // assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"    // TODO: Update format of invalidAndValidPersonAddressBook.json","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"        // assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager original \u003d getTypicalAddressBookManager();","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"ElginTZM"},"content":"        jsonAddressBookStorage.saveAddressBooks(original, filePath);","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager readBack \u003d jsonAddressBookStorage.readAddressBooks(filePath).get();","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"        original.getActiveAddressBook().addPerson(HOON);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"ElginTZM"},"content":"        original.getActiveAddressBook().removePerson(ALICE);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"ElginTZM"},"content":"        jsonAddressBookStorage.saveAddressBooks(original, filePath);","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"ElginTZM"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBooks(filePath).get();","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"ElginTZM"},"content":"        original.getActiveAddressBook().addPerson(IDA);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"ElginTZM"},"content":"        jsonAddressBookStorage.saveAddressBooks(original); // file path not specified","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"ElginTZM"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBooks().get(); // file path not specified","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"ElginTZM"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBooks(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"ElginTZM"},"content":"    private void saveAddressBooks(AddressBookManager addressBookManager, String filePath) {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"ElginTZM"},"content":"                    .saveAddressBooks(addressBookManager, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"ElginTZM"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBooks(new AddressBookManager(), null));","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ElginTZM":25,"-":86}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"ElginTZM"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"tavigator.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ElginTZM":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager original \u003d getTypicalAddressBookManager();","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"ElginTZM"},"content":"        storageManager.saveAddressBooks(original);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager retrieved \u003d storageManager.readAddressBooks().get();","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"ElginTZM"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ElginTZM":6,"-":61}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"    public AddressBookBuilder(String courseCode) {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"        addressBook \u003d new AddressBook(courseCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ElginTZM":2,"-":32}},{"path":"src/test/java/seedu/address/testutil/AddressBookManagerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ElginTZM"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"ElginTZM"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"ElginTZM"},"content":" * A utility class to help with building AddressBookManager objects.","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"ElginTZM"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"ElginTZM"},"content":" *     {@code AddressBookManager ab \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"ElginTZM"},"content":" *              new AddressBookBuilder().withAddressBook(new AddressBookBuilder(\"CS2103T\").withPerson(\"John\")).build();}","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"ElginTZM"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"ElginTZM"},"content":"public class AddressBookManagerBuilder {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"ElginTZM"},"content":"    private AddressBookManager addressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"ElginTZM"},"content":"    public AddressBookManagerBuilder() {","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ElginTZM"},"content":"        addressBookManager \u003d new AddressBookManager();","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"ElginTZM"},"content":"    public AddressBookManagerBuilder(AddressBookManager addressBookManager) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ElginTZM"},"content":"        this.addressBookManager \u003d addressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"ElginTZM"},"content":"     * Adds a new {@code AddressBook} to the {@code AddressBookManager} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"ElginTZM"},"content":"    public AddressBookManagerBuilder withAddressBook(AddressBook addressBook) {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ElginTZM"},"content":"        addressBookManager.addAddressBook(addressBook);","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"ElginTZM"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"ElginTZM"},"content":"     * Sets the active {@code AddressBook} to the {@code AddressBookManager}","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"ElginTZM"},"content":"     * that we are building with {@code courseCode}.","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"ElginTZM"},"content":"    public AddressBookManagerBuilder setActiveAddressBook(String courseCode) {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"ElginTZM"},"content":"        addressBookManager.setActiveAddressBook(courseCode);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ElginTZM"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ElginTZM"},"content":"    public AddressBookManager build() {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"ElginTZM"},"content":"        return addressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ElginTZM"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"ElginTZM":44}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"        descriptor.setId(person.getId());","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"Zjinnnn"},"content":"     * Sets the {@code Id} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"Zjinnnn"},"content":"    public EditPersonDescriptorBuilder withId(String id) {","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"Zjinnnn"},"content":"        descriptor.setId(new ID(id));","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Zjinnnn":5,"-":82}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.Attendance;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Zjinnnn"},"content":"import seedu.address.model.person.ID;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"Zjinnnn"},"content":"    public static final String DEFAULT_ID \u003d \"A1234567E\";","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"Zjinnnn"},"content":"    private ID id;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"Zjinnnn"},"content":"        id \u003d new ID(DEFAULT_ID);","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"Zjinnnn"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"Zjinnnn"},"content":"     * Sets the {@code Id} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"Zjinnnn"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"Zjinnnn"},"content":"        this.id \u003d new ID(id);","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"Zjinnnn"},"content":"        return this;","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"Zjinnnn"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"Zjinnnn"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"Zjinnnn"},"content":"     * Adds an attendance record to the {@code Person} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"Zjinnnn"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Zjinnnn"},"content":"    public PersonBuilder withAttendance(Attendance attendance) {","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"Zjinnnn"},"content":"        this.build().addAttendance(attendance);","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"Zjinnnn"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"Zjinnnn"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"spatuly"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":102,"author":{"gitId":"spatuly"},"content":"        return new Person(name, phone, email, id, tags);","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"spatuly":2,"Zjinnnn":21,"-":82}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"Zjinnnn"},"content":"        sb.append(PREFIX_ID + person.getId().value + \" \");","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"Zjinnnn"},"content":"        descriptor.getId().ifPresent(id -\u003e sb.append(PREFIX_ID).append(id.value).append(\" \"));","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"Zjinnnn":3,"-":59}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"Zjinnnn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_G01;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"spatuly"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_T09;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"ElginTZM"},"content":"import seedu.address.model.AddressBookManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"anthonytamzil"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\")","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"spatuly"},"content":"            .withId(\"A1234567Y\").withTags(\"G02\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"spatuly"},"content":"            .withId(\"A1234567Z\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"spatuly"},"content":"            .withId(\"A1234567M\").withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"spatuly"},"content":"            .withId(\"A1234567N\").withEmail(\"cornelia@example.com\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"spatuly"},"content":"            .withId(\"A1234567L\").withEmail(\"werner@example.com\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"spatuly"},"content":"            .withId(\"A1234567Q\").withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"spatuly"},"content":"            .withId(\"A1234567C\").withEmail(\"anna@example.com\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"spatuly"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"spatuly"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"spatuly"},"content":"            .withEmail(VALID_EMAIL_AMY).withId(VALID_ID_AMY).withTags(VALID_TAG_T09).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"spatuly"},"content":"            .withEmail(VALID_EMAIL_BOB).withId(VALID_ID_BOB).withTags(VALID_TAG_G01, VALID_TAG_T09).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":60,"author":{"gitId":"ElginTZM"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"ElginTZM"},"content":"     * Returns an {@code AddressBookManager} with an address book with the typical persons.","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"ElginTZM"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"ElginTZM"},"content":"    public static AddressBookManager getTypicalAddressBookManager() {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"ElginTZM"},"content":"        AddressBookManager abm \u003d new AddressBookManager();","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"ElginTZM"},"content":"        abm.setAddressBook(getTypicalAddressBook());","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"ElginTZM"},"content":"        return abm;","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"ElginTZM"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"ElginTZM"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":73,"author":{"gitId":"ElginTZM"},"content":"        AddressBook ab \u003d new AddressBook(\"Test Course Code\");","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ElginTZM":11,"spatuly":13,"anthonytamzil":1,"Zjinnnn":2,"-":56}}]

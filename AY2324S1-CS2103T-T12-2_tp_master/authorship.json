[{"path":".github/ISSUE_TEMPLATE/user-story-template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"name: User Story Template","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"about: Template for User Stories","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"title: \u0027\u0027","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"labels: \u0027\u0027","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"### User stories","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"- [Insert user stories here]","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"### Details","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"- [Insert details here]","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"  - Format: [insert format if necessary]","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"leezhengjing":11,"Kurtyjlee":3}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T12-2/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"## FumbleLog","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png) ","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"**FumbleLog is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"* If you are interested in using FumbleLog, head over to the [_Quick Start_ section of the **User Guide**](docs/UserGuide.md#quick-start).","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"* If you are interested about developing FumbleLog, the [**Developer Guide**](docs/DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"* The project simulates an ongoing software project for a desktop application (called _FumbleLog_) used for managing contact details.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"* For the detailed documentation of this project, see the **[FumbleLog Product Website](https://ay2324s1-cs2103t-t12-2.github.io/tp/)**.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"leezhengjing":4,"Kurtyjlee":6,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"run {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"    archiveFileName \u003d \u0027fumblelog.jar\u0027","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nicleongyj":4,"Kurtyjlee":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"### Lee Zheng Jing","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"\u003cimg src\u003d\"images/leezhengjing.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"[[github](https://github.com/leezhengjing)]","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"[[portfolio](team/leezhengjing.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Ken-Lai"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Ken-Lai"},"content":"* Responsibilities: Data","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Ken-Lai"},"content":"### Kurt Lee Yi Jie","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Ken-Lai"},"content":"\u003cimg src\u003d\"images/kurtyjlee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Ken-Lai"},"content":"[[github](https://github.com/Kurtyjlee)]","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"Ken-Lai"},"content":"[[portfolio](team/kurtyjlee.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Ken-Lai"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Ken-Lai"},"content":"### Leong Yu Jun Nicholas","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Ken-Lai"},"content":"\u003cimg src\u003d\"images/nicleongyj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Ken-Lai"},"content":"[[github](https://github.com/nicleongyj)]","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"Ken-Lai"},"content":"[[portfolio](team/nicleongyj.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Ken-Lai"},"content":"### Guo Yuheng","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Ken-Lai"},"content":"\u003cimg src\u003d\"images/distractedcat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Ken-Lai"},"content":"[[github](https://github.com/DistractedCat)]","lastModifiedDate":"2023-10-03"},{"lineNumber":47,"author":{"gitId":"Ken-Lai"},"content":"[[portfolio](team/distractedcat.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Ken-Lai"},"content":"### Lai Wei Zhong","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Ken-Lai"},"content":"\u003cimg src\u003d\"images/ken-lai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Ken-Lai"},"content":"[[github](https://github.com/Ken-Lai)]","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"Ken-Lai"},"content":"[[portfolio](team/ken-lai.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ken-Lai":19,"leezhengjing":3,"Kurtyjlee":1,"-":37}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"g---","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"Ken-Lai"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `EventListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"Ken-Lai"},"content":"* depends on some classes in the `Model` component, as it displays `Person` and `Event` object residing in the `Model`.","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"* stores the address book data i.e., all `Person`(which are contained in a `UniquePersonList` object) and `Event` objects (which are contained in a `EventList` object).","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"Ken-Lai"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Group` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Group` object per unique group, instead of each `Group` needing their own `Group` objects.\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"leezhengjing"},"content":"### Ability to add persons","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"leezhengjing"},"content":"#### Implementation details","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"leezhengjing"},"content":"The \u0027add\u0027 feature involves creating a new \"Person\" object with optional fields and adding it to FumbleLog. ","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"leezhengjing"},"content":"This is done using `AddCommand` which implements the `Command` interface. The `AddCommand` is then executed by `LogicManager` which calls `ModelManager` to add the person to the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"leezhengjing"},"content":"As a result, the existing \u0027Person\u0027 class in AB3\u0027s implementation is enhanced to have the capacity of storing optional fields.","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"leezhengjing"},"content":"Below is a class diagram of the enhanced \u0027Person\u0027 class:","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"Kurtyjlee"},"content":"\u003cimg src\u003d\"images/PersonClassDiagram.png\" alt\u003d\"PersonClassDiagram\" width\u003d500 /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"leezhengjing"},"content":"The `Person` object is now composed of the following optional attributes due to the refactored `add` feature:","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"leezhengjing"},"content":"* `Name`: The name of the person. Compulsory field.","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"leezhengjing"},"content":"* `Phone`: The phone number of the person. Optional field.","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"leezhengjing"},"content":"* `Email`: The email address of the person. Optional field.","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"leezhengjing"},"content":"* `Address`: The address of the person. Optional field.","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"leezhengjing"},"content":"* `Birthday`: The birthday of the person. Optional field.","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"leezhengjing"},"content":"* `Groups`: The groups that the person is associated with. Optional field.","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"leezhengjing"},"content":"The [**`java.util.Optional\u003cT\u003e`**](https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html) class is used to represent the optional attributes of the `Person` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"leezhengjing"},"content":"To add a person, the user must specify the name of the person using the `n/` prefix. The user can then specify the optional attributes of the person using the following prefixes:","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"leezhengjing"},"content":"\u003cbox type\u003d\"info\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"leezhengjing"},"content":"Except for the name, all the fields given to the `add` command are optional.","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"leezhengjing"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"leezhengjing"},"content":"The flow for the `add` command is described by the following sequence diagram:","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"Kurtyjlee"},"content":"\u003cimg src\u003d\"images/AddPersonSequenceDiagram.png\" alt\u003d\"AddPersonSequenceDiagram\" width\u003d600 /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"leezhengjing"},"content":"### Feature details","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"leezhengjing"},"content":"1. The application will validate the arguments supplied by the user; whether the \"NAME\" is unique and supplied, and whether the optional fields follow the correct format. ","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"leezhengjing"},"content":"2. If the arguments are invalid, an error message will be shown to the user and prompts the user for a corrected input.","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"leezhengjing"},"content":"3. If the arguments are valid, a `Person` object will be created with the fields supplied and stored in FumbleLog.","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"leezhengjing"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"leezhengjing"},"content":"**Aspect: Generic Design**","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"leezhengjing"},"content":"The original implementation of AB3\u0027s `Person` class is refactored to have the capacity of storing optional fields. This is done by using the `java.util.Optional\u003cT\u003e` class to represent the optional attributes of the `Person` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"leezhengjing"},"content":"Furthermore, we have added additional fields into the `Person` class to allow users to store more information about the person, such as their birthday.","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"leezhengjing"},"content":"As the original `add` command already exists in AB3, this feature can be implemented by enhancing the `add` command.","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"leezhengjing"},"content":"Furthermore, we accounted for empty/null inputs in the optional fields by generating a NULL_INSTANCE for the optional fields when the user does not specify the optional fields. This design decision allowed us to easily check","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"leezhengjing"},"content":"for empty/null inputs in the Person object by checking if the optional field is not equal to the NULL_INSTANCE, instead of doing null pointer and empty string checks.","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"leezhengjing"},"content":"* **Alternative 1 (current choice):** Enhance the existing `add` command.","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"leezhengjing"},"content":"  * Pros: ","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"leezhengjing"},"content":"    * Easier to implement.","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"leezhengjing"},"content":"    * Reuses the logic for the `add` command.","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"leezhengjing"},"content":"  * Cons:","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"leezhengjing"},"content":"    * Have to account for empty/null inputs in the optional fields when saving the data and testing it","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"leezhengjing"},"content":"    * Have to account for empty/null inputs in the optional fields when displaying the data","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"leezhengjing"},"content":"* **Alternative 2**: Create a new `add_optional` command.","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"leezhengjing"},"content":"  * Pros: ","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"leezhengjing"},"content":"    * Do not have to account for empty/null inputs in the optional fields when saving the data and testing it","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"leezhengjing"},"content":"  * Cons:","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"leezhengjing"},"content":"    * Inconveniences the user as they have to remember a new command to add a person with optional fields.","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"Kurtyjlee"},"content":"### Ability to assign persons to an event","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"Kurtyjlee"},"content":"The ability to assign persons to an event is facilitated by `ModelManager`.","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"Kurtyjlee"},"content":"Each event stores a list of persons assigned to it. The person(s) are represented by their `Name` stored in FumbleLog. This is because the `Name` is the only unique identifier for a person.","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"Kurtyjlee"},"content":"When a person is assigned to an event, the person\u0027s `Name` is added to the event\u0027s list of assigned persons. When a person is unassigned from an event, the person\u0027s `Name` is removed from the event\u0027s list of assigned persons. When a person\u0027s `Name` is modified, the change is also reflected in the event(s) that they are previously assigned to.","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"Kurtyjlee"},"content":"Users can assign multiple names to an event by using multiple `n/` identifiers following with the `Name` specified. The `ModelManager` will perform checks on whether the names supplied are valid, i.e the `Name` currently exists in FumbleLog.","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"Kurtyjlee"},"content":"When editing the event, specifying `n/` with a `Name` will append this new name to the current list rather than replace the previous names. This is to facilitate the user to assign more persons without accidentally deleting the previous persons assigned. To un-assign a person, the user must manually specify `u/` with the `Name` to un-assign the person from the event.","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"Kurtyjlee"},"content":"### Ability to assign groups to an event","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"Kurtyjlee"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"Kurtyjlee"},"content":"The ability to assign groups to an event is facilitated by `ModelManager`.","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"Kurtyjlee"},"content":"Each event stores a list of groups assigned to it. The groups(s) are represented by their name and that acts as their id. ","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"Kurtyjlee"},"content":"When a group is assigned to an event, the group\u0027s name is stored into the event\u0027s list of groups. When un-assigned, the corresponding groups are then removed from the group list.","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"Kurtyjlee"},"content":"With the group name, person(s) with that specific group in their group list is displayed with the event.","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"Kurtyjlee"},"content":"#### Design considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"Kurtyjlee"},"content":"- When adding and displaying groups, persons that has been added individually previously will be displayed twice. To counter that, checks are done to ensure that","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"Kurtyjlee"},"content":"when a group is added, duplicate persons will be deleted from the individual persons list","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"Kurtyjlee"},"content":"- A person can belong to multiple groups, due to the multiplicity between groups and persons. In this case, we allow multiple persons to be displayed, as it is clear which group they belong to.","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"Kurtyjlee"},"content":"- As the persons are searched by their group name only when displaying, adding new persons, editing and deleting persons is simple as the component just reloads and searches for everybody in the groups again.","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"Ken-Lai"},"content":"### Improved find feature","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"Ken-Lai"},"content":"The `find` command in our application displays persons that fit the keyword(s)","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"Ken-Lai"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"Ken-Lai"},"content":"The `find` feature involves checking the current filtered list of persons and filtering out persons with fitting names ","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"Ken-Lai"},"content":"or groups. This is done using `NameOrGroupContainsKeywordsPredicate`, which enhanced from the original ","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"Ken-Lai"},"content":"`NameContainsKeywordsPredicate` class. The predicate is then passed to `Model#updateFilteredPersonList(Predicate\u003cPerson\u003e predicate)`.","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"Ken-Lai"},"content":"As a result, the `ObservableList\u003cPerson\u003e` is updated with the filtered lists of persons.","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"Ken-Lai"},"content":"The `UI` component is notified of these new changes to the lists and updates the UI accordingly, which will show the updated persons.","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"Ken-Lai"},"content":"The enhanced `find` command remains its original ability i.e. find the person whose name fits the keyword. Except it will also","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"Ken-Lai"},"content":"find person whose group(s) fits the keyword. If a person\u0027s group name fits the keyword, it will be shown on the UI, ","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"Ken-Lai"},"content":"even though the person\u0027s name does not fit the keyword(s).","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"Ken-Lai"},"content":"#### Feature details","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"Ken-Lai"},"content":"1. The `find` command can accept one or more parameter `keyword` for searching person and events.","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"Ken-Lai"},"content":"2. A `NameOrGroupContainsKeywordsPredicate` will be created and a `Find` command will be created with the predicates.","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"Ken-Lai"},"content":"3. The `Find` command will then be executed and the `UI` will be updated with the filtered lists of persons.","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"Ken-Lai"},"content":"#### General design considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"Ken-Lai"},"content":"**Aspect: Keyword target differentiation**","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"Ken-Lai"},"content":"- **Alternative 1 (Current choice): Find all persons that fits the keyword.**","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"Ken-Lai"},"content":"    - Pros:","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"Ken-Lai"},"content":"        - Easier to implement.","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"Ken-Lai"},"content":"    - Cons:","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"Ken-Lai"},"content":"        - Might get unwanted results, which decreases overall experience.","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"Ken-Lai"},"content":"- **Alternative 2: Differentiate the target of keyword with syntax.**","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"Ken-Lai"},"content":"    - Pros:","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"Ken-Lai"},"content":"        - User can find exact person or group.","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"Ken-Lai"},"content":"    - Cons:","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"Ken-Lai"},"content":"        - Adding constraint the original command by requiring syntax, which may cause convenience.","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"nicleongyj"},"content":"### Remind feature","lastModifiedDate":"2023-10-25"},{"lineNumber":374,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":375,"author":{"gitId":"nicleongyj"},"content":"The `remind` command in our application displays a birthdays and events that will happen within a specified number of days.","lastModifiedDate":"2023-10-25"},{"lineNumber":376,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":377,"author":{"gitId":"nicleongyj"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":378,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":379,"author":{"gitId":"nicleongyj"},"content":"The `remind` feature involves checking the current filtered list of persons and events and filtering out persons with birthdays and events with starting date ","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"nicleongyj"},"content":"that are within the specified number of days. This is done using `BirthdayWithinDaysPredicate` and `EventWithinDaysPredicate` which implements the `Predicate\u003cT\u003e` interface. These predicates are passed ","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"nicleongyj"},"content":"to `Model#updateFilteredPersonList(Predicate\u003cPerson\u003e predicate)` and `Model#updateFilteredEventList(Predicate\u003cEvent\u003e predicate)` respectively.","lastModifiedDate":"2023-10-26"},{"lineNumber":382,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":383,"author":{"gitId":"nicleongyj"},"content":"As a result, the `ObservableList\u003cPerson\u003e` and `ObservableList\u003cEvent\u003e` are updated with the filtered lists of persons and events respectively. ","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"nicleongyj"},"content":"The `UI` component is notified of these new changes to the lists and updates the UI accordingly, which will show the updated persons and events.","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"nicleongyj"},"content":"The `remind` command is implemented this way as it reuses the logic for the `find` command where it utilises the `Model` component to update the current list of persons based on the given predicate.","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"nicleongyj"},"content":"Instead of filtering out persons based on names, the `BirthdayWithinDaysPredicate` filters out persons based on their birthdays and the `EventWithinDaysPredicate` filters out events based on their starting dates.","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"nicleongyj"},"content":"The flow for the `remind` command is described by the following sequence diagram:","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":391,"author":{"gitId":"nicleongyj"},"content":"![RemindSequenceDiagram](images/RemindSequenceDiagram.png)","lastModifiedDate":"2023-10-25"},{"lineNumber":392,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":393,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":394,"author":{"gitId":"nicleongyj"},"content":"#### Feature details","lastModifiedDate":"2023-10-26"},{"lineNumber":395,"author":{"gitId":"nicleongyj"},"content":"1. The `remind` command can accept an optional parameter `days` which specifies the number of days to search for birthdays and events. If `days` is not specified, the default value of 7 days will be used.","lastModifiedDate":"2023-10-26"},{"lineNumber":396,"author":{"gitId":"nicleongyj"},"content":"2. The application will validate the argument `days` to ensure that it is a positive integer. If it is not, an error message will be shown to the user and prompts the user for a corrected input.","lastModifiedDate":"2023-10-26"},{"lineNumber":397,"author":{"gitId":"nicleongyj"},"content":"3. If it is a valid input, a `BirthdayWithinDaysPredicate` and `EventWithinDaysPredicate` will be created and a `Remind` command will be created with the predicates.","lastModifiedDate":"2023-10-26"},{"lineNumber":398,"author":{"gitId":"nicleongyj"},"content":"4. The `Remind` command will then be executed and the `UI` will be updated with the filtered lists of persons and events.","lastModifiedDate":"2023-10-26"},{"lineNumber":399,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":400,"author":{"gitId":"nicleongyj"},"content":"#### General design considerations","lastModifiedDate":"2023-10-26"},{"lineNumber":401,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":402,"author":{"gitId":"nicleongyj"},"content":"- **Alternative 1 (Current choice): Updating list with predicate.**","lastModifiedDate":"2023-10-26"},{"lineNumber":403,"author":{"gitId":"nicleongyj"},"content":"    - Pros: ","lastModifiedDate":"2023-10-26"},{"lineNumber":404,"author":{"gitId":"nicleongyj"},"content":"      - Reuses the logic for the `find` command.","lastModifiedDate":"2023-10-26"},{"lineNumber":405,"author":{"gitId":"nicleongyj"},"content":"      - The `UI` component is notified of the changes to the list and updates the UI accordingly.","lastModifiedDate":"2023-10-26"},{"lineNumber":406,"author":{"gitId":"nicleongyj"},"content":"    - Cons: ","lastModifiedDate":"2023-10-26"},{"lineNumber":407,"author":{"gitId":"nicleongyj"},"content":"      - The `Model` component is tightly coupled with the `UI` component.","lastModifiedDate":"2023-10-26"},{"lineNumber":408,"author":{"gitId":"nicleongyj"},"content":"- **Alternative 2: Checking current list for birthdays and events, and adding to new list.**","lastModifiedDate":"2023-10-26"},{"lineNumber":409,"author":{"gitId":"nicleongyj"},"content":"  - Pros: ","lastModifiedDate":"2023-10-26"},{"lineNumber":410,"author":{"gitId":"nicleongyj"},"content":"    - Easier to implement.","lastModifiedDate":"2023-10-26"},{"lineNumber":411,"author":{"gitId":"nicleongyj"},"content":"  - Cons: ","lastModifiedDate":"2023-10-26"},{"lineNumber":412,"author":{"gitId":"nicleongyj"},"content":"    - Performance overhead. New addressbook objects needs to be created.","lastModifiedDate":"2023-10-26"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":414,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"nicleongyj"},"content":"This product is targeted at busy university students who struggle to manage","lastModifiedDate":"2023-10-03"},{"lineNumber":433,"author":{"gitId":"nicleongyj"},"content":"their interpersonal relationships and commitments due to the demands of their","lastModifiedDate":"2023-10-03"},{"lineNumber":434,"author":{"gitId":"nicleongyj"},"content":"academic and social lives. They are relatively tech savvy and prefer to use the","lastModifiedDate":"2023-10-03"},{"lineNumber":435,"author":{"gitId":"nicleongyj"},"content":"keyboard over the mouse, prefer short commands over full sentences. ","lastModifiedDate":"2023-10-03"},{"lineNumber":436,"author":{"gitId":"nicleongyj"},"content":"These users seek an intuitive and efficient solution to help them stay organized,","lastModifiedDate":"2023-10-03"},{"lineNumber":437,"author":{"gitId":"nicleongyj"},"content":"prioritize their tasks and manage their time effectively.","lastModifiedDate":"2023-10-03"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"nicleongyj"},"content":"**Value proposition**:","lastModifiedDate":"2023-10-02"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"nicleongyj"},"content":"We provide students with an easy-to-use application to manage their social lives and ","lastModifiedDate":"2023-10-03"},{"lineNumber":442,"author":{"gitId":"nicleongyj"},"content":"time better. Our app reminds students of their upcoming commitments and helps them to","lastModifiedDate":"2023-10-03"},{"lineNumber":443,"author":{"gitId":"nicleongyj"},"content":"prioritize their tasks. It also helps them to keep track of their friends’ birthdays and","lastModifiedDate":"2023-10-03"},{"lineNumber":444,"author":{"gitId":"nicleongyj"},"content":"other important events.","lastModifiedDate":"2023-10-03"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"| Priority | As a …​            | I want to …​                                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"nicleongyj"},"content":"|----------|--------------------|----------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":452,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | see usage instructions                       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":453,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | add a new person                             | keep my address book up to date                                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":454,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | include optional fields when adding contacts | include comprehensive and personalized information for each contact    |","lastModifiedDate":"2023-10-03"},{"lineNumber":455,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | delete a person                              | remove contacts that I no longer need                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":456,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | find a person by name                        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-10-03"},{"lineNumber":457,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | edit a person details                        | reflect any contact changes accordingly                                |   ","lastModifiedDate":"2023-10-03"},{"lineNumber":458,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | create an event                              | schedule and keep track of important commitments                       |   ","lastModifiedDate":"2023-10-03"},{"lineNumber":459,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | view all upcoming events                     | stay informed about my scheduled commitments                           |","lastModifiedDate":"2023-10-03"},{"lineNumber":460,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | edit an event                                | modify event details like the date, time, or location                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":461,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | delete an event                              | remove events that are canceled or no longer relevant                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":462,"author":{"gitId":"nicleongyj"},"content":"| `* * *`  | university student | access a separate event column in the GUI    | simultaneously view contact details and event details                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":463,"author":{"gitId":"nicleongyj"},"content":"| `* *`    | university student | be reminded on events                        | so that i can remember upcoming social activities                      |","lastModifiedDate":"2023-10-03"},{"lineNumber":464,"author":{"gitId":"nicleongyj"},"content":"| `* *`    | university student | set recurring events                         | automate scheduling for repetitive commitments                         |","lastModifiedDate":"2023-10-03"},{"lineNumber":465,"author":{"gitId":"nicleongyj"},"content":"| `* *`    | university student | customise short form commands                | perform commands more efficiently                                      |","lastModifiedDate":"2023-10-03"},{"lineNumber":466,"author":{"gitId":"nicleongyj"},"content":"| `* *`    | university student | assign contacts to groups                    | i can easily identify who is involved in specific events               |","lastModifiedDate":"2023-10-03"},{"lineNumber":467,"author":{"gitId":"nicleongyj"},"content":"| `* *`    | university student | pin contacts or groups                       | access and communicate with frequently contacted groups                |","lastModifiedDate":"2023-10-03"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"DistractedCat"},"content":"(For all use cases below, the **System** is `FumbleLog`, the **Person** is the `user` and the **Actors** are `Computing student`, unless specified otherwise)","lastModifiedDate":"2023-10-26"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC01 - Delete a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"DistractedCat"},"content":"2.  FumbleLog shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":480,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"DistractedCat"},"content":"4.  FumbleLog deletes the person","lastModifiedDate":"2023-10-03"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"DistractedCat"},"content":"    * 3a1. FumbleLog shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"DistractedCat"},"content":"* 3b. The person is assigned to an event.","lastModifiedDate":"2023-10-26"},{"lineNumber":498,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":499,"author":{"gitId":"DistractedCat"},"content":"    * 3b1. The event is updated to remove the person from the event.","lastModifiedDate":"2023-10-26"},{"lineNumber":500,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":501,"author":{"gitId":"DistractedCat"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-10-26"},{"lineNumber":502,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":503,"author":{"gitId":"Kurtyjlee"},"content":"* 4a. The person is the last member of a group and that group is assigned to an event.","lastModifiedDate":"2023-10-27"},{"lineNumber":504,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":505,"author":{"gitId":"Kurtyjlee"},"content":"    * 4a1. The group is deleted from the event.","lastModifiedDate":"2023-10-27"},{"lineNumber":506,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":507,"author":{"gitId":"Kurtyjlee"},"content":"      Use case exits.","lastModifiedDate":"2023-10-27"},{"lineNumber":508,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":509,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC02 - Add a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":510,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":511,"author":{"gitId":"DistractedCat"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":512,"author":{"gitId":"DistractedCat"},"content":"1. User requests to add persons","lastModifiedDate":"2023-10-03"},{"lineNumber":513,"author":{"gitId":"DistractedCat"},"content":"2. User supplies all necessary parameters they wish to associate with the person to be added","lastModifiedDate":"2023-10-03"},{"lineNumber":514,"author":{"gitId":"DistractedCat"},"content":"3. FumbleLog adds the person","lastModifiedDate":"2023-10-03"},{"lineNumber":515,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":516,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":517,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":518,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":519,"author":{"gitId":"DistractedCat"},"content":"* 2a. User supplies the wrong type of parameters","lastModifiedDate":"2023-10-03"},{"lineNumber":520,"author":{"gitId":"DistractedCat"},"content":"    ","lastModifiedDate":"2023-10-03"},{"lineNumber":521,"author":{"gitId":"DistractedCat"},"content":"    * 2a1. FumbleLog shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":522,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":523,"author":{"gitId":"DistractedCat"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":524,"author":{"gitId":"Kurtyjlee"},"content":"* 3a. Person is added with a group and that group is assigned to an event","lastModifiedDate":"2023-10-27"},{"lineNumber":525,"author":{"gitId":"Kurtyjlee"},"content":"  ","lastModifiedDate":"2023-10-27"},{"lineNumber":526,"author":{"gitId":"Kurtyjlee"},"content":"    * 3a1. FumbleLog reloaded the event component and displays the newly added person in the event.","lastModifiedDate":"2023-10-27"},{"lineNumber":527,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":528,"author":{"gitId":"Kurtyjlee"},"content":"      Use case ends.","lastModifiedDate":"2023-10-27"},{"lineNumber":529,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":530,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC03 - Edit a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":531,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":532,"author":{"gitId":"DistractedCat"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":533,"author":{"gitId":"DistractedCat"},"content":"1. User requests to list persons","lastModifiedDate":"2023-10-03"},{"lineNumber":534,"author":{"gitId":"DistractedCat"},"content":"2. FumbleLog shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":535,"author":{"gitId":"DistractedCat"},"content":"3. User request to edit a specific person in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":536,"author":{"gitId":"DistractedCat"},"content":"4. User supplies parameters that they want to change","lastModifiedDate":"2023-10-03"},{"lineNumber":537,"author":{"gitId":"DistractedCat"},"content":"5. FumbleLog edits the person","lastModifiedDate":"2023-10-05"},{"lineNumber":538,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":539,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":540,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":541,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":542,"author":{"gitId":"DistractedCat"},"content":"* 2a. List is empty","lastModifiedDate":"2023-10-03"},{"lineNumber":543,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":544,"author":{"gitId":"DistractedCat"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":545,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":546,"author":{"gitId":"DistractedCat"},"content":"* 3a. User supplies an invalid index to edit","lastModifiedDate":"2023-10-03"},{"lineNumber":547,"author":{"gitId":"DistractedCat"},"content":"    ","lastModifiedDate":"2023-10-03"},{"lineNumber":548,"author":{"gitId":"DistractedCat"},"content":"    * 3a1. FumbleLog shows an error message.","lastModifiedDate":"2023-10-05"},{"lineNumber":549,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":550,"author":{"gitId":"DistractedCat"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":551,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":552,"author":{"gitId":"DistractedCat"},"content":"* 4a. User modifies the name of the person","lastModifiedDate":"2023-10-26"},{"lineNumber":553,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":554,"author":{"gitId":"Kurtyjlee"},"content":"    * 4a1. FumbleLog updates the name of the person in all events that the person is \u003cu\u003e assigned \u003c/u\u003e to. This includes persons in groups.","lastModifiedDate":"2023-10-27"},{"lineNumber":555,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":556,"author":{"gitId":"DistractedCat"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2023-10-26"},{"lineNumber":557,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":558,"author":{"gitId":"Kurtyjlee"},"content":"* User removes a group from the person","lastModifiedDate":"2023-10-27"},{"lineNumber":559,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":560,"author":{"gitId":"Kurtyjlee"},"content":"    * 4b1. FumbleLog removes the person from the corresponding group in all events.","lastModifiedDate":"2023-10-27"},{"lineNumber":561,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":562,"author":{"gitId":"Kurtyjlee"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2023-10-27"},{"lineNumber":563,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":564,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC04 - Add an event**","lastModifiedDate":"2023-10-26"},{"lineNumber":565,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":566,"author":{"gitId":"DistractedCat"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":567,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":568,"author":{"gitId":"DistractedCat"},"content":"1. User requests to add a event","lastModifiedDate":"2023-10-03"},{"lineNumber":569,"author":{"gitId":"DistractedCat"},"content":"2. User supplies the necessary parameters for the event","lastModifiedDate":"2023-10-03"},{"lineNumber":570,"author":{"gitId":"DistractedCat"},"content":"3. FumbleLog adds the event","lastModifiedDate":"2023-10-05"},{"lineNumber":571,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":572,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":573,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":574,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":575,"author":{"gitId":"DistractedCat"},"content":"* 2a. User supplies invalid parameters","lastModifiedDate":"2023-10-03"},{"lineNumber":576,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":577,"author":{"gitId":"DistractedCat"},"content":"    * 2a1. FumbleLog shows an error message","lastModifiedDate":"2023-10-05"},{"lineNumber":578,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":579,"author":{"gitId":"DistractedCat"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":580,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":581,"author":{"gitId":"DistractedCat"},"content":" **Use case: UC05 - Edit an event**","lastModifiedDate":"2023-10-26"},{"lineNumber":582,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":583,"author":{"gitId":"DistractedCat"},"content":" **MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":584,"author":{"gitId":"DistractedCat"},"content":"1. User request to edit a specific event in the list","lastModifiedDate":"2023-10-26"},{"lineNumber":585,"author":{"gitId":"DistractedCat"},"content":"2. User supplies parameters that they want to change","lastModifiedDate":"2023-10-26"},{"lineNumber":586,"author":{"gitId":"DistractedCat"},"content":"3. FumbleLog edits the event","lastModifiedDate":"2023-10-26"},{"lineNumber":587,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":588,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":589,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":590,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":591,"author":{"gitId":"DistractedCat"},"content":"* 1a. List is empty","lastModifiedDate":"2023-10-26"},{"lineNumber":592,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":593,"author":{"gitId":"DistractedCat"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":594,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":595,"author":{"gitId":"DistractedCat"},"content":"* 2a. User supplies an invalid index to edit","lastModifiedDate":"2023-10-26"},{"lineNumber":596,"author":{"gitId":"DistractedCat"},"content":"    ","lastModifiedDate":"2023-10-03"},{"lineNumber":597,"author":{"gitId":"DistractedCat"},"content":"    * 2a1. FumbleLog shows an error message.","lastModifiedDate":"2023-10-26"},{"lineNumber":598,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":599,"author":{"gitId":"DistractedCat"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":600,"author":{"gitId":"DistractedCat"},"content":"* 3a. User enters a group and certain members of the group is already ","lastModifiedDate":"2023-10-26"},{"lineNumber":601,"author":{"gitId":"Kurtyjlee"},"content":"assigned to the the event.","lastModifiedDate":"2023-10-25"},{"lineNumber":602,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":603,"author":{"gitId":"DistractedCat"},"content":"    * 3a1. For each Event, duplicate members will be removed from the ","lastModifiedDate":"2023-10-26"},{"lineNumber":604,"author":{"gitId":"Kurtyjlee"},"content":"    individual Persons list.","lastModifiedDate":"2023-10-25"},{"lineNumber":605,"author":{"gitId":"Kurtyjlee"},"content":"        ","lastModifiedDate":"2023-10-25"},{"lineNumber":606,"author":{"gitId":"Kurtyjlee"},"content":"      Use case ends","lastModifiedDate":"2023-10-25"},{"lineNumber":607,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":608,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC06 - Delete an event**","lastModifiedDate":"2023-10-26"},{"lineNumber":609,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":610,"author":{"gitId":"DistractedCat"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":611,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":612,"author":{"gitId":"DistractedCat"},"content":"1.  User requests to \u003cu\u003e list events \u003c/u\u003e ","lastModifiedDate":"2023-10-03"},{"lineNumber":613,"author":{"gitId":"DistractedCat"},"content":"2.  FumbleLog shows a list of events","lastModifiedDate":"2023-10-03"},{"lineNumber":614,"author":{"gitId":"DistractedCat"},"content":"3.  User requests to delete a specific event in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":615,"author":{"gitId":"DistractedCat"},"content":"4.  FumbleLog deletes the event","lastModifiedDate":"2023-10-03"},{"lineNumber":616,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":617,"author":{"gitId":"DistractedCat"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":618,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":619,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":620,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":621,"author":{"gitId":"DistractedCat"},"content":"* 2a. The list is empty","lastModifiedDate":"2023-10-03"},{"lineNumber":622,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":623,"author":{"gitId":"DistractedCat"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":624,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":625,"author":{"gitId":"DistractedCat"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2023-10-03"},{"lineNumber":626,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":627,"author":{"gitId":"DistractedCat"},"content":"    * 3a1. FumbleLog shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":628,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":629,"author":{"gitId":"DistractedCat"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":630,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":631,"author":{"gitId":"DistractedCat"},"content":" ","lastModifiedDate":"2023-10-03"},{"lineNumber":632,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC07 - Filter persons by group**","lastModifiedDate":"2023-10-26"},{"lineNumber":633,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":634,"author":{"gitId":"DistractedCat"},"content":"1. User requests to filter persons by specifying a group","lastModifiedDate":"2023-10-03"},{"lineNumber":635,"author":{"gitId":"DistractedCat"},"content":"2. FumbleLog shows the list of persons that belong in the specified group","lastModifiedDate":"2023-10-03"},{"lineNumber":636,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":637,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":638,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":639,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":640,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":641,"author":{"gitId":"DistractedCat"},"content":"* 1a. The group does not exist","lastModifiedDate":"2023-10-03"},{"lineNumber":642,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":643,"author":{"gitId":"DistractedCat"},"content":"    * 1a1. FumbleLog shows an error message","lastModifiedDate":"2023-10-05"},{"lineNumber":644,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":645,"author":{"gitId":"DistractedCat"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-10-03"},{"lineNumber":646,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":647,"author":{"gitId":"DistractedCat"},"content":"* 2a. The list is empty","lastModifiedDate":"2023-10-03"},{"lineNumber":648,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":649,"author":{"gitId":"DistractedCat"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":650,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":651,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":652,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC08 - Show reminders for events/birthdays happening soon**","lastModifiedDate":"2023-10-26"},{"lineNumber":653,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":654,"author":{"gitId":"DistractedCat"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":655,"author":{"gitId":"DistractedCat"},"content":"1. User request a reminder for events/birthdays happening soon","lastModifiedDate":"2023-10-03"},{"lineNumber":656,"author":{"gitId":"DistractedCat"},"content":"2. FumbleLog displays a list of events/birthdays happening soon","lastModifiedDate":"2023-10-03"},{"lineNumber":657,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":658,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":659,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":660,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":661,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":662,"author":{"gitId":"DistractedCat"},"content":"* 1a. User can specify the range of time to search","lastModifiedDate":"2023-10-03"},{"lineNumber":663,"author":{"gitId":"DistractedCat"},"content":"    * 1a1. FumbleLog shows the list of events/birthdays happening within the specified range of time","lastModifiedDate":"2023-10-03"},{"lineNumber":664,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":665,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":666,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":667,"author":{"gitId":"DistractedCat"},"content":"* 2a. The list is empty","lastModifiedDate":"2023-10-03"},{"lineNumber":668,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":669,"author":{"gitId":"DistractedCat"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":670,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":671,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":672,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC09 - Customise short form commands**","lastModifiedDate":"2023-10-26"},{"lineNumber":673,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":674,"author":{"gitId":"DistractedCat"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":675,"author":{"gitId":"DistractedCat"},"content":"1. User request to define a command in a custom format","lastModifiedDate":"2023-10-03"},{"lineNumber":676,"author":{"gitId":"DistractedCat"},"content":"2. FumbleLog stores the newly defined command","lastModifiedDate":"2023-10-03"},{"lineNumber":677,"author":{"gitId":"DistractedCat"},"content":"3. The defined short form command can now be used","lastModifiedDate":"2023-10-03"},{"lineNumber":678,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":679,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":680,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":681,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":682,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":683,"author":{"gitId":"DistractedCat"},"content":"* 1a. The short-form command is conflicting with something else","lastModifiedDate":"2023-10-03"},{"lineNumber":684,"author":{"gitId":"DistractedCat"},"content":"    * 1a1. FumbleLog shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":685,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":686,"author":{"gitId":"DistractedCat"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":687,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":688,"author":{"gitId":"DistractedCat"},"content":"* 3a. User uses a short-form command that is not defined","lastModifiedDate":"2023-10-03"},{"lineNumber":689,"author":{"gitId":"DistractedCat"},"content":"    * 3a1. FumbleLog shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":690,"author":{"gitId":"DistractedCat"},"content":" ","lastModifiedDate":"2023-10-03"},{"lineNumber":691,"author":{"gitId":"DistractedCat"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":692,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":693,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC10 - Assigning a group to an event**","lastModifiedDate":"2023-10-26"},{"lineNumber":694,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":695,"author":{"gitId":"DistractedCat"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":696,"author":{"gitId":"DistractedCat"},"content":"1. User requests to show a list of events","lastModifiedDate":"2023-10-03"},{"lineNumber":697,"author":{"gitId":"DistractedCat"},"content":"2. FumbleLog shows list of events","lastModifiedDate":"2023-10-03"},{"lineNumber":698,"author":{"gitId":"DistractedCat"},"content":"3. User requests to assign a group to a specific event in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":699,"author":{"gitId":"DistractedCat"},"content":"4. FumbleLog assigns all persons in the group to the event","lastModifiedDate":"2023-10-03"},{"lineNumber":700,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":701,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":702,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":703,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":704,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":705,"author":{"gitId":"DistractedCat"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-03"},{"lineNumber":706,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":707,"author":{"gitId":"DistractedCat"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":708,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":709,"author":{"gitId":"DistractedCat"},"content":"* 3a. User tries to assign a group to an invalid event","lastModifiedDate":"2023-10-03"},{"lineNumber":710,"author":{"gitId":"DistractedCat"},"content":"    * 3a1. FumbleLog shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":711,"author":{"gitId":"DistractedCat"},"content":" ","lastModifiedDate":"2023-10-03"},{"lineNumber":712,"author":{"gitId":"DistractedCat"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":713,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":714,"author":{"gitId":"DistractedCat"},"content":"* 3b. User tries to assign an invalid group to an event","lastModifiedDate":"2023-10-03"},{"lineNumber":715,"author":{"gitId":"DistractedCat"},"content":"    * 3b1. FumbleLog shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":716,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":717,"author":{"gitId":"DistractedCat"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":718,"author":{"gitId":"Kurtyjlee"},"content":"* 4a. User assigns a group to an event where ","lastModifiedDate":"2023-10-25"},{"lineNumber":719,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":720,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC11 - Marking an event as recurring**","lastModifiedDate":"2023-10-26"},{"lineNumber":721,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":722,"author":{"gitId":"DistractedCat"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":723,"author":{"gitId":"DistractedCat"},"content":"1. User requests to show a list of events","lastModifiedDate":"2023-10-03"},{"lineNumber":724,"author":{"gitId":"DistractedCat"},"content":"2. FumbleLog shows list of events","lastModifiedDate":"2023-10-05"},{"lineNumber":725,"author":{"gitId":"DistractedCat"},"content":"3. User requests to mark an event as recurring","lastModifiedDate":"2023-10-03"},{"lineNumber":726,"author":{"gitId":"DistractedCat"},"content":"4. User specifies how often the event occurs","lastModifiedDate":"2023-10-03"},{"lineNumber":727,"author":{"gitId":"DistractedCat"},"content":"5. FumbleLog sets the event as a recurring event","lastModifiedDate":"2023-10-05"},{"lineNumber":728,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":729,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":730,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":731,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":732,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":733,"author":{"gitId":"DistractedCat"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-03"},{"lineNumber":734,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":735,"author":{"gitId":"DistractedCat"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":736,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":737,"author":{"gitId":"DistractedCat"},"content":"* 3a. User tries to mark an invalid event as recurring","lastModifiedDate":"2023-10-03"},{"lineNumber":738,"author":{"gitId":"DistractedCat"},"content":"    * 3a1. FumbleLog shows an error message","lastModifiedDate":"2023-10-05"},{"lineNumber":739,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":740,"author":{"gitId":"DistractedCat"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":741,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":742,"author":{"gitId":"DistractedCat"},"content":"* 3b. User tries to mark an event as recurring when it has already been marked as a recurring event","lastModifiedDate":"2023-10-03"},{"lineNumber":743,"author":{"gitId":"DistractedCat"},"content":"    * 3b1. FumbleLog shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":744,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":745,"author":{"gitId":"DistractedCat"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":746,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":747,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC12 - Pin a person**","lastModifiedDate":"2023-10-26"},{"lineNumber":748,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":749,"author":{"gitId":"DistractedCat"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":750,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":751,"author":{"gitId":"DistractedCat"},"content":"1. User requests to show a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":752,"author":{"gitId":"DistractedCat"},"content":"2. FumbleLog shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":753,"author":{"gitId":"DistractedCat"},"content":"3. User requests to pin a person from the list","lastModifiedDate":"2023-10-03"},{"lineNumber":754,"author":{"gitId":"DistractedCat"},"content":"4. FumbleLog pins the person","lastModifiedDate":"2023-10-05"},{"lineNumber":755,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":756,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":757,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":758,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":759,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":760,"author":{"gitId":"DistractedCat"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-03"},{"lineNumber":761,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":762,"author":{"gitId":"DistractedCat"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":763,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":764,"author":{"gitId":"DistractedCat"},"content":"* 3a. User requests to pin an invalid person","lastModifiedDate":"2023-10-03"},{"lineNumber":765,"author":{"gitId":"DistractedCat"},"content":"  * 3a1. FumbeLog shows an error message","lastModifiedDate":"2023-10-03"},{"lineNumber":766,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":767,"author":{"gitId":"DistractedCat"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":768,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":769,"author":{"gitId":"DistractedCat"},"content":"**Use case: UC13 - Display events in Calendar**","lastModifiedDate":"2023-10-26"},{"lineNumber":770,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":771,"author":{"gitId":"DistractedCat"},"content":"1. User requests to show events in a calendar form","lastModifiedDate":"2023-10-03"},{"lineNumber":772,"author":{"gitId":"DistractedCat"},"content":"2. FumbleLog shows all the events in a calendar","lastModifiedDate":"2023-10-05"},{"lineNumber":773,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":774,"author":{"gitId":"DistractedCat"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":775,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":776,"author":{"gitId":"DistractedCat"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":777,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":778,"author":{"gitId":"DistractedCat"},"content":"* 1a. The list is empty","lastModifiedDate":"2023-10-03"},{"lineNumber":779,"author":{"gitId":"DistractedCat"},"content":"  * 1a1. FumbleLog shows an empty calendar","lastModifiedDate":"2023-10-03"},{"lineNumber":780,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":781,"author":{"gitId":"DistractedCat"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":783,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"DistractedCat"},"content":"4.  Should be able to hold up to 1000 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":790,"author":{"gitId":"DistractedCat"},"content":"5.  The data stored on the hard drive should be light-weight and not take too much space.","lastModifiedDate":"2023-10-03"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"nicleongyj"},"content":"* **Event**:  An encompassing term that refers to any organized occurrence or gathering,  ","lastModifiedDate":"2023-10-03"},{"lineNumber":799,"author":{"gitId":"nicleongyj"},"content":"which can include various types of activities, such as meetings, birthdays, and other scheduled events.","lastModifiedDate":"2023-10-03"},{"lineNumber":800,"author":{"gitId":"nicleongyj"},"content":"* **Meeting**: A specific type of event that involves the interaction of two or more individuals. Contacts or groups of contacts can be assigned to a single meeting.","lastModifiedDate":"2023-10-03"},{"lineNumber":801,"author":{"gitId":"nicleongyj"},"content":"* **Group**: A collection of contacts grouped together for organizational purposes. ","lastModifiedDate":"2023-10-03"},{"lineNumber":802,"author":{"gitId":"nicleongyj"},"content":"Contacts or groups can be assigned to a single meeting, allowing for efficient management and coordination of events and interactions.","lastModifiedDate":"2023-10-03"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"DistractedCat":272,"Ken-Lai":40,"nicleongyj":73,"Kurtyjlee":57,"leezhengjing":60,"-":353}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"FumbleLog is a **productivity desktop app for managing contacts and tracking events. It is optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"In this user guide, you will learn the basics of our application and how you can use it to manage your tasks and interpersonal relationships better.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"# Quick start","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"**1. Ensure you have the right environment.**","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"- Before you begin, make sure you have Java `11` or above installed in your computer. If not, you can download it from [here](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html).","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"**2. Download our FumbleLog Application.**","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"- Visit the official FumbleLog release page on Github [here](https://github.com/AY2324S1-CS2103T-T12-2/tp/releases).","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"- Download the latest version of `fumblelog.jar` from the release page.","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"**3. Set up your home folder.**","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"- Choose a folder on your computer where you want to store you FumbleLog application, or create a new folder.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"- Copy the `fumblelog.jar` file into the folder you have chosen or created.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"**4. Launch the application.**","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"- Open a command terminal (Command Prompt or Terminal, depending on your operating system), use the `cd` command to navigate to the folder where you have placed the `fumblelog.jar` file.","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"- Run the application using the command: `java -jar fumblelog.jar`. You should now be able to see the FumbleLog user interface!","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"   Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"**5. Try out some simple commands!**","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"- Type commands into the command box and press `Enter` to execute it. e.g. typing **`help`** and pressing `Enter` will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"   * `list` : Lists all persons.","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"   * `add n/John Doe` : Adds a person named `John Doe` to the FumbleLog persons list.","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"   * `delete 3` : Deletes the 3rd person shown in the current persons list.","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"nicleongyj"},"content":"   * `exit` : Exits FumbleLog application.","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"**6. Learn more advanced commands.**","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"- Refer to [Features](#features) below for more details of FumbleLog\u0027s commands.","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"# Features","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"  e.g `n/NAME [g/GROUP]` can be used as `n/John Doe g/friend` or as `n/John Doe`.","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"  e.g. `[g/GROUP]…​` can be used as ` ` (i.e. 0 times), `g/friend`, `g/friend g/family` etc.","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"Shows a message explaining how to access the user guide for help.","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"![Helptab](images/Helptab.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Kurtyjlee"},"content":"## Commands for Persons","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"Kurtyjlee"},"content":"Adds a person to the FumbleLog.","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Kurtyjlee"},"content":"Format: `add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [g/GROUP]…​`","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"leezhengjing"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"leezhengjing"},"content":"    :bulb: **Tip:**","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"Kurtyjlee"},"content":"    A person can have any number of groups (including 0)","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"leezhengjing"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"leezhengjing"},"content":"    :bulb: **Tip:**","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"leezhengjing"},"content":"    The parameters are optional, but at least the name must be provided.","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Kurtyjlee"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 b/2023-09-30 g/friend g/partner`","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"Kurtyjlee"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567`","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"Kurtyjlee"},"content":"* `add n/Jonathan`","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"Kurtyjlee"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"leezhengjing"},"content":"* `n/NAME`: Name of the person (Compulsory)","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"Kurtyjlee"},"content":"* `[p/PHONE_NUMBER]`: A valid phone number","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"Kurtyjlee"},"content":"* `[e/EMAIL]`: A valid email address","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"Kurtyjlee"},"content":"* `[a/ADDRESS]`: Address of the person","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"Kurtyjlee"},"content":"* `[b/BIRTHDAY]`: A valid date in the format `yyyy-MM-dd`","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"Kurtyjlee"},"content":"* `[g/GROUP]`: A group for the person to be categorised into","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when a command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"Kurtyjlee"},"content":"* Input: `add n/james p/999 e/example@gmail.com a/1 computing drive b/2001-09-20`","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"Kurtyjlee"},"content":"* Output: `New person added: james; Phone: 999; Email: example@gmail.com; Address: 1 computing drive; Birthday: Sep 09 2001; groups:; `","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"nicleongyj"},"content":"![Addperson](images/Addperson.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when the command fails","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"Kurtyjlee"},"content":"* `Invalid command format! add: Adds a person to the FumbleLog. Parameters: n/NAME [p/PHONE] [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [g/GROUP]…​`","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"Kurtyjlee"},"content":"Edits an existing person in the FumbleLog.","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"leezhengjing"},"content":"Format: `edit PERSON_INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [g/GROUP]…​`","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"Kurtyjlee"},"content":"* **At least one of the optional parameters must be provided.**","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"Kurtyjlee"},"content":"* When editing groups, the existing groups of the person will be removed i.e adding of groups is not cumulative.","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"Kurtyjlee"},"content":"* You can remove all the person’s groups by typing `g/` without specifying any groups after it.","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"* When you edit a person\u0027s name, the person\u0027s name will be updated in all [events](#commands-for-events) that the person is assigned to.","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"*  `edit 2 n/Betsy Crower g/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing groups. Any events that Betsy Crower is assigned to is also updated with this new name.","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"*  `edit 3 n/Betsy Crower b/2023-09-29` Edits the name of the 3rd person to be `Betsy Crower` and changes the birthday to 29th Sep 2023. Any events that Betsy Crower is assigned to is also updated with this new name.","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"Kurtyjlee"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"leezhengjing"},"content":"* `PERSON_INDEX`: A positive integer","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Kurtyjlee"},"content":"* `[n/NAME]`: Name of the person","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"Kurtyjlee"},"content":"* `[p/PHONE]`: A valid phone number","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"Kurtyjlee"},"content":"* `[e/EMAIL]`: A valid email address","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"Kurtyjlee"},"content":"* `[a/ADDRESS]`: Address of the person","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Kurtyjlee"},"content":"* `[b/BIRTHDAY]`: A valid date in the format `yyyy-MM-dd`","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"Kurtyjlee"},"content":"* `[g/GROUP]`: Text for the tag of the person","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when a command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":152,"author":{"gitId":"Kurtyjlee"},"content":"* Input: `edit 1 n/Alexa Yeoh`","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"Kurtyjlee"},"content":"* Output: `Edited Person: Alexa Yeoh; Phone: 87438807; Email: alexyeoh@example.com; Address: Blk 30 Geylang Street 29, #06-40; groups: [friends]`","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"nicleongyj"},"content":"![Editperson](images/Editperson.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when the command fails:","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"Kurtyjlee"},"content":"* `Invalid command format! edit: Edits the details of the person identified by the index number used in the displayed person list. Existing values will be overwritten by the input values. Parameters: INDEX (must be a positive integer) [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [g/GROUP]…​`","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"Kurtyjlee"},"content":"### Listing all persons : `list`","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"Kurtyjlee"},"content":"Shows a list of all persons in the FumbleLog.","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":165,"author":{"gitId":"Kurtyjlee"},"content":"Format: `list`","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when a command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":168,"author":{"gitId":"Kurtyjlee"},"content":"* You should see a list of all persons under the persons column.","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"Deletes the specified person from FumbleLog.","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"When a person is deleted, any [events](#commands-for-events) that the person is assigned to will also be updated, i.e. the person will be unassigned from the event.","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"leezhengjing"},"content":"Format: `delete PERSON_INDEX`","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"leezhengjing"},"content":"* Deletes the person at the specified `PERSON_INDEX`.","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"Kurtyjlee"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the FumbleLog.","lastModifiedDate":"2023-10-05"},{"lineNumber":201,"author":{"gitId":"DistractedCat"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command. i.e Any person named `Betsy` at index `1` will be deleted.","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"leezhengjing"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"leezhengjing"},"content":"* `PERSON_INDEX`: A positive integer","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when a command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":207,"author":{"gitId":"Kurtyjlee"},"content":"* Input: `delete 1`","lastModifiedDate":"2023-10-02"},{"lineNumber":208,"author":{"gitId":"Kurtyjlee"},"content":"* Output: `Deleted Person: Roy Balakrishnan; Phone: 92624417; Email: royb@example.com; Address: Blk 45 Aljunied Street 85, #11-31; groups: [colleagues]`","lastModifiedDate":"2023-10-03"},{"lineNumber":209,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":210,"author":{"gitId":"nicleongyj"},"content":"![DeletePerson](images/Deleteperson.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when the command fails:","lastModifiedDate":"2023-10-02"},{"lineNumber":213,"author":{"gitId":"Kurtyjlee"},"content":"* `Invalid command format! delete: Deletes the person identified by the index number used in the displayed person list. Parameters: INDEX (must be a positive integer)Example: delete 1`","lastModifiedDate":"2023-10-02"},{"lineNumber":214,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":215,"author":{"gitId":"Kurtyjlee"},"content":"## Commands for Events","lastModifiedDate":"2023-10-03"},{"lineNumber":216,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":217,"author":{"gitId":"Kurtyjlee"},"content":"### Adding an event : `add_event`","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":219,"author":{"gitId":"Kurtyjlee"},"content":"Add an event to the events list in FumbleLog.","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":221,"author":{"gitId":"Kurtyjlee"},"content":"Format: `add_event m/EVENT_NAME d/DATE [s/START_TIME] [e/END_TIME] [n/PERSON_NAME]... [g/GROUP]...`","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":223,"author":{"gitId":"DistractedCat"},"content":"- `START_TIME` and `END_TIME` are optional.","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"Kurtyjlee"},"content":"- `PERSON_NAME` is optional and multiple persons can be added at once, however only persons that exist can be added.","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"Kurtyjlee"},"content":"- `GROUP` is optional, however only groups that exist can be added.","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"DistractedCat"},"content":"- The given `DATE`, `START_TIME` and `END_TIME` cannot be a time in the past.","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"DistractedCat"},"content":"- The given `START_TIME` must be before the given `END_TIME`.","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"DistractedCat"},"content":"- If the meeting is added successfully, it will automatically be sorted by date and time with the earliest meeting at the top of the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"Kurtyjlee"},"content":"- All dates are to be in the format `yyyy-MM-dd`. i.e. 2023-10-05 for 5th Oct 2023","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"Kurtyjlee"},"content":"- All time are to be in the format `HHmm`. i.e. 1400 for 2pm","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":232,"author":{"gitId":"Kurtyjlee"},"content":"Example: ","lastModifiedDate":"2023-10-02"},{"lineNumber":233,"author":{"gitId":"Kurtyjlee"},"content":"* `add_event m/FumbleLog meeting d/2023-10-05 s/1500 e/1700 n/Ken g/CS2103T g/CS2101`","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"Kurtyjlee"},"content":"* `add_event m/FumbleLog presentation d/2023-10-30 g/Team2`","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":236,"author":{"gitId":"Kurtyjlee"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":237,"author":{"gitId":"Kurtyjlee"},"content":"* `m/EVENT_DETAILS`: Details of the event.","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"Kurtyjlee"},"content":"* `d/DATE`: A valid date in the format `yyyy-MM-dd`.","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"Kurtyjlee"},"content":"* `[s/START_TIME]`: A valid time in the format `HHmm`.","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"Kurtyjlee"},"content":"* `[e/END_TIME]`: A valid time in the format `HHmm`.","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"Kurtyjlee"},"content":"* `[n/PERSON_NAME]`: Name of the person to be assigned.","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"Kurtyjlee"},"content":"* `[g/GROUP]`: Name of the group to be assigned.","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":244,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when the command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":245,"author":{"gitId":"Kurtyjlee"},"content":"* Input: `add_event m/FumbleLog meeting d/2023-10-05 s/1500 e/1700 n/Ken g/CS2103T g/CS2101`","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"Kurtyjlee"},"content":"* Output: `New event added: FumbleLog meeting; Date: 05 Oct 2023; Start Time: 15:00; End Time: 17:00; Persons involved: Ken; Groups involved: [CS2103T], [CS2101];`","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":248,"author":{"gitId":"nicleongyj"},"content":"![EventAdd](images/Eventadd.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":250,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when the command fails:","lastModifiedDate":"2023-10-02"},{"lineNumber":252,"author":{"gitId":"Kurtyjlee"},"content":"* `Invalid command format!","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"Kurtyjlee"},"content":"  add_event: Adds an event to the address book.","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"Kurtyjlee"},"content":"  Parameters: m/EVENT_NAME d/DATE [s/START_TIME] [e/END_TIME] [n/NAME]... [g/GROUP]...","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"Kurtyjlee"},"content":"  Example: add_event m/FumbleLog Meeting d/2020-10-30 s/1000 e/1200 n/Ken n/Yuheng g/Team2 `","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"Kurtyjlee"},"content":"* * `You cannot enter a time that is before the current time!` - When the given `DATE`, `START_TIME` and `END_TIME` is before the current time.","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"DistractedCat"},"content":"* `You cannot enter an end time that is before the start time!` - When the given `START_TIME` is after the given `END_TIME`.","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":259,"author":{"gitId":"Kurtyjlee"},"content":"### Editing an event : `edit_event`","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":261,"author":{"gitId":"Kurtyjlee"},"content":"Edits an existing event in FumbleLog.","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":263,"author":{"gitId":"Kurtyjlee"},"content":"Format: `edit_event EVENT_INDEX [m/MEETING_DETAILS] [d/DATE] [s/START_TIME] [e/END_TIME] [n/PERSON_NAME]... [u/PERSON_NAME]... [g/GROUP]... [ug/GROUP]...`","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":265,"author":{"gitId":"Kurtyjlee"},"content":"* **At least one of the optional parameters required.**","lastModifiedDate":"2023-10-02"},{"lineNumber":266,"author":{"gitId":"Kurtyjlee"},"content":"* `START_TIME` must be coupled with `END_TIME`.","lastModifiedDate":"2023-10-03"},{"lineNumber":267,"author":{"gitId":"Kurtyjlee"},"content":"* The input values will replace the existing values, except for `PERSON` AND `GROUP`.","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"Kurtyjlee"},"content":"* `PERSON` and `GROUP` edits are cumulative and will add to the current list of persons and groups.","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"Kurtyjlee"},"content":"  Use the unassign commands, i.e. `u/PERSON`, if you would like to unassign any person or group.","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"DistractedCat"},"content":"* If there are any changes to the meeting date and time, the meeting will be automatically sorted by date and time with the earliest meeting at the top of the list.","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"Kurtyjlee"},"content":"* All dates are to be in the format `yyyy-MM-dd`. i.e. 2023-10-05 for 5th Oct 2023","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"Kurtyjlee"},"content":"* All time are to be in the format `HHmm`. i.e. 1400 for 2pm","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":274,"author":{"gitId":"Kurtyjlee"},"content":"Examples:","lastModifiedDate":"2023-10-02"},{"lineNumber":275,"author":{"gitId":"Kurtyjlee"},"content":"* `edit_event 1 m/FumbleLog meeting d/2023-10-05 s/1500 e/1700`","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"Kurtyjlee"},"content":"* `edit_event 1 g/CS2103T g/CS2101`: Adds the groups CS2103T and CS2101 to the event.","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"Kurtyjlee"},"content":"* `edit_event 1 u/Ken`: Unassigns the person `Ken` from the event.","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":279,"author":{"gitId":"Kurtyjlee"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":280,"author":{"gitId":"Kurtyjlee"},"content":"* `EVENT_INDEX`: The index position of the event in the displayed event list.","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"nicleongyj"},"content":"* `[m/EVENT_DETAILS]`: Details of the event to be changed.","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"Kurtyjlee"},"content":"* `[d/DATE]`: A valid date in the format `yyyy-MM-dd`","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"Kurtyjlee"},"content":"* `[s/START_TIME]`: A valid time in the format `HHmm`","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"Kurtyjlee"},"content":"* `[e/END_TIME]`: A valid time in the format `HHmm`","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"Kurtyjlee"},"content":"* `[n/PERSON_NAME]`: Name of the person(s) to be assigned.","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"Kurtyjlee"},"content":"* `[u/PERSON_NAME]`: Name of the person(s) to be unassigned.","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"Kurtyjlee"},"content":"* `[g/GROUP]`: Name of the group(s) to be assigned.","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"Kurtyjlee"},"content":"* `[ug/GROUP]`: Name of the group(s) to be unassigned.","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":290,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when the command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":291,"author":{"gitId":"Kurtyjlee"},"content":"* Input: `edit_event 1 m/tP week 3 meeting d/2023-10-05 s/1500 e/1700`","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"Kurtyjlee"},"content":"* Output: `Edited event: tP week 3 meeting; Date: 05 Oct 2023; Start Time: 15:00; End Time: 17:00; `","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":294,"author":{"gitId":"nicleongyj"},"content":"![Eventedit](images/Eventedit.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when the command fails:","lastModifiedDate":"2023-10-02"},{"lineNumber":298,"author":{"gitId":"Kurtyjlee"},"content":"* `Invalid command format!","lastModifiedDate":"2023-10-25"},{"lineNumber":299,"author":{"gitId":"Kurtyjlee"},"content":"  edit_event: Edits the details of the event identified by the index number used in the displayed event list.","lastModifiedDate":"2023-10-25"},{"lineNumber":300,"author":{"gitId":"Kurtyjlee"},"content":"  Existing values will be overwritten by the input values, except for the list of assigned persons and the list of assigned groups","lastModifiedDate":"2023-10-25"},{"lineNumber":301,"author":{"gitId":"Kurtyjlee"},"content":"  Parameters: INDEX (must be a positive integer) [m/EVENT_DETAILS] [d/DATE] [s/START_TIME] [e/END_TIME] [n/NAME]... [u/NAME]... [g/GROUP]... [ug/GROUP]...","lastModifiedDate":"2023-10-25"},{"lineNumber":302,"author":{"gitId":"Kurtyjlee"},"content":"  Example: edit_event 1 m/FumbleLog Meeting d/2023-10-13 n/Ken g/Team2 `","lastModifiedDate":"2023-10-25"},{"lineNumber":303,"author":{"gitId":"nicleongyj"},"content":"* `You cannot enter a time that is before the current time!` - When the given `DATE`, `START_TIME` and `END_TIME` is before the current time.","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"DistractedCat"},"content":"* `You cannot enter an end time that is before the start time!` - When the given `START_TIME` is after the given `END_TIME`.","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":306,"author":{"gitId":"Kurtyjlee"},"content":"### Deleting an event : `delete_event`","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":308,"author":{"gitId":"Kurtyjlee"},"content":"Deletes a specified event from the FumbleLog.","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":310,"author":{"gitId":"leezhengjing"},"content":"Format: `delete_event EVENT_INDEX`","lastModifiedDate":"2023-10-25"},{"lineNumber":311,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":312,"author":{"gitId":"Kurtyjlee"},"content":"* Deletes the meeting at the specified `EVENT_INDEX`.","lastModifiedDate":"2023-10-25"},{"lineNumber":313,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":314,"author":{"gitId":"Kurtyjlee"},"content":"Examples:","lastModifiedDate":"2023-10-02"},{"lineNumber":315,"author":{"gitId":"Kurtyjlee"},"content":"* `delete_event 1`: Deletes the 1st event in the event list.","lastModifiedDate":"2023-10-25"},{"lineNumber":316,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":317,"author":{"gitId":"Kurtyjlee"},"content":"Acceptable values for each parameter:","lastModifiedDate":"2023-10-02"},{"lineNumber":318,"author":{"gitId":"Kurtyjlee"},"content":"* `EVENT_INDEX`: The index position of the event in the displayed event list.","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":320,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when the command succeeds:","lastModifiedDate":"2023-10-02"},{"lineNumber":321,"author":{"gitId":"Kurtyjlee"},"content":"* Input: `delete_event 1`","lastModifiedDate":"2023-10-25"},{"lineNumber":322,"author":{"gitId":"Kurtyjlee"},"content":"* Output: `Deleted Event: tP week 3 meeting; Date: 05 Oct 2023; Start Time: 15:00; End Time: 17:00; Groups involved: [Team1];`","lastModifiedDate":"2023-10-25"},{"lineNumber":323,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":324,"author":{"gitId":"Kurtyjlee"},"content":"Expected output when the command fails:","lastModifiedDate":"2023-10-02"},{"lineNumber":325,"author":{"gitId":"Kurtyjlee"},"content":"* `Invalid command format!","lastModifiedDate":"2023-10-25"},{"lineNumber":326,"author":{"gitId":"Kurtyjlee"},"content":"  delete_event: Deletes the event identified by the index number used in the displayed event list.","lastModifiedDate":"2023-10-25"},{"lineNumber":327,"author":{"gitId":"Kurtyjlee"},"content":"  Parameters: INDEX (must be a positive integer)","lastModifiedDate":"2023-10-25"},{"lineNumber":328,"author":{"gitId":"Kurtyjlee"},"content":"  Example: delete_event 1`","lastModifiedDate":"2023-10-25"},{"lineNumber":329,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":330,"author":{"gitId":"Kurtyjlee"},"content":"## General commands","lastModifiedDate":"2023-10-03"},{"lineNumber":331,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":332,"author":{"gitId":"nicleongyj"},"content":"### Show all upcoming events and birthdays : `remind`","lastModifiedDate":"2023-10-25"},{"lineNumber":333,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":334,"author":{"gitId":"nicleongyj"},"content":"Shows all events and birthdays that are happening in the next specified number of days.","lastModifiedDate":"2023-10-25"},{"lineNumber":335,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":336,"author":{"gitId":"nicleongyj"},"content":"Format: `remind` [NUMBER_OF_DAYS]","lastModifiedDate":"2023-10-25"},{"lineNumber":337,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":338,"author":{"gitId":"nicleongyj"},"content":"* Shows all events and birthdays happening in the next [NUMBER_OF_DAYS] days.","lastModifiedDate":"2023-10-25"},{"lineNumber":339,"author":{"gitId":"nicleongyj"},"content":"* If [NUMBER_OF_DAYS] is not specified, the default value is 7 days.","lastModifiedDate":"2023-10-25"},{"lineNumber":340,"author":{"gitId":"nicleongyj"},"content":"* [NUMBER_OF_DAYS] **must be a positive integer** 1,2,3, ...","lastModifiedDate":"2023-10-25"},{"lineNumber":341,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":342,"author":{"gitId":"nicleongyj"},"content":"Examples:","lastModifiedDate":"2023-10-25"},{"lineNumber":343,"author":{"gitId":"nicleongyj"},"content":"* `remind` shows all events and birthdays happening in the next 7 days.","lastModifiedDate":"2023-10-25"},{"lineNumber":344,"author":{"gitId":"nicleongyj"},"content":"* `remind 3` shows all events and birthdays happening in the next 3 days.","lastModifiedDate":"2023-10-25"},{"lineNumber":345,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":346,"author":{"gitId":"nicleongyj"},"content":"Expected output when the command succeeds:","lastModifiedDate":"2023-10-25"},{"lineNumber":347,"author":{"gitId":"nicleongyj"},"content":"* Input: `remind`","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"nicleongyj"},"content":"* Output: `Showing all birthdays and events happening in the next 7 days: `","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"nicleongyj"},"content":"![Remind](images/Remind.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":353,"author":{"gitId":"nicleongyj"},"content":"Expected output when the command fails:","lastModifiedDate":"2023-10-25"},{"lineNumber":354,"author":{"gitId":"nicleongyj"},"content":"* `Invalid command format!","lastModifiedDate":"2023-10-25"},{"lineNumber":355,"author":{"gitId":"nicleongyj"},"content":"  remind: Reminds the user of the upcoming birthdays and events in the next n number of days. If no index is given, the default number of days is 7.","lastModifiedDate":"2023-10-25"},{"lineNumber":356,"author":{"gitId":"nicleongyj"},"content":"  Parameters: INDEX (must be a positive integer)","lastModifiedDate":"2023-10-25"},{"lineNumber":357,"author":{"gitId":"nicleongyj"},"content":"  Example: remind 1`","lastModifiedDate":"2023-10-25"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":359,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"nicleongyj"},"content":"Clears all contacts and events from the FumbleLog. Be very sure before using this command as it cannot be undone. ","lastModifiedDate":"2023-10-25"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"Kurtyjlee"},"content":"# How we manage your data","lastModifiedDate":"2023-10-02"},{"lineNumber":372,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"Kurtyjlee"},"content":"FumbleLog data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":379,"author":{"gitId":"Kurtyjlee"},"content":"FumbleLog data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":381,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":382,"author":{"gitId":"Kurtyjlee"},"content":"If your changes to the data file makes its format invalid, FumbleLog will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":383,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":385,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"Kurtyjlee"},"content":"# FAQ","lastModifiedDate":"2023-10-03"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"Kurtyjlee"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FumbleLog home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"Kurtyjlee"},"content":"# Known issues","lastModifiedDate":"2023-10-03"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":400,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":402,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":404,"author":{"gitId":"Kurtyjlee"},"content":"# Command summary","lastModifiedDate":"2023-10-03"},{"lineNumber":405,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":406,"author":{"gitId":"Kurtyjlee"},"content":"### Commands for Persons","lastModifiedDate":"2023-10-03"},{"lineNumber":407,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":408,"author":{"gitId":"Kurtyjlee"},"content":"| Action            | Format, Examples                                                                                                                                                        |","lastModifiedDate":"2023-10-25"},{"lineNumber":409,"author":{"gitId":"Kurtyjlee"},"content":"|-------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":410,"author":{"gitId":"Kurtyjlee"},"content":"| **Add Person**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [g/GROUP]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 g/friend g/colleague` |","lastModifiedDate":"2023-10-25"},{"lineNumber":411,"author":{"gitId":"Kurtyjlee"},"content":"| **Edit Person**   | `edit PERSON_INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [g/GROUP]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                    |","lastModifiedDate":"2023-10-25"},{"lineNumber":412,"author":{"gitId":"Kurtyjlee"},"content":"| **Delete Person** | `delete PERSON_INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                              |","lastModifiedDate":"2023-10-25"},{"lineNumber":413,"author":{"gitId":"Kurtyjlee"},"content":"| **List Persons**  | `list`                                                                                                                                                                  |","lastModifiedDate":"2023-10-25"},{"lineNumber":414,"author":{"gitId":"Kurtyjlee"},"content":"| **Find Person**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                              |","lastModifiedDate":"2023-10-25"},{"lineNumber":415,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":416,"author":{"gitId":"Kurtyjlee"},"content":"### Commands for Events","lastModifiedDate":"2023-10-03"},{"lineNumber":417,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":418,"author":{"gitId":"Kurtyjlee"},"content":"| Action           | Format, Examples                                                                                                                                                                                                                                    |","lastModifiedDate":"2023-10-25"},{"lineNumber":419,"author":{"gitId":"Kurtyjlee"},"content":"|------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":420,"author":{"gitId":"Kurtyjlee"},"content":"| **Add Event**    | `add_event m/EVENT_NAME d/DATE [s/START_TIME] [e/END_TIME] [n/PERSON_NAME]... [g/GROUP]...`\u003cbr\u003e e.g., `add_event m/FumbleLog meeting d/2023-10-05 s/1500 e/1700 n/Ken g/CS2103T g/CS2101`                                                           |","lastModifiedDate":"2023-10-25"},{"lineNumber":421,"author":{"gitId":"Kurtyjlee"},"content":"| **Edit Event**   | `edit_event EVENT_INDEX [m/MEETING_DETAILS] [d/DATE] [s/START_TIME] [e/END_TIME] [n/PERSON_NAME]... [u/PERSON_NAME]... [g/GROUP]... [ug/GROUP]...`\u003cbr\u003e e.g., `edit_event 1 m/tP week 3 meeting d/2023-10-05 s/1500 e/1700 n/Ken g/CS2103T g/CS2101` |","lastModifiedDate":"2023-10-25"},{"lineNumber":422,"author":{"gitId":"Kurtyjlee"},"content":"| **Delete Event** | `delete_event EVENT_INDEX`\u003cbr\u003e e.g., `delete_event 1`                                                                                                                                                                                               |","lastModifiedDate":"2023-10-25"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"Kurtyjlee"},"content":"### General commands","lastModifiedDate":"2023-10-03"},{"lineNumber":425,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":426,"author":{"gitId":"Kurtyjlee"},"content":"| Action    | Format, Examples |","lastModifiedDate":"2023-10-25"},{"lineNumber":427,"author":{"gitId":"Kurtyjlee"},"content":"|-----------|------------------|","lastModifiedDate":"2023-10-25"},{"lineNumber":428,"author":{"gitId":"Kurtyjlee"},"content":"| **Clear** | `clear`          |","lastModifiedDate":"2023-10-25"},{"lineNumber":429,"author":{"gitId":"Kurtyjlee"},"content":"| **Exit**  | `exit`           |","lastModifiedDate":"2023-10-25"},{"lineNumber":430,"author":{"gitId":"Kurtyjlee"},"content":"| **Help**  | `help`           |","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"DistractedCat":13,"nicleongyj":64,"Kurtyjlee":197,"leezhengjing":14,"-":142}},{"path":"docs/diagrams/AddPersonSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"!include ./style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"participant \"addCommand:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"note left of LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"let {str} be \"n/Lee Zheng Jing\"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"end note","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"[-\u003e LogicManager : execute(\"add {str}\")","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add {str}\")","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"create AddCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"activate AddCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"{str}\")","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"activate AddCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"AddCommandParser -\u003e ParserUtil : parseName(\"Lee Zheng Jing\")","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"activate ParserUtil","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"ParserUtil --\u003e AddCommandParser : name","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"create AddCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"AddCommandParser -\u003e AddCommand : new AddCommand(person)","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"activate AddCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"AddCommand --\u003e AddCommandParser : addCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"deactivate AddCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"AddCommandParser --\u003e AddressBookParser : addCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"AddressBookParser --\u003e LogicManager : addCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"activate AddCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"AddCommand -\u003e Model : addPerson(person)","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"Model --\u003e AddCommand : person","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"\u0027AddCommand -\u003e AddCommand : addPerson(person)","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"AddCommand -\u003e Model : updateGroups()","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"leezhengjing"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"leezhengjing"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"leezhengjing"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"leezhengjing"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"leezhengjing":79}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"Ken-Lai"},"content":"AddressBook *-right-\u003e \"1\" UniqueGroupList","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Ken-Lai"},"content":"UniqueGroupList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Ken-Lai"},"content":"UniqueGroupList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"Ken-Lai"},"content":"UniqueGroupList -right-\u003e \"*\" Group","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Ken-Lai"},"content":"Person -up-\u003e \"*\" Group","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Ken-Lai":5,"-":16}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Ken-Lai"},"content":"Class Group","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Ken-Lai"},"content":"Class EventList","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Ken-Lai"},"content":"Class \"{abstract}\\nEvent\" as Event","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Ken-Lai"},"content":"Class EventDate","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Ken-Lai"},"content":"Class EventName","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Ken-Lai"},"content":"Class EventTime","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Ken-Lai"},"content":"Class EventType","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Ken-Lai"},"content":"Class Meeting","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":47,"author":{"gitId":"Ken-Lai"},"content":"AddressBook *--\u003e \"1\" EventList","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"Ken-Lai"},"content":"EventList --\u003e \"~* all\" Event","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Ken-Lai"},"content":"Event \u003c|-- Meeting","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"Ken-Lai"},"content":"Person *--\u003e \"0..1\" Phone","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Ken-Lai"},"content":"Person *--\u003e \"0..1\" Email","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Ken-Lai"},"content":"Person *--\u003e \"0..1\" Address","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Ken-Lai"},"content":"Person *--\u003e \"*\" Group","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Ken-Lai"},"content":"Event *--\u003e EventName","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Ken-Lai"},"content":"Event *--\u003e EventDate","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Ken-Lai"},"content":"Event *--\u003e EventType","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Ken-Lai"},"content":"Event *--\u003e \"0..1\" EventTime","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"Ken-Lai"},"content":"ModelManager --\u003e \"~* filtered\" Event","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Ken-Lai":21,"-":49}},{"path":"docs/diagrams/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"!include ./style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"Class Person","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"Class Address","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"Class Email","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"Class Name","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"Class Phone","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"Class Group","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"Class Birthday","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"Person *--\u003e \"0..1\" Phone","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"Person *--\u003e \"0..1\" Email","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"Person *--\u003e \"0..1\" Address","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"Person *--\u003e \"*\" Group","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"Person *--\u003e \"0..1\" Birthday","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"leezhengjing":26}},{"path":"docs/diagrams/RemindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"participant \":LogicManager\" as Logic LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"participant \":AddressBookParser\" as AddressBookParser ADDRESS_BOOK_PARSER_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"participant \":RemindCommandParser\" as RemindCommandParser REMIND_COMMAND_PARSER_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":"participant \"bp:BirthdayWithinDaysPredicate\" as BirthdayWithinDays BIRTHDAY_WITHIN_DAYS_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"participant \"ep:EventWithinDaysPredicate\" as EventWithinDays EVENT_WITHIN_DAYS_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":"participant \"r:RemindCommand\" as RemindCommand REMIND_COMMAND_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"participant \":CommandResult\" as CommandResult COMMAND_RESULT_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"[-\u003e Logic : execute(\"delete 1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"activate Logic","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"Logic -[LOGIC_COLOR]\u003e AddressBookParser : parseCommand(\"remind 1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"create RemindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"AddressBookParser -[ADDRESS_BOOK_PARSER_COLOR]\u003e RemindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"activate RemindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"RemindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"deactivate RemindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"AddressBookParser -[ADDRESS_BOOK_PARSER_COLOR]\u003e RemindCommandParser : parse(\"1\u0027)","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"activate RemindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"create BirthdayWithinDays","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"RemindCommandParser -[REMIND_COMMAND_PARSER_COLOR]\u003e BirthdayWithinDays","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"activate BirthdayWithinDays","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"BirthdayWithinDays --\u003e RemindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"deactivate BirthdayWithinDays","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"create EventWithinDays","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"nicleongyj"},"content":"RemindCommandParser -[REMIND_COMMAND_PARSER_COLOR]\u003e EventWithinDays","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"nicleongyj"},"content":"activate EventWithinDays","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"nicleongyj"},"content":"EventWithinDays --\u003e RemindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"deactivate EventWithinDays","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"nicleongyj"},"content":"create RemindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"nicleongyj"},"content":"RemindCommandParser -[REMIND_COMMAND_PARSER_COLOR]\u003e RemindCommand : new RemindCommand(bp, ep, 1)","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"nicleongyj"},"content":"activate RemindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"nicleongyj"},"content":"RemindCommand --\u003e RemindCommandParser : r","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"nicleongyj"},"content":"deactivate RemindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"nicleongyj"},"content":"RemindCommandParser --\u003e AddressBookParser : r","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"deactivate RemindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"nicleongyj"},"content":"RemindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"nicleongyj"},"content":"destroy RemindCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"nicleongyj"},"content":"AddressBookParser --\u003e Logic : r","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"nicleongyj"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"nicleongyj"},"content":"Logic -\u003e RemindCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"nicleongyj"},"content":"activate RemindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"nicleongyj"},"content":"RemindCommand -[REMIND_COMMAND_COLOR]\u003e Model : updateFilteredPersonList(bp)","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"nicleongyj"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"nicleongyj"},"content":"Model --\u003e RemindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"nicleongyj"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"nicleongyj"},"content":"RemindCommand -[REMIND_COMMAND_COLOR]\u003e Model : updateFilteredEventList(ep)","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"nicleongyj"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"nicleongyj"},"content":"Model --\u003e RemindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"nicleongyj"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"nicleongyj"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"nicleongyj"},"content":"RemindCommand -[REMIND_COMMAND_COLOR]\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"nicleongyj"},"content":"CommandResult --\u003e RemindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"nicleongyj"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"nicleongyj"},"content":"RemindCommand --\u003e Logic : result","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"nicleongyj"},"content":"deactivate RemindCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"nicleongyj"},"content":"[\u003c--Logic","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"nicleongyj"},"content":"deactivate Logic","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"nicleongyj"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"nicleongyj":92}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Ken-Lai"},"content":"Class EventListPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Ken-Lai"},"content":"Class EventCard","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"Ken-Lai"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"Ken-Lai"},"content":"EventListPanel -down-\u003e \"*\" EventCard","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"Ken-Lai"},"content":"EventListPanel --|\u003e UiPart","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Ken-Lai"},"content":"EventCard --|\u003e UiPart","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Ken-Lai"},"content":"EventCard ..\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"Ken-Lai"},"content":"EventListPanel -[hidden]left- PersonListPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Ken-Lai":8,"-":60}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"!define ADDRESS_BOOK_PARSER_COLOR #166800","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"!define REMIND_COMMAND_PARSER_COLOR #544400","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"!define REMIND_COMMAND_COLOR #6A6ADC","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"!define BIRTHDAY_WITHIN_DAYS_COLOR #F97181","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"!define EVENT_WITHIN_DAYS_COLOR #E41F36","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"!define COMMAND_RESULT_COLOR #1D8900","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"nicleongyj":7,"-":79}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"title: FumbleLog","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-T12-2/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T12-2/tp/graph/badge.svg?token\u003dMDL2TF28EC)](https://codecov.io/gh/AY2324S1-CS2103T-T12-2/tp)","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"**FumbleLog is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"* If you are interested in using FumbleLog, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"* If you are interested about developing FumbleLog, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kurtyjlee":4,"leezhengjing":2,"-":13}},{"path":"docs/team/distractedcat.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ken-Lai"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Ken-Lai"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Ken-Lai"},"content":"title: Guo Yuheng\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Ken-Lai"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"### Project: Fumblelog","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"Fumblelog is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"**Given below are my contributions to the project:**","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"* **Code contributed**: [DistractedCat](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ddistractedcat\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"* **Contributions to User Guide**:","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    * To be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"* **Contributions to Developer Guide**:","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    * Wrote the first 14 use cases.","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        * Includes (but not limited to):","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"          1. CRUD operations for persons","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"          2. CRUD operations for events","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"          3. Use cases for calendar","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"          ","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    * Added Non-Functional requirements for the project","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        * Includes:","lastModifiedDate":"2023-10-04"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"          1. Expected efficiency for events","lastModifiedDate":"2023-10-04"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"          2. Expected efficiency for storage","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"            ","lastModifiedDate":"2023-10-04"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"  * PRs reviewed (with non-trivial review comments): *{To be added}*","lastModifiedDate":"2023-10-04"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"  * Contributed to forum discussions: *{To be added}*","lastModifiedDate":"2023-10-04"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"  * Reported bugs and suggestions for other teams in the class: *{To be added}*","lastModifiedDate":"2023-10-04"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: *{To be added}*","lastModifiedDate":"2023-10-04"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"  * *{To be added}*","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"DistractedCat":41,"Ken-Lai":5}},{"path":"docs/team/ken-lai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ken-Lai"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Ken-Lai"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Ken-Lai"},"content":"title: Lai Wei Zhong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Ken-Lai"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Ken-Lai"},"content":"### Project: Forget-Me-Not: Fumblelog","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Ken-Lai":6}},{"path":"docs/team/kurtyjlee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"title: Kurt Lee\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"### Project: FumbleLog","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"FumbleLog is a desktop address book application used for managing contacts and interpersonal events. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"  * *{To be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dkurtyjlee\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"  * *{To be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"  * *{To be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"  * User Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    * Added documentation for the features:","lastModifiedDate":"2023-10-03"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"      * `add_meeting`","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"      * `edit_meeting`","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"      * `delete_meeting`","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"      * `assign`","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"      * `unassign`","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"    * Did cosmetic tweaks to existing documentation of features:","lastModifiedDate":"2023-10-03"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"      * `add`","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"      * `edit`","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    * *{To be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"  * PRs reviewed (with non-trivial review comments): *{To be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"  * Contributed to forum discussions: *{To be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"  * Reported bugs and suggestions for other teams in the class: *{To be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: *{To be added}*","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"  * *{To be added}*","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"Kurtyjlee":44}},{"path":"docs/team/leezhengjing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ken-Lai"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Ken-Lai"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Ken-Lai"},"content":"title: Lee Zheng Jing\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Ken-Lai"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Ken-Lai"},"content":"### Project: Forget-Me-Not: Fumblelog","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"    * *{To be added}*","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"* **Code contributed**: [leezhengjing](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dleezhengjing\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"* **Project management**:","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"    * *{To be added}*","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    * *{To be added}*","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    * User Guide:","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"        * Added documentation for the features:","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"            * `add`","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"        * Did cosmetic tweaks to existing documentation of features:","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"            * `add`","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"        * *{To be added}*","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"* **Community**:","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"    * PRs reviewed (with non-trivial review comments): *{To be added}*","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"    * Contributed to forum discussions: *{To be added}*","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"    * Reported bugs and suggestions for other teams in the class: *{To be added}*","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"    * Some parts of the history feature I added was adopted by several other class mates: *{To be added}*","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"* **Tools**:","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"    * *{To be added}*","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Ken-Lai":6,"leezhengjing":28}},{"path":"docs/team/nicleongyj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"title: Leong Yu Jun Nicholas\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"### Project: Forget-Me-Not: Fumblelog","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"**Given below are my contributions to the project:**","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"    * To be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"* **Code contributed**: [nicleongyj](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dnicleongyj\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"    * To be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"    * To be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"* **Contributions to User Guide**:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"    * To be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"* **Contributions to Developer Guide**:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"    * To be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"    * To be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"    * To be added soon","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"nicleongyj":35}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Ken-Lai"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Ken-Lai"},"content":"    /** Returns an unmodifiable view of events */","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Ken-Lai"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ken-Lai":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"Ken-Lai"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"Ken-Lai"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Ken-Lai"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Ken-Lai"},"content":"        return model.getEventList();","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Ken-Lai"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Ken-Lai":6,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"    /** Message for person */","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"    public static final String MESSAGE_PERSONS_AND_EVENTS_SHOWN_OVERVIEW \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"            \"Showing all birthdays and events happening in the next %1$s days:\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"    /** Message for events */","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"The person(s) provided(%s) do not exist!\";","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    public static final String MESSAGE_INVALID_UNASSIGN_PERSON \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"            \"The person(s) provided(%s) have not been assigned to the event!\";","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_INVALID_GROUP \u003d \"The group(s) provided(%s) do not exist!\";","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_INVALID_UNASSIGN_GROUP \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"            \"The group(s) provided(%s) have not been assigned to the event!\";","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        builder.append(person.getName());","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        if (person.hasPhone()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\"; Phone: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"                    .append(person.getPhone());","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        if (person.hasEmail()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\"; Email: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"                    .append(person.getEmail());","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        if (person.hasAddress()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\"; Address: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"                    .append(person.getAddress());","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        if (person.hasBirthday()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\"; Birthday: \")","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"                    .append(person.getBirthday().forDisplay());","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        if (person.hasGroups()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\"; Groups: \");","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"            person.getGroups().forEach(builder::append);","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Kurtyjlee"},"content":"     * Formats the {@code event} for display to the user.","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"    public static String formatEvent(Event event) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"        builder.append(event.getName())","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"                .append(event.getStartDate().forDisplay());","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"        if (event.hasStartTime()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\"; Start Time: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"                    .append(event.getStartTime().forDisplay());","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"        if (event.hasEndTime()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\"; End Time: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"                    .append(event.getEndTime().forDisplay());","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        if (!event.getNames().isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\"; Persons involved: \");","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"            for (Name name : event.getNames()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"                builder.append(name.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"                builder.append(\", \");","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"            builder.delete(builder.length() - 2, builder.length()); //removes the last comma","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Kurtyjlee"},"content":"        if (!event.getGroups().isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"Kurtyjlee"},"content":"            builder.append(\"; Groups involved: \");","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"Kurtyjlee"},"content":"            for (Group group : event.getGroups()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"Kurtyjlee"},"content":"                builder.append(group.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"Kurtyjlee"},"content":"                builder.append(\", \");","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"Kurtyjlee"},"content":"            builder.delete(builder.length() - 2, builder.length()); //removes the last comma","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DistractedCat":51,"nicleongyj":2,"Kurtyjlee":18,"-":42}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"            + PREFIX_BIRTHDAY + \"BIRTHDAY \"","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]...\\n\"","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"            + PREFIX_BIRTHDAY + \"2001-12-31 \"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"            + PREFIX_GROUP + \"friends \"","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"            + PREFIX_GROUP + \"owesMoney\";","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"        model.updateGroups();","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DistractedCat":4,"nicleongyj":3,"Kurtyjlee":1,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Meeting;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":" * Adds a meeting.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String COMMAND_WORD \u003d \"add_event\";","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the address book. \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"            + PREFIX_EVENT_NAME + \"EVENT_NAME \"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"            + \"[\" + PREFIX_START_TIME + \"START_TIME] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"            + \"[\" + PREFIX_END_TIME + \"END_TIME] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]... \"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]... \\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"            + PREFIX_EVENT_NAME + \"FumbleLog Meeting \"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"            + PREFIX_DATE + \"2020-10-30 \"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"            + PREFIX_START_TIME + \"1000 \"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"            + PREFIX_END_TIME + \"1200 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"            + PREFIX_NAME + \"Ken \"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"            + PREFIX_NAME + \"Yuheng \"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"            + PREFIX_GROUP + \"Team2 \";","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"    private final Meeting toAdd;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"     * Creates an AddMeetingCommand to add the specified {@code Meeting}","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"    public AddEventCommand(Meeting meeting) {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        requireAllNonNull(meeting);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        this.toAdd \u003d meeting;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        CommandUtil.verifyEventTimes(this.toAdd);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cName\u003e invalidNames \u003d model.findInvalidNames(this.toAdd.getNames());","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"        if (!invalidNames.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"                    listInvalidNames(invalidNames)));","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"        model.addEvent(this.toAdd); //else, all the names exist","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cGroup\u003e invalidGroups \u003d model.findInvalidGroups(this.toAdd.getGroups());","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"        if (!invalidGroups.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_GROUP,","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"                    listInvalidGroups(invalidGroups)));","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatEvent(toAdd)));","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"    private String listInvalidNames(Set\u003cName\u003e invalidNames) {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        for (Name name : invalidNames) {","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"            builder.append(name.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\", \");","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"        builder.delete(builder.length() - 2, builder.length()); //removes the last comma","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"    private String listInvalidGroups(Set\u003cGroup\u003e invalidGroups) {","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"        for (Group group : invalidGroups) {","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"            builder.append(group.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\", \");","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"        builder.delete(builder.length() - 2, builder.length()); //removes the last comma","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"DistractedCat":86,"Kurtyjlee":17}},{"path":"src/main/java/seedu/address/logic/commands/CommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" * Represents utility tools used during command execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"public class CommandUtil {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * Verifies that 1) Start time is not earlier than current time,","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * 2) End Time is not earlier start time.","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * @param event Event to be verified.","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * @throws ParseException if the given {@code time} does not meet any of the above 2 criteria.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    public static void verifyEventTimes(Event event) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        if (!event.hasStartTime() \u0026\u0026 !event.hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"            verifyTimeIsAfterCurrentTime(event.getStartDate().getDate().atTime(LocalTime.MAX));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        } else if (!event.hasStartTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"            verifyTimeIsAfterCurrentTime(event.getEndDate().getDate()","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"                    .atTime(event.getEndTime().getEventTime()));","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        } else if (!event.hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"            verifyTimeIsAfterCurrentTime(event.getStartDate().getDate()","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"                    .atTime(event.getStartTime().getEventTime()));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"            verifyTimeIsAfterCurrentTime(event.getStartDate().getDate()","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"                    .atTime(event.getStartTime().getEventTime()));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"            verifyEndTimeIsAfterStartTime(event);","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    private static void verifyEndTimeIsAfterStartTime(Event event) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        LocalDateTime combinedStartTime \u003d event.getStartDate().getDate()","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"                .atTime(event.getStartTime().getEventTime());","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        LocalDateTime combinedEndTime \u003d event.getEndDate().getDate()","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"                .atTime(event.getEndTime().getEventTime());","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        if (combinedEndTime.isBefore(combinedStartTime)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"            throw new CommandException(Event.END_TIME_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    private static void verifyTimeIsAfterCurrentTime(LocalDateTime time) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        if (time.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"            throw new CommandException(Event.START_TIME_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"DistractedCat":57}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    private Logger logger \u003d LogsCenter.getLogger(DeleteCommand.class);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        model.updateAssignedPersons(personToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"        // Group operation","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"        Set\u003cGroup\u003e emptyGroups \u003d model.getEmptyGroups(personToDelete);","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"        if (!emptyGroups.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"            for (Group group : emptyGroups) {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"                logger.info(String.format(\"Removing empty group: %s\", group));","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"            model.removeEmptyGroups(emptyGroups);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"            model.updateGroups();","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DistractedCat":8,"Kurtyjlee":11,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":" * Deletes a meeting identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String COMMAND_WORD \u003d \"delete_event\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"            COMMAND_WORD + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"     * Creates an DeleteMeetingCommand to delete the specified {@code Meeting}","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"     * @param targetIndex index of the meeting in the filtered meeting list to delete","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getEventList();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"        if (this.targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, Messages.formatEvent(eventToDelete)));","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"                || (other instanceof DeleteEventCommand // instanceof handles nulls","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteEventCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Kurtyjlee":58}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"nicleongyj"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]...\\n\"","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"    private Logger logger \u003d LogsCenter.getLogger(EditCommand.class);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        if (editPersonDescriptor.getName().isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"            model.updateAssignedPersons(personToEdit, editedPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"Kurtyjlee"},"content":"        model.updateAssignedPersons(personToEdit, editedPerson);","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"Kurtyjlee"},"content":"        Set\u003cGroup\u003e emptyGroups \u003d model.getEmptyGroups(personToEdit);","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"        if (!emptyGroups.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"            for (Group group : emptyGroups) {","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"                logger.info(String.format(\"Removing empty group: %s\", group));","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"Kurtyjlee"},"content":"            model.removeEmptyGroups(emptyGroups);","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"Kurtyjlee"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"Kurtyjlee"},"content":"            model.updateGroups();","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"nicleongyj"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cGroup\u003e updatedGroups \u003d editPersonDescriptor.getGroups().orElse(personToEdit.getGroups());","lastModifiedDate":"2023-10-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"leezhengjing"},"content":"        Optional\u003cPhone\u003e phone \u003d Optional.ofNullable(updatedPhone);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"leezhengjing"},"content":"        Optional\u003cEmail\u003e email \u003d Optional.ofNullable(updatedEmail);","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"leezhengjing"},"content":"        Optional\u003cAddress\u003e address \u003d Optional.ofNullable(updatedAddress);","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"leezhengjing"},"content":"        Optional\u003cBirthday\u003e birthday \u003d Optional.ofNullable(updatedBirthday);","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"leezhengjing"},"content":"        return new Person(updatedName, phone, email, address, birthday, updatedGroups);","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"nicleongyj"},"content":"        private Birthday birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"        private Set\u003cGroup\u003e groups;","lastModifiedDate":"2023-10-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"         * A defensive copy of {@code groups} is used internally.","lastModifiedDate":"2023-10-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"nicleongyj"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"            setGroups(toCopy.groups);","lastModifiedDate":"2023-10-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"nicleongyj"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, birthday, groups);","lastModifiedDate":"2023-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"nicleongyj"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2023-10-10"},{"lineNumber":222,"author":{"gitId":"nicleongyj"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":223,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":224,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":225,"author":{"gitId":"nicleongyj"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2023-10-10"},{"lineNumber":226,"author":{"gitId":"nicleongyj"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":227,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"DistractedCat"},"content":"         * Sets {@code groups} to this object\u0027s {@code groups}.","lastModifiedDate":"2023-10-08"},{"lineNumber":231,"author":{"gitId":"DistractedCat"},"content":"         * A defensive copy of {@code groups} is used internally.","lastModifiedDate":"2023-10-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"DistractedCat"},"content":"        public void setGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-08"},{"lineNumber":234,"author":{"gitId":"DistractedCat"},"content":"            this.groups \u003d (groups !\u003d null) ? new HashSet\u003c\u003e(groups) : null;","lastModifiedDate":"2023-10-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"DistractedCat"},"content":"         * Returns an unmodifiable group set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"DistractedCat"},"content":"         * Returns {@code Optional#empty()} if {@code groups} is null.","lastModifiedDate":"2023-10-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"DistractedCat"},"content":"        public Optional\u003cSet\u003cGroup\u003e\u003e getGroups() {","lastModifiedDate":"2023-10-08"},{"lineNumber":243,"author":{"gitId":"DistractedCat"},"content":"            return (groups !\u003d null) ? Optional.of(Collections.unmodifiableSet(groups)) : Optional.empty();","lastModifiedDate":"2023-10-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":262,"author":{"gitId":"nicleongyj"},"content":"                    \u0026\u0026 Objects.equals(birthday, otherEditPersonDescriptor.birthday)","lastModifiedDate":"2023-10-10"},{"lineNumber":263,"author":{"gitId":"DistractedCat"},"content":"                    \u0026\u0026 Objects.equals(groups, otherEditPersonDescriptor.groups);","lastModifiedDate":"2023-10-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"nicleongyj"},"content":"                    .add(\"birthday\", birthday)","lastModifiedDate":"2023-10-10"},{"lineNumber":274,"author":{"gitId":"DistractedCat"},"content":"                    .add(\"groups\", groups)","lastModifiedDate":"2023-10-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"DistractedCat":29,"nicleongyj":16,"Kurtyjlee":7,"leezhengjing":5,"-":221}},{"path":"src/main/java/seedu/address/logic/commands/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNASSIGN_GROUPS;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNASSIGN_PERSONS;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Meeting;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":" * Command to edit a meeting in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String COMMAND_WORD \u003d \"edit_event\";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the event identified \"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"            + \"by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"            + \"Existing values will be overwritten by the input values, except for \"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"            + \"the list of assigned persons and the list of assigned groups \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"            + \"[\" + PREFIX_EVENT_NAME + \"EVENT_DETAILS] \"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"            + \"[\" + PREFIX_START_TIME + \"START_TIME] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"            + \"[\" + PREFIX_END_TIME + \"END_TIME] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"            + \"[\" + PREFIX_NAME + \"NAME]... \"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"            + \"[\" + PREFIX_UNASSIGN_PERSONS + \"NAME]... \"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]... \"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"            + \"[\" + PREFIX_UNASSIGN_GROUPS + \"GROUP]... \\n\"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"            + PREFIX_EVENT_NAME + \"FumbleLog Meeting \"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"            + PREFIX_DATE + \"2023-10-13 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"            + PREFIX_NAME + \"Ken \"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"            + PREFIX_GROUP + \"Team2 \";","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_EDIT_SUCCESS \u003d \"Edited event: %1$s\";","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"    public final Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"    public final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"     * Takes in the index of the meeting to edit and its descriptor.","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"Kurtyjlee"},"content":"     * @param index of the meeting to edit","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"     * @param editEventDescriptor details to edit the meeting with","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"Kurtyjlee"},"content":"    public EditEventCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Kurtyjlee"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"Kurtyjlee"},"content":"        this.editEventDescriptor \u003d editEventDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"Kurtyjlee"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getEventList();","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"Kurtyjlee"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Kurtyjlee"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Kurtyjlee"},"content":"        Event meetingToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedMeeting \u003d createEditedMeeting(meetingToEdit, this.editEventDescriptor, model);","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        // ensure that the user is not editing a valid time into an invalid time","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"Kurtyjlee"},"content":"        if (this.editEventDescriptor.getDate().isPresent()","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"Kurtyjlee"},"content":"                || this.editEventDescriptor.getStartTime().isPresent()","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"Kurtyjlee"},"content":"                || this.editEventDescriptor.getEndTime().isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"            CommandUtil.verifyEventTimes(editedMeeting);","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"Kurtyjlee"},"content":"        model.setEvent(meetingToEdit, editedMeeting);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"Kurtyjlee"},"content":"        return new CommandResult(generateSuccessMessage(editedMeeting));","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"    private static Event createEditedMeeting(Event meetingToEdit,","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Kurtyjlee"},"content":"                                             EditEventDescriptor editEventDescriptor,","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"                                             Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Kurtyjlee"},"content":"        assert meetingToEdit !\u003d null;","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"Kurtyjlee"},"content":"        // All attributes are optional, so if they are not present, use the original values","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"Kurtyjlee"},"content":"        EventName updatedName \u003d editEventDescriptor.getName().orElse(meetingToEdit.getName());","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"Kurtyjlee"},"content":"        EventDate updatedDate \u003d editEventDescriptor.getDate().orElse(meetingToEdit.getStartDate());","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"Kurtyjlee"},"content":"        EventTime updatedStartTime \u003d editEventDescriptor.getStartTime().orElse(meetingToEdit.getStartTime());","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"Kurtyjlee"},"content":"        EventTime updatedEndTime \u003d editEventDescriptor.getEndTime().orElse(meetingToEdit.getEndTime());","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"Kurtyjlee"},"content":"        // Edit persons","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cName\u003e updatedPersonNames;","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Kurtyjlee"},"content":"        updatedPersonNames \u003d handleEditAssignPersons(meetingToEdit, editEventDescriptor, model);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"Kurtyjlee"},"content":"        handleEditUnassignPersons(meetingToEdit, editEventDescriptor, model, updatedPersonNames);","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"Kurtyjlee"},"content":"        // Editing groups","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"Kurtyjlee"},"content":"        Set\u003cGroup\u003e updatedGroups;","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"Kurtyjlee"},"content":"        updatedGroups \u003d handleEditAssignGroups(meetingToEdit, editEventDescriptor, model);","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"Kurtyjlee"},"content":"        handleEditUnassignGroups(meetingToEdit, editEventDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Kurtyjlee"},"content":"        return new Meeting(updatedName, updatedDate,","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"Kurtyjlee"},"content":"                Optional.of(updatedStartTime), Optional.of(updatedEndTime), updatedPersonNames, updatedGroups);","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"Kurtyjlee"},"content":"    private static void handleEditUnassignGroups(Event meetingToEdit, EditEventDescriptor editEventDescriptor)","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"Kurtyjlee"},"content":"                throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"Kurtyjlee"},"content":"        if (editEventDescriptor.getUnassignGroups().isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"Kurtyjlee"},"content":"            if (!meetingToEdit.getGroups().containsAll(editEventDescriptor.getUnassignGroups().get())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"Kurtyjlee"},"content":"                Set\u003cGroup\u003e invalidUnassignGroups \u003d findInvalidUnassignGroups(meetingToEdit,","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"Kurtyjlee"},"content":"                        editEventDescriptor.getUnassignGroups().get());","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"Kurtyjlee"},"content":"                //case where the groups to be unassigned have not even been previously assigned","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"Kurtyjlee"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_UNASSIGN_GROUP,","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"Kurtyjlee"},"content":"                        listInvalidGroups(invalidUnassignGroups)));","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"            meetingToEdit.getGroups().removeAll(editEventDescriptor.getUnassignGroups().get());","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"Kurtyjlee"},"content":"    private static Set\u003cGroup\u003e handleEditAssignGroups(Event meetingToEdit, EditEventDescriptor editEventDescriptor,","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Kurtyjlee"},"content":"                Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"Kurtyjlee"},"content":"        Set\u003cGroup\u003e updatedGroups;","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"Kurtyjlee"},"content":"        if (editEventDescriptor.getGroups().isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"Kurtyjlee"},"content":"            Set\u003cGroup\u003e invalidGroups \u003d model.findInvalidGroups(editEventDescriptor.getGroups().get());","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"Kurtyjlee"},"content":"            if (!invalidGroups.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"Kurtyjlee"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_GROUP,","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"Kurtyjlee"},"content":"                        listInvalidGroups(invalidGroups)));","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"Kurtyjlee"},"content":"            meetingToEdit.getGroups().addAll(editEventDescriptor.getGroups().get());","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"Kurtyjlee"},"content":"        updatedGroups \u003d meetingToEdit.getGroups();","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"Kurtyjlee"},"content":"        return updatedGroups;","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"Kurtyjlee"},"content":"    private static void handleEditUnassignPersons(Event meetingToEdit, EditEventDescriptor editEventDescriptor,","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"Kurtyjlee"},"content":"              Model model, Set\u003cName\u003e updatedPersonNames) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"Kurtyjlee"},"content":"        if (editEventDescriptor.getUnassignedPersons().isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"Kurtyjlee"},"content":"            Set\u003cName\u003e invalidNames \u003d model.findInvalidNames(editEventDescriptor.getUnassignedPersons().get());","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"            if (!invalidNames.isEmpty()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"                        listInvalidNames(invalidNames)));","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"Kurtyjlee"},"content":"            } else if (!meetingToEdit.getNames().containsAll(editEventDescriptor.getUnassignedPersons().get())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"                //case where the persons to be unassigned have not even been previously assigned","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"                Set \u003cName\u003e invalidUnassignNames \u003d findInvalidUnassignNames(meetingToEdit,","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"Kurtyjlee"},"content":"                        editEventDescriptor.getUnassignedPersons().get());","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_UNASSIGN_PERSON,","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"                        listInvalidNames(invalidUnassignNames)));","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"            //remove the persons from the new list of persons","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"Kurtyjlee"},"content":"            updatedPersonNames.removeAll(editEventDescriptor.getUnassignedPersons().get());","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"Kurtyjlee"},"content":"        } // no persons to be unassigned, do nothing","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"Kurtyjlee"},"content":"    private static Set\u003cName\u003e handleEditAssignPersons(Event meetingToEdit, EditEventDescriptor editEventDescriptor,","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"Kurtyjlee"},"content":"                Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"Kurtyjlee"},"content":"        Set\u003cName\u003e updatedPersonNames;","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"Kurtyjlee"},"content":"        if (editEventDescriptor.getAssignedPersons().isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"Kurtyjlee"},"content":"            Set\u003cName\u003e invalidNames \u003d model.findInvalidNames(editEventDescriptor.getAssignedPersons().get());","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"Kurtyjlee"},"content":"            if (!invalidNames.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"Kurtyjlee"},"content":"                throw new CommandException(String.format(Messages.MESSAGE_INVALID_PERSON,","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"Kurtyjlee"},"content":"                        listInvalidNames(invalidNames)));","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"Kurtyjlee"},"content":"            //add the new persons to the existing list of persons","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"Kurtyjlee"},"content":"            meetingToEdit.getNames().addAll(editEventDescriptor.getAssignedPersons().get());","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"Kurtyjlee"},"content":"        updatedPersonNames \u003d meetingToEdit.getNames();","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"Kurtyjlee"},"content":"        return updatedPersonNames;","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"DistractedCat"},"content":"    private static Set\u003cName\u003e findInvalidUnassignNames(Event meetingToEdit, Set\u003cName\u003e unassignNames) {","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cName\u003e invalidUnassignNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"DistractedCat"},"content":"        for (Name name : unassignNames) {","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"DistractedCat"},"content":"            if (!meetingToEdit.getNames().contains(name)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"DistractedCat"},"content":"                invalidUnassignNames.add(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"DistractedCat"},"content":"        return invalidUnassignNames;","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"Kurtyjlee"},"content":"    private static Set\u003cGroup\u003e findInvalidUnassignGroups(Event meetingToEdit, Set\u003cGroup\u003e unassignGroups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"Kurtyjlee"},"content":"        Set\u003cGroup\u003e invalidUnassignGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"Kurtyjlee"},"content":"        for (Group group : unassignGroups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"Kurtyjlee"},"content":"            if (!meetingToEdit.getGroups().contains(group)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"Kurtyjlee"},"content":"                invalidUnassignGroups.add(group);","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"Kurtyjlee"},"content":"        return invalidUnassignGroups;","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"DistractedCat"},"content":"     * generates a string of invalid names for display.","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"DistractedCat"},"content":"    private static String listInvalidNames(Set\u003cName\u003e invalidNames) {","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"DistractedCat"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"DistractedCat"},"content":"        for (Name name : invalidNames) {","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"DistractedCat"},"content":"            builder.append(name.toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\", \");","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"DistractedCat"},"content":"        builder.delete(builder.length() - 2, builder.length()); //removes the last comma","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"DistractedCat"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":227,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":228,"author":{"gitId":"Kurtyjlee"},"content":"    private static String listInvalidGroups(Set\u003cGroup\u003e invalidGroups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"Kurtyjlee"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"Kurtyjlee"},"content":"        for (Group group : invalidGroups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"Kurtyjlee"},"content":"            builder.append(group.toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"Kurtyjlee"},"content":"            builder.append(\", \");","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"Kurtyjlee"},"content":"        builder.delete(builder.length() - 2, builder.length()); //removes the last comma","lastModifiedDate":"2023-10-24"},{"lineNumber":236,"author":{"gitId":"Kurtyjlee"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":239,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":240,"author":{"gitId":"Kurtyjlee"},"content":"     * Generates a command execution success message with the meeting edited.","lastModifiedDate":"2023-10-14"},{"lineNumber":241,"author":{"gitId":"Kurtyjlee"},"content":"     * @param meetingToEdit meeting that was edited","lastModifiedDate":"2023-10-14"},{"lineNumber":242,"author":{"gitId":"Kurtyjlee"},"content":"     * @return String containing the success message","lastModifiedDate":"2023-10-14"},{"lineNumber":243,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":244,"author":{"gitId":"Kurtyjlee"},"content":"    private String generateSuccessMessage(Event meetingToEdit) {","lastModifiedDate":"2023-10-13"},{"lineNumber":245,"author":{"gitId":"DistractedCat"},"content":"        return String.format(MESSAGE_EDIT_SUCCESS, Messages.formatEvent(meetingToEdit));","lastModifiedDate":"2023-10-15"},{"lineNumber":246,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":247,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"Kurtyjlee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"Kurtyjlee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"Kurtyjlee"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":252,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":253,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":254,"author":{"gitId":"Kurtyjlee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"Kurtyjlee"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"Kurtyjlee"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":257,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":258,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":259,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand e \u003d (EditEventCommand) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":260,"author":{"gitId":"Kurtyjlee"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-13"},{"lineNumber":261,"author":{"gitId":"Kurtyjlee"},"content":"                \u0026\u0026 this.editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":263,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":264,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":265,"author":{"gitId":"Kurtyjlee"},"content":"     * Stores the details to edit the meeting with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-14"},{"lineNumber":266,"author":{"gitId":"Kurtyjlee"},"content":"     * corresponding field value of the meeting.","lastModifiedDate":"2023-10-14"},{"lineNumber":267,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":268,"author":{"gitId":"Kurtyjlee"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":270,"author":{"gitId":"Kurtyjlee"},"content":"        private EventName name;","lastModifiedDate":"2023-10-13"},{"lineNumber":271,"author":{"gitId":"Kurtyjlee"},"content":"        private EventDate date;","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"Kurtyjlee"},"content":"        private EventTime startTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"Kurtyjlee"},"content":"        private EventTime endTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":275,"author":{"gitId":"DistractedCat"},"content":"        private Set\u003cName\u003e assignPersons;","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"DistractedCat"},"content":"        private Set\u003cName\u003e unassignPersons;","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"Kurtyjlee"},"content":"        private Set\u003cGroup\u003e assignGroups;","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"Kurtyjlee"},"content":"        private Set\u003cGroup\u003e unassignGroups;","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":281,"author":{"gitId":"Kurtyjlee"},"content":"        public EditEventDescriptor() {","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":283,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":284,"author":{"gitId":"Kurtyjlee"},"content":"        public Optional\u003cEventName\u003e getName() {","lastModifiedDate":"2023-10-14"},{"lineNumber":285,"author":{"gitId":"Kurtyjlee"},"content":"            return Optional.ofNullable(this.name);","lastModifiedDate":"2023-10-14"},{"lineNumber":286,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":287,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":288,"author":{"gitId":"Kurtyjlee"},"content":"        public Optional\u003cEventDate\u003e getDate() {","lastModifiedDate":"2023-10-14"},{"lineNumber":289,"author":{"gitId":"Kurtyjlee"},"content":"            return Optional.ofNullable(this.date);","lastModifiedDate":"2023-10-14"},{"lineNumber":290,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":291,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":292,"author":{"gitId":"Kurtyjlee"},"content":"        public Optional\u003cEventTime\u003e getStartTime() {","lastModifiedDate":"2023-10-14"},{"lineNumber":293,"author":{"gitId":"Kurtyjlee"},"content":"            return Optional.ofNullable(this.startTime);","lastModifiedDate":"2023-10-14"},{"lineNumber":294,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":295,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":296,"author":{"gitId":"Kurtyjlee"},"content":"        public Optional\u003cEventTime\u003e getEndTime() {","lastModifiedDate":"2023-10-14"},{"lineNumber":297,"author":{"gitId":"Kurtyjlee"},"content":"            return Optional.ofNullable(this.endTime);","lastModifiedDate":"2023-10-14"},{"lineNumber":298,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":299,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":300,"author":{"gitId":"Kurtyjlee"},"content":"        public void setName(EventName name) {","lastModifiedDate":"2023-10-13"},{"lineNumber":301,"author":{"gitId":"Kurtyjlee"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-13"},{"lineNumber":302,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":303,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":304,"author":{"gitId":"Kurtyjlee"},"content":"        public void setDate(EventDate date) {","lastModifiedDate":"2023-10-13"},{"lineNumber":305,"author":{"gitId":"Kurtyjlee"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-10-13"},{"lineNumber":306,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":307,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":308,"author":{"gitId":"Kurtyjlee"},"content":"        public void setStartTime(EventTime startTime) {","lastModifiedDate":"2023-10-13"},{"lineNumber":309,"author":{"gitId":"Kurtyjlee"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":310,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":311,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":312,"author":{"gitId":"Kurtyjlee"},"content":"        public void setEndTime(EventTime endTime) {","lastModifiedDate":"2023-10-13"},{"lineNumber":313,"author":{"gitId":"Kurtyjlee"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":314,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":315,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":316,"author":{"gitId":"Kurtyjlee"},"content":"        /**","lastModifiedDate":"2023-10-14"},{"lineNumber":317,"author":{"gitId":"Kurtyjlee"},"content":"         * Checks if fields are edited.","lastModifiedDate":"2023-10-14"},{"lineNumber":318,"author":{"gitId":"Kurtyjlee"},"content":"         * @return true if at least one field is edited","lastModifiedDate":"2023-10-14"},{"lineNumber":319,"author":{"gitId":"Kurtyjlee"},"content":"         */","lastModifiedDate":"2023-10-14"},{"lineNumber":320,"author":{"gitId":"Kurtyjlee"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-13"},{"lineNumber":321,"author":{"gitId":"DistractedCat"},"content":"            return CollectionUtil.isAnyNonNull(this.name, this.date, this.startTime,","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"Kurtyjlee"},"content":"                    this.endTime, this.assignPersons, this.unassignPersons, this.assignGroups, this.unassignGroups);","lastModifiedDate":"2023-10-24"},{"lineNumber":323,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":324,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":325,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":326,"author":{"gitId":"Kurtyjlee"},"content":"        public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":327,"author":{"gitId":"Kurtyjlee"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-13"},{"lineNumber":328,"author":{"gitId":"Kurtyjlee"},"content":"                    .add(\"name\", this.name)","lastModifiedDate":"2023-10-13"},{"lineNumber":329,"author":{"gitId":"Kurtyjlee"},"content":"                    .add(\"date\", this.date.toString())","lastModifiedDate":"2023-10-14"},{"lineNumber":330,"author":{"gitId":"Kurtyjlee"},"content":"                    .add(\"start time\", this.startTime.toString())","lastModifiedDate":"2023-10-14"},{"lineNumber":331,"author":{"gitId":"Kurtyjlee"},"content":"                    .add(\"end time\", this.endTime.toString())","lastModifiedDate":"2023-10-14"},{"lineNumber":332,"author":{"gitId":"Kurtyjlee"},"content":"                    .add(\"assign persons\", this.assignPersons)","lastModifiedDate":"2023-10-31"},{"lineNumber":333,"author":{"gitId":"Kurtyjlee"},"content":"                    .add(\"unassign persons\", this.unassignPersons)","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"Kurtyjlee"},"content":"                    .add(\"assign groups\", this.assignGroups)","lastModifiedDate":"2023-10-31"},{"lineNumber":335,"author":{"gitId":"Kurtyjlee"},"content":"                    .add(\"unassign groups\", this.unassignGroups)","lastModifiedDate":"2023-10-31"},{"lineNumber":336,"author":{"gitId":"Kurtyjlee"},"content":"                    .toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":337,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":338,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":339,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":340,"author":{"gitId":"Kurtyjlee"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":341,"author":{"gitId":"Kurtyjlee"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":342,"author":{"gitId":"Kurtyjlee"},"content":"                return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":343,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":344,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":345,"author":{"gitId":"Kurtyjlee"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":346,"author":{"gitId":"Kurtyjlee"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":347,"author":{"gitId":"Kurtyjlee"},"content":"                return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":348,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":349,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":350,"author":{"gitId":"Kurtyjlee"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":351,"author":{"gitId":"Kurtyjlee"},"content":"            return this.name.equals(e.name)","lastModifiedDate":"2023-10-13"},{"lineNumber":352,"author":{"gitId":"Kurtyjlee"},"content":"                    \u0026\u0026 this.date.equals(e.date)","lastModifiedDate":"2023-10-13"},{"lineNumber":353,"author":{"gitId":"Kurtyjlee"},"content":"                    \u0026\u0026 this.startTime.equals(e.startTime)","lastModifiedDate":"2023-10-13"},{"lineNumber":354,"author":{"gitId":"Kurtyjlee"},"content":"                    \u0026\u0026 this.endTime.equals(e.endTime);","lastModifiedDate":"2023-10-13"},{"lineNumber":355,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":356,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":357,"author":{"gitId":"DistractedCat"},"content":"        public void setPersonNames(Set\u003cName\u003e names) {","lastModifiedDate":"2023-10-18"},{"lineNumber":358,"author":{"gitId":"DistractedCat"},"content":"            this.assignPersons \u003d (names !\u003d null) ? new HashSet\u003c\u003e(names) : null;","lastModifiedDate":"2023-10-18"},{"lineNumber":359,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":360,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":361,"author":{"gitId":"DistractedCat"},"content":"        public void setUnassignPersons(Set\u003cName\u003e names) {","lastModifiedDate":"2023-10-18"},{"lineNumber":362,"author":{"gitId":"DistractedCat"},"content":"            this.unassignPersons \u003d (names !\u003d null) ? new HashSet\u003c\u003e(names) : null;","lastModifiedDate":"2023-10-18"},{"lineNumber":363,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":364,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":365,"author":{"gitId":"DistractedCat"},"content":"        public Optional\u003cSet\u003cName\u003e\u003e getAssignedPersons() {","lastModifiedDate":"2023-10-18"},{"lineNumber":366,"author":{"gitId":"DistractedCat"},"content":"            return (this.assignPersons !\u003d null)","lastModifiedDate":"2023-10-18"},{"lineNumber":367,"author":{"gitId":"DistractedCat"},"content":"                    ? Optional.of(Collections.unmodifiableSet(this.assignPersons))","lastModifiedDate":"2023-10-18"},{"lineNumber":368,"author":{"gitId":"DistractedCat"},"content":"                    : Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":369,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":370,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":371,"author":{"gitId":"DistractedCat"},"content":"        public Optional\u003cSet\u003cName\u003e\u003e getUnassignedPersons() {","lastModifiedDate":"2023-10-18"},{"lineNumber":372,"author":{"gitId":"DistractedCat"},"content":"            return (this.unassignPersons !\u003d null)","lastModifiedDate":"2023-10-18"},{"lineNumber":373,"author":{"gitId":"DistractedCat"},"content":"                    ? Optional.of(Collections.unmodifiableSet(this.unassignPersons))","lastModifiedDate":"2023-10-18"},{"lineNumber":374,"author":{"gitId":"DistractedCat"},"content":"                    : Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":375,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":376,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":377,"author":{"gitId":"Kurtyjlee"},"content":"        public void setGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":378,"author":{"gitId":"Kurtyjlee"},"content":"            this.assignGroups \u003d (groups !\u003d null) ? new HashSet\u003c\u003e(groups) : null;","lastModifiedDate":"2023-10-24"},{"lineNumber":379,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":380,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":381,"author":{"gitId":"Kurtyjlee"},"content":"        public Optional\u003cSet\u003cGroup\u003e\u003e getGroups() {","lastModifiedDate":"2023-10-24"},{"lineNumber":382,"author":{"gitId":"Kurtyjlee"},"content":"            return (this.assignGroups !\u003d null)","lastModifiedDate":"2023-10-24"},{"lineNumber":383,"author":{"gitId":"Kurtyjlee"},"content":"                    ? Optional.of(Collections.unmodifiableSet(this.assignGroups))","lastModifiedDate":"2023-10-24"},{"lineNumber":384,"author":{"gitId":"Kurtyjlee"},"content":"                    : Optional.empty();","lastModifiedDate":"2023-10-24"},{"lineNumber":385,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":386,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":387,"author":{"gitId":"Kurtyjlee"},"content":"        public void setUnassignGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":388,"author":{"gitId":"Kurtyjlee"},"content":"            this.unassignGroups \u003d (groups !\u003d null) ? new HashSet\u003c\u003e(groups) : null;","lastModifiedDate":"2023-10-24"},{"lineNumber":389,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":390,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":391,"author":{"gitId":"Kurtyjlee"},"content":"        public Optional\u003cSet\u003cGroup\u003e\u003e getUnassignGroups() {","lastModifiedDate":"2023-10-24"},{"lineNumber":392,"author":{"gitId":"Kurtyjlee"},"content":"            return (this.unassignGroups !\u003d null)","lastModifiedDate":"2023-10-24"},{"lineNumber":393,"author":{"gitId":"Kurtyjlee"},"content":"                    ? Optional.of(Collections.unmodifiableSet(this.unassignGroups))","lastModifiedDate":"2023-10-24"},{"lineNumber":394,"author":{"gitId":"Kurtyjlee"},"content":"                    : Optional.empty();","lastModifiedDate":"2023-10-24"},{"lineNumber":395,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":396,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":397,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"DistractedCat":90,"Kurtyjlee":307}},{"path":"src/main/java/seedu/address/logic/commands/ListAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":" * Lists all persons and events in the address book to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"public class ListAllCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"    public static final String COMMAND_WORD \u003d \"list_all\";","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons and events\";","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"     * @return result message of the command execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhengjing":14,"Kurtyjlee":1,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/ListEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leezhengjing"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"leezhengjing"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"leezhengjing"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":" * Lists all events in the address book to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"public class ListEventsCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"    public static final String COMMAND_WORD \u003d \"list_events\";","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"     * @return result message of the command execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"        model.updateFilteredEventListOnly(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"leezhengjing":28,"Kurtyjlee":1}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"public class ListPersonsCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"    public static final String COMMAND_WORD \u003d \"list_persons\";","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhengjing":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/RemindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.BirthdayWithinDaysPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.EventWithinDaysPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":" * Reminds the user of the upcoming birthdays and events in the next n number of days.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"    public static final String COMMAND_WORD \u003d \"remind\";","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"            + \": Reminds the user of the upcoming birthdays and events in the next n number of days. \"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"            + \"If no index is given, the default number of days is 7.\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"    public static final String MESSAGE_REMIND_SUCCESS \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"            \"Showing all birthdays and events happening in the next %1$s days:\";","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"    private final BirthdayWithinDaysPredicate birthdayPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"    private final EventWithinDaysPredicate eventPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"    private final int days;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"     * Creates a RemindCommand to remind the user of the upcoming birthdays and events in the next n number of days.","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"    public RemindCommand(BirthdayWithinDaysPredicate birthdayPredicate,","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"                         EventWithinDaysPredicate eventPredicate, int days) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"        this.birthdayPredicate \u003d birthdayPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"        this.eventPredicate \u003d eventPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"        this.days \u003d days;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"nicleongyj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"nicleongyj"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"        // Show everything first before filtering","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"        // Events must be filtered before persons, if not persons will be filtered out of events","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"nicleongyj"},"content":"        model.updateFilteredEventList(eventPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        model.updateFilteredPersonList(birthdayPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"nicleongyj"},"content":"        return new CommandResult(String.format(MESSAGE_REMIND_SUCCESS, days));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"nicleongyj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"nicleongyj"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"nicleongyj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"nicleongyj"},"content":"        if (!(other instanceof RemindCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"nicleongyj"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"nicleongyj"},"content":"        RemindCommand otherRemindCommand \u003d (RemindCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"nicleongyj"},"content":"        return birthdayPredicate \u003d\u003d otherRemindCommand.birthdayPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"nicleongyj"},"content":"                \u0026\u0026 eventPredicate \u003d\u003d otherRemindCommand.eventPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"nicleongyj"},"content":"                \u0026\u0026 days \u003d\u003d otherRemindCommand.days;","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"nicleongyj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"nicleongyj"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"nicleongyj"},"content":"                .add(\"birthdayPredicate\", birthdayPredicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"nicleongyj"},"content":"                .add(\"eventPredicate\", eventPredicate)","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"nicleongyj"},"content":"                .add(\"days\", days)","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"nicleongyj"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"nicleongyj":74,"Kurtyjlee":8}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"                        PREFIX_ADDRESS, PREFIX_BIRTHDAY, PREFIX_GROUP);","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"nicleongyj"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"                PREFIX_ADDRESS, PREFIX_BIRTHDAY);","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).orElse(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"        Phone phone \u003d Phone.NULL_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"        Email email \u003d Email.NULL_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"        Address address \u003d Address.NULL_ADDRESS;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"        Birthday birthday \u003d Birthday.NULL_BIRTHDAY;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cGroup\u003e groupList \u003d ParserUtil.parseGroups(argMultimap.getAllValues(PREFIX_GROUP));","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"            address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"            birthday \u003d ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"leezhengjing"},"content":"        Optional\u003cPhone\u003e optionalPhone \u003d Optional.of(phone);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"leezhengjing"},"content":"        Optional\u003cEmail\u003e optionalEmail \u003d Optional.of(email);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"        Optional\u003cAddress\u003e optionalAddress \u003d Optional.of(address);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"        Optional\u003cBirthday\u003e optionalBirthday \u003d Optional.of(birthday);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"        Person person \u003d new Person(name, optionalPhone, optionalEmail, optionalAddress, optionalBirthday, groupList);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"DistractedCat":4,"nicleongyj":7,"leezhengjing":25,"-":50}},{"path":"src/main/java/seedu/address/logic/parser/AddMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.AddCommandParser.arePrefixesPresent;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Meeting;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":" * Parses input arguments and creates a new AddMeetingCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":" * @author Yuheng","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"public class AddMeetingCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME, PREFIX_DATE,","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"                        PREFIX_START_TIME, PREFIX_END_TIME, PREFIX_NAME, PREFIX_GROUP);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT_NAME, PREFIX_DATE)","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EVENT_NAME, PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"        EventName meetingName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        EventDate eventDate \u003d ParserUtil.parseEventDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        EventTime meetingStartTime \u003d EventTime.NULL_EVENT_TIME;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        EventTime meetingEndTime \u003d EventTime.NULL_EVENT_TIME;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cName\u003e nameList \u003d ParserUtil.parsePersonNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"        Set\u003cGroup\u003e groupList \u003d ParserUtil.parseGroups(argMultimap.getAllValues(PREFIX_GROUP));","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        if (argMultimap.getValue(PREFIX_START_TIME).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"            meetingStartTime \u003d ParserUtil.parseEventTime(argMultimap.getValue(PREFIX_START_TIME).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        if (argMultimap.getValue(PREFIX_END_TIME).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"            meetingEndTime \u003d ParserUtil.parseEventTime(argMultimap.getValue(PREFIX_END_TIME).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"        Meeting meeting \u003d new Meeting(meetingName, eventDate,","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"                Optional.of(meetingStartTime), Optional.of(meetingEndTime), nameList, groupList);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"        return new AddEventCommand(meeting);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"DistractedCat":47,"Kurtyjlee":15}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"import seedu.address.logic.commands.ListAllCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"import seedu.address.logic.commands.ListEventsCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"import seedu.address.logic.commands.ListPersonsCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.logic.commands.RemindCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"leezhengjing"},"content":"        case ListAllCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"leezhengjing"},"content":"            return new ListAllCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"leezhengjing"},"content":"        case ListEventsCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"leezhengjing"},"content":"            return new ListEventsCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"leezhengjing"},"content":"        case ListPersonsCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"leezhengjing"},"content":"            return new ListPersonsCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-22"},{"lineNumber":92,"author":{"gitId":"Kurtyjlee"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"            return new AddMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"Kurtyjlee"},"content":"        case EditEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"Kurtyjlee"},"content":"            return new EditMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Kurtyjlee"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"Kurtyjlee"},"content":"            return new DeleteMeetingCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"nicleongyj"},"content":"        case RemindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"nicleongyj"},"content":"            return new RemindCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DistractedCat":2,"nicleongyj":4,"Kurtyjlee":10,"leezhengjing":11,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Prefix PREFIX_EVENT_NAME \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    public static final Prefix PREFIX_UNASSIGN_PERSONS \u003d new Prefix(\"u/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Prefix PREFIX_UNASSIGN_GROUPS \u003d new Prefix(\"ug/\");","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"DistractedCat":2,"nicleongyj":1,"Kurtyjlee":5,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":" * Parses input arguments and creates a new DeleteMeetingCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"public class DeleteMeetingCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMeetingCommand","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"     * @param args the arguments to be parsed","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"     * @return a DeleteMeetingCommand object for execution","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Kurtyjlee":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"                        PREFIX_ADDRESS, PREFIX_BIRTHDAY, PREFIX_GROUP);","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"                PREFIX_BIRTHDAY, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"nicleongyj"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"nicleongyj"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"        parseGroupsForEdit(argMultimap.getAllValues(PREFIX_GROUP)).ifPresent(editPersonDescriptor::setGroups);","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"     * Parses {@code Collection\u003cString\u003e groups} into a {@code Set\u003cGroup\u003e} if {@code groups} is non-empty.","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"     * If {@code groups} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"     * {@code Set\u003cGroup\u003e} containing zero groups.","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"    private Optional\u003cSet\u003cGroup\u003e\u003e parseGroupsForEdit(Collection\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"        assert groups !\u003d null;","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"        if (groups.isEmpty()) {","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"        Collection\u003cString\u003e groupSet \u003d groups.size() \u003d\u003d 1 \u0026\u0026 groups.contains(\"\") ? Collections.emptySet() : groups;","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        return Optional.of(ParserUtil.parseGroups(groupSet));","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"DistractedCat":11,"nicleongyj":8,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/EditMeetingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNASSIGN_GROUPS;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNASSIGN_PERSONS;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":" * Parses input arguments and creates a new EditMeetingCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"public class EditMeetingCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME, PREFIX_DATE,","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"                        PREFIX_START_TIME, PREFIX_END_TIME, PREFIX_NAME, PREFIX_UNASSIGN_PERSONS,","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"                        PREFIX_GROUP, PREFIX_UNASSIGN_GROUPS);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"        Index index;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"        // Getting the index","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"                    EditEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EVENT_NAME, PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"        if (argMultimap.getValue(PREFIX_EVENT_NAME).isPresent()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"            editEventDescriptor.setName(ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get()));","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"            editEventDescriptor.setDate(ParserUtil.parseEventDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        if (argMultimap.getValue(PREFIX_START_TIME).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"            editEventDescriptor","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"                    .setStartTime(ParserUtil.parseEventTime(argMultimap.getValue(PREFIX_START_TIME).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"        if (argMultimap.getValue(PREFIX_END_TIME).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"            editEventDescriptor.setEndTime(ParserUtil.parseEventTime(argMultimap.getValue(PREFIX_END_TIME).get()));","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"        if (!argMultimap.getAllValues(PREFIX_NAME).isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"            editEventDescriptor.setPersonNames(ParserUtil.parsePersonNames(argMultimap.getAllValues(PREFIX_NAME)));","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"        if (!argMultimap.getAllValues(PREFIX_UNASSIGN_PERSONS).isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"            editEventDescriptor","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Kurtyjlee"},"content":"                    .setUnassignPersons(ParserUtil.parsePersonNames(argMultimap.getAllValues(PREFIX_UNASSIGN_PERSONS)));","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"        if (!argMultimap.getAllValues(PREFIX_GROUP).isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Kurtyjlee"},"content":"            editEventDescriptor.setGroups(ParserUtil.parseGroups(argMultimap.getAllValues(PREFIX_GROUP)));","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"        if (!argMultimap.getAllValues(PREFIX_UNASSIGN_GROUPS).isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Kurtyjlee"},"content":"            editEventDescriptor","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Kurtyjlee"},"content":"                    .setUnassignGroups(ParserUtil.parseGroups(argMultimap.getAllValues(PREFIX_UNASSIGN_GROUPS)));","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"            throw new ParseException(EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Kurtyjlee"},"content":"        return new EditEventCommand(index, editEventDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"DistractedCat":3,"Kurtyjlee":81}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"        return Phone.of(trimmedPhone);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"leezhengjing"},"content":"        return Address.of(trimmedAddress);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"nicleongyj"},"content":"     * Parses a {@code String birthday} into an {@code Birthday}.","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"nicleongyj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"nicleongyj"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"nicleongyj"},"content":"     * @throws ParseException if a given {@code birthday} is invalid.","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"nicleongyj"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"nicleongyj"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"nicleongyj"},"content":"        String trimmedBirthday \u003d birthday.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"nicleongyj"},"content":"        if (!Birthday.isValidBirthday(trimmedBirthday)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"nicleongyj"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"leezhengjing"},"content":"        return Birthday.of(trimmedBirthday);","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"leezhengjing"},"content":"        return Email.of(trimmedEmail);","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"     * upParses a {@code String group} into a {@code Group}.","lastModifiedDate":"2023-10-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"     * @throws ParseException if the given {@code group} is invalid.","lastModifiedDate":"2023-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"    public static Group parseGroup(String group) throws ParseException {","lastModifiedDate":"2023-10-08"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"        requireNonNull(group);","lastModifiedDate":"2023-10-08"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"        String trimmedGroup \u003d group.trim();","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"        if (!Group.isValidGroupName(trimmedGroup)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"        return new Group(trimmedGroup);","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"     * Parses {@code Collection\u003cString\u003e groups} into a {@code Set\u003cGroup\u003e}.","lastModifiedDate":"2023-10-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"    public static Set\u003cGroup\u003e parseGroups(Collection\u003cString\u003e groups) throws ParseException {","lastModifiedDate":"2023-10-08"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"        requireNonNull(groups);","lastModifiedDate":"2023-10-08"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"        final Set\u003cGroup\u003e groupSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"        for (String groupName : groups) {","lastModifiedDate":"2023-10-08"},{"lineNumber":140,"author":{"gitId":"Kurtyjlee"},"content":"            if (groupName.isBlank()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"                throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"            groupSet.add(parseGroup(groupName));","lastModifiedDate":"2023-10-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"        return groupSet;","lastModifiedDate":"2023-10-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code Set\u003cName\u003e}.","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"    public static Set\u003cName\u003e parsePersonNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"        requireNonNull(names);","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"        final Set\u003cName\u003e nameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"        for (String name : names) {","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"Kurtyjlee"},"content":"            if (name.isBlank()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"Kurtyjlee"},"content":"                throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"            nameSet.add(parseName(name));","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"        return nameSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"     * Parses a {@code String name} into an {@code EventName}.","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"    public static EventName parseEventName(String name) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"        if (!EventName.isValidName(trimmedName)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"        return new EventName(trimmedName);","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"     * Parses a {@code String date} into an {@code EventDate}.","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"DistractedCat"},"content":"    public static EventDate parseEventDate(String date) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"DistractedCat"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"        if (!EventDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"DistractedCat"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"DistractedCat"},"content":"        return new EventDate(trimmedDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"     * Parses a {@code String time} into an {@code EventTime}.","lastModifiedDate":"2023-10-15"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"    public static EventTime parseEventTime(String time) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"DistractedCat"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"Kurtyjlee"},"content":"        if (!EventTime.isValidTime(trimmedTime)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"Kurtyjlee"},"content":"            throw new ParseException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"DistractedCat"},"content":"        return EventTime.of(trimmedTime);","lastModifiedDate":"2023-10-15"},{"lineNumber":197,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"nicleongyj"},"content":"     * Parses a {@code String days} into an {@code int}.","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"nicleongyj"},"content":"    public static int parseDays(String days) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"nicleongyj"},"content":"        String trimmedDays \u003d days.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"nicleongyj"},"content":"        if (trimmedDays.isEmpty() || days \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"nicleongyj"},"content":"            return 7;","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"nicleongyj"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedDays)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"nicleongyj"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"nicleongyj"},"content":"        return Integer.parseInt(trimmedDays);","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"DistractedCat":58,"nicleongyj":27,"Kurtyjlee":10,"leezhengjing":4,"-":115}},{"path":"src/main/java/seedu/address/logic/parser/RemindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.logic.commands.RemindCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.BirthdayWithinDaysPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.EventWithinDaysPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":" * Parses input arguments and creates a new RemindCommand object","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"public class RemindCommandParser implements Parser\u003cRemindCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"     * Parses the given {@code String} of arguments in the context of the RemindCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"     * and returns a RemindCommand object for execution.","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"    public RemindCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"            int days \u003d ParserUtil.parseDays(args);","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"            return new RemindCommand(new BirthdayWithinDaysPredicate(days),","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"                    new EventWithinDaysPredicate(days), days);","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"nicleongyj":30}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.EventList;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":" * Duplicates are not allowed for persons (by .isSamePerson comparison)","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    private final EventList events;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"        events \u003d new EventList();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d List overwrite operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"     * @param newEvents the list of events to be replaced with.","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Ken-Lai"},"content":"    public void setEvents(List\u003cEvent\u003e newEvents) {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"        this.events.setEvents(newEvents);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"Kurtyjlee"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d person-level operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"Kurtyjlee"},"content":"    public Set\u003cGroup\u003e getEmptyGroups(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"Kurtyjlee"},"content":"        return persons.isLastPersonGroup(person);","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"Kurtyjlee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d event-level operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"Kurtyjlee"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"Kurtyjlee"},"content":"     * @param target event to be edited. {@code target} must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"Kurtyjlee"},"content":"     * @param editedEvent event with the edited details.","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"Kurtyjlee"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"Kurtyjlee"},"content":"        Event targetEvent \u003d removePersonsInGroups(editedEvent);","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"Kurtyjlee"},"content":"        this.events.setEvent(target, targetEvent);","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"Kurtyjlee"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"Kurtyjlee"},"content":"     * @param event Event to be added.","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"Kurtyjlee"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"Kurtyjlee"},"content":"        // Get persons per group","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"Kurtyjlee"},"content":"        Event targetEvent \u003d removePersonsInGroups(event);","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"        this.events.addEvent(targetEvent);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"        sort();","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"Kurtyjlee"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"Kurtyjlee"},"content":"        this.events.remove(event);","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"Kurtyjlee"},"content":"     * remove persons from the event if it is already in the group","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"Kurtyjlee"},"content":"     * @param event event to operate on","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"Kurtyjlee"},"content":"     * @return return the event after finishing","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"Kurtyjlee"},"content":"    public Event removePersonsInGroups(Event event) {","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"Kurtyjlee"},"content":"        for (Group group: event.getGroups()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"Kurtyjlee"},"content":"            Set\u003cName\u003e personNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"Kurtyjlee"},"content":"            for (Person person: this.persons) {","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"Kurtyjlee"},"content":"                if (person.getGroups().contains(group)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"Kurtyjlee"},"content":"                    personNames.add(person.getName());","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"Kurtyjlee"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"Kurtyjlee"},"content":"            event.getNames().removeAll(personNames);","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"Kurtyjlee"},"content":"        return event;","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"Kurtyjlee"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Group operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"Kurtyjlee"},"content":"     * Retrieve a list of Persons in the group","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"Kurtyjlee"},"content":"     * @param groupName Group to search by","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"Kurtyjlee"},"content":"     * @return List of Persons in the group","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"Kurtyjlee"},"content":"    public ObservableList\u003cPerson\u003e getPersonsByGroup(Group groupName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"Kurtyjlee"},"content":"        return this.persons.getPersonsByGroup(groupName);","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"Kurtyjlee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d util methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":191,"author":{"gitId":"Ken-Lai"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"Ken-Lai"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"DistractedCat"},"content":"     * Sorts the list of events.","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"DistractedCat"},"content":"    public void sort() {","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"DistractedCat"},"content":"        this.events.sort();","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DistractedCat":25,"Ken-Lai":3,"Kurtyjlee":64,"-":129}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"Kurtyjlee"},"content":"    /** Returns a view of the event list */","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"Ken-Lai"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"Kurtyjlee"},"content":"     * Replaces the given person {@code target} with {@code editedPerson} in the address book","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"Kurtyjlee"},"content":"     * @param target event to be edited. {@code target} must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"Kurtyjlee"},"content":"     * @param editedEvent event with the edited details.","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"Kurtyjlee"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"     * Deletes the given event.","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"Kurtyjlee"},"content":"     * @param target event to be deleted. {@code target} must exist in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"Kurtyjlee"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"nicleongyj"},"content":"     * Updates the filter of the event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"nicleongyj"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"nicleongyj"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"Kurtyjlee"},"content":"    void updateFilteredEventListOnly(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"     * Adds an event to the list of events.","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"     * @param toAdd Event to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"    void addEvent(Event toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"     * Returns a set of names that are not found in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"     * @param names Set of names to be checked.","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"     * @return Set of names that are not found in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"    Set\u003cName\u003e findInvalidNames(Set\u003cName\u003e names);","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"Kurtyjlee"},"content":"     * Returns a set of groups that are not found in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"Kurtyjlee"},"content":"     * @param groups Set of groups to be checked.","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"Kurtyjlee"},"content":"     * @return Set of groups that are not found in the address book.","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"Kurtyjlee"},"content":"    Set\u003cGroup\u003e findInvalidGroups(Set\u003cGroup\u003e groups);","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"    Set\u003cGroup\u003e getEmptyGroups(Person person);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"    void removeEmptyGroups(Set\u003cGroup\u003e emptyGroups);","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"Kurtyjlee"},"content":"    void updateGroups();","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"     * Updates any events where the person to edit is assigned to.","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"     * @param personToEdit person to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"     * @param editedPerson person with the edited details","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"    void updateAssignedPersons(Person personToEdit, Person editedPerson);","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"     * Overloaded method to update any events where the person to delete is assigned to.","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"     * @param personToDelete person to delete","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"    void updateAssignedPersons(Person personToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"DistractedCat":34,"Ken-Lai":1,"nicleongyj":6,"Kurtyjlee":28,"leezhengjing":3,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"Ken-Lai"},"content":"    private final FilteredList\u003cEvent\u003e events;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Ken-Lai"},"content":"        this.events \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"Kurtyjlee"},"content":"    public Set\u003cGroup\u003e getEmptyGroups(Person target) {","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"Kurtyjlee"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"Kurtyjlee"},"content":"        return addressBook.getEmptyGroups(target);","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"Kurtyjlee"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"Kurtyjlee"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"Kurtyjlee"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"Kurtyjlee"},"content":"        Predicate\u003c? super Person\u003e personPredicate \u003d this.filteredPersons.getPredicate();","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"        // Reset the current persons list first","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"        this.addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"        sort();","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(personPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"Kurtyjlee"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"Kurtyjlee"},"content":"        this.addressBook.deleteEvent(target);","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"Kurtyjlee"},"content":"    public void removeEmptyGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"Kurtyjlee"},"content":"        for (Event event: events) {","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"Kurtyjlee"},"content":"            event.removeEmptyGroups(groups);","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"Kurtyjlee"},"content":"            setEvent(event, event);","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"Kurtyjlee"},"content":"    public void updateGroups() {","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"Kurtyjlee"},"content":"        Predicate\u003c? super Person\u003e personPredicate \u003d this.filteredPersons.getPredicate();","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"Kurtyjlee"},"content":"        // Reset the current persons list first","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"Kurtyjlee"},"content":"        for (Event event: events) {","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"Kurtyjlee"},"content":"            event.updateGroups();","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"Kurtyjlee"},"content":"            setEvent(event, event);","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(personPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"Kurtyjlee"},"content":"        return this.filteredPersons;","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"Kurtyjlee"},"content":"     * Returns the list of events","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"Kurtyjlee"},"content":"     * @return ArrayList of events","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":188,"author":{"gitId":"Ken-Lai"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"Kurtyjlee"},"content":"        return this.events;","lastModifiedDate":"2023-10-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":195,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"nicleongyj"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"nicleongyj"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"Kurtyjlee"},"content":"        Predicate\u003c? super Person\u003e personPredicate \u003d this.filteredPersons.getPredicate();","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"Kurtyjlee"},"content":"        // Reset the current persons list first","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"nicleongyj"},"content":"        this.events.setPredicate(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"Kurtyjlee"},"content":"        // Switch back to the previous filtered persons list","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(personPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"Kurtyjlee"},"content":"     * Updates the filtered event list without affecting the filtered person list.","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"Kurtyjlee"},"content":"     * @param predicate Predicate to filter the event list.","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"Kurtyjlee"},"content":"    public void updateFilteredEventListOnly(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"Kurtyjlee"},"content":"        Predicate\u003c? super Person\u003e personPredicate \u003d this.filteredPersons.getPredicate();","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"Kurtyjlee"},"content":"        // Reset the current persons list first","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"Kurtyjlee"},"content":"        // Reset the current events list","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"Kurtyjlee"},"content":"        this.events.setPredicate(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"Kurtyjlee"},"content":"        // Switch back to the previous filtered persons list","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(personPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":230,"author":{"gitId":"DistractedCat"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":231,"author":{"gitId":"DistractedCat"},"content":"     * @param toAdd Event to be added.","lastModifiedDate":"2023-10-15"},{"lineNumber":232,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"DistractedCat"},"content":"    public void addEvent(Event toAdd) {","lastModifiedDate":"2023-10-15"},{"lineNumber":235,"author":{"gitId":"DistractedCat"},"content":"        addressBook.addEvent(toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":236,"author":{"gitId":"DistractedCat"},"content":"        sort();","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":239,"author":{"gitId":"DistractedCat"},"content":"    private void sort() {","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"DistractedCat"},"content":"        this.addressBook.sort();","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":243,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"DistractedCat"},"content":"    public Set\u003cName\u003e findInvalidNames(Set\u003cName\u003e names) {","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cName\u003e invalidNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"DistractedCat"},"content":"        for (Name name : names) {","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"DistractedCat"},"content":"            boolean hasName \u003d checkNameExists(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"DistractedCat"},"content":"            if (!hasName) {","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"DistractedCat"},"content":"                invalidNames.add(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"DistractedCat"},"content":"        return invalidNames;","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":257,"author":{"gitId":"Kurtyjlee"},"content":"    public Set\u003cGroup\u003e findInvalidGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"Kurtyjlee"},"content":"        Set\u003cGroup\u003e invalidGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":259,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":260,"author":{"gitId":"Kurtyjlee"},"content":"        for (Group group : groups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":261,"author":{"gitId":"Kurtyjlee"},"content":"            if (!checkGroupExists(group)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":262,"author":{"gitId":"Kurtyjlee"},"content":"                invalidGroups.add(group);","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":264,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":265,"author":{"gitId":"Kurtyjlee"},"content":"        return invalidGroups;","lastModifiedDate":"2023-10-24"},{"lineNumber":266,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":267,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":268,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"DistractedCat"},"content":"    public void updateAssignedPersons(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-10-18"},{"lineNumber":270,"author":{"gitId":"DistractedCat"},"content":"        for (Event event : this.events) {","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"DistractedCat"},"content":"            if (event.getNames().contains(personToEdit.getName())) {","lastModifiedDate":"2023-10-18"},{"lineNumber":272,"author":{"gitId":"DistractedCat"},"content":"                logger.info(String.format(\"Updating events that involves %s : \", personToEdit.getName())","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"DistractedCat"},"content":"                        + Messages.formatEvent(event));","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"Kurtyjlee"},"content":"                this.setEvent(event, createUpdatedEvent(event, personToEdit, editedPerson));","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"DistractedCat"},"content":"                event.getNames().add(editedPerson.getName());","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":280,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":281,"author":{"gitId":"DistractedCat"},"content":"    public void updateAssignedPersons(Person personToDelete) {","lastModifiedDate":"2023-10-20"},{"lineNumber":282,"author":{"gitId":"DistractedCat"},"content":"        for (Event event : this.events) {","lastModifiedDate":"2023-10-20"},{"lineNumber":283,"author":{"gitId":"DistractedCat"},"content":"            if (event.getNames().contains(personToDelete.getName())) {","lastModifiedDate":"2023-10-20"},{"lineNumber":284,"author":{"gitId":"DistractedCat"},"content":"                event.getNames().remove(personToDelete.getName());","lastModifiedDate":"2023-10-20"},{"lineNumber":285,"author":{"gitId":"DistractedCat"},"content":"                setEvent(event, event); //update event in the storage","lastModifiedDate":"2023-10-20"},{"lineNumber":286,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":287,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":288,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":289,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":290,"author":{"gitId":"DistractedCat"},"content":"    private Event createUpdatedEvent(Event event, Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"DistractedCat"},"content":"        //add other switch statements for future event types","lastModifiedDate":"2023-10-18"},{"lineNumber":292,"author":{"gitId":"Kurtyjlee"},"content":"        event.getEventType().toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":293,"author":{"gitId":"DistractedCat"},"content":"        return new Meeting(event.getName(), event.getStartDate(),","lastModifiedDate":"2023-10-18"},{"lineNumber":294,"author":{"gitId":"DistractedCat"},"content":"                Optional.of(event.getStartTime()), Optional.of(event.getEndTime()),","lastModifiedDate":"2023-10-18"},{"lineNumber":295,"author":{"gitId":"Kurtyjlee"},"content":"                event.getUpdatedNames(personToEdit.getName(), editedPerson.getName()),","lastModifiedDate":"2023-10-24"},{"lineNumber":296,"author":{"gitId":"Kurtyjlee"},"content":"                event.getGroups());","lastModifiedDate":"2023-10-24"},{"lineNumber":297,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":298,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"DistractedCat"},"content":"    private boolean checkNameExists(Name name) {","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"DistractedCat"},"content":"        for (Person person : this.filteredPersons) {","lastModifiedDate":"2023-10-18"},{"lineNumber":301,"author":{"gitId":"DistractedCat"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":302,"author":{"gitId":"DistractedCat"},"content":"                return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":303,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":305,"author":{"gitId":"DistractedCat"},"content":"        return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":306,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":307,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":308,"author":{"gitId":"Kurtyjlee"},"content":"    private boolean checkGroupExists(Group group) {","lastModifiedDate":"2023-10-24"},{"lineNumber":309,"author":{"gitId":"Kurtyjlee"},"content":"        Predicate\u003c? super Person\u003e personPredicate \u003d this.filteredPersons.getPredicate();","lastModifiedDate":"2023-10-31"},{"lineNumber":310,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"Kurtyjlee"},"content":"        // Reset the current persons list first","lastModifiedDate":"2023-10-31"},{"lineNumber":312,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":313,"author":{"gitId":"Kurtyjlee"},"content":"        for (Person person : this.filteredPersons) {","lastModifiedDate":"2023-10-24"},{"lineNumber":314,"author":{"gitId":"Kurtyjlee"},"content":"            if (person.getGroups().contains(group)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":315,"author":{"gitId":"Kurtyjlee"},"content":"                // Switch back to the previous filtered persons list","lastModifiedDate":"2023-10-31"},{"lineNumber":316,"author":{"gitId":"Kurtyjlee"},"content":"                this.filteredPersons.setPredicate(personPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":317,"author":{"gitId":"Kurtyjlee"},"content":"                return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":318,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":319,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":320,"author":{"gitId":"Kurtyjlee"},"content":"        // Switch back to the previous filtered persons list","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"Kurtyjlee"},"content":"        this.filteredPersons.setPredicate(personPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"Kurtyjlee"},"content":"        return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":337,"author":{"gitId":"Kurtyjlee"},"content":"        return this.addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-10-13"},{"lineNumber":338,"author":{"gitId":"Kurtyjlee"},"content":"                \u0026\u0026 this.userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-10-13"},{"lineNumber":339,"author":{"gitId":"Kurtyjlee"},"content":"                \u0026\u0026 this.filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-10-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":342,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"Kurtyjlee"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":344,"author":{"gitId":"Kurtyjlee"},"content":"        return this.filteredPersons.toString() + \"\\n\" + this.events.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":345,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DistractedCat":71,"Ken-Lai":3,"nicleongyj":6,"Kurtyjlee":122,"-":144}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Ken-Lai"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DistractedCat":3,"Ken-Lai":1,"-":17}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.model.event.EventTime.NULL_EVENT_TIME;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":" * Represents an Event in the address book.","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"public abstract class Event {","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    public static final String START_TIME_CONSTRAINTS \u003d \"You cannot enter a time that is before the current time!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    public static final String END_TIME_CONSTRAINTS \u003d \"You cannot enter an end time that is before the start time!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    private Set\u003cName\u003e names;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    private EventDate startDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    private Optional\u003cEventTime\u003e startTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    private EventDate endDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    private Optional\u003cEventTime\u003e endTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    private EventName name;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    private EventType eventType;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"    private Set\u003cGroup\u003e groups;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"     * Constructor for events with optional start and end time","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"     * @param name name of the event","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"     * @param startDate start date of the event","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"     * @param startTime start time of the event","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"     * @param endDate  end date of the event","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"     * @param endTime end time of the event","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"     * @param names names of the people attending the event","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    public Event(EventType eventType, EventName name, EventDate startDate, Optional\u003cEventTime\u003e startTime,","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"                 EventDate endDate, Optional\u003cEventTime\u003e endTime, Set\u003cName\u003e names, Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"        this.eventType \u003d eventType;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"    public EventType getEventType() {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"        return this.eventType;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"    public Set\u003cGroup\u003e getGroups() {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"        return this.groups;","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"     * Gets the start date time of the event","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"     * @return start date time of the event","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"    public EventDate getStartDate() {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        return this.startDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"    public EventTime getStartTime() {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"        return this.startTime.get();","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the event has a start time.","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"    public boolean hasStartTime() {","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        return !(this.startTime.get() \u003d\u003d NULL_EVENT_TIME);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the event has an end time.","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"     * @return true if the event has an end time","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"    public boolean hasEndTime() {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"        return !(this.endTime.get() \u003d\u003d NULL_EVENT_TIME);","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"    public EventDate getEndDate() {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        return this.endDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"    public EventTime getEndTime() {","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"        return this.endTime.get();","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"Kurtyjlee"},"content":"     * Gets the name of the event","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"Kurtyjlee"},"content":"     * @return name of the event","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"    public EventName getName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Kurtyjlee"},"content":"        return this.name;","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if both events are of the same type and have the same name.","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"     * @param event event to be compared","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"     * @return true if both events are of the same type and have the same name","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"    public abstract boolean isSameEvent(Event event);","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"    public Set\u003cName\u003e getNames() {","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"        return this.names;","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"     * Returns a set of updated person names when a person\u0027s name is edited.","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"     * @param toEdit name of the person to be edited","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"     * @param editedName edited name of the person","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"     * @return set of updated person names","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"    public Set\u003cName\u003e getUpdatedNames(Name toEdit, Name editedName) {","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"        if (!this.names.contains(toEdit)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"            return this.names;","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cName\u003e newNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"        for (Name name : this.names) {","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"            if (name.equals(toEdit)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"                newNames.add(editedName);","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"                newNames.add(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"        return newNames;","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"Kurtyjlee"},"content":"    public void removeEmptyGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"Kurtyjlee"},"content":"        this.groups.removeAll(groups);","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"    public void updateGroups() {","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"Kurtyjlee"},"content":"        this.groups \u003d this.groups;","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the event is overdue.","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"    public boolean isOverDue() {","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"        if (!hasStartTime() \u0026\u0026 !hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"            if (LocalDateTime.now().isBefore(this.getStartDate().getDate().atTime(LocalTime.MAX))) {","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"        } else if (!hasStartTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"            if (LocalDateTime.now().isBefore(this.getEndDate().getDate()","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"                    .atTime(this.getEndTime().getEventTime()))) {","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"        } else if (!hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"            if (LocalDateTime.now().isBefore(this.getStartDate().getDate()","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"                    .atTime(this.getStartTime().getEventTime()))) {","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"            if (LocalDateTime.now().isBefore(this.getStartDate().getDate()","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"                    .atTime(this.getStartTime().getEventTime()))) {","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"nicleongyj"},"content":"    public boolean hasStartDateWithinDays(int days) {","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"nicleongyj"},"content":"        return this.startDate.isWithinDays(days);","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"DistractedCat":124,"nicleongyj":4,"Kurtyjlee":50}},{"path":"src/main/java/seedu/address/model/event/EventComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":" * Represents a EventComparator in the address book.","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"public class EventComparator implements Comparator\u003cEvent\u003e {","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"     * Compares its two arguments for order.","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"     * @param event1 First event to be compared.","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"     * @param event2 Second event to be compared","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"     * @return a negative integer, zero, or a positive integer based on the LocalDatetime order.","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"    public int compare(Event event1, Event event2) {","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"        if (event1.getStartDate().getDate().isBefore(event2.getStartDate().getDate())) {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"            return -1;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"        } else if (event1.getStartDate().getDate().isAfter(event2.getStartDate().getDate())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"            return 1;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"        //compare the startTime if it is present","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"        if (event1.hasStartTime() \u0026\u0026 event2.hasStartTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"            if (event1.getStartTime().getEventTime().isBefore(event2.getStartTime().getEventTime())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"                return -1;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"            } else if (event1.getStartTime().getEventTime().isAfter(event2.getStartTime().getEventTime())) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"                return 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        //if one of the event has startTime, it will be placed before the other","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        if (event1.hasStartTime() \u0026\u0026 !event2.hasStartTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"            return -1;","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"        } else if (event2.hasStartTime() \u0026\u0026 !event1.hasStartTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"            return 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        if (event1.hasEndTime() \u0026\u0026 event2.hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"            if (event1.getEndTime().getEventTime().isBefore(event2.getEndTime().getEventTime())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"                return -1;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"            } else if (event1.getEndTime().getEventTime().isAfter(event2.getEndTime().getEventTime())) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"                return 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        //if one of the event has endTime, it will be placed before the other","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"        if (event1.hasEndTime() \u0026\u0026 !event2.hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"            return -1;","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        } else if (event2.hasEndTime() \u0026\u0026 !event1.hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"            return 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        return 0;","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"DistractedCat":38,"Kurtyjlee":19}},{"path":"src/main/java/seedu/address/model/event/EventDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * DateTime class to represent the date and time of an event.","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class EventDate {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd\")","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"            .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"            \"Date should be in YYYY-mm-dd format, i.e. 2023-09-30, and it should not be blank\";","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    private LocalDate date;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"     * Constructs an EventDate object.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * @param date","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * @throws ParseException if the date is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    public EventDate(String date) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"            this.date \u003d LocalDate.parse(date, DATE_FORMATTER);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    public static boolean isValidDate(String trimmedDate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(trimmedDate, DATE_FORMATTER);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"     * Gets the date of the event","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"     * @return date of the event","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        return this.date;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        if (!(other instanceof EventDate)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        EventDate otherDate \u003d (EventDate) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"        return this.date.isEqual(otherDate.date);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"        return this.date.format(DATE_FORMATTER);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"     * Returns a string representation of the date in a format for display.","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"     * @return a string representation of the date in a format for display.","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"    public String forDisplay() {","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"nicleongyj"},"content":"     * Returns true if the date is within the number of days specified.","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"nicleongyj"},"content":"     * @param days number of days","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"nicleongyj"},"content":"     * @return true if the date is within the number of days specified","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"nicleongyj"},"content":"    public boolean isWithinDays(int days) {","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"nicleongyj"},"content":"        LocalDate endDate \u003d LocalDate.now().plusDays(days + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"nicleongyj"},"content":"        return (this.date.isBefore(endDate) \u0026\u0026 this.date.isAfter(LocalDate.now()))","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"nicleongyj"},"content":"                || this.date.isEqual(LocalDate.now());","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"DistractedCat":75,"nicleongyj":11,"Kurtyjlee":6}},{"path":"src/main/java/seedu/address/model/event/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Ken-Lai"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Ken-Lai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Ken-Lai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":" * Represents a list of events in the address book. Operations for managing the list of events are implemented here.","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"public class EventList {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Ken-Lai"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Ken-Lai"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Ken-Lai"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"     * Adds an event to the list of events.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"     * @param event Event to be added.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Ken-Lai"},"content":"        this.internalList.add(event);","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"     * @param target event to be edited. {@code target} must exist in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"     * @param editedEvent event with the edited details.","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Ken-Lai"},"content":"        int index \u003d this.internalList.indexOf(target);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Ken-Lai"},"content":"            throw new EventNotFoundException(); // Change to event exception","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Ken-Lai"},"content":"        this.internalList.set(index, editedEvent);","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"     * Returns the event List","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"     * @return ArrayList of events.","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"    public List\u003cEvent\u003e getEventsList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        return this.internalList;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Ken-Lai"},"content":"    public void setEvents(List\u003cEvent\u003e newEvents) {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Ken-Lai"},"content":"        this.internalList.setAll(newEvents);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Ken-Lai"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Ken-Lai"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"     * @param target Event to be removed.","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Kurtyjlee"},"content":"    public void remove(Event target) {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Kurtyjlee"},"content":"        if (!this.internalList.remove(target)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"     * Sorts the list of events.","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"    public void sort() {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        this.internalList.sort(new EventComparator());","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"DistractedCat":14,"Ken-Lai":14,"Kurtyjlee":51}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":" * Represents a Event\u0027s name in the address book","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"public class EventName {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"            \"Names should not be blank\";","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String VALIDATION_REGEX \u003d \".*\\\\S+.*\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"    public final String name;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"    public EventName(String name) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"        return this.name;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        if (!(other instanceof EventName)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"        EventName otherName \u003d (EventName) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"        return this.name.equals(otherName.name);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"Kurtyjlee":59}},{"path":"src/main/java/seedu/address/model/event/EventNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class EventNameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"     * Constructor for the event name contains keywords predicate","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    public EventNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"        return this.keywords.stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().toString(), keyword));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"DistractedCat":25}},{"path":"src/main/java/seedu/address/model/event/EventTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" * Represents the time of the event.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"public class EventTime {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"            \"The time must be in HHmm format, i.e. 2359\";","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String TIME_REGEX \u003d \"([01][0-9]|2[0-3])[0-5][0-9]\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"    public static final EventTime NULL_EVENT_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"    static {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"            NULL_EVENT_TIME \u003d new EventTime(\"0000\");","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    private LocalTime eventTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"     * Constructs an EventTime object.","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"     * @param eventTime the event time in HHmm format.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"     * @throws ParseException if the given eventTime does not follow the format.","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    private EventTime(String eventTime) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"            this.eventTime \u003d LocalTime.parse(eventTime, TIME_FORMATTER);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"     * Because time is optional, a blank string is considered valid.","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    public static boolean isValidTime(String trimmedTime) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"            //to represent the case of optional time.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"            if (trimmedTime.isBlank()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"                return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"            } else if (!trimmedTime.matches(TIME_REGEX)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"            LocalTime parsedTime \u003d LocalTime.parse(trimmedTime, TIME_FORMATTER);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"     * Returns the event time.","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"     * @return event time.","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"    public LocalTime getEventTime() {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"        return this.eventTime;","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"        if (!(other instanceof EventTime)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"        EventTime otherTime \u003d (EventTime) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        return this.eventTime.equals(otherTime.eventTime);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"     * Factory method for EventTime.","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"     * @param eventTime the event time in HHmm format.","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"     * @return an instance of EventTime.","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"     * @throws ParseException if the given eventTime does not follow the format.","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"    public static EventTime of(String eventTime) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"        if (!isValidTime(eventTime)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"        if (eventTime.isBlank()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"            return NULL_EVENT_TIME;","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"        return new EventTime(eventTime);","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"     * ToString for the event time.","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"     * Kept as the same format as the input for json storage.","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"        return eventTime.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"     * For display in the UI.","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"    public String forDisplay() {","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"        return eventTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"DistractedCat":96,"Kurtyjlee":23}},{"path":"src/main/java/seedu/address/model/event/EventType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":" * Represents the type of event in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"public class EventType {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"    private final String eventType;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"     * Constructor for the event type","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"     * @param eventType type of the event","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"    public EventType(String eventType) {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"        requireNonNull(eventType);","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"        this.eventType \u003d eventType;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"        return this.eventType;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Kurtyjlee":24}},{"path":"src/main/java/seedu/address/model/event/Meeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":" * Represents a Meeting in the address book.","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"public class Meeting extends Event {","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"    private static final String MEETING_EVENT_TYPE \u003d \"meeting\";","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"     * Constructor for the meeting with optional start and end time","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     * @param name name of the meeting","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"     * @param date date of the meeting","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"     * @param startTime start time of the meeting","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"     * @param endTime end time of the meeting","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"     * @param names names of the people attending the meeting","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    public Meeting(EventName name, EventDate date, Optional\u003cEventTime\u003e startTime,","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"                   Optional\u003cEventTime\u003e endTime, Set\u003cName\u003e names, Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"        super(new EventType(MEETING_EVENT_TYPE), name, date, startTime, date, endTime, names, groups);","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"     * ToString for the meeting","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"        return String.format(","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"                \"%1$s; Date: %2$s; Start_Time: %3$s; End_Time: %4$s; Assigned_Persons: %5$s; Assigned_Groups: %6$s;\",","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"                super.getName().toString(), super.getStartDate().toString(),","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"                super.getStartTime().toString(), super.getEndTime().toString(), super.getNames(),","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"                super.getGroups());","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"     * Checks if the meeting is the same as another meeting","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"     * @param other the other meeting to be compared to","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"     * @return true if the meetings have the same name.","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"    public boolean isSameEvent(Event other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        if (!(other instanceof Meeting)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-09"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        return other.getName().equals(getName());","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"DistractedCat":25,"Kurtyjlee":33}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"public class EventNotFoundException extends RuntimeException{","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"DistractedCat":8}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":" * Represents a Group in the address book.","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidGroupName(String)}","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"public class Group {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Group names should be alphanumeric and should not be blank\";","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    public final String groupName;","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     * Constructs a {@code Group}.","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"     * @param groupName A valid Group name.","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    public Group(String groupName) {","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        checkArgument(isValidGroupName(groupName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if a given string is a valid group name.","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    public static boolean isValidGroupName(String test) {","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    public String getGroupName() {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"        return groupName;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"            return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"            return false;","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        Group otherGroup \u003d (Group) other;","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        return groupName.equals(otherGroup.groupName);","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        return groupName.hashCode();","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"    public String toString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"        return \u0027[\u0027 + groupName + \u0027]\u0027;","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"DistractedCat":61,"Kurtyjlee":5}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it can be blank\";","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    // Updated: Allow empty address, so whitespace is allowed.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    public static final Address NULL_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"    static {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"            NULL_ADDRESS \u003d new Address(\"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"    private final String value;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"        if (test.trim().equals(\"\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"     * Factory method to create an Address object.","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"     * @param address","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"leezhengjing"},"content":"     * @return Address object","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"leezhengjing"},"content":"    public static Address of(String address) throws IllegalArgumentException {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"leezhengjing"},"content":"        if (!isValidAddress(address)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"leezhengjing"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"leezhengjing"},"content":"        } else if (address.isBlank()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"leezhengjing"},"content":"            return Address.NULL_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"leezhengjing"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"leezhengjing"},"content":"            return new Address(address);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhengjing":32,"-":60}},{"path":"src/main/java/seedu/address/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":" * Represents a Person\u0027s birthday in the address book.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthday(String)}","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"public class Birthday {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"            \"Birthdays should only contain numbers, and it should be in yyyy-MM-dd format\";","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    public static final Birthday NULL_BIRTHDAY;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    static {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"            NULL_BIRTHDAY \u003d new Birthday(\"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"    private String stringValue;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"    private LocalDate value;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"        checkArgument(isValidBirthday(birthday), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"        this.stringValue \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        if (birthday.trim().isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"            this.value \u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"            return;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"        try {","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"            LocalDate parsedDate \u003d LocalDate.parse(birthday, formatter);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"nicleongyj"},"content":"            this.value \u003d parsedDate;","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"nicleongyj"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"nicleongyj"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"nicleongyj"},"content":"     * Returns true if a given string is a valid birthday.","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"nicleongyj"},"content":"    public static boolean isValidBirthday(String test) {","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        if (test.trim().isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nicleongyj"},"content":"        if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"            try {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"nicleongyj"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"nicleongyj"},"content":"                LocalDate parsedDate \u003d LocalDate.parse(test, formatter);","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"nicleongyj"},"content":"                return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"nicleongyj"},"content":"            } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"nicleongyj"},"content":"                return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"nicleongyj"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"nicleongyj"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"nicleongyj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"        return (value \u003d\u003d null) ? \"\" : value.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"nicleongyj"},"content":"    public String getStringValue() {","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"nicleongyj"},"content":"        return stringValue;","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"nicleongyj"},"content":"    public LocalDate getValue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"nicleongyj"},"content":"        return value;","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"nicleongyj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"nicleongyj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"nicleongyj"},"content":"            return true;","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"nicleongyj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"nicleongyj"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"nicleongyj"},"content":"            return false;","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"nicleongyj"},"content":"        Birthday otherBirthday \u003d (Birthday) other;","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"nicleongyj"},"content":"        return value.equals(otherBirthday.value);","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"leezhengjing"},"content":"     * Factory method for Birthday.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"leezhengjing"},"content":"     * @param birthday the birthday in yyyy-MM-dd format.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"leezhengjing"},"content":"     * @return an instance of Birthday.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"leezhengjing"},"content":"     * @throws IllegalArgumentException if the given birthday does not follow the format.","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"leezhengjing"},"content":"    public static Birthday of(String birthday) throws IllegalArgumentException {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"leezhengjing"},"content":"        if (!isValidBirthday(birthday)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"leezhengjing"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"leezhengjing"},"content":"        if (birthday.isBlank()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"leezhengjing"},"content":"            return NULL_BIRTHDAY;","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"leezhengjing"},"content":"        return new Birthday(birthday);","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"     * Returns a string for display.","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"    public String forDisplay() {","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"        return (value \u003d\u003d null) ? \"\" : value.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"nicleongyj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"nicleongyj"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"nicleongyj"},"content":"     * Returns true if the birthday is within the next {@code days} days.","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"nicleongyj"},"content":"    public boolean isWithinDays(int days) {","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"nicleongyj"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"nicleongyj"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"nicleongyj"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"nicleongyj"},"content":"        LocalDate endDate \u003d LocalDate.now().plusDays(days + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"nicleongyj"},"content":"        LocalDate birthday \u003d value.withYear(now.getYear());","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"nicleongyj"},"content":"        if (birthday.isBefore(now)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"nicleongyj"},"content":"            birthday \u003d birthday.plusYears(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"nicleongyj"},"content":"        return (birthday.isBefore(endDate) \u0026\u0026 birthday.isAfter(now)) || birthday.isEqual(now);","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"DistractedCat":9,"nicleongyj":96,"leezhengjing":35}},{"path":"src/main/java/seedu/address/model/person/BirthdayWithinDaysPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":" * Tests that a {@code Person}\u0027s {@code Birthday} is within the specified number of days from today.","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"public class BirthdayWithinDaysPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":"    private final int days;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"    public BirthdayWithinDaysPredicate(int days) {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"        this.days \u003d days;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"        return person.hasBirthdayWithinDays(days);","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"        if (!(other instanceof BirthdayWithinDaysPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate otherPredicate \u003d (BirthdayWithinDaysPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"        return days \u003d\u003d otherPredicate.days;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"        return new ToStringBuilder(this).add(\"days\", days).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"nicleongyj":42}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"leezhengjing"},"content":"    public static final Email NULL_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"leezhengjing"},"content":"    static {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"leezhengjing"},"content":"            NULL_EMAIL \u003d new Email(\"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"leezhengjing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"leezhengjing"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"    private final String value;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"        if (test.trim().equals(\"\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"leezhengjing"},"content":"     * Factory method to create an Email object.","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"leezhengjing"},"content":"     * @param email","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"leezhengjing"},"content":"     * @return Email object","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"leezhengjing"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"leezhengjing"},"content":"    public static Email of(String email) throws IllegalArgumentException {","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"leezhengjing"},"content":"        if (!isValidEmail(email)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"leezhengjing"},"content":"            throw new IllegalArgumentException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"leezhengjing"},"content":"        } else if (email.isBlank()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"leezhengjing"},"content":"            return Email.NULL_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"leezhengjing"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"leezhengjing"},"content":"            return new Email(email);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhengjing":36,"-":66}},{"path":"src/main/java/seedu/address/model/person/EventWithinDaysPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":" * Tests that a {@code Person}\u0027s {@code Birthday} is within the specified number of days from today.","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":"public class EventWithinDaysPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"    private final int days;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"    public EventWithinDaysPredicate(int days) {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"        this.days \u003d days;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"        return event.hasStartDateWithinDays(days);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"        if (!(other instanceof EventWithinDaysPredicate)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate otherPredicate \u003d (EventWithinDaysPredicate) other;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"        return days \u003d\u003d otherPredicate.days;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"        return new ToStringBuilder(this).add(\"days\", days).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"nicleongyj":42}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"Ken-Lai"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Ken-Lai"},"content":"     * Constructs the NameContainsKeywordsPredicate with provided keywords.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Ken-Lai"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Ken-Lai"},"content":"     * @param keywords keywords from user input.","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Ken-Lai"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Ken-Lai"},"content":"        assert keywords !\u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"DistractedCat":1,"Ken-Lai":7,"-":44}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"leezhengjing"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"    private final Optional\u003cPhone\u003e phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"    private final Optional\u003cEmail\u003e email;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"    private final Optional\u003cAddress\u003e address;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"    private final Optional\u003cBirthday\u003e birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    private final Set\u003cGroup\u003e groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"     * Every field need not be present and not null.","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"    public Person(Name name) {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"        this.phone \u003d Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"        this.email \u003d Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"        this.address \u003d Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"        this.birthday \u003d Optional.empty();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"     * Constructor for Person with all fields present.","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"     * @param name","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"     * @param phone","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"     * @param email","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"     * @param address","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"     * @param birthday","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"     * @param groups","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"    public Person(Name name, Optional\u003cPhone\u003e phone, Optional\u003cEmail\u003e email, Optional\u003cAddress\u003e address,","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"                  Optional\u003cBirthday\u003e birthday, Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"nicleongyj"},"content":"        requireAllNonNull(name, phone, email, address, birthday, groups);","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"leezhengjing"},"content":"        return phone.orElse(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"        return email.orElse(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"        return address.orElse(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"nicleongyj"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"leezhengjing"},"content":"        return birthday.get();","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"     * Returns an immutable group set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"    public Set\u003cGroup\u003e getGroups() {","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"        return Collections.unmodifiableSet(groups);","lastModifiedDate":"2023-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"nicleongyj"},"content":"                \u0026\u0026 birthday.equals(otherPerson.birthday)","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"                \u0026\u0026 groups.equals(otherPerson.groups);","lastModifiedDate":"2023-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"nicleongyj"},"content":"        return Objects.hash(name, phone, email, address, birthday, groups);","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"leezhengjing"},"content":"                .add(\"phone\", this.getPhone())","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"leezhengjing"},"content":"                .add(\"email\", this.getEmail())","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"leezhengjing"},"content":"                .add(\"address\", this.getAddress())","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"leezhengjing"},"content":"                .add(\"birthday\", this.getBirthday())","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"                .add(\"groups\", groups)","lastModifiedDate":"2023-10-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the person has a phone number.","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"    public boolean hasPhone() {","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"leezhengjing"},"content":"        return getPhone() !\u003d Phone.NULL_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the person has an email.","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"    public boolean hasEmail() {","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"leezhengjing"},"content":"        return getEmail() !\u003d Email.NULL_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the person has an address.","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"    public boolean hasAddress() {","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"leezhengjing"},"content":"        return getAddress() !\u003d Address.NULL_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the person has a birthday.","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"    public boolean hasBirthday() {","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"leezhengjing"},"content":"        return getBirthday() !\u003d Birthday.NULL_BIRTHDAY;","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"     * Returns true if the person has groups.","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"    public boolean hasGroups() {","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"        return !getGroups().isEmpty();","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"nicleongyj"},"content":"     * Returns true if the person has a birthday within the next {@code days} days.","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"nicleongyj"},"content":"    public boolean hasBirthdayWithinDays(int days) {","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"nicleongyj"},"content":"        Birthday birthday \u003d getBirthday();","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"nicleongyj"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"nicleongyj"},"content":"            return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"nicleongyj"},"content":"        return birthday.isWithinDays(days);","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"Kurtyjlee"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"Kurtyjlee"},"content":"        return this.getGroups().contains(group);","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"DistractedCat":38,"nicleongyj":16,"leezhengjing":38,"Kurtyjlee":3,"-":95}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"leezhengjing"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    public static final Phone NULL_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    static {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"leezhengjing"},"content":"            NULL_PHONE \u003d new Phone(\"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"leezhengjing"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"    private final String value;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"        //to represent the case of optional time.","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"        if (test.trim().equals(\"\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"     * Factory method of Phone class.","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"leezhengjing"},"content":"    public static Phone of(String phone) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"leezhengjing"},"content":"        if (!isValidPhone(phone)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"leezhengjing"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"leezhengjing"},"content":"        if (phone.isBlank()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"leezhengjing"},"content":"            return Phone.NULL_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"leezhengjing"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"leezhengjing"},"content":"            return new Phone(phone);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"leezhengjing"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"leezhengjing":31,"-":58}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"Kurtyjlee"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"Kurtyjlee"},"content":"     * @param replacement replacement list","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":113,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"Kurtyjlee"},"content":"     * Get a list of persons based on group name","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"Kurtyjlee"},"content":"     * @param groupName groupName to search by","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"Kurtyjlee"},"content":"     * @return A copy of the persons list with the same group name","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"Kurtyjlee"},"content":"    public ObservableList\u003cPerson\u003e getPersonsByGroup(Group groupName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"Kurtyjlee"},"content":"        ObservableList\u003cPerson\u003e personsList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"Kurtyjlee"},"content":"        FXCollections.copy(personsList, internalList);","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"Kurtyjlee"},"content":"        personsList.filtered(person -\u003e person.hasGroup(groupName));","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"Kurtyjlee"},"content":"        return personsList;","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"Kurtyjlee"},"content":"     * Get a set of groups that are empty after deleting the person","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"Kurtyjlee"},"content":"     * @param person person to check","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"Kurtyjlee"},"content":"     * @return A set of groups that are empty","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"Kurtyjlee"},"content":"    public Set\u003cGroup\u003e isLastPersonGroup(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"Kurtyjlee"},"content":"        Set\u003cGroup\u003e emptyGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"Kurtyjlee"},"content":"        for (Group group: person.getGroups()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"Kurtyjlee"},"content":"            boolean isEmptyGroup \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"Kurtyjlee"},"content":"            for (Person p: internalList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"Kurtyjlee"},"content":"                if (p.hasGroup(group) \u0026\u0026 !p.equals(person)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"Kurtyjlee"},"content":"                    isEmptyGroup \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"Kurtyjlee"},"content":"                    break;","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"Kurtyjlee"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"Kurtyjlee"},"content":"            if (isEmptyGroup) {","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"                emptyGroups.add(group);","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"Kurtyjlee"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"Kurtyjlee"},"content":"        return emptyGroups;","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kurtyjlee":41,"-":149}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"leezhengjing"},"content":"        return new Person[]{new Person(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Phone(\"87438807\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Email(\"alexyeoh@example.com\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Address(\"Blk 30 Geylang Street 29, #06-40\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Birthday(\"2001-12-20\")), getGroupSet(\"friends\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"            new Person(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Phone(\"99272758\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Email(\"berniceyu@example.com\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Birthday(\"2001-12-21\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"            getGroupSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Phone(\"93210283\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Email(\"charlotte@example.com\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Birthday(\"2001-12-22\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"            getGroupSet(\"neighbours\")),","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"            new Person(new Name(\"David Li\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Phone(\"91031282\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Email(\"lidavid@example.com\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Birthday(\"2001-12-23\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"            getGroupSet(\"family\")),","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"leezhengjing"},"content":"            new Person(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Phone(\"92492021\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Email(\"irfan@example.com\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Address(\"Blk 47 Tampines Street 20, #17-35\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Birthday(\"2001-12-24\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"            getGroupSet(\"classmates\")),","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"            new Person(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Phone(\"92624417\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Email(\"royb@example.com\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Address(\"Blk 45 Aljunied Street 85, #11-31\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"            Optional.of(new Birthday(\"2001-12-25\")),","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"            getGroupSet(\"colleagues\"))","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"     * Returns a group set containing the list of strings given.","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"    public static Set\u003cGroup\u003e getGroupSet(String... strings) {","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"                .map(Group::new)","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"    public static Set\u003cName\u003e getNameSet(String... strings) {","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Kurtyjlee"},"content":"                .map(Name::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Kurtyjlee"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"DistractedCat":9,"nicleongyj":1,"leezhengjing":31,"Kurtyjlee":5,"-":37}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Meeting;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":" * Json-friendly version of {@link Event}.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    public static final String UNKNOWN_EVENT_TYPE \u003d \"Unknown event type!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"    private final String eventType;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"    private final String name;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"    private final String date;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    private final String startTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"    private final String endTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    private final List\u003cJsonAdaptedName\u003e assignedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    private final List\u003cJsonAdaptedGroup\u003e assignedGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"     * Constructs a {@code JsonAdaptedMeeting} with the given person details.","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"eventType\") String eventType,","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"                            @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"                            @JsonProperty(\"date\") String date,","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"                            @JsonProperty(\"startTime\") String startTime,","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"                            @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"                            @JsonProperty(\"assignedPersons\") List\u003cJsonAdaptedName\u003e assignedPersons,","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"                            @JsonProperty(\"assignedGroups\") List\u003cJsonAdaptedGroup\u003e assignedGroups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"        this.eventType \u003d eventType;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"        if (assignedPersons !\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"            this.assignedPersons.addAll(assignedPersons);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"        if (assignedGroups !\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"            this.assignedGroups.addAll(assignedGroups);","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"     * Converts a given {@code Meeting} into this class for Json use.","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"Kurtyjlee"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Kurtyjlee"},"content":"        this.eventType \u003d source.getEventType().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"        this.name \u003d source.getName().name;","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"Kurtyjlee"},"content":"        this.date \u003d source.getStartDate().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"        this.startTime \u003d source.hasStartTime() ? source.getStartTime().toString() : \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"        this.endTime \u003d source.hasEndTime() ? source.getEndTime().toString() : \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"        this.assignedPersons.addAll(source.getNames().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"                .map(JsonAdaptedName::new)","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"Kurtyjlee"},"content":"        this.assignedGroups.addAll(source.getGroups().stream()","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"Kurtyjlee"},"content":"                .map(JsonAdaptedGroup::new)","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"Kurtyjlee"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"Kurtyjlee"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"Kurtyjlee"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"Kurtyjlee"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"Kurtyjlee"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"        final List\u003cName\u003e personNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"        for (JsonAdaptedName name : assignedPersons) {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"            personNames.add(name.toModelType());","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"        final List\u003cGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"Kurtyjlee"},"content":"        for (JsonAdaptedGroup group : assignedGroups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"Kurtyjlee"},"content":"            groups.add(group.toModelType());","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"Kurtyjlee"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":107,"author":{"gitId":"Kurtyjlee"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"Kurtyjlee"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EventName.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"leezhengjing"},"content":"        if (!EventName.isValidName(name)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"leezhengjing"},"content":"            throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"Kurtyjlee"},"content":"        final EventName modelName \u003d new EventName(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"Kurtyjlee"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"Kurtyjlee"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"Kurtyjlee"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EventDate.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"Kurtyjlee"},"content":"        if (!EventDate.isValidDate(this.date)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"Kurtyjlee"},"content":"            throw new IllegalValueException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"Kurtyjlee"},"content":"        final EventDate modelEventDate \u003d new EventDate(this.date);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"        if (this.startTime \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EventTime.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"        if (!EventTime.isValidTime(this.startTime)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"Kurtyjlee"},"content":"            throw new IllegalValueException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"        final EventTime modelEventStartTime \u003d EventTime.of(this.startTime);","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"        if (this.endTime \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EventTime.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"        if (!EventTime.isValidTime(this.endTime)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"Kurtyjlee"},"content":"            throw new IllegalValueException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"        final EventTime modelEventEndTime \u003d EventTime.of(this.endTime);","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"        final Set\u003cName\u003e modelNames \u003d new HashSet\u003c\u003e(personNames);","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"Kurtyjlee"},"content":"        final Set\u003cGroup\u003e modelGroups \u003d new HashSet\u003c\u003e(groups);","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"Kurtyjlee"},"content":"        // no other events for now","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"        return checkEventType(modelName, modelEventDate,","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"Kurtyjlee"},"content":"                Optional.of(modelEventStartTime), Optional.of(modelEventEndTime), modelNames, modelGroups);","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"    private Event checkEventType(EventName eventName,","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"                                 EventDate eventDate,","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"                                 Optional\u003cEventTime\u003e startTime,","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"                                 Optional\u003cEventTime\u003e endTime,","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"Kurtyjlee"},"content":"                                 Set\u003cName\u003e personNames,","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"Kurtyjlee"},"content":"                                 Set\u003cGroup\u003e groups) throws IllegalValueException {","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"Kurtyjlee"},"content":"        if (this.eventType.equals(\"meeting\")) {","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"Kurtyjlee"},"content":"            return new Meeting(eventName, eventDate, startTime, endTime, personNames, groups);","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"Kurtyjlee"},"content":"        throw new IllegalValueException(UNKNOWN_EVENT_TYPE);","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"Kurtyjlee"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"Kurtyjlee"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"Kurtyjlee"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"Kurtyjlee"},"content":"                .add(\"event_type\", this.eventType)","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"Kurtyjlee"},"content":"                .add(\"name\", this.name)","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"Kurtyjlee"},"content":"                .add(\"date\", this.date)","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"Kurtyjlee"},"content":"                .add(\"start_time\", this.startTime \u003d\u003d null ? \"\" : this.startTime)","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"Kurtyjlee"},"content":"                .add(\"end_time\", this.endTime \u003d\u003d null ? \"\" : this.endTime)","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"Kurtyjlee"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"DistractedCat":56,"Kurtyjlee":117,"leezhengjing":2}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * Jackson-friendly version of {@link Group}.","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"class JsonAdaptedGroup {","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    private final String groupName;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given {@code groupName}.","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    public JsonAdaptedGroup(String groupName) {","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        groupName \u003d source.groupName;","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    @JsonValue","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    public String getGroupName() {","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        return groupName;","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"     * Converts this Jackson-friendly adapted group object into the model\u0027s {@code Group} object.","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted group.","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"    public Group toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"        if (!Group.isValidGroupName(groupName)) {","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"            throw new IllegalValueException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        return new Group(groupName);","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"DistractedCat":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":" * Jackson-friendly version of {@link Name}.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"public class JsonAdaptedName {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    private final String name;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given {@code groupName}.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"    public JsonAdaptedName(String name) {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    public JsonAdaptedName(Name source) {","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        name \u003d source.fullName;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    @JsonValue","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    public String getName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        return name;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"     * Converts this Jackson-friendly adapted group object into the model\u0027s {@code Group} object.","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted group.","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    public Name toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        return new Name(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"DistractedCat":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"leezhengjing"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"    private final String birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"            @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"            @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups) {","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"        if (groups !\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"            this.groups.addAll(groups);","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"        phone \u003d source.hasPhone() ? source.getPhone().toString() : \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"        email \u003d source.hasEmail() ? source.getEmail().toString() : \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"        address \u003d source.hasAddress() ? source.getAddress().toString() : \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"        birthday \u003d source.hasBirthday() ? source.getBirthday().toString() : \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"        groups.addAll(source.getGroups().stream()","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"                .map(JsonAdaptedGroup::new)","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"        final List\u003cGroup\u003e personGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"        for (JsonAdaptedGroup group : groups) {","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"            personGroups.add(group.toModelType());","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"nicleongyj"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"nicleongyj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"nicleongyj"},"content":"                    Birthday.class.getSimpleName()));","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"nicleongyj"},"content":"        if (!Birthday.isValidBirthday(birthday)) {","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"nicleongyj"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":117,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"nicleongyj"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"        final Set\u003cGroup\u003e modelGroups \u003d new HashSet\u003c\u003e(personGroups);","lastModifiedDate":"2023-10-08"},{"lineNumber":121,"author":{"gitId":"leezhengjing"},"content":"        return new Person(modelName, Optional.of(modelPhone), Optional.of(modelEmail), Optional.of(modelAddress),","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"leezhengjing"},"content":"                Optional.of(modelBirthday), modelGroups);","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"DistractedCat":11,"nicleongyj":12,"leezhengjing":7,"-":94}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and meetings.","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"     * Extracted from the database","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"        this.events.addAll(events);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Kurtyjlee"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Kurtyjlee"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"DistractedCat":4,"Kurtyjlee":11,"-":58}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ken-Lai"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Ken-Lai"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"Ken-Lai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Ken-Lai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Ken-Lai"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Ken-Lai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Ken-Lai"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Ken-Lai"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Ken-Lai"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Ken-Lai"},"content":" * An UI component that displays information of an {@code Event}.","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Ken-Lai"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Ken-Lai"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Ken-Lai"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Ken-Lai"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Ken-Lai"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Ken-Lai"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Ken-Lai"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Ken-Lai"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Ken-Lai"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Ken-Lai"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Ken-Lai"},"content":"    public final Event event;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Ken-Lai"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Ken-Lai"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Ken-Lai"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Ken-Lai"},"content":"    private Label name;","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Ken-Lai"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Ken-Lai"},"content":"    private Label id;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Ken-Lai"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Ken-Lai"},"content":"    private Label date;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Ken-Lai"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Ken-Lai"},"content":"    private Label timeDuration;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Ken-Lai"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Ken-Lai"},"content":"    private FlowPane names;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"    private FlowPane groups;","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Ken-Lai"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Ken-Lai"},"content":"     * Creates an {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Ken-Lai"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"    public EventCard(ObservableList\u003cPerson\u003e personList, Event event, int displayedIndex) {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"Ken-Lai"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Ken-Lai"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Ken-Lai"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Ken-Lai"},"content":"        name.setText(event.getName().name);","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Ken-Lai"},"content":"        date.setText(event.getStartDate().forDisplay());","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"        if (event.hasStartTime() \u0026\u0026 event.hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Ken-Lai"},"content":"            timeDuration.setText(String.format(\"%s - %s\",","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Ken-Lai"},"content":"                    event.getStartTime().forDisplay(),","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Ken-Lai"},"content":"                    event.getEndTime().forDisplay()));","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        } else if (event.hasStartTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"            timeDuration.setText(String.format(\"Start: %s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"                    event.getStartTime().forDisplay()));","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        } else if (event.hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"            timeDuration.setText(String.format(\"End: %s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"                    event.getEndTime().forDisplay()));","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"            timeDuration.setText(\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Ken-Lai"},"content":"        event.getNames().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Ken-Lai"},"content":"                .sorted(Comparator.comparing(name -\u003e name.fullName))","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Ken-Lai"},"content":"                .forEach(name -\u003e names.getChildren().add(new Label(name.fullName)));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Kurtyjlee"},"content":"        // groups","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"Kurtyjlee"},"content":"        event.getGroups().stream().sorted(Comparator.comparing(Group::getGroupName))","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"Kurtyjlee"},"content":"                .forEach(group -\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"Kurtyjlee"},"content":"                    groups.getChildren().add(new Label(group.getGroupName()));","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"                    personList.forEach(person -\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"                        if (person.getGroups().contains(group)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"Kurtyjlee"},"content":"                            Label newLabel \u003d new Label(person.getName().toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"Kurtyjlee"},"content":"                            newLabel.setId(\"groupPersonName\");","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"Kurtyjlee"},"content":"                            groups.getChildren().add(newLabel);","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"Kurtyjlee"},"content":"                        }","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"Kurtyjlee"},"content":"                    });","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"Kurtyjlee"},"content":"                });","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"Ken-Lai"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"Ken-Lai"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"DistractedCat":12,"Ken-Lai":57,"Kurtyjlee":18}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ken-Lai"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Ken-Lai"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Ken-Lai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Ken-Lai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Ken-Lai"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Ken-Lai"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Ken-Lai"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Ken-Lai"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Ken-Lai"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Ken-Lai"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Ken-Lai"},"content":" * Panel containing the list of events.","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Ken-Lai"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Ken-Lai"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Ken-Lai"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Ken-Lai"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Ken-Lai"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Ken-Lai"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"    private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"Ken-Lai"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Ken-Lai"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Ken-Lai"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList, ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"Ken-Lai"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"Ken-Lai"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Ken-Lai"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Ken-Lai"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Ken-Lai"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Ken-Lai"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Ken-Lai"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Ken-Lai"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Ken-Lai"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Ken-Lai"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Ken-Lai"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Ken-Lai"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Ken-Lai"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Ken-Lai"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"            } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"                if (event.isOverDue()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"                    setGraphic(new ExpiredEventCard(personList, event, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Ken-Lai"},"content":"                } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"                    setGraphic(new EventCard(personList, event, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"Ken-Lai"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Ken-Lai"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Ken-Lai"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Ken-Lai"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"DistractedCat":4,"Ken-Lai":47,"Kurtyjlee":6}},{"path":"src/main/java/seedu/address/ui/ExpiredEventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":" * UI component that displays information of an expired event.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"public class ExpiredEventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    private static final String FXML \u003d \"ExpiredEventCard.fxml\";","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"    public final Event event;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    private Label name;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"    private Label id;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"    private Label date;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    private Label timeDuration;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    private FlowPane names;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    private FlowPane groups;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"     * Creates a {@code ExpiredEventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"     * @param event","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"     * @param displayedIndex","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    public ExpiredEventCard(ObservableList\u003cPerson\u003e personList, Event event, int displayedIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        super(FXML);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"        name.setText(event.getName().name);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"        date.setText(event.getStartDate().forDisplay());","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        if (event.hasStartTime() \u0026\u0026 event.hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"            timeDuration.setText(String.format(\"%s - %s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"                    event.getStartTime().forDisplay(),","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"                    event.getEndTime().forDisplay()));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        } else if (event.hasStartTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"            timeDuration.setText(String.format(\"Start: %s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"                    event.getStartTime().forDisplay()));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"        } else if (event.hasEndTime()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"            timeDuration.setText(String.format(\"End: %s\",","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"                    event.getEndTime().forDisplay()));","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        } else {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"            timeDuration.setText(\"\");","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        event.getNames().stream()","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"                .sorted(Comparator.comparing(name -\u003e name.fullName))","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"                .forEach(name -\u003e names.getChildren().add(new Label(name.fullName)));","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"        // groups","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        event.getGroups().stream().sorted(Comparator.comparing(Group::getGroupName))","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"                .forEach(group -\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"                    groups.getChildren().add(new Label(group.getGroupName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"                    personList.forEach(person -\u003e {","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"                        if (person.getGroups().contains(group)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"                            Label newLabel \u003d new Label(person.getName().toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"                            newLabel.setId(\"groupPersonName\");","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"                            groups.getChildren().add(newLabel);","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"                        }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"                    });","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"                });","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"DistractedCat":82}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Ken-Lai"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t12-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ken-Lai":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"Ken-Lai"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"Ken-Lai"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Ken-Lai"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"Kurtyjlee"},"content":"        ObservableList\u003cPerson\u003e personList \u003d logic.getFilteredPersonList();","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"Kurtyjlee"},"content":"        personListPanel \u003d new PersonListPanel(personList);","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"Kurtyjlee"},"content":"        eventListPanel \u003d new EventListPanel(logic.getEventList(), personList);","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"Ken-Lai"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Ken-Lai":6,"Kurtyjlee":6,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"    private FlowPane phone;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"leezhengjing"},"content":"    private FlowPane address;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"leezhengjing"},"content":"    private FlowPane email;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"    private FlowPane birthday;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nicleongyj"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    private FlowPane groups;","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"leezhengjing"},"content":"        if (!person.getPhone().toString().isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"leezhengjing"},"content":"            phone.getChildren().add(new Label(person.getPhone().toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"leezhengjing"},"content":"        if (!person.getAddress().toString().isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"leezhengjing"},"content":"            address.getChildren().add(new Label(person.getAddress().toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"leezhengjing"},"content":"        if (!person.getEmail().toString().isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"leezhengjing"},"content":"            email.getChildren().add(new Label(person.getEmail().toString()));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"leezhengjing"},"content":"        if (!person.getBirthday().toString().isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"leezhengjing"},"content":"            birthday.getChildren().add(new Label(person.getBirthday().toString()));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        person.getGroups().stream()","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"                .sorted(Comparator.comparing(group -\u003e group.groupName))","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"                .forEach(group -\u003e groups.getChildren().add(new Label(group.groupName)));","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"DistractedCat":4,"nicleongyj":1,"leezhengjing":16,"-":49}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nicleongyj":1,"-":49}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        saveLocationStatus.setText(\"Manage Your Life.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DistractedCat":1,"-":26}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/FumbleLog.png\";","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"DistractedCat":1,"-":87}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"nicleongyj"},"content":".list-cell:filled:highlighted {","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"nicleongyj"},"content":"    -fx-background-color: #008000;","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"leezhengjing"},"content":".info-flow-pane {","lastModifiedDate":"2023-10-25"},{"lineNumber":315,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":316,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":317,"author":{"gitId":"leezhengjing"},"content":".info-flow-pane .label {","lastModifiedDate":"2023-10-25"},{"lineNumber":318,"author":{"gitId":"leezhengjing"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"leezhengjing"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-25"},{"lineNumber":320,"author":{"gitId":"leezhengjing"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":321,"author":{"gitId":"leezhengjing"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"Ken-Lai"},"content":"#groups {","lastModifiedDate":"2023-10-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"Ken-Lai"},"content":"#groups .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":366,"author":{"gitId":"Ken-Lai"},"content":"#names {","lastModifiedDate":"2023-10-18"},{"lineNumber":367,"author":{"gitId":"Ken-Lai"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-18"},{"lineNumber":368,"author":{"gitId":"Ken-Lai"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":369,"author":{"gitId":"Ken-Lai"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":370,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":371,"author":{"gitId":"Ken-Lai"},"content":"#names .label{","lastModifiedDate":"2023-10-18"},{"lineNumber":372,"author":{"gitId":"Ken-Lai"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":373,"author":{"gitId":"Kurtyjlee"},"content":"    -fx-background-color: #00660f !important;","lastModifiedDate":"2023-10-24"},{"lineNumber":374,"author":{"gitId":"Kurtyjlee"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-24"},{"lineNumber":375,"author":{"gitId":"Kurtyjlee"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-24"},{"lineNumber":376,"author":{"gitId":"Kurtyjlee"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-24"},{"lineNumber":377,"author":{"gitId":"Kurtyjlee"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-24"},{"lineNumber":378,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":379,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":380,"author":{"gitId":"Kurtyjlee"},"content":"#groupPersonName {","lastModifiedDate":"2023-10-24"},{"lineNumber":381,"author":{"gitId":"Kurtyjlee"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-24"},{"lineNumber":382,"author":{"gitId":"Kurtyjlee"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-24"},{"lineNumber":383,"author":{"gitId":"Kurtyjlee"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-24"},{"lineNumber":384,"author":{"gitId":"Kurtyjlee"},"content":"    -fx-background-color: #00660f !important;","lastModifiedDate":"2023-10-24"},{"lineNumber":385,"author":{"gitId":"Ken-Lai"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":386,"author":{"gitId":"Ken-Lai"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":387,"author":{"gitId":"Ken-Lai"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":388,"author":{"gitId":"Ken-Lai"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-18"},{"lineNumber":389,"author":{"gitId":"Ken-Lai"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"DistractedCat":1,"Ken-Lai":15,"nicleongyj":4,"leezhengjing":8,"Kurtyjlee":12,"-":349}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ken-Lai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Ken-Lai"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Ken-Lai"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Ken-Lai"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Ken-Lai"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Ken-Lai"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Ken-Lai"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Ken-Lai"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Ken-Lai"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Ken-Lai"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Ken-Lai"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Ken-Lai"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Ken-Lai"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Ken-Lai"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Ken-Lai"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Ken-Lai"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Ken-Lai"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Ken-Lai"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Ken-Lai"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Ken-Lai"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Ken-Lai"},"content":"      \u003cLabel fx:id\u003d\"timeDuration\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timeDuration\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Ken-Lai"},"content":"      \u003cFlowPane fx:id\u003d\"names\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"      \u003cFlowPane fx:id\u003d\"groups\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"Ken-Lai"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Ken-Lai"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Ken-Lai"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Ken-Lai":35,"Kurtyjlee":1}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ken-Lai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Ken-Lai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Ken-Lai"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Ken-Lai"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Ken-Lai"},"content":"  \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Ken-Lai"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Ken-Lai":8}},{"path":"src/main/resources/view/ExpiredEventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" style\u003d\"-fx-background-color: #fc3542; -fx-blend-mode: lighten; -fx-border-width: 1;\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"            \u003cLabel fx:id\u003d\"timeDuration\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timeDuration\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"            \u003cFlowPane fx:id\u003d\"names\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"            \u003cFlowPane fx:id\u003d\"groups\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"DistractedCat":37}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"FumbleLog\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"    \u003cImage url\u003d\"@/images/FumbleLog.png\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" prefWidth\u003d\"553.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"Ken-Lai"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150\" minHeight\u003d\"100\" prefHeight\u003d\"150\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"Ken-Lai"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"Ken-Lai"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Ken-Lai"},"content":"          \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"162.0\" prefHeight\u003d\"200.0\" prefWidth\u003d\"221.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":47,"author":{"gitId":"Ken-Lai"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"Ken-Lai"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" prefHeight\u003d\"178.0\" prefWidth\u003d\"195.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"Ken-Lai"},"content":"          \u003cVBox fx:id\u003d\"eventList\" prefHeight\u003d\"200.0\" prefWidth\u003d\"332.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Ken-Lai"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Ken-Lai"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Ken-Lai"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Ken-Lai"},"content":"            \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" prefHeight\u003d\"203.0\" prefWidth\u003d\"330.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Ken-Lai"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Ken-Lai"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"DistractedCat":9,"Ken-Lai":13,"nicleongyj":1,"Kurtyjlee":1,"-":40}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"55\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"      \u003cFlowPane fx:id\u003d\"groups\"/\u003e","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"      \u003cFlowPane fx:id\u003d\"phone\" styleClass\u003d\"info-flow-pane\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"leezhengjing"},"content":"      \u003cFlowPane fx:id\u003d\"address\" styleClass\u003d\"info-flow-pane\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"leezhengjing"},"content":"      \u003cFlowPane fx:id\u003d\"email\" styleClass\u003d\"info-flow-pane\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"      \u003cFlowPane fx:id\u003d\"birthday\" styleClass\u003d\"info-flow-pane\"/\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"DistractedCat":1,"leezhengjing":5,"-":31}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"        assertNotNull(AppUtil.getImage(\"/images/FumbleLog.png\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"DistractedCat":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"import seedu.address.logic.commands.ListPersonsCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"leezhengjing"},"content":"        String listCommand \u003d ListPersonsCommand.COMMAND_WORD;","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"leezhengjing"},"content":"        assertCommandSuccess(listCommand, ListPersonsCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"nicleongyj"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withGroups().build();","lastModifiedDate":"2023-10-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"DistractedCat":1,"nicleongyj":2,"leezhengjing":3,"-":170}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"        System.out.println(validPerson);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(List.of(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"nicleongyj"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"nicleongyj"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicates) {","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"nicleongyj"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"        public void addEvent(Event toAdd) {","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"DistractedCat"},"content":"        public Set\u003cName\u003e findInvalidNames(Set\u003cName\u003e names) {","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"DistractedCat"},"content":"        public void updateAssignedPersons(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"DistractedCat"},"content":"        public void updateAssignedPersons(Person personToEdit) {","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"Kurtyjlee"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"Kurtyjlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":195,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":196,"author":{"gitId":"Ken-Lai"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"Kurtyjlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":199,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"Kurtyjlee"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"Kurtyjlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"Kurtyjlee"},"content":"        public Set\u003cGroup\u003e findInvalidGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"Kurtyjlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"Kurtyjlee"},"content":"        public Set\u003cGroup\u003e getEmptyGroups(Person person) {","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"Kurtyjlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":215,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"Kurtyjlee"},"content":"        public void removeEmptyGroups(Set\u003cGroup\u003e emptyGroups) {","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"Kurtyjlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":218,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":220,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"Kurtyjlee"},"content":"        public void updateGroups() {","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"Kurtyjlee"},"content":"            return;","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":224,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"Kurtyjlee"},"content":"        public void updateFilteredEventListOnly(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"Kurtyjlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"DistractedCat":24,"Ken-Lai":1,"nicleongyj":5,"Kurtyjlee":41,"-":201}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Meeting;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"        ModelStubAcceptingEvent modelStub \u003d new ModelStubAcceptingEvent();","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"        Meeting validEvent \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"                .withEventDate(\"2025-11-11\")","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"                .withEventStartTime(\"0000\")","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"                .withEventEndTime(\"2359\")","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"                .withPerson(\"Alice Pauline\")","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        CommandResult commandResult \u003d new AddEventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_SUCCESS, Messages.formatEvent(validEvent)),","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(List.of(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"    public void execute_eventSuppliedWithInvalidPersonNames() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"        ModelStubAcceptingEvent modelStub \u003d new ModelStubAcceptingEvent();","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        Meeting invalidEvent \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"                .withEventDate(\"2025-11-11\")","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"                .withEventStartTime(\"0000\")","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"                .withEventEndTime(\"2359\")","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"                .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(CommandException.class, String.format(Messages.MESSAGE_INVALID_PERSON,","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"                listInvalidNames(modelStub.findInvalidNames(invalidEvent.getNames()))), () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"                new AddEventCommand(invalidEvent).execute(modelStub));","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"    public void execute_eventSuppliedWithInvalidGroupNames() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"        ModelStubAcceptingEvent modelStub \u003d new ModelStubAcceptingEvent();","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        Meeting invalidEvent \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"                .withEventDate(\"2025-11-11\")","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"                .withEventStartTime(\"0000\")","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"                .withEventEndTime(\"2359\")","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"                .withGroups(\"Team2\", \"Team3\")","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(CommandException.class, String.format(Messages.MESSAGE_INVALID_GROUP,","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"                listInvalidGroups(modelStub.findInvalidGroups(invalidEvent.getGroups()))), () -\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"                new AddEventCommand(invalidEvent).execute(modelStub));","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"    public void execute_eventSuppliedWithoutOptionalFields() throws Exception {","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"        ModelStubAcceptingEvent modelStub \u003d new ModelStubAcceptingEvent();","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"        Meeting validEvent \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"                .withEventDate(\"2025-11-11\")","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"                .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"        CommandResult commandResult \u003d new AddEventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_SUCCESS, Messages.formatEvent(validEvent)),","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(List.of(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"    private String listInvalidNames(Set\u003cName\u003e invalidNames) {","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"        for (Name name : invalidNames) {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"            builder.append(name.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\", \");","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"        builder.delete(builder.length() - 2, builder.length()); //removes the last comma","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"    private String listInvalidGroups(Set\u003cGroup\u003e invalidGroups) {","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"        for (Group group : invalidGroups) {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"            builder.append(group.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"            builder.append(\", \");","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"        builder.delete(builder.length() - 2, builder.length()); //removes the last comma","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"DistractedCat"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"DistractedCat"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"DistractedCat"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-25"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"DistractedCat"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"DistractedCat"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"DistractedCat"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"DistractedCat"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":187,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"DistractedCat"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicates) {","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"DistractedCat"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"DistractedCat"},"content":"        public void addEvent(Event toAdd) {","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"DistractedCat"},"content":"        public Set\u003cName\u003e findInvalidNames(Set\u003cName\u003e names) {","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"DistractedCat"},"content":"        public void updateAssignedPersons(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"DistractedCat"},"content":"        public void updateAssignedPersons(Person personToEdit) {","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":223,"author":{"gitId":"DistractedCat"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":227,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":228,"author":{"gitId":"DistractedCat"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":230,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":231,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":232,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"DistractedCat"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-10-25"},{"lineNumber":234,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":235,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":238,"author":{"gitId":"DistractedCat"},"content":"        public Set\u003cGroup\u003e findInvalidGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-25"},{"lineNumber":239,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":240,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":241,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":242,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":243,"author":{"gitId":"DistractedCat"},"content":"        public Set\u003cGroup\u003e getEmptyGroups(Person person) {","lastModifiedDate":"2023-10-25"},{"lineNumber":244,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":245,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":246,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":247,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":248,"author":{"gitId":"DistractedCat"},"content":"        public void removeEmptyGroups(Set\u003cGroup\u003e emptyGroups) {","lastModifiedDate":"2023-10-25"},{"lineNumber":249,"author":{"gitId":"DistractedCat"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":250,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":251,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":252,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":253,"author":{"gitId":"DistractedCat"},"content":"        public void updateGroups() {","lastModifiedDate":"2023-10-25"},{"lineNumber":254,"author":{"gitId":"DistractedCat"},"content":"            return;","lastModifiedDate":"2023-10-25"},{"lineNumber":255,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"Kurtyjlee"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"Kurtyjlee"},"content":"        public void updateFilteredEventListOnly(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"Kurtyjlee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":264,"author":{"gitId":"DistractedCat"},"content":"     * A Model Stub that contains a single event.","lastModifiedDate":"2023-10-25"},{"lineNumber":265,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":266,"author":{"gitId":"DistractedCat"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2023-10-25"},{"lineNumber":267,"author":{"gitId":"DistractedCat"},"content":"        private final Event event;","lastModifiedDate":"2023-10-25"},{"lineNumber":268,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"DistractedCat"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2023-10-25"},{"lineNumber":270,"author":{"gitId":"DistractedCat"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-10-25"},{"lineNumber":271,"author":{"gitId":"DistractedCat"},"content":"            this.event \u003d event;","lastModifiedDate":"2023-10-25"},{"lineNumber":272,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":273,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":274,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"DistractedCat"},"content":"    private class ModelStubAcceptingEvent extends ModelStub {","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"DistractedCat"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"DistractedCat"},"content":"        final Name personName \u003d new Name(\"Alice Pauline\");","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"DistractedCat"},"content":"        final Group groupName \u003d new Group(\"Team2\");","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"DistractedCat"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"DistractedCat"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"DistractedCat"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"DistractedCat"},"content":"        public Set\u003cName\u003e findInvalidNames(Set\u003cName\u003e names) {","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"DistractedCat"},"content":"            Set\u003cName\u003e invalidNames \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"DistractedCat"},"content":"            for (Name name: names) {","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"DistractedCat"},"content":"                if (!name.equals(personName)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":293,"author":{"gitId":"DistractedCat"},"content":"                    invalidNames.add(name);","lastModifiedDate":"2023-10-25"},{"lineNumber":294,"author":{"gitId":"DistractedCat"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":295,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":296,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":297,"author":{"gitId":"DistractedCat"},"content":"            return invalidNames;","lastModifiedDate":"2023-10-25"},{"lineNumber":298,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":299,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":300,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":301,"author":{"gitId":"DistractedCat"},"content":"        public Set\u003cGroup\u003e findInvalidGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-10-25"},{"lineNumber":302,"author":{"gitId":"DistractedCat"},"content":"            Set\u003cGroup\u003e invalidGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":303,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":304,"author":{"gitId":"DistractedCat"},"content":"            for (Group group: groups) {","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"DistractedCat"},"content":"                if (!group.equals(new Group(\"Team2\"))) {","lastModifiedDate":"2023-10-25"},{"lineNumber":306,"author":{"gitId":"DistractedCat"},"content":"                    invalidGroups.add(group);","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"DistractedCat"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":308,"author":{"gitId":"DistractedCat"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":310,"author":{"gitId":"DistractedCat"},"content":"            return invalidGroups;","lastModifiedDate":"2023-10-25"},{"lineNumber":311,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":312,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":313,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"DistractedCat":308,"Kurtyjlee":5}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"    // For persons","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"2001-12-20\";","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"2001-12-21\";","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    public static final String VALID_GROUP_HUSBAND \u003d \"husband\";","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"    public static final String VALID_GROUP_FRIEND \u003d \"friend\";","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"    // for events","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String VALID_EVENT_NAME \u003d \"Meeting1\";","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"nicleongyj"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"    public static final String GROUP_DESC_FRIEND \u003d \" \" + PREFIX_GROUP + VALID_GROUP_FRIEND;","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"    public static final String GROUP_DESC_HUSBAND \u003d \" \" + PREFIX_GROUP + VALID_GROUP_HUSBAND;","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"leezhengjing"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string is allowed for addresses","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"nicleongyj"},"content":"    public static final String INVALID_BIRTHDAY_DESC \u003d \" \" + PREFIX_BIRTHDAY + \"2001-12-322\"; // invalid date","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"    public static final String INVALID_GROUP_DESC \u003d \" \" + PREFIX_GROUP + \"hubby*\"; // \u0027*\u0027 not allowed in groups","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"nicleongyj"},"content":"                .withBirthday(VALID_BIRTHDAY_AMY).withGroups(VALID_GROUP_FRIEND).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"                .withBirthday(VALID_BIRTHDAY_BOB).withGroups(VALID_GROUP_HUSBAND, VALID_GROUP_FRIEND).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"DistractedCat"},"content":"     * Updates the model\u0027s event list to show only the event at the given index.","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"    public static void showEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"DistractedCat"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getEventList().size());","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"DistractedCat"},"content":"        Event event \u003d model.getEventList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"DistractedCat"},"content":"        final String[] splitName \u003d event.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"DistractedCat"},"content":"        model.updateFilteredEventList(new EventNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"DistractedCat":19,"nicleongyj":8,"Kurtyjlee":3,"leezhengjing":1,"-":120}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code DeleteEventCommand}.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"        Event eventToDelete \u003d model.getEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        String expectedMessage \u003d String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"                Messages.formatEvent(eventToDelete));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getEventList().size() + 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        assertCommandFailure(deleteEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        Event eventToDelete \u003d model.getEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"        String expectedMessage \u003d String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"                Messages.formatEvent(eventToDelete));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        model.updateFilteredEventList(e -\u003e false);","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        assertTrue(model.getEventList().isEmpty());","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"DistractedCat":62,"Kurtyjlee":6}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"                .withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"                .withPhone(VALID_PHONE_BOB).withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_personFilteredList_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"Kurtyjlee"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"DistractedCat":3,"Kurtyjlee":3,"-":179}},{"path":"src/test/java/seedu/address/logic/commands/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_EVENT_OUT_OF_BOUNDS;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_TYPICAL_GROUP_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_TYPICAL_PERSON_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"public class EditEventCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditEventCommand(null, null));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_allSpecifiedFieldsUnfilteredList_success() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(\"Carl Kurz\", \"Elle Meyer\")","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(\"friends\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"                .format(EditEventCommand.MESSAGE_EDIT_SUCCESS, Messages.formatEvent(editedEvent));","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"        expectedModel.setEvent(model.getEventList().get(0), editedEvent);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"        CommandResult result \u003d editEventCommand.execute(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(new CommandResult(expectedMessage), result);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_someFieldsUnfilteredList_success() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Kurtyjlee"},"content":"        Event expectedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(model.getEventList().get(0).getNames())","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(model.getEventList().get(0).getGroups()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Kurtyjlee"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Kurtyjlee"},"content":"                .format(EditEventCommand.MESSAGE_EDIT_SUCCESS, Messages.formatEvent(expectedEvent));","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Kurtyjlee"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Kurtyjlee"},"content":"        expectedModel.setEvent(model.getEventList().get(0), editedEvent);","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Kurtyjlee"},"content":"        CommandResult result \u003d editEventCommand.execute(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(new CommandResult(expectedMessage), result);","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_failure() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, new EditEventDescriptor());","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d model.getEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Kurtyjlee"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"Kurtyjlee"},"content":"                .format(EditEventCommand.MESSAGE_EDIT_SUCCESS, Messages.formatEvent(editedEvent));","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"Kurtyjlee"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"Kurtyjlee"},"content":"        CommandResult result \u003d editEventCommand.execute(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(new CommandResult(expectedMessage), result);","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_invalidIndex() {","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_EVENT_OUT_OF_BOUNDS, new EditEventDescriptor());","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(CommandException.class, () -\u003e editEventCommand.execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_personsGroupsOverlap_success() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(\"friends\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"Kurtyjlee"},"content":"        Event expectedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(model.getEventList().get(0).getNames())","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(\"friends\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"Kurtyjlee"},"content":"        String expectedMessage \u003d String","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"Kurtyjlee"},"content":"                .format(EditEventCommand.MESSAGE_EDIT_SUCCESS, Messages.formatEvent(expectedEvent));","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"Kurtyjlee"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"Kurtyjlee"},"content":"        expectedModel.setEvent(model.getEventList().get(0), expectedEvent);","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"        CommandResult result \u003d editEventCommand.execute(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(new CommandResult(expectedMessage), result);","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_assignNames_failure() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1501\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setPersonNames(new HashSet\u003c\u003e(Set.of(new Name(\"Alice Pauline incorrect\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_TYPICAL_PERSON_EVENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(CommandException.class, () -\u003e editEventCommand.execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_unassignNames_success() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"Kurtyjlee"},"content":"        Event expectedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(\"Benson Meier\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setUnassignPersons(new HashSet\u003c\u003e(Set.of(new Name(\"Alice Pauline\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_TYPICAL_PERSON_EVENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"Kurtyjlee"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"Kurtyjlee"},"content":"        expectedModel.setEvent(model.getEventList().get(INDEX_TYPICAL_PERSON_EVENT.getZeroBased()), expectedEvent);","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"Kurtyjlee"},"content":"        CommandResult result \u003d editEventCommand.execute(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_unassignNames_failure() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor1 \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor1.setUnassignPersons(new HashSet\u003c\u003e(Set.of(new Name(\"Alice Pauline Incorrect\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_TYPICAL_PERSON_EVENT, descriptor1);","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(CommandException.class, () -\u003e editEventCommand.execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor2 \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor2.setUnassignPersons(new HashSet\u003c\u003e(Set.of(new Name(\"Carl Kurz\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand2 \u003d new EditEventCommand(INDEX_TYPICAL_PERSON_EVENT, descriptor2);","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(CommandException.class, () -\u003e editEventCommand2.execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_assignGroups_failure() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1401\")","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":205,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setGroups(new HashSet\u003c\u003e(Set.of(new Group(\"friendsIncorrect\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_TYPICAL_GROUP_EVENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(CommandException.class, () -\u003e editEventCommand.execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_unassignGroups_success() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":215,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":217,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":218,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"Kurtyjlee"},"content":"        Event expectedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setUnassignGroups(new HashSet\u003c\u003e(Set.of(new Group(\"owesMoney\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_TYPICAL_GROUP_EVENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"Kurtyjlee"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"Kurtyjlee"},"content":"        expectedModel.setEvent(model.getEventList().get(INDEX_TYPICAL_GROUP_EVENT.getZeroBased()), expectedEvent);","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"Kurtyjlee"},"content":"        CommandResult result \u003d editEventCommand.execute(model);","lastModifiedDate":"2023-11-01"},{"lineNumber":233,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2023-11-01"},{"lineNumber":234,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":235,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"Kurtyjlee"},"content":"    public void execute_unassignGroups_failure() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setUnassignGroups(new HashSet\u003c\u003e(Set.of(new Group(\"owesMoneyIncorrect\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_TYPICAL_GROUP_EVENT, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(CommandException.class, () -\u003e editEventCommand.execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":249,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"Kurtyjlee"},"content":"    public void equals_success() throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-11-01"},{"lineNumber":256,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":257,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":258,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor1 \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor2 \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":260,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand1 \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor1);","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand2 \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor2);","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(editEventCommand1.equals(editEventCommand2));","lastModifiedDate":"2023-11-01"},{"lineNumber":264,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(editEventCommand1.equals(editEventCommand1));","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(editEventCommand1.equals(descriptor1));","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"Kurtyjlee"},"content":"    public void equals_failure() throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":270,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent1 \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":271,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":272,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-11-01"},{"lineNumber":274,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-11-01"},{"lineNumber":275,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":276,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent2 \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":279,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":280,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1501\")","lastModifiedDate":"2023-11-01"},{"lineNumber":281,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-11-01"},{"lineNumber":282,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":283,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":284,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor1 \u003d new EditEventDescriptorBuilder(editedEvent1).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":285,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor2 \u003d new EditEventDescriptorBuilder(editedEvent2).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":286,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand1 \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor1);","lastModifiedDate":"2023-11-01"},{"lineNumber":287,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand editEventCommand2 \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor2);","lastModifiedDate":"2023-11-01"},{"lineNumber":288,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":289,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(editEventCommand1.equals(editEventCommand2));","lastModifiedDate":"2023-11-01"},{"lineNumber":290,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":291,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":292,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":293,"author":{"gitId":"Kurtyjlee"},"content":"    public void descriptor_toString() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":294,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent1 \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":295,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":296,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":297,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-11-01"},{"lineNumber":298,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-11-01"},{"lineNumber":299,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":300,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent1).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":301,"author":{"gitId":"Kurtyjlee"},"content":"        String expected \u003d EditEventDescriptor.class.getCanonicalName() + \"{name\u003dTP MEETING TEST, \"","lastModifiedDate":"2023-11-01"},{"lineNumber":302,"author":{"gitId":"Kurtyjlee"},"content":"                + \"date\u003d2050-10-10, \" + \"start time\u003d1400, \" + \"end time\u003d1500, \"","lastModifiedDate":"2023-11-01"},{"lineNumber":303,"author":{"gitId":"Kurtyjlee"},"content":"                + \"assign persons\u003d[Alice Pauline, Benson Meier], \" + \"unassign persons\u003dnull, \"","lastModifiedDate":"2023-11-01"},{"lineNumber":304,"author":{"gitId":"Kurtyjlee"},"content":"                + \"assign groups\u003d[[friends]], \" + \"unassign groups\u003dnull}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":305,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(expected, descriptor.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":306,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":307,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":308,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":309,"author":{"gitId":"Kurtyjlee"},"content":"    public void descriptor_isAnyFieldEdited() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":310,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":311,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(descriptor.isAnyFieldEdited());","lastModifiedDate":"2023-11-01"},{"lineNumber":312,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":313,"author":{"gitId":"Kurtyjlee"},"content":"        Event editedEvent1 \u003d new MeetingBuilder()","lastModifiedDate":"2023-11-01"},{"lineNumber":314,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventDate(\"2050-10-10\")","lastModifiedDate":"2023-11-01"},{"lineNumber":315,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventStartTime(\"1400\")","lastModifiedDate":"2023-11-01"},{"lineNumber":316,"author":{"gitId":"Kurtyjlee"},"content":"                .withEventEndTime(\"1500\")","lastModifiedDate":"2023-11-01"},{"lineNumber":317,"author":{"gitId":"Kurtyjlee"},"content":"                .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-11-01"},{"lineNumber":318,"author":{"gitId":"Kurtyjlee"},"content":"                .withGroups(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":319,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventDescriptor descriptorEdited \u003d new EditEventDescriptorBuilder(editedEvent1).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":320,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(descriptorEdited.isAnyFieldEdited());","lastModifiedDate":"2023-11-01"},{"lineNumber":321,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":322,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Kurtyjlee":322}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        // different groups -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"nicleongyj"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", birthday\u003d\"","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"nicleongyj"},"content":"                + editPersonDescriptor.getBirthday().orElse(null) + \", groups\u003d\"","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"                + editPersonDescriptor.getGroups().orElse(null) + \"}\";","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"DistractedCat":4,"nicleongyj":2,"-":66}},{"path":"src/test/java/seedu/address/logic/commands/ListPersonsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"public class ListPersonsCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"leezhengjing"},"content":"        assertCommandSuccess(new ListPersonsCommand(), model, ListPersonsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"        assertCommandSuccess(new ListPersonsCommand(), model, ListPersonsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"leezhengjing":3,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/RemindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_AND_EVENTS_SHOWN_OVERVIEW;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_3_DAYS_AFTER_TODAY;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_6_DAYS_AFTER_TODAY;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.testutil.TypicalPersons.JANE;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.testutil.TypicalPersons.JOHN;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.testutil.TypicalPersons.getBirthdayAddressBook;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.BirthdayWithinDaysPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.EventWithinDaysPredicate;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"class RemindCommandTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"    private Model model \u003d new ModelManager(getBirthdayAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"    private Model expectedModel \u003d new ModelManager(getBirthdayAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"        int firstDays \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"        int secondDays \u003d 2;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate firstBirthdayPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"                new BirthdayWithinDaysPredicate(firstDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate secondBirthdayPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"                new BirthdayWithinDaysPredicate(secondDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate firstEventPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"                new EventWithinDaysPredicate(firstDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate secondEventPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"                new EventWithinDaysPredicate(secondDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"        RemindCommand remindFirstCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nicleongyj"},"content":"                new RemindCommand(firstBirthdayPredicate, firstEventPredicate, firstDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nicleongyj"},"content":"        RemindCommand remindSecondCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"nicleongyj"},"content":"                new RemindCommand(secondBirthdayPredicate, secondEventPredicate, secondDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"        //same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(remindFirstCommand.equals(remindFirstCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"nicleongyj"},"content":"        //same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"nicleongyj"},"content":"        RemindCommand remindFirstCommandCopy \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"nicleongyj"},"content":"                new RemindCommand(firstBirthdayPredicate, firstEventPredicate, firstDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(remindFirstCommand.equals(remindFirstCommandCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"nicleongyj"},"content":"        //different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(remindFirstCommand.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"nicleongyj"},"content":"        //null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(remindFirstCommand.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"nicleongyj"},"content":"        //different person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(remindFirstCommand.equals(remindSecondCommand));","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"nicleongyj"},"content":"    public void execute_notWithinDays_noPersonOrEventFound() {","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"nicleongyj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_AND_EVENTS_SHOWN_OVERVIEW, 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate predicate \u003d new BirthdayWithinDaysPredicate(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate eventPredicate \u003d new EventWithinDaysPredicate(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"nicleongyj"},"content":"        RemindCommand command \u003d new RemindCommand(predicate, eventPredicate, 1);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"nicleongyj"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"nicleongyj"},"content":"        expectedModel.updateFilteredEventList(eventPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"nicleongyj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"nicleongyj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"nicleongyj"},"content":"        assertEquals(Collections.emptyList(), model.getEventList());","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"nicleongyj"},"content":"    public void execute_withinDays_personAndEventFound() {","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"nicleongyj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_AND_EVENTS_SHOWN_OVERVIEW, 4);","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate predicate \u003d new BirthdayWithinDaysPredicate(4);","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate eventWithinDaysPredicate \u003d new EventWithinDaysPredicate(4);","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"nicleongyj"},"content":"        RemindCommand command \u003d new RemindCommand(predicate, eventWithinDaysPredicate, 4);","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"nicleongyj"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"nicleongyj"},"content":"        expectedModel.updateFilteredEventList(eventWithinDaysPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"nicleongyj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"nicleongyj"},"content":"        assertEquals(Arrays.asList(JOHN), model.getFilteredPersonList());","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"nicleongyj"},"content":"        assertEquals(Arrays.asList(MEETING_3_DAYS_AFTER_TODAY), model.getEventList());","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"nicleongyj"},"content":"    public void execute_withinDays_multiplePersonAndEventFound() {","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"nicleongyj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_AND_EVENTS_SHOWN_OVERVIEW, 7);","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate predicate \u003d new BirthdayWithinDaysPredicate(7);","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate eventWithinDaysPredicate \u003d new EventWithinDaysPredicate(7);","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"nicleongyj"},"content":"        RemindCommand command \u003d new RemindCommand(predicate, eventWithinDaysPredicate, 7);","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"nicleongyj"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"nicleongyj"},"content":"        expectedModel.updateFilteredEventList(eventWithinDaysPredicate);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"nicleongyj"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"nicleongyj"},"content":"        assertEquals(Arrays.asList(JOHN, JANE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"nicleongyj"},"content":"        assertEquals(Arrays.asList(MEETING_3_DAYS_AFTER_TODAY,","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"nicleongyj"},"content":"                MEETING_6_DAYS_AFTER_TODAY), model.getEventList());","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"nicleongyj"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"nicleongyj"},"content":"        int days \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate birthdayPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"nicleongyj"},"content":"                new BirthdayWithinDaysPredicate(days);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate eventPredicate \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"nicleongyj"},"content":"                new EventWithinDaysPredicate(days);","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"nicleongyj"},"content":"        RemindCommand remindCommand \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"nicleongyj"},"content":"                new RemindCommand(birthdayPredicate, eventPredicate, days);","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"nicleongyj"},"content":"        String expected \u003d RemindCommand.class.getCanonicalName()","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"nicleongyj"},"content":"                + \"{birthdayPredicate\u003d\" + birthdayPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"nicleongyj"},"content":"                + \", eventPredicate\u003d\" + eventPredicate","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"nicleongyj"},"content":"                + \", days\u003d\" + days + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"nicleongyj"},"content":"        assertEquals(expected, remindCommand.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"nicleongyj":118,"Kurtyjlee":2}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_FRIEND;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_HUSBAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"leezhengjing"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_FRIEND;","lastModifiedDate":"2023-10-08"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"leezhengjing"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withGroups(VALID_GROUP_FRIEND).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"nicleongyj"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + GROUP_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"        // multiple groups - all accepted","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        Person expectedPersonMultipleGroups \u003d new PersonBuilder(BOB).withGroups(VALID_GROUP_FRIEND, VALID_GROUP_HUSBAND)","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"nicleongyj"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"                        + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND,","lastModifiedDate":"2023-10-09"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"                new AddCommand(expectedPersonMultipleGroups));","lastModifiedDate":"2023-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    public void parse_repeatedNonGroupValue_failure() {","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"nicleongyj"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + GROUP_DESC_FRIEND;","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"nicleongyj"},"content":"        // multiple birthdays","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"nicleongyj"},"content":"        assertParseFailure(parser, BIRTHDAY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"nicleongyj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY));","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"nicleongyj"},"content":"                        + BIRTHDAY_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"nicleongyj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"nicleongyj"},"content":"                        PREFIX_PHONE, PREFIX_BIRTHDAY));","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"nicleongyj"},"content":"        // invalid birthday","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"nicleongyj"},"content":"        assertParseFailure(parser, INVALID_BIRTHDAY_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"nicleongyj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY));","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":146,"author":{"gitId":"nicleongyj"},"content":"        // invalid birthday","lastModifiedDate":"2023-10-10"},{"lineNumber":147,"author":{"gitId":"nicleongyj"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_BIRTHDAY_DESC,","lastModifiedDate":"2023-10-10"},{"lineNumber":148,"author":{"gitId":"nicleongyj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_BIRTHDAY));","lastModifiedDate":"2023-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"        // zero groups","lastModifiedDate":"2023-10-08"},{"lineNumber":154,"author":{"gitId":"DistractedCat"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withGroups().build();","lastModifiedDate":"2023-10-08"},{"lineNumber":155,"author":{"gitId":"nicleongyj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-10"},{"lineNumber":156,"author":{"gitId":"nicleongyj"},"content":"                        + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY,","lastModifiedDate":"2023-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"nicleongyj"},"content":"                + BIRTHDAY_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"nicleongyj"},"content":"                + BIRTHDAY_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"nicleongyj"},"content":"                + BIRTHDAY_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"leezhengjing"},"content":"        // invalid address - no such thing","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":185,"author":{"gitId":"nicleongyj"},"content":"        // invalid birthday","lastModifiedDate":"2023-10-10"},{"lineNumber":186,"author":{"gitId":"nicleongyj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-10"},{"lineNumber":187,"author":{"gitId":"nicleongyj"},"content":"                + INVALID_BIRTHDAY_DESC + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND, Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"        // invalid group","lastModifiedDate":"2023-10-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"nicleongyj"},"content":"                + BIRTHDAY_DESC_BOB + INVALID_GROUP_DESC + VALID_GROUP_FRIEND, Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"nicleongyj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-10-10"},{"lineNumber":195,"author":{"gitId":"nicleongyj"},"content":"                + BIRTHDAY_DESC_BOB,","lastModifiedDate":"2023-10-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":200,"author":{"gitId":"nicleongyj"},"content":"                + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + GROUP_DESC_HUSBAND + GROUP_DESC_FRIEND,","lastModifiedDate":"2023-10-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"DistractedCat":15,"nicleongyj":36,"leezhengjing":5,"-":147}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"leezhengjing"},"content":"import seedu.address.logic.commands.ListPersonsCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"leezhengjing"},"content":"        assertTrue(parser.parseCommand(ListPersonsCommand.COMMAND_WORD) instanceof ListPersonsCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"leezhengjing"},"content":"        assertTrue(parser.parseCommand(ListPersonsCommand.COMMAND_WORD + \" 3\") instanceof ListPersonsCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"leezhengjing":3,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/DeleteMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"public class DeleteMeetingCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"    private final DeleteMeetingCommandParser parser \u003d new DeleteMeetingCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"        // no index specified","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME,","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"        // no index and no field specified","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"        // negative index","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"-5\" + VALID_EVENT_NAME,","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"        // zero index","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"0\" + VALID_EVENT_NAME,","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1 some random string\",","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid index","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"a\" + VALID_EVENT_NAME,","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"    public void parse_validArgs_returnsDeleteCommand() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        DeleteEventCommand expectedDeleteEventCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"            new DeleteEventCommand(ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseSuccess(parser, \"1\", expectedDeleteEventCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Kurtyjlee":55}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_FRIEND;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_HUSBAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_FRIEND;","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"leezhengjing"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"    private static final String GROUP_EMPTY \u003d \" \" + PREFIX_GROUP;","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"leezhengjing"},"content":"        // assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GROUP_DESC, Group.MESSAGE_CONSTRAINTS); // invalid group","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        // while parsing {@code PREFIX_GROUP} alone will reset the groups of the {@code Person} being edited,","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"DistractedCat"},"content":"        // parsing it together with a valid group results in error","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"DistractedCat"},"content":"        assertParseFailure(parser, \"1\" + GROUP_DESC_FRIEND","lastModifiedDate":"2023-10-09"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"                + GROUP_DESC_HUSBAND + GROUP_EMPTY, Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-09"},{"lineNumber":99,"author":{"gitId":"DistractedCat"},"content":"        assertParseFailure(parser, \"1\" + GROUP_DESC_FRIEND + GROUP_EMPTY","lastModifiedDate":"2023-10-09"},{"lineNumber":100,"author":{"gitId":"DistractedCat"},"content":"                + GROUP_DESC_HUSBAND, Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-09"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"        assertParseFailure(parser, \"1\" + GROUP_EMPTY + GROUP_DESC_FRIEND","lastModifiedDate":"2023-10-09"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"                + GROUP_DESC_HUSBAND, Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-09"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + GROUP_DESC_HUSBAND","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + GROUP_DESC_FRIEND;","lastModifiedDate":"2023-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"                .withGroups(VALID_GROUP_HUSBAND, VALID_GROUP_FRIEND).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"        // groups","lastModifiedDate":"2023-10-08"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"        userInput \u003d targetIndex.getOneBased() + GROUP_DESC_FRIEND;","lastModifiedDate":"2023-10-08"},{"lineNumber":165,"author":{"gitId":"DistractedCat"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGroups(VALID_GROUP_FRIEND).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"DistractedCat"},"content":"        // AddCommandParserTest#parse_repeatedNonGroupValue_failure()","lastModifiedDate":"2023-10-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"DistractedCat"},"content":"                + GROUP_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + GROUP_DESC_FRIEND","lastModifiedDate":"2023-10-08"},{"lineNumber":189,"author":{"gitId":"DistractedCat"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + GROUP_DESC_HUSBAND;","lastModifiedDate":"2023-10-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"DistractedCat"},"content":"    public void parse_resetGroups_success() {","lastModifiedDate":"2023-10-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"DistractedCat"},"content":"        String userInput \u003d targetIndex.getOneBased() + GROUP_EMPTY;","lastModifiedDate":"2023-10-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"DistractedCat"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withGroups().build();","lastModifiedDate":"2023-10-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"DistractedCat":31,"leezhengjing":2,"-":179}},{"path":"src/test/java/seedu/address/logic/parser/EditMeetingCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNASSIGN_GROUPS;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UNASSIGN_PERSONS;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"public class EditMeetingCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"    private final EditMeetingCommandParser parser \u003d new EditMeetingCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        // no index specified","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"                EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"        // no field specified","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1\", EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"        // no index and no field specified","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"                EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        // negative index","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"-5\" + VALID_EVENT_NAME, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"                EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"        // zero index","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"0\" + VALID_EVENT_NAME, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"                EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1 some random string\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"                EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1 i/string\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"                EditEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid name","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_EVENT_NAME + \" \", EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid date","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_EVENT_NAME + \" \" + VALID_EVENT_NAME + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"Kurtyjlee"},"content":"                        + PREFIX_DATE + \" \",","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Kurtyjlee"},"content":"                EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid start time","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Kurtyjlee"},"content":"                parser, \"1\" + \" \" + PREFIX_EVENT_NAME + \" \" + VALID_EVENT_NAME + \" \" + PREFIX_START_TIME + \"1\",","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Kurtyjlee"},"content":"                EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid end time","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_EVENT_NAME + \" \" + VALID_EVENT_NAME + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"Kurtyjlee"},"content":"                + PREFIX_START_TIME + \"1400\" + PREFIX_END_TIME + \" \", EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid group","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_EVENT_NAME + \" \" + VALID_EVENT_NAME + \" \" + PREFIX_GROUP","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"Kurtyjlee"},"content":"                + \" \", Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid unassign group","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_EVENT_NAME + \" \" + VALID_EVENT_NAME + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"Kurtyjlee"},"content":"                + PREFIX_UNASSIGN_GROUPS + \" \", Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid unassign person","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_EVENT_NAME + \" \" + VALID_EVENT_NAME + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"Kurtyjlee"},"content":"                + PREFIX_UNASSIGN_PERSONS + \" \", Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid person","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_EVENT_NAME + \" \" + VALID_EVENT_NAME + \" \" + PREFIX_NAME","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"Kurtyjlee"},"content":"                + \" \", Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"Kurtyjlee"},"content":"    public void parse_allFieldsSpecified_success() throws Exception {","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"Kurtyjlee"},"content":"        String userInput \u003d \"1\" + \" \" + PREFIX_EVENT_NAME + \" \" + VALID_EVENT_NAME + \" \" + PREFIX_DATE + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"Kurtyjlee"},"content":"                + \"2021-12-12\" + \" \" + PREFIX_START_TIME + \" \" + \"1400\" + \" \" + PREFIX_END_TIME + \" \" + \"1500\" + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"Kurtyjlee"},"content":"                + PREFIX_GROUP + \" \" + \"friends\" + \" \" + PREFIX_UNASSIGN_GROUPS + \" \" + \"groups\" + \" \"","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"Kurtyjlee"},"content":"                + PREFIX_NAME + \" \" + \"Alice\" + \" \" + PREFIX_UNASSIGN_PERSONS + \" \" + \"Ben\";","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand.EditEventDescriptor descriptor \u003d new EditEventCommand.EditEventDescriptor();","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setName(new EventName(VALID_EVENT_NAME));","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setDate(new EventDate(\"2021-12-12\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setStartTime(EventTime.of(\"1400\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setEndTime(EventTime.of(\"1500\"));","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setGroups(new HashSet\u003c\u003e(Set.of(new Group(\"friends\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setUnassignGroups(new HashSet\u003c\u003e(Set.of(new Group(\"groups\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setPersonNames(new HashSet\u003c\u003e(Set.of(new Name(\"Alice\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setUnassignPersons(new HashSet\u003c\u003e(Set.of(new Name(\"Ben\"))));","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"Kurtyjlee"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(Index.fromOneBased(1), descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"Kurtyjlee"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Kurtyjlee":122}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"    private static final String INVALID_GROUP \u003d \"#friend\";","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    private static final String VALID_GROUP_1 \u003d \"friend\";","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    private static final String VALID_GROUP_2 \u003d \"neighbour\";","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"leezhengjing"},"content":"    //@Test","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"leezhengjing"},"content":"    //public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"leezhengjing"},"content":"    //    assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"leezhengjing"},"content":"    //}","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"DistractedCat"},"content":"    public void parseGroup_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":153,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroup(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"DistractedCat"},"content":"    public void parseGroup_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":158,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroup(INVALID_GROUP));","lastModifiedDate":"2023-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"DistractedCat"},"content":"    public void parseGroup_validValueWithoutWhitespace_returnsGroup() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":163,"author":{"gitId":"DistractedCat"},"content":"        Group expectedGroup \u003d new Group(VALID_GROUP_1);","lastModifiedDate":"2023-10-08"},{"lineNumber":164,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(expectedGroup, ParserUtil.parseGroup(VALID_GROUP_1));","lastModifiedDate":"2023-10-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"DistractedCat"},"content":"    public void parseGroup_validValueWithWhitespace_returnsTrimmedGroup() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":169,"author":{"gitId":"DistractedCat"},"content":"        String groupWithWhiteSpace \u003d WHITESPACE + VALID_GROUP_1 + WHITESPACE;","lastModifiedDate":"2023-10-08"},{"lineNumber":170,"author":{"gitId":"DistractedCat"},"content":"        Group expectedGroup \u003d new Group(VALID_GROUP_1);","lastModifiedDate":"2023-10-08"},{"lineNumber":171,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(expectedGroup, ParserUtil.parseGroup(groupWithWhiteSpace));","lastModifiedDate":"2023-10-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"DistractedCat"},"content":"    public void parseGroups_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":176,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroups(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"DistractedCat"},"content":"    public void parseGroups_collectionWithInvalidGroups_throwsParseException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":181,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroups(Arrays.asList(VALID_GROUP_1, INVALID_GROUP)));","lastModifiedDate":"2023-10-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"DistractedCat"},"content":"    public void parseGroups_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":186,"author":{"gitId":"DistractedCat"},"content":"        assertTrue(ParserUtil.parseGroups(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-10-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"DistractedCat"},"content":"    public void parseGroups_collectionWithValidGroups_returnsGroupSet() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":191,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cGroup\u003e actualGroupSet \u003d ParserUtil.parseGroups(Arrays.asList(VALID_GROUP_1, VALID_GROUP_2));","lastModifiedDate":"2023-10-08"},{"lineNumber":192,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cGroup\u003e expectedGroupSet \u003d new HashSet\u003cGroup\u003e(Arrays.asList(new Group(VALID_GROUP_1),","lastModifiedDate":"2023-10-09"},{"lineNumber":193,"author":{"gitId":"DistractedCat"},"content":"                new Group(VALID_GROUP_2)));","lastModifiedDate":"2023-10-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(expectedGroupSet, actualGroupSet);","lastModifiedDate":"2023-10-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"DistractedCat":26,"leezhengjing":4,"-":167}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"Ken-Lai"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"        //TODO: Implement this method","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Ken-Lai"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Kurtyjlee"},"content":"            return events;","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"DistractedCat":8,"Ken-Lai":2,"Kurtyjlee":2,"-":105}},{"path":"src/test/java/seedu/address/model/event/EventComparatorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_3_DAYS_AFTER_TODAY;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_6_DAYS_AFTER_TODAY;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_LATER_THAN_TP_MEETING;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_WITHOUT_END_TIME;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_WITHOUT_START_TIME;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_WITHOUT_TIME;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.TP_MEETING;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.TP_MEETING_EARLIER_END_TIME;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.TP_MEETING_LATER_START_TIME;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"public class EventComparatorTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"    public void compareTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"        EventComparator eventComparator \u003d new EventComparator();","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(-1, eventComparator.compare(TP_MEETING, MEETING_LATER_THAN_TP_MEETING));","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(0, eventComparator.compare(TP_MEETING, TP_MEETING));","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(1, eventComparator.compare(MEETING_LATER_THAN_TP_MEETING, TP_MEETING));","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    public void compareTestWithoutTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"DistractedCat"},"content":"        EventComparator eventComparator \u003d new EventComparator();","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(-1, eventComparator.compare(TP_MEETING, MEETING_WITHOUT_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(1, eventComparator.compare(MEETING_WITHOUT_TIME, TP_MEETING));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"    public void compareTestBothDatesWithoutTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"DistractedCat"},"content":"        EventComparator eventComparator \u003d new EventComparator();","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(-1, eventComparator.compare(MEETING_3_DAYS_AFTER_TODAY, MEETING_6_DAYS_AFTER_TODAY));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(1, eventComparator.compare(MEETING_6_DAYS_AFTER_TODAY, MEETING_3_DAYS_AFTER_TODAY));","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"    public void compareTestWithSameDateAndDifferentStartTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"DistractedCat"},"content":"        EventComparator eventComparator \u003d new EventComparator();","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(-1, eventComparator.compare(TP_MEETING, TP_MEETING_LATER_START_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(1, eventComparator.compare(TP_MEETING_LATER_START_TIME, TP_MEETING));","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"DistractedCat"},"content":"    public void compareTestWithSameDateAndDifferentEndTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"DistractedCat"},"content":"        EventComparator eventComparator \u003d new EventComparator();","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(-1, eventComparator.compare(TP_MEETING_EARLIER_END_TIME, TP_MEETING));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(1, eventComparator.compare(TP_MEETING, TP_MEETING_EARLIER_END_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"    public void compareTestWithoutStartTimeAndWithoutEndTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        EventComparator eventComparator \u003d new EventComparator();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(-1, eventComparator.compare(MEETING_WITHOUT_END_TIME, MEETING_WITHOUT_START_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(1, eventComparator.compare(MEETING_WITHOUT_START_TIME, MEETING_WITHOUT_END_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"    public void compareTestWithStartTimeAndWithoutStartTIme() {","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"        EventComparator eventComparator \u003d new EventComparator();","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(-1, eventComparator.compare(TP_MEETING, MEETING_WITHOUT_START_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(1, eventComparator.compare(MEETING_WITHOUT_START_TIME, TP_MEETING));","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    public void compareTestWithEndTimeAndWithoutEndTime() {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"        EventComparator eventComparator \u003d new EventComparator();","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(-1, eventComparator.compare(TP_MEETING, MEETING_WITHOUT_END_TIME));","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"        assertEquals(1, eventComparator.compare(MEETING_WITHOUT_END_TIME, TP_MEETING));","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"DistractedCat":58,"Kurtyjlee":23}},{"path":"src/test/java/seedu/address/model/event/EventDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"public class EventDateTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(ParseException.class, () -\u003e new EventDate(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"    public void constructor_invalidEventDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"        String invalidEventDate \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(ParseException.class, () -\u003e new EventDate(invalidEventDate));","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    public void isValidEventDate() {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"        // null dates","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(() -\u003e EventDate.isValidDate(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid dates","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(() -\u003e EventDate.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(() -\u003e EventDate.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(() -\u003e EventDate.isValidDate(\"2020-13-13\")); // invalid month","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(() -\u003e EventDate.isValidDate(\"2020-01-32\")); // invalid day","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(() -\u003e EventDate.isValidDate(\"2020-25-02\")); // invalid format yyyy-dd-MM","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(() -\u003e EventDate.isValidDate(\"2020-02-31\")); // corrects incorrect day in February","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        // valid dates","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(() -\u003e EventDate.isValidDate(\"2020-01-01\")); // valid date","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(() -\u003e EventDate.isValidDate(\"2020-02-29\")); // valid leap year date","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"        EventDate eventDate \u003d new EventDate(\"2020-01-01\");","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventDate.equals(new EventDate(\"2020-01-01\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventDate.equals(eventDate));","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventDate.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventDate.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventDate.equals(new EventDate(\"2020-01-02\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"    public void toStringTest() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"        EventDate eventDate \u003d new EventDate(\"2020-01-01\");","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventDate.toString().equals(\"2020-01-01\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"    public void forDisplayTest() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Kurtyjlee"},"content":"        EventDate eventDate \u003d new EventDate(\"2020-01-01\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventDate.forDisplay().equals(\"01 Jan 2020\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Kurtyjlee"},"content":"    public void getDateTest() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Kurtyjlee"},"content":"        EventDate eventDate \u003d new EventDate(\"2020-01-01\");","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventDate.getDate().toString().equals(\"2020-01-01\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Kurtyjlee":79}},{"path":"src/test/java/seedu/address/model/event/EventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_WITHOUT_PERSONS;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.TP_MEETING;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"public class EventListTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"    private final EventList eventList \u003d new EventList();","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"    public void getEventListTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(eventList.getEventsList(), eventList.getEventsList());","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"    public void addEventTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"        eventList.addEvent(TP_MEETING);","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventList.getEventsList().contains(TP_MEETING));","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"    public void setEventTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"        eventList.addEvent(TP_MEETING);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"        eventList.setEvent(TP_MEETING, MEETING_WITHOUT_PERSONS);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventList.getEventsList().contains(MEETING_WITHOUT_PERSONS));","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventList.getEventsList().contains(TP_MEETING));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    public void removeTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"        eventList.addEvent(TP_MEETING);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        eventList.remove(TP_MEETING);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventList.getEventsList().contains(TP_MEETING));","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    public void setEventsTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"        EventList newEventList \u003d new EventList();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"        newEventList.addEvent(TP_MEETING);","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"        eventList.setEvents(newEventList.getEventsList());","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"    public void getEventsListTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(eventList.getEventsList(), eventList.getEventsList());","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Kurtyjlee":52}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"public class EventNameTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"    public void constructor_invalidEventName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"        String invalidEventName \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventName(invalidEventName));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"    public void isValidEventName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"        // null event name","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventName.isValidName(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid event names","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(EventName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(EventName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"        // valid event names","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(EventName.isValidName(\"event name\")); // alphabets only","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(EventName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(EventName.isValidName(\"event name 2\")); // alphanumeric characters","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(EventName.isValidName(\"Event Name\")); // with capital letters","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(EventName.isValidName(\"Event Name 2\")); // long event names","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(EventName.isValidName(\"v1.2\")); // alphanumeric with symbols","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"        EventName eventName \u003d new EventName(\"Valid Event Name\");","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventName.equals(new EventName(\"Valid Event Name\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventName.equals(eventName));","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventName.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventName.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventName.equals(new EventName(\"Other Valid Event Name\")));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"        EventName eventName \u003d new EventName(\"Valid Event Name\");","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventName.toString().equals(\"Valid Event Name\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Kurtyjlee":65}},{"path":"src/test/java/seedu/address/model/event/EventTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"public class EventTimeTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"    public void factoryMethod_null_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(ParseException.class, () -\u003e EventTime.of(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        EventTime eventTime \u003d EventTime.of(\"1200\");","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"        assertTrue(eventTime.equals(EventTime.of(\"1200\")));","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventTime.equals(eventTime));","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventTime.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(eventTime.equals(5.0f));","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"        assertFalse(eventTime.equals(EventTime.of(\"1300\")));","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"    public void isValidEventTime() {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"        // invalid times","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(() -\u003e EventTime.isValidTime(\"2400\")); // invalid time","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(() -\u003e EventTime.isValidTime(\"123\")); // invalid time","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"        // valid times","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(() -\u003e EventTime.isValidTime(\"\")); // when time is not given","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(() -\u003e EventTime.isValidTime(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(() -\u003e EventTime.isValidTime(\"0000\")); // valid time","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(() -\u003e EventTime.isValidTime(\"2359\")); // valid time","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(() -\u003e EventTime.isValidTime(\"1200\")); // valid time","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"    public void toStringTest() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"        EventTime eventTime \u003d EventTime.of(\"1200\");","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventTime.toString().equals(\"1200\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"    public void forDisplayTest() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"        EventTime eventTime \u003d EventTime.of(\"1200\");","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventTime.forDisplay().equals(\"12:00\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"    public void ofEventTimeTest() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"Kurtyjlee"},"content":"        EventTime eventTime \u003d EventTime.of(\"1200\");","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventTime.toString().equals(\"1200\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"0000\", eventTime.of(\"\").toString()); // empty time","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"0000\", eventTime.of(\" \").toString()); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"1200\", eventTime.of(\"1200\").toString()); // 1200","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"Kurtyjlee"},"content":"    public void getEventTimeTest() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"        EventTime eventTime \u003d EventTime.of(\"1200\");","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(eventTime.getEventTime().equals(LocalTime.of(12, 0)));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"DistractedCat":8,"Kurtyjlee":76}},{"path":"src/test/java/seedu/address/model/event/EventTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"public class EventTypeTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventType(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"        EventType eventType \u003d new EventType(\"meeting\");","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(eventType.toString(), \"meeting\");","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Kurtyjlee":20}},{"path":"src/test/java/seedu/address/model/event/MeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.MEETING_WITHOUT_TIME;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import static seedu.address.testutil.TypicalEvents.TP_MEETING;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"public class MeetingTest {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"    public void isSameEventTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(TP_MEETING.isSameEvent(TP_MEETING));","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"        Meeting tpMeetingCopy \u003d new MeetingBuilder(TP_MEETING).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(TP_MEETING.isSameEvent(tpMeetingCopy));","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"    public void getEventTypeTest() {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"meeting\", TP_MEETING.getEventType().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"    public void getStartDate() {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"2023-10-18\", TP_MEETING.getStartDate().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"    public void getEndDate() {","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"2023-10-18\", TP_MEETING.getEndDate().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"    public void getStartTime() {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"0000\", TP_MEETING.getStartTime().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"0000\", MEETING_WITHOUT_TIME.getStartTime().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"    public void getEndTime() {","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"2359\", TP_MEETING.getEndTime().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"        assertEquals(\"0000\", MEETING_WITHOUT_TIME.getEndTime().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"    public void hasStartTime() {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(TP_MEETING.hasStartTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(MEETING_WITHOUT_TIME.hasStartTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"    public void hasEndTime() {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"        assertTrue(TP_MEETING.hasEndTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"        assertFalse(MEETING_WITHOUT_TIME.hasEndTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Kurtyjlee":61}},{"path":"src/test/java/seedu/address/model/group/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DistractedCat"},"content":"package seedu.address.model.group;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"DistractedCat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"public class GroupTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Group(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"DistractedCat"},"content":"    public void constructor_invalidGroupName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"DistractedCat"},"content":"        String invalidGroupName \u003d \"\";","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Group(invalidGroupName));","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"DistractedCat"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"DistractedCat"},"content":"    public void isValidGroupName() {","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"DistractedCat"},"content":"        // null group name","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(NullPointerException.class, () -\u003e Group.isValidGroupName(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"DistractedCat"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"DistractedCat":26}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    //    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    //    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    //        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    //        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    //    }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"leezhengjing"},"content":"        assertTrue(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"leezhengjing"},"content":"        assertTrue(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"leezhengjing":7,"-":47}},{"path":"src/test/java/seedu/address/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":"class BirthdayTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"    public void isValidBirthday() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"        // null birthday","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthday.isValidBirthday(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"        // invalid birthday","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(Birthday.isValidBirthday(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(Birthday.isValidBirthday(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(Birthday.isValidBirthday(\"12-12-2001\")); // invalid format","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(Birthday.isValidBirthday(\"12-12\")); // missing year","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(Birthday.isValidBirthday(\"12-2001\")); // missing day or month","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(Birthday.isValidBirthday(\"2001-13-12\")); // invalid month","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(Birthday.isValidBirthday(\"2001-12-32\")); // invalid day","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"        // valid birthday","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(Birthday.isValidBirthday(\"\")); // empty string","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(Birthday.isValidBirthday(\" \")); // spaces only","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(Birthday.isValidBirthday(\"2001-12-14\")); // valid format","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"        String validBirthday \u003d \"2001-12-14\";","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"        Birthday birthday \u003d new Birthday(validBirthday);","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(birthday.equals(new Birthday(validBirthday)));","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nicleongyj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(birthday.equals(birthday));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(birthday.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"nicleongyj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(birthday.equals(5.0f));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"nicleongyj"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(birthday.equals(new Birthday(\"2001-12-15\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"nicleongyj":57}},{"path":"src/test/java/seedu/address/model/person/BirthdayWithinDaysPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"class BirthdayWithinDaysPredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"        int firstDays \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"        int secondDays \u003d 2;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate firstPredicate \u003d new BirthdayWithinDaysPredicate(firstDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate secondPredicate \u003d new BirthdayWithinDaysPredicate(secondDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate firstPredicateCopy \u003d new BirthdayWithinDaysPredicate(firstDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"    public void test_birthdayWithinDays_returnsTrue() {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"        // Birthday is today","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nicleongyj"},"content":"        String today \u003d LocalDate.now().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate predicate \u003d new BirthdayWithinDaysPredicate(7);","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(predicate.test(new PersonBuilder().withBirthday(today).build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"        // Birthday is tomorrow","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"        String tomorrow \u003d LocalDate.now().plusDays(1).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"nicleongyj"},"content":"        predicate \u003d new BirthdayWithinDaysPredicate(7);","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(predicate.test(new PersonBuilder().withBirthday(tomorrow).build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"nicleongyj"},"content":"        // Birthday is next year but within Days","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"nicleongyj"},"content":"        String nextYear \u003d LocalDate.now().minusDays(1).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"nicleongyj"},"content":"        predicate \u003d new BirthdayWithinDaysPredicate(365);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(predicate.test(new PersonBuilder().withBirthday(nextYear).build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"nicleongyj"},"content":"    public void test_birthdayNotWithinDays_returnsFalse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"nicleongyj"},"content":"        // Birthday is before today","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"nicleongyj"},"content":"        String yesterday \u003d LocalDate.now().minusDays(1).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate predicate \u003d new BirthdayWithinDaysPredicate(364);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(predicate.test(new PersonBuilder().withBirthday(yesterday).build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"nicleongyj"},"content":"        //Birthday is not within days","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"nicleongyj"},"content":"        String nextWeek \u003d LocalDate.now().plusWeeks(1).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate predicate2 \u003d new BirthdayWithinDaysPredicate(5);","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(predicate2.test(new PersonBuilder().withBirthday(nextWeek).build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"nicleongyj"},"content":"    public void test_birthdayNotPresent_returnsFalse() {","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate predicate \u003d new BirthdayWithinDaysPredicate(7);","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(predicate.test(new PersonBuilder().build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"nicleongyj"},"content":"    public void test_toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"nicleongyj"},"content":"        int days \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"nicleongyj"},"content":"        BirthdayWithinDaysPredicate predicate \u003d new BirthdayWithinDaysPredicate(days);","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"nicleongyj"},"content":"        String expected \u003d BirthdayWithinDaysPredicate.class.getCanonicalName() + \"{days\u003d\" + days + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"nicleongyj"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"nicleongyj":85}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    //    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    //    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    //        String invalidEmail \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    //        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    //    }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"        assertTrue(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"        assertTrue(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"leezhengjing":7,"-":79}},{"path":"src/test/java/seedu/address/model/person/EventWithinDaysPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nicleongyj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"nicleongyj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.testutil.MeetingBuilder;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"nicleongyj"},"content":"class EventWithinDaysPredicateTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"nicleongyj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"nicleongyj"},"content":"        int firstDays \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"nicleongyj"},"content":"        int secondDays \u003d 2;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate firstPredicate \u003d new EventWithinDaysPredicate(firstDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate secondPredicate \u003d new EventWithinDaysPredicate(secondDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"nicleongyj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"nicleongyj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate firstPredicateCopy \u003d new EventWithinDaysPredicate(firstDays);","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"nicleongyj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"    public void test_eventWithinDays_returnsTrue() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"nicleongyj"},"content":"        //Event is today","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"nicleongyj"},"content":"        String today \u003d LocalDate.now().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate predicate \u003d new EventWithinDaysPredicate(7);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withEventDate(today).build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"        //Event is tomorrow","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"nicleongyj"},"content":"        String tomorrow \u003d LocalDate.now().plusDays(1).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"nicleongyj"},"content":"        predicate \u003d new EventWithinDaysPredicate(7);","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withEventDate(tomorrow).build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"nicleongyj"},"content":"        //Event is next year but within Days","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"nicleongyj"},"content":"        String nextYear \u003d LocalDate.now().plusYears(1).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"nicleongyj"},"content":"        predicate \u003d new EventWithinDaysPredicate(366);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"nicleongyj"},"content":"        assertTrue(predicate.test(new MeetingBuilder().withEventDate(nextYear).build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"nicleongyj"},"content":"    public void test_eventNotWithinDays_returnsFalse() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"nicleongyj"},"content":"        // Event is not within days","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"nicleongyj"},"content":"        String expired \u003d LocalDate.now().plusDays(7).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate predicate \u003d new EventWithinDaysPredicate(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"nicleongyj"},"content":"        assertFalse(predicate.test(new MeetingBuilder().withEventDate(expired).build()));","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"nicleongyj"},"content":"    public void test_toString() {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"nicleongyj"},"content":"        int days \u003d 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"nicleongyj"},"content":"        EventWithinDaysPredicate predicate \u003d new EventWithinDaysPredicate(days);","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"nicleongyj"},"content":"        String expected \u003d EventWithinDaysPredicate.class.getCanonicalName() + \"{days\u003d\" + days + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"nicleongyj"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"nicleongyj"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"nicleongyj":75}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"DistractedCat"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getGroups().remove(0));","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"DistractedCat"},"content":"                .withAddress(VALID_ADDRESS_BOB).withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        // different groups -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withGroups(VALID_GROUP_HUSBAND).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"nicleongyj"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"nicleongyj"},"content":"                + \", birthday\u003d\" + ALICE.getBirthday() + \", groups\u003d\" + ALICE.getGroups() + \"}\";","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"DistractedCat":5,"nicleongyj":2,"-":93}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"leezhengjing"},"content":"    //    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"leezhengjing"},"content":"    //    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"leezhengjing"},"content":"    //        String invalidPhone \u003d \"\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"leezhengjing"},"content":"    //        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"leezhengjing"},"content":"    //    }","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"leezhengjing"},"content":"        assertTrue(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"        assertTrue(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"leezhengjing":7,"-":53}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"DistractedCat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withGroups(VALID_GROUP_HUSBAND)","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"DistractedCat":3,"-":172}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"nicleongyj"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"2001-12-322\";","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"DistractedCat"},"content":"    private static final String INVALID_GROUP \u003d \"#friend\";","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"nicleongyj"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"DistractedCat"},"content":"    private static final List\u003cJsonAdaptedGroup\u003e VALID_GROUPS \u003d BENSON.getGroups().stream()","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"DistractedCat"},"content":"            .map(JsonAdaptedGroup::new)","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"nicleongyj"},"content":"                        VALID_ADDRESS, VALID_BIRTHDAY, VALID_GROUPS);","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"nicleongyj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"nicleongyj"},"content":"                VALID_ADDRESS, VALID_BIRTHDAY, VALID_GROUPS);","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"nicleongyj"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"nicleongyj"},"content":"                        VALID_BIRTHDAY, VALID_GROUPS);","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"nicleongyj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"nicleongyj"},"content":"                VALID_BIRTHDAY, VALID_GROUPS);","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"nicleongyj"},"content":"                        VALID_BIRTHDAY, VALID_GROUPS);","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"nicleongyj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"nicleongyj"},"content":"                VALID_BIRTHDAY, VALID_GROUPS);","lastModifiedDate":"2023-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"leezhengjing"},"content":"    //    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"leezhengjing"},"content":"    //    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"leezhengjing"},"content":"    //        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"leezhengjing"},"content":"    //                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"leezhengjing"},"content":"    //                        VALID_BIRTHDAY, VALID_GROUPS);","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"leezhengjing"},"content":"    //        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"leezhengjing"},"content":"    //        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"leezhengjing"},"content":"    //    }","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"nicleongyj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"nicleongyj"},"content":"                VALID_BIRTHDAY, VALID_GROUPS);","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"nicleongyj"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"nicleongyj"},"content":"    public void toModelType_invalidBirthday_throwsIllegalValueException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-10"},{"lineNumber":115,"author":{"gitId":"nicleongyj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"nicleongyj"},"content":"                        INVALID_BIRTHDAY, VALID_GROUPS);","lastModifiedDate":"2023-10-10"},{"lineNumber":117,"author":{"gitId":"nicleongyj"},"content":"        String expectedMessage \u003d Birthday.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":122,"author":{"gitId":"nicleongyj"},"content":"    public void toModelType_nullBirthday_throwsIllegalValueException() {","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"nicleongyj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"nicleongyj"},"content":"                null, VALID_GROUPS);","lastModifiedDate":"2023-10-10"},{"lineNumber":125,"author":{"gitId":"nicleongyj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthday.class.getSimpleName());","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"DistractedCat"},"content":"    public void toModelType_invalidGroups_throwsIllegalValueException() {","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"DistractedCat"},"content":"        List\u003cJsonAdaptedGroup\u003e invalidGroups \u003d new ArrayList\u003c\u003e(VALID_GROUPS);","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"DistractedCat"},"content":"        invalidGroups.add(new JsonAdaptedGroup(INVALID_GROUP));","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"nicleongyj"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-10"},{"lineNumber":135,"author":{"gitId":"nicleongyj"},"content":"                        VALID_BIRTHDAY, invalidGroups);","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"DistractedCat":6,"nicleongyj":28,"leezhengjing":8,"-":97}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"DistractedCat"},"content":"    //TODO: Add tests for meetings. Data for meetings is currently a placeholder.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"DistractedCat":1,"-":47}},{"path":"src/test/java/seedu/address/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":" * A utility class to help with building EditMeetingDescriptor objects.","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"    private EditEventDescriptor descriptor;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"     * Returns an {@code EditMeetingDescriptor} with fields containing {@code meeting}\u0027s details","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setName(event.getName());","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setDate(event.getStartDate());","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setStartTime(event.getStartTime());","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setEndTime(event.getEndTime());","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setPersonNames(event.getNames());","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setGroups(event.getGroups());","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"     * Sets the {@code Name} of the {@code EditMeetingDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"    public EditEventDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"        descriptor.setName(new EventName(name));","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    public EditEventDescriptor build() {","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"        return this.descriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"Kurtyjlee":38}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"        descriptor.setBirthday(person.getBirthday());","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"DistractedCat"},"content":"        descriptor.setGroups(person.getGroups());","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"nicleongyj"},"content":"     * Sets the {@code Birthday} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"nicleongyj"},"content":"    public EditPersonDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"nicleongyj"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"nicleongyj"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"     * Parses the {@code groupss} into a {@code Set\u003cGroup\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"    public EditPersonDescriptorBuilder withGroups(String... groups) {","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"        Set\u003cGroup\u003e groupSet \u003d Stream.of(groups).map(Group::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"        descriptor.setGroups(groupSet);","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"DistractedCat":6,"nicleongyj":9,"-":82}},{"path":"src/test/java/seedu/address/testutil/MeetingBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":" * A utility class to help with building Meeting objects.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"public class MeetingBuilder {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String DEFAULT_MEETING_NAME \u003d \"TP MEETING TEST\";","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"    public static final String DEFAULT_DATE \u003d \"2023-10-18\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"    private EventName eventName;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    private EventDate date;","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"    private EventTime startTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"    private EventTime endTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"    private Set\u003cName\u003e names;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"    private Set\u003cGroup\u003e groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"     * Creates a {@code MeetingBuilder} with the default details.","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"    public MeetingBuilder() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"        eventName \u003d new EventName(DEFAULT_MEETING_NAME);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        date \u003d new EventDate(DEFAULT_DATE);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"        startTime \u003d EventTime.NULL_EVENT_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"        endTime \u003d EventTime.NULL_EVENT_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"        names \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"        groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"     * Initializes the MeetingBuilder with the data of {@code meetingToCopy}.","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"    public MeetingBuilder(Meeting meetingToCopy) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"        eventName \u003d meetingToCopy.getName();","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"        date \u003d meetingToCopy.getStartDate();","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"        startTime \u003d meetingToCopy.getStartTime();","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"        endTime \u003d meetingToCopy.getEndTime();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        names \u003d new HashSet\u003c\u003e(meetingToCopy.getNames());","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"     * Sets the {@code Name} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Kurtyjlee"},"content":"    public MeetingBuilder withEventName(String name) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"Kurtyjlee"},"content":"        this.eventName \u003d ParserUtil.parseEventName(name);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"Kurtyjlee"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"Kurtyjlee"},"content":"     * Parses the {@code names} into a {@code Set\u003cName\u003e} and set it to the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"Kurtyjlee"},"content":"     * @param names names of the persons","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"     * @return this instance of MeetingBuilder","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Kurtyjlee"},"content":"     * @throws ParseException if there were any parsing errors.","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"Kurtyjlee"},"content":"    public MeetingBuilder withPerson(String... names) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"        for (String name : names) {","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"            this.names.add(new Name(name));","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"Kurtyjlee"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Kurtyjlee"},"content":"     * Sets the {@code names} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Kurtyjlee"},"content":"     * @param names names of the persons","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Kurtyjlee"},"content":"     * @return this instance of MeetingBuilder","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Kurtyjlee"},"content":"    public MeetingBuilder withPerson(Set\u003cName\u003e names) {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Kurtyjlee"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"     * Parses the {@code groups} into a {@code Set\u003cGroup\u003e} and set it to the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"DistractedCat"},"content":"     * @param groups names of the groups to add","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"DistractedCat"},"content":"     * @return this instance of MeetingBuilder","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"DistractedCat"},"content":"     * @throws ParseException if there were any parsing errors.","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"DistractedCat"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"DistractedCat"},"content":"    public MeetingBuilder withGroups(String... groups) throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"DistractedCat"},"content":"        for (String group : groups) {","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"DistractedCat"},"content":"            this.groups.add(new Group(group));","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"Kurtyjlee"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"     * Sets the {@code groups} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"Kurtyjlee"},"content":"     * @param groups the groups to add","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"Kurtyjlee"},"content":"     * @return this instance of MeetingBuilder","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"Kurtyjlee"},"content":"    public MeetingBuilder withGroups(Set\u003cGroup\u003e groups) {","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"Kurtyjlee"},"content":"        this.groups \u003d groups;","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"Kurtyjlee"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"Kurtyjlee"},"content":"     * Sets the {@code EventDate} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"Kurtyjlee"},"content":"     * @param date the date of the meeting","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"Kurtyjlee"},"content":"     * @return this","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"Kurtyjlee"},"content":"     * @throws ParseException if there were any parsing errors.","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"Kurtyjlee"},"content":"    public MeetingBuilder withEventDate(String date) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"Kurtyjlee"},"content":"        this.date \u003d ParserUtil.parseEventDate(date);","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"Kurtyjlee"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"Kurtyjlee"},"content":"     * Sets the {@code EventTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"Kurtyjlee"},"content":"     * @param startTime the start time of the meeting","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"Kurtyjlee"},"content":"     * @return this","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"Kurtyjlee"},"content":"     * @throws ParseException if there were any parsing errors.","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"Kurtyjlee"},"content":"    public MeetingBuilder withEventStartTime(String startTime) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"Kurtyjlee"},"content":"        this.startTime \u003d ParserUtil.parseEventTime(startTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"Kurtyjlee"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"Kurtyjlee"},"content":"     * Sets the {@code EventTime} of the {@code Meeting} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"Kurtyjlee"},"content":"     * @param endTime the end time of the meeting","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"Kurtyjlee"},"content":"     * @return this","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"Kurtyjlee"},"content":"     * @throws ParseException if there were any parsing errors.","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"Kurtyjlee"},"content":"    public MeetingBuilder withEventEndTime(String endTime) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"Kurtyjlee"},"content":"        this.endTime \u003d ParserUtil.parseEventTime(endTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"Kurtyjlee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"Kurtyjlee"},"content":"     * Builds a meeting object.","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"Kurtyjlee"},"content":"     * @return a meeting object.","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"Kurtyjlee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"Kurtyjlee"},"content":"    public Meeting build() {","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"Kurtyjlee"},"content":"        return new Meeting(eventName, date, Optional.of(startTime), Optional.of(endTime), names, groups);","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"DistractedCat":21,"Kurtyjlee":130}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"leezhengjing"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"nicleongyj"},"content":"import seedu.address.model.person.Birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"nicleongyj"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"2001-12-12\";","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"nicleongyj"},"content":"    private Birthday birthday;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"DistractedCat"},"content":"    private Set\u003cGroup\u003e groups;","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"nicleongyj"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"DistractedCat"},"content":"        groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"nicleongyj"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"DistractedCat"},"content":"        groups \u003d new HashSet\u003c\u003e(personToCopy.getGroups());","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"     * Parses the {@code groups} into a {@code Set\u003cGroup\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"    public PersonBuilder withGroups(String ... groups) {","lastModifiedDate":"2023-10-08"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"        this.groups \u003d SampleDataUtil.getGroupSet(groups);","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"nicleongyj"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"nicleongyj"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"nicleongyj"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"nicleongyj"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"nicleongyj"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"nicleongyj"},"content":"        return this;","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"leezhengjing"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"leezhengjing"},"content":"     * Builds a person with the given fields.","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"leezhengjing"},"content":"     * @return","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"leezhengjing"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":111,"author":{"gitId":"leezhengjing"},"content":"        return new Person(name, Optional.of(phone), Optional.of(email), Optional.of(address), Optional.of(birthday),","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"leezhengjing"},"content":"                groups);","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"DistractedCat":7,"nicleongyj":13,"leezhengjing":7,"-":88}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"DistractedCat"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"leezhengjing"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().toString() + \" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"leezhengjing"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().toString() + \" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"leezhengjing"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().toString() + \" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"nicleongyj"},"content":"        sb.append(PREFIX_BIRTHDAY + person.getBirthday().getStringValue() + \" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"DistractedCat"},"content":"        person.getGroups().stream().forEach(","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"DistractedCat"},"content":"            s -\u003e sb.append(PREFIX_GROUP + s.groupName + \" \")","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"leezhengjing"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"leezhengjing"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"leezhengjing"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"nicleongyj"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY).append(birthday.getStringValue())","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"nicleongyj"},"content":"                .append(\" \"));","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"DistractedCat"},"content":"        if (descriptor.getGroups().isPresent()) {","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"DistractedCat"},"content":"            Set\u003cGroup\u003e groups \u003d descriptor.getGroups().get();","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"            if (groups.isEmpty()) {","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"                sb.append(PREFIX_GROUP);","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"                groups.forEach(s -\u003e sb.append(PREFIX_GROUP).append(s.groupName).append(\" \"));","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"DistractedCat":9,"nicleongyj":4,"leezhengjing":6,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Kurtyjlee"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"nicleongyj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Meeting;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"Kurtyjlee"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"Kurtyjlee"},"content":" * A utility class containing a list of {@code Meeting} objects to be used in tests.","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"Kurtyjlee"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"Kurtyjlee"},"content":"public class TypicalEvents {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Meeting TP_MEETING;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"    static {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"Kurtyjlee"},"content":"            TP_MEETING \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventDate(\"2023-10-18\")","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventStartTime(\"0000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventEndTime(\"2359\")","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"Kurtyjlee"},"content":"                    .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"Kurtyjlee"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Meeting TP_MEETING_WITH_PERSONS;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Kurtyjlee"},"content":"    static {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Kurtyjlee"},"content":"            TP_MEETING_WITH_PERSONS \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventDate(\"2023-10-18\")","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventStartTime(\"0000\")","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventEndTime(\"2359\")","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Kurtyjlee"},"content":"                    .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Kurtyjlee"},"content":"                    .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Kurtyjlee"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Meeting TP_MEETING_WITH_GROUPS;","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Kurtyjlee"},"content":"    static {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Kurtyjlee"},"content":"            TP_MEETING_WITH_GROUPS \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventDate(\"2023-10-18\")","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventStartTime(\"0000\")","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventEndTime(\"2359\")","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Kurtyjlee"},"content":"                    .withGroups(\"friends\", \"owesMoney\")","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Kurtyjlee"},"content":"                    .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Kurtyjlee"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"DistractedCat"},"content":"    public static final Meeting TP_MEETING_LATER_START_TIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"DistractedCat"},"content":"    static {","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"DistractedCat"},"content":"            TP_MEETING_LATER_START_TIME \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"DistractedCat"},"content":"                    .withEventDate(\"2023-10-18\")","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"DistractedCat"},"content":"                    .withEventStartTime(\"0100\")","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"DistractedCat"},"content":"                    .withEventEndTime(\"2359\")","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"DistractedCat"},"content":"                    .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"DistractedCat"},"content":"                    .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"DistractedCat"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"DistractedCat"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"DistractedCat"},"content":"    public static final Meeting TP_MEETING_EARLIER_END_TIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"    static {","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"DistractedCat"},"content":"            TP_MEETING_EARLIER_END_TIME \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"DistractedCat"},"content":"                    .withEventDate(\"2023-10-18\")","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"DistractedCat"},"content":"                    .withEventStartTime(\"0000\")","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"DistractedCat"},"content":"                    .withEventEndTime(\"2358\")","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"DistractedCat"},"content":"                    .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"DistractedCat"},"content":"                    .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"DistractedCat"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"DistractedCat"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Meeting MEETING_WITHOUT_TIME;","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Kurtyjlee"},"content":"    static {","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"Kurtyjlee"},"content":"            MEETING_WITHOUT_TIME \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventDate(\"2023-10-18\")","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Kurtyjlee"},"content":"                    .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Kurtyjlee"},"content":"                    .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"Kurtyjlee"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"DistractedCat"},"content":"    public static final Meeting MEETING_WITHOUT_START_TIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"DistractedCat"},"content":"    static {","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"DistractedCat"},"content":"            MEETING_WITHOUT_START_TIME \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"DistractedCat"},"content":"                    .withEventDate(\"2023-10-18\")","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"DistractedCat"},"content":"                    .withEventEndTime(\"2359\")","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"DistractedCat"},"content":"                    .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"DistractedCat"},"content":"                    .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"DistractedCat"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"DistractedCat"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"DistractedCat"},"content":"    public static final Meeting MEETING_WITHOUT_END_TIME;","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"DistractedCat"},"content":"    static {","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"DistractedCat"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"DistractedCat"},"content":"            MEETING_WITHOUT_END_TIME \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"DistractedCat"},"content":"                    .withEventDate(\"2023-10-18\")","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"DistractedCat"},"content":"                    .withEventStartTime(\"0000\")","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"DistractedCat"},"content":"                    .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"DistractedCat"},"content":"                    .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"DistractedCat"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"DistractedCat"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"DistractedCat"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"DistractedCat"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"DistractedCat"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Meeting MEETING_WITHOUT_PERSONS;","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"Kurtyjlee"},"content":"    static {","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"Kurtyjlee"},"content":"            MEETING_WITHOUT_PERSONS \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventDate(\"2023-10-18\")","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventStartTime(\"0000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventEndTime(\"2359\")","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"Kurtyjlee"},"content":"                    .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"Kurtyjlee"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Meeting MEETING_LATER_THAN_TP_MEETING;","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"Kurtyjlee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"Kurtyjlee"},"content":"    static {","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"Kurtyjlee"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"Kurtyjlee"},"content":"            MEETING_LATER_THAN_TP_MEETING \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventDate(\"2023-10-19\")","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventStartTime(\"0000\")","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"Kurtyjlee"},"content":"                    .withEventEndTime(\"2359\")","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"Kurtyjlee"},"content":"                    .withPerson(\"Alice Pauline\", \"Benson Meier\")","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"Kurtyjlee"},"content":"                    .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"Kurtyjlee"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"Kurtyjlee"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"Kurtyjlee"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"nicleongyj"},"content":"    public static final Meeting MEETING_3_DAYS_AFTER_TODAY;","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"nicleongyj"},"content":"    static {","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"nicleongyj"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"nicleongyj"},"content":"            MEETING_3_DAYS_AFTER_TODAY \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"nicleongyj"},"content":"                    .withEventDate(LocalDate.now().plusDays(3).toString())","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"nicleongyj"},"content":"                    .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"nicleongyj"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"nicleongyj"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-25"},{"lineNumber":167,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":168,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"nicleongyj"},"content":"    public static final Meeting MEETING_6_DAYS_AFTER_TODAY;","lastModifiedDate":"2023-10-25"},{"lineNumber":171,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"nicleongyj"},"content":"    static {","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"nicleongyj"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":174,"author":{"gitId":"nicleongyj"},"content":"            MEETING_6_DAYS_AFTER_TODAY \u003d new MeetingBuilder().withEventName(\"TP MEETING TEST\")","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"nicleongyj"},"content":"                    .withEventDate(LocalDate.now().plusDays(6).toString())","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"nicleongyj"},"content":"                    .build();","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"nicleongyj"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"nicleongyj"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-10-25"},{"lineNumber":179,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":181,"author":{"gitId":"Kurtyjlee"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"DistractedCat":58,"nicleongyj":26,"Kurtyjlee":97}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Index INDEX_TYPICAL_PERSON_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Index INDEX_TYPICAL_GROUP_EVENT \u003d Index.fromOneBased(4);","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Kurtyjlee"},"content":"    public static final Index INDEX_EVENT_OUT_OF_BOUNDS \u003d Index.fromOneBased(100);","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Kurtyjlee":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"nicleongyj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_FRIEND;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"DistractedCat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_HUSBAND;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"nicleongyj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"Kurtyjlee"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"nicleongyj"},"content":"            .withPhone(\"94351253\").withBirthday(\"1998-01-01\")","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"DistractedCat"},"content":"            .withGroups(\"friends\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(\"1998-01-02\")","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"DistractedCat"},"content":"            .withGroups(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"nicleongyj"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(\"1998-01-03\").build();","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"nicleongyj"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(\"1998-01-04\").withGroups(\"friends\").build();","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"nicleongyj"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(\"1998-01-05\").build();","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"nicleongyj"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(\"1998-01-06\").build();","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"nicleongyj"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(\"1998-01-07\").build();","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"nicleongyj"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(\"1998-01-08\").build();","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"nicleongyj"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(\"1998-01-09\").build();","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"nicleongyj"},"content":"    // Manually added for remind command","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"nicleongyj"},"content":"    public static final Person JOHN \u003d new PersonBuilder().withName(\"John\")","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(LocalDate.now().plusDays(3).toString()).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"nicleongyj"},"content":"    public static final Person JANE \u003d new PersonBuilder().withName(\"Jane\")","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(LocalDate.now().plusDays(5).toString()).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"nicleongyj"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"nicleongyj"},"content":"            .withBirthday(VALID_BIRTHDAY_AMY).withGroups(VALID_GROUP_FRIEND).build();","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"nicleongyj"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"DistractedCat"},"content":"            .withGroups(VALID_GROUP_HUSBAND, VALID_GROUP_FRIEND)","lastModifiedDate":"2023-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"Kurtyjlee"},"content":"        for (Event event : new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Kurtyjlee"},"content":"                Arrays.asList(TypicalEvents.TP_MEETING, TypicalEvents.MEETING_WITHOUT_PERSONS,","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"Kurtyjlee"},"content":"                        TypicalEvents.TP_MEETING_WITH_PERSONS, TypicalEvents.TP_MEETING_WITH_GROUPS))) {","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"Kurtyjlee"},"content":"            ab.addEvent(event);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"Kurtyjlee"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":101,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"nicleongyj"},"content":"    public static AddressBook getBirthdayAddressBook() {","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"nicleongyj"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"nicleongyj"},"content":"        for (Person person : getBirthdayPersons()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"nicleongyj"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"nicleongyj"},"content":"        for (Event event : new ArrayList\u003c\u003e(","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"Kurtyjlee"},"content":"                Arrays.asList(TypicalEvents.MEETING_3_DAYS_AFTER_TODAY,","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Kurtyjlee"},"content":"                        TypicalEvents.MEETING_6_DAYS_AFTER_TODAY))) {","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"nicleongyj"},"content":"            ab.addEvent(event);","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"nicleongyj"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"nicleongyj"},"content":"        return ab;","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"nicleongyj"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"nicleongyj"},"content":"    public static List\u003cPerson\u003e getBirthdayPersons() {","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"nicleongyj"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(JOHN, JANE));","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"nicleongyj"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"DistractedCat":5,"nicleongyj":42,"Kurtyjlee":8,"-":63}}]

[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-T14-2/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T14-2/tp/graph/badge.svg?token\u003dOANNMRPP8F)](https://codecov.io/gh/AY2324S1-CS2103T-T14-2/tp)","lastModifiedDate":"2023-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"* **Advanced\u0026Efficient (A\u0026E)** is a desktop application that helps Emergency Department (ED) doctors in managing","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"  patient records and connecting patients to relevant departments. \u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"* Features:","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"    * Has a Graphical User Interface (GUI) while also supporting user interactions via a **Command-Line Interface (CLI)**","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"      for increased convenience and efficiency for users","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    * Allows ED doctors to easily manage and organize a database of patients through actions such as adding and deleting","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"      patient entries, editing and tagging records, and searching","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    * Runs on any computer with **Java 11** installed","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"* The project is an ongoing software project as part of the","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"  [NUS CS2103T Software Engineering course for AY23/24 Semester 1](https://nus-cs2103-ay2324s1.github.io/website/index.html).","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"    * This project is a brownfield project based on the **AddressBook-Level3** project created by the","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"      [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    * It is **written in OOP fashion** and provides a **reasonably well-written** code base (around 6 KLoC).","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"* For the detailed documentation of this project, see the **[Advanced\u0026Efficient (A\u0026E) Product Website](https://ay2324s1-cs2103t-t14-2.github.io/tp/)**.","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"wujy28":16,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"run {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"    archiveFileName \u003d \u0027AdvancedAndEfficient.jar\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AaronJT1":6,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"### Long Nguyen Tan","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"\u003cimg src\u003d\"images/longnguyentan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"[[github](https://github.com/longnguyentan)]","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"[[portfolio](team/longnguyentan.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"* Role: Developer","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"* Responsibilities: Testing, Integration","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"### Aaron Joel Tan Tze Ern","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"\u003cimg src\u003d\"images/aaronjt1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"[[github](http://github.com/aaronjt1)]","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"[[portfolio](team/aaronjt1.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"* Role: Developer, Team Lead","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"* Responsibilities: Scheduling and tracking, Git Expert","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"### Lee Thien My","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"\u003cimg src\u003d\"images/thienmy0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"[[github](http://github.com/thienmy0)]","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"[[portfolio](team/thienmy0.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"* Responsibilities: Deliverables and Deadline","lastModifiedDate":"2023-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"### Mehta Riya Mehulbhai","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"\u003cimg src\u003d\"images/riyamehta2211.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"[[github](http://github.com/RiyaMehta2211)]","lastModifiedDate":"2023-09-30"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"[[portfolio](team/riyamehta2211.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"### Wu Jingya","lastModifiedDate":"2023-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"\u003cimg src\u003d\"images/wujy28.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"[[github](http://github.com/wujy28)]","lastModifiedDate":"2023-09-30"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"[[portfolio](team/wujy28.md)]","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"AaronJT1":21,"wujy28":3,"longnguyentan":2,"RiyaMehta2211":1,"-":35}},{"path":"docs/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"participant \"deleteParser:DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"participant \"icNumber:IcNumber\" as icNumber LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"participant \"delete:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":Model\" as Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"[-\u003e LogicManager : execute(\"delete i/T0000000A\")]","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete i/T0000000A\")","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"create IcNumber","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"DeleteCommandParser -\u003e IcNumber","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"activate IcNumber","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"IcNumber --\u003e DeleteCommandParser:deleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate IcNumber","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"create DeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"DeleteCommandParser -\u003e DeleteCommand:deleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"activate deleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"DeleteCommand --\u003e DeleteCommandParser:deleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"DeleteCommandParser --\u003e AddressBookParser:parsedDeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBookParser --\u003e LogicManager:parsedDeleteCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"RiyaMehta2211":45}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"# Advanced\u0026Efficient (A\u0026E) Developer Guide","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"## **Overview**","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"Advanced\u0026Efficient helps Emergency Department (ED) doctors in logging patient reports and connecting patients with","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"relevant departments. It leverages on ED doctors fast typing skill by using the Command Line Interface (CLI).","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"This developer guide aims to guide future developers / maintainers of **Advanced\u0026Efficient** by providing the","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"implementation philosophy of the software design and features.","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"- Advanced\u0026Efficient is adapted from the [AddressBook3](https://se-education.org/addressbook-level3/) project by SE-EDU","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"  initiative.","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"- Libraries","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"  used [JavaFx](https://openjfx.io/), [JUnit5](https://github.com/junit-team/junit5), [Jackson](https://github.com/FasterXML/jackson), [PlantUML](https://plantuml.com/)","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"The ***Architecture Diagram*** given above explains the high-level design of Advanced\u0026Efficient.","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"**`Main`** (consisting of","lastModifiedDate":"2023-10-04"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"classes [`Main`](https://github.com/AY2324S1-CS2103T-T14-2/tp/blob/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"and [`MainApp`](https://github.com/AY2324S1-CS2103T-T14-2/tp/blob/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2023-10-04"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2023-10-04"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"the command `delete 1`.","lastModifiedDate":"2023-10-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2023-10-04"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2023-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2023-10-04"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2023-10-04"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2023-10-04"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-10-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"The **API** of this component is specified","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"in [`Ui.java`](https://github.com/AY2324S1-CS2103T-T14-2/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `RecordPanel`, `StatusBarFooter` etc. All these, including","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"the `MainWindow`,","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2023-10-04"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"visible GUI.","lastModifiedDate":"2023-10-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2023-10-04"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2023-10-04"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"the [`MainWindow`](https://github.com/AY2324S1-CS2103T-T14-2/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"is specified","lastModifiedDate":"2023-10-04"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-T14-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"* depends on some classes in the `Model` component, as it displays `Person` or `Record` object residing in the `Model`.","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"longnguyentan"},"content":"**API**: [`Logic.java`](https://github.com/AY2324S1-CS2103T-T14-2/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2023-10-04"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"call as an example.","lastModifiedDate":"2023-10-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of","lastModifiedDate":"2023-10-04"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2023-10-04"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-04"},{"lineNumber":141,"author":{"gitId":"thienmy0"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2023-11-11"},{"lineNumber":142,"author":{"gitId":"AaronJT1"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2023-10-04"},{"lineNumber":143,"author":{"gitId":"thienmy0"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a patient).","lastModifiedDate":"2023-11-11"},{"lineNumber":144,"author":{"gitId":"thienmy0"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-11-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"AaronJT1"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2023-10-04"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2023-10-04"},{"lineNumber":155,"author":{"gitId":"AaronJT1"},"content":"  a `Command` object.","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"AaronJT1"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2023-10-04"},{"lineNumber":157,"author":{"gitId":"AaronJT1"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"longnguyentan"},"content":"**API**: [`Model.java`](https://github.com/AY2324S1-CS2103T-T14-2/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"AaronJT1"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2023-10-04"},{"lineNumber":170,"author":{"gitId":"AaronJT1"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"AaronJT1"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-10-04"},{"lineNumber":174,"author":{"gitId":"AaronJT1"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"AaronJT1"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`,","lastModifiedDate":"2023-10-04"},{"lineNumber":180,"author":{"gitId":"AaronJT1"},"content":"which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of","lastModifiedDate":"2023-10-04"},{"lineNumber":181,"author":{"gitId":"AaronJT1"},"content":"each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"longnguyentan"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-T14-2/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-11-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":195,"author":{"gitId":"AaronJT1"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2023-10-04"},{"lineNumber":196,"author":{"gitId":"AaronJT1"},"content":"  objects.","lastModifiedDate":"2023-10-04"},{"lineNumber":197,"author":{"gitId":"AaronJT1"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2023-10-04"},{"lineNumber":198,"author":{"gitId":"AaronJT1"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2023-10-04"},{"lineNumber":199,"author":{"gitId":"AaronJT1"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2023-10-04"},{"lineNumber":200,"author":{"gitId":"AaronJT1"},"content":"  that belong to the `Model`)","lastModifiedDate":"2023-10-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"AaronJT1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"AaronJT1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"AaronJT1"},"content":"### Add patient feature","lastModifiedDate":"2023-10-30"},{"lineNumber":217,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":218,"author":{"gitId":"AaronJT1"},"content":"#### Implementation","lastModifiedDate":"2023-10-30"},{"lineNumber":219,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":220,"author":{"gitId":"AaronJT1"},"content":"The add patient operation is facilitated by `AddCommandParser`. `AddCommandParser` parses the user input string","lastModifiedDate":"2023-10-30"},{"lineNumber":221,"author":{"gitId":"AaronJT1"},"content":"and creates the `AddCommand` to be executed by the `LogicManager`. `AddCommand` extends `Command` and implements the","lastModifiedDate":"2023-10-30"},{"lineNumber":222,"author":{"gitId":"AaronJT1"},"content":"`Command#execute` method.","lastModifiedDate":"2023-10-30"},{"lineNumber":223,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":224,"author":{"gitId":"AaronJT1"},"content":"Given below is an example usage scenario and how the add patient operation is handled in A\u0026E.","lastModifiedDate":"2023-10-30"},{"lineNumber":225,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":226,"author":{"gitId":"AaronJT1"},"content":"Step 1. Assuming the application has been launched, the user enters the required fields followed by any optional fields.","lastModifiedDate":"2023-10-30"},{"lineNumber":227,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":228,"author":{"gitId":"AaronJT1"},"content":"For adding **only** required fields, the user enters `add n/John Tan i/t7654321j`, which is to add","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"AaronJT1"},"content":"a patient with `NAME \u003d John Tan` and `IC_NUMBER \u003d t1234567j`,","lastModifiedDate":"2023-11-10"},{"lineNumber":230,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":231,"author":{"gitId":"AaronJT1"},"content":"For adding **additional** optional fields, the user enters `add n/John Tan i/t7654321j p/90909090`, which is to add the","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"AaronJT1"},"content":"optional field `Phone \u003d 90909090`.","lastModifiedDate":"2023-10-30"},{"lineNumber":233,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":234,"author":{"gitId":"AaronJT1"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"AaronJT1"},"content":"**Note:** From Step 2 onwards, we will assume user enters `add n/John Tan i/t7654321j`.","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":238,"author":{"gitId":"AaronJT1"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":240,"author":{"gitId":"AaronJT1"},"content":"Step 2. `LogicManager#execute` would first invoke `AddressBookParser#parseCommand` which splits the","lastModifiedDate":"2023-10-30"},{"lineNumber":241,"author":{"gitId":"AaronJT1"},"content":"command word `add` and the argument `n/John Tan i/t7654321j`. After splitting, `AddressBookParser#parseCommand` would","lastModifiedDate":"2023-11-10"},{"lineNumber":242,"author":{"gitId":"AaronJT1"},"content":"identify","lastModifiedDate":"2023-11-10"},{"lineNumber":243,"author":{"gitId":"AaronJT1"},"content":"that the command is `Add` and instantiate `AddCommandParser` and call its `AddCommandParser#parse` to parse the","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"AaronJT1"},"content":"argument accordingly.","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":246,"author":{"gitId":"AaronJT1"},"content":"Step 3. `AddCommandParser#parse` will call `AddCommandParser#createPatient` method to create the patient with the","lastModifiedDate":"2023-11-10"},{"lineNumber":247,"author":{"gitId":"AaronJT1"},"content":"relevant fields and fills all optional fields","lastModifiedDate":"2023-11-10"},{"lineNumber":248,"author":{"gitId":"AaronJT1"},"content":"with default values otherwise. It is then passed as an argument to instantiate the `AddCommand`, which is then returned","lastModifiedDate":"2023-11-10"},{"lineNumber":249,"author":{"gitId":"AaronJT1"},"content":"by","lastModifiedDate":"2023-11-10"},{"lineNumber":250,"author":{"gitId":"AaronJT1"},"content":"`AddCommandParser#parse`","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":252,"author":{"gitId":"AaronJT1"},"content":"Step 4. `LogicManager#execute` now invokes `AddCommand#execute` which checks for duplicate `Patient`. `model#addPatient`","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"AaronJT1"},"content":"is then called to add the `Patient` into the address book. It then returns a `CommandResult` stating the patient has","lastModifiedDate":"2023-11-10"},{"lineNumber":254,"author":{"gitId":"AaronJT1"},"content":"been listed.","lastModifiedDate":"2023-11-10"},{"lineNumber":255,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":256,"author":{"gitId":"AaronJT1"},"content":"\u003cpuml src\u003d\"diagrams/AddSequenceDiagram.puml\" alt\u003d\"AddSequenceDiagram\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":258,"author":{"gitId":"AaronJT1"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-30"},{"lineNumber":259,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":260,"author":{"gitId":"AaronJT1"},"content":"**Aspect: How to handle required / optional inputs from users:**","lastModifiedDate":"2023-11-09"},{"lineNumber":261,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":262,"author":{"gitId":"AaronJT1"},"content":"* **Alternative 1 (current choice):** Create `Patient` with the required fields and fill non-given","lastModifiedDate":"2023-11-09"},{"lineNumber":263,"author":{"gitId":"AaronJT1"},"content":"  optional inputs with default values.","lastModifiedDate":"2023-11-09"},{"lineNumber":264,"author":{"gitId":"AaronJT1"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-10-30"},{"lineNumber":265,"author":{"gitId":"AaronJT1"},"content":"    * Cons: Since default values have to be valid as well, default values may seem too similar to actual value.","lastModifiedDate":"2023-11-09"},{"lineNumber":266,"author":{"gitId":"AaronJT1"},"content":"      Eg. Default value for `Gender` is `OTHER`, which is an actual value as well.","lastModifiedDate":"2023-11-09"},{"lineNumber":267,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":268,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":269,"author":{"gitId":"AaronJT1"},"content":"* **Alternative 2:** Use Java `Optional` class to handle fields.","lastModifiedDate":"2023-11-09"},{"lineNumber":270,"author":{"gitId":"AaronJT1"},"content":"    * Pros: Implementation is neater and fields with no values can be represented by a warning message instead","lastModifiedDate":"2023-11-09"},{"lineNumber":271,"author":{"gitId":"AaronJT1"},"content":"      of a default value.","lastModifiedDate":"2023-11-09"},{"lineNumber":272,"author":{"gitId":"AaronJT1"},"content":"    * Cons: Implementation is difficult and `Optional` class have to be implemented correctly to ensure it works","lastModifiedDate":"2023-11-09"},{"lineNumber":273,"author":{"gitId":"AaronJT1"},"content":"      with other components of the codebase.","lastModifiedDate":"2023-11-09"},{"lineNumber":274,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":275,"author":{"gitId":"AaronJT1"},"content":"### View patient feature","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"AaronJT1"},"content":"#### Implementation","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"AaronJT1"},"content":"The view patient operation is facilitated by `ViewCommandParser`. `ViewCommandParser` parses the user input string","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"AaronJT1"},"content":"and creates the `ViewCommand` to be executed by the `LogicManager`. `ViewCommand` extends `Command` and implements the","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"AaronJT1"},"content":"`Command#execute` method.","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"AaronJT1"},"content":"Given below is an example usage scenario and how the view patient operation is handled in A\u0026E.","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":285,"author":{"gitId":"AaronJT1"},"content":"Step 1. Assuming the application has been launched, the user enters `view i/t1234567j`, which is to find","lastModifiedDate":"2023-10-25"},{"lineNumber":286,"author":{"gitId":"AaronJT1"},"content":"the specific patient with `IC_NUMBER \u003d t1234567j`. This invokes `LogicManager#execute` to execute the logic of the","lastModifiedDate":"2023-11-10"},{"lineNumber":287,"author":{"gitId":"AaronJT1"},"content":"command.","lastModifiedDate":"2023-10-25"},{"lineNumber":288,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":289,"author":{"gitId":"AaronJT1"},"content":"Step 2. `LogicManager#execute` would first invoke `AddressBookParser#parseCommand` which splits the","lastModifiedDate":"2023-10-25"},{"lineNumber":290,"author":{"gitId":"AaronJT1"},"content":"command word `view` and the argument `i/t1234567j`. After splitting, `AddressBookParser#parseCommand` would identify","lastModifiedDate":"2023-10-25"},{"lineNumber":291,"author":{"gitId":"AaronJT1"},"content":"that the command is `View` and instantiate `ViewCommandParser` and call its `ViewCommandParser#parse` to parse the","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"AaronJT1"},"content":"argument accordingly.","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":294,"author":{"gitId":"AaronJT1"},"content":"Step 3. `PatientWithIcNumberPredicate` predicate, which checks if a `Patient` has the `IC_NUMBER` is created. It is","lastModifiedDate":"2023-11-10"},{"lineNumber":295,"author":{"gitId":"AaronJT1"},"content":"then passed as an argument along with `IC_NUMBER` to instantiate the `ViewCommand`, which is then returned by","lastModifiedDate":"2023-11-10"},{"lineNumber":296,"author":{"gitId":"AaronJT1"},"content":"`ViewCommandParser#parse`","lastModifiedDate":"2023-10-25"},{"lineNumber":297,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":298,"author":{"gitId":"AaronJT1"},"content":"Step 5. `LogicManager#execute` now invokes `ViewCommand#execute` which calls `model#updateFilteredPatientList` with","lastModifiedDate":"2023-10-25"},{"lineNumber":299,"author":{"gitId":"AaronJT1"},"content":"`PatientWithIcNumberPredicate` as an argument. This will update the displayed filter list to the predicate.","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"AaronJT1"},"content":"It then returns a `CommandResult` stating the patient has been listed.","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":302,"author":{"gitId":"AaronJT1"},"content":"\u003cpuml src\u003d\"diagrams/ViewSequenceDiagram.puml\" alt\u003d\"ViewSequenceDiagram\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":303,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":304,"author":{"gitId":"AaronJT1"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-25"},{"lineNumber":305,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":306,"author":{"gitId":"AaronJT1"},"content":"**Aspect: How to display the specified patient:**","lastModifiedDate":"2023-10-25"},{"lineNumber":307,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":308,"author":{"gitId":"AaronJT1"},"content":"* **Alternative 1 (current choice):** Utilize current filteredPatientList display to","lastModifiedDate":"2023-10-25"},{"lineNumber":309,"author":{"gitId":"AaronJT1"},"content":"  display the patient.","lastModifiedDate":"2023-10-25"},{"lineNumber":310,"author":{"gitId":"AaronJT1"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-10-25"},{"lineNumber":311,"author":{"gitId":"AaronJT1"},"content":"    * Cons: Similar way in displaying of patient(s) may lead to confusion between commands.","lastModifiedDate":"2023-10-25"},{"lineNumber":312,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":313,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":314,"author":{"gitId":"AaronJT1"},"content":"* **Alternative 2:** Create a new set of JavaFx controls to display that patient differently","lastModifiedDate":"2023-10-25"},{"lineNumber":315,"author":{"gitId":"AaronJT1"},"content":"  from the current filteredPatientList display.","lastModifiedDate":"2023-10-25"},{"lineNumber":316,"author":{"gitId":"AaronJT1"},"content":"    * Pros: New display can be customisable for users\u0027 needs.","lastModifiedDate":"2023-10-25"},{"lineNumber":317,"author":{"gitId":"AaronJT1"},"content":"      Cons: New display have to be implemented correctly to integrate with","lastModifiedDate":"2023-10-25"},{"lineNumber":318,"author":{"gitId":"AaronJT1"},"content":"      existing displays.","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":320,"author":{"gitId":"thienmy0"},"content":"### Edit Record feature","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"thienmy0"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"thienmy0"},"content":"The edit record operation is facilitated by `RecordCommandParser`. `RecordCommandParser` parses the user input string","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"AaronJT1"},"content":"and creates the `RecordCommand` to be executed by the `LogicManager`. `RecordCommand` extends `Command` and implements","lastModifiedDate":"2023-11-10"},{"lineNumber":326,"author":{"gitId":"thienmy0"},"content":"the `Command#execute` method.","lastModifiedDate":"2023-11-11"},{"lineNumber":327,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"thienmy0"},"content":"Given below is an example usage scenario and how the edit record operation is handled in A\u0026E.","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"thienmy0"},"content":"Step 1. Assuming the application has been launched, the user enters `record i/T0201234A o/Broken Arm di/Hairline","lastModifiedDate":"2023-11-11"},{"lineNumber":331,"author":{"gitId":"thienmy0"},"content":"fracture tp/Cast for 2 days`, which is to edit the record of the specific patient with `IC_NUMBER \u003d T0201234A` such that","lastModifiedDate":"2023-11-11"},{"lineNumber":332,"author":{"gitId":"thienmy0"},"content":"`Initial Observations \u003d Broken Arm`, `Diagnosis \u003d Hairline fracture`, and `Treatment Plan \u003d Cast for 2 days`. This","lastModifiedDate":"2023-11-11"},{"lineNumber":333,"author":{"gitId":"thienmy0"},"content":"invokes `LogicManager#execute` to execute the logic of the command.","lastModifiedDate":"2023-11-11"},{"lineNumber":334,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"thienmy0"},"content":"Step 2. `LogicManager#execute` would first invoke `AddressBookParser#parseCommand` which splits the command word","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"thienmy0"},"content":"`record` and the arguments `i/T0201234A`, `o/Broken Arm`, `di/Hairline fracture`, and `tp/Cast for 2 days`. After","lastModifiedDate":"2023-10-27"},{"lineNumber":337,"author":{"gitId":"thienmy0"},"content":"splitting, `AddressBookParser#parseCommand` would identify that the command is `Record` and instantiate","lastModifiedDate":"2023-10-27"},{"lineNumber":338,"author":{"gitId":"thienmy0"},"content":"`RecordCommandParser` and call its `RecordCommandParser#parse` to parse the arguments accordingly.","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"thienmy0"},"content":"Step 3. `RecordCommandParser#parse` would instantiate `EditRecordDescriptor` from `RecordCommand` and map the","lastModifiedDate":"2023-11-11"},{"lineNumber":341,"author":{"gitId":"thienmy0"},"content":"`IC_NUMBER` prefix to its argument, `T0201234A`, the `INITIAL_OBSERVATIONS` prefix to its argument `Broken Arm`, the","lastModifiedDate":"2023-11-11"},{"lineNumber":342,"author":{"gitId":"thienmy0"},"content":"`DIAGNOSIS` prefix to its argument `Hairline fracture`, and the `TREATMENT_PLAN` prefix to its argument","lastModifiedDate":"2023-11-11"},{"lineNumber":343,"author":{"gitId":"thienmy0"},"content":"`Cast for 2 days` using `ArgumentMultimap`. The `ArgumentMultimap` would then be used to identify the `IC_NUMBER` and a","lastModifiedDate":"2023-11-11"},{"lineNumber":344,"author":{"gitId":"thienmy0"},"content":"`ParseException` is thrown if command inputs are invalid. The `ArgumentMultimap` also invokes","lastModifiedDate":"2023-11-11"},{"lineNumber":345,"author":{"gitId":"thienmy0"},"content":"`ArgumentMultimap#isPresent` to check if the other prefixes for `INITIAL_OBSERVATIONS`, `DIAGNOSIS` and `TREATMENT_PLAN`","lastModifiedDate":"2023-11-11"},{"lineNumber":346,"author":{"gitId":"thienmy0"},"content":"are present. If `true` is returned, the arguments will be passed into the `EditRecordDescriptor` object.","lastModifiedDate":"2023-11-11"},{"lineNumber":347,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":348,"author":{"gitId":"AaronJT1"},"content":"Step 4. The `EditRecordDescriptor` object calls `EditRecordDescriptor#isAnyFieldEdited`, which checks if any of the","lastModifiedDate":"2023-11-10"},{"lineNumber":349,"author":{"gitId":"thienmy0"},"content":"fields of Record has been edited, and throws a `ParseException` if `false` is returned. It is then passed as an argument","lastModifiedDate":"2023-11-11"},{"lineNumber":350,"author":{"gitId":"thienmy0"},"content":"along with `IC_NUMBER` to instantiate the `RecordCommand`, which is then returned by `RecordCommandParser#parse`.","lastModifiedDate":"2023-11-11"},{"lineNumber":351,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":352,"author":{"gitId":"thienmy0"},"content":"Step 5. `LogicManager#execute` now invokes `RecordCommand#execute` which gets the specified Patient and their Record","lastModifiedDate":"2023-11-11"},{"lineNumber":353,"author":{"gitId":"thienmy0"},"content":"according to the `IC_NUMBER`. Then, `RecordCommand#createEditedRecord` is called with the specified Patient\u0027s `Record`","lastModifiedDate":"2023-11-11"},{"lineNumber":354,"author":{"gitId":"thienmy0"},"content":"and the `EditRecordDescriptor` object which contains the values of fields to be edited. Record fields to be edited are","lastModifiedDate":"2023-11-11"},{"lineNumber":355,"author":{"gitId":"thienmy0"},"content":"replaced by values stored in the `EditRecordDescriptor`. Meanwhile, fields that are not to be edited will keep their","lastModifiedDate":"2023-11-11"},{"lineNumber":356,"author":{"gitId":"thienmy0"},"content":"current values. This is facilitated through the `orElse` method of the `Optional` class. Then, `RecordCommand#execute`","lastModifiedDate":"2023-11-11"},{"lineNumber":357,"author":{"gitId":"thienmy0"},"content":"calls `model#updateFilteredPatientList` to update the displayed filter list to show all patients. Finally,","lastModifiedDate":"2023-11-11"},{"lineNumber":358,"author":{"gitId":"thienmy0"},"content":"`RecordCommand#execute` returns a `CommandResult` stating the patient `IC_NUMBER` and edited Record details.","lastModifiedDate":"2023-11-11"},{"lineNumber":359,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":360,"author":{"gitId":"thienmy0"},"content":"The following sequence diagram summarizes the above-mentioned steps.","lastModifiedDate":"2023-11-11"},{"lineNumber":361,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":362,"author":{"gitId":"thienmy0"},"content":"\u003cpuml src\u003d\"diagrams/RecordSequenceDiagram.puml\" alt\u003d\"RecordSequenceDiagram\" /\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":363,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":364,"author":{"gitId":"thienmy0"},"content":"#### Design considerations:","lastModifiedDate":"2023-11-11"},{"lineNumber":365,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":366,"author":{"gitId":"thienmy0"},"content":"**Aspect: How to edit the different fields of Record:**","lastModifiedDate":"2023-11-11"},{"lineNumber":367,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":368,"author":{"gitId":"thienmy0"},"content":"* **Alternative 1 (current choice):** Create `EditRecordDescriptor` nested class to store the details to edit the","lastModifiedDate":"2023-11-11"},{"lineNumber":369,"author":{"gitId":"thienmy0"},"content":"    patient record with.","lastModifiedDate":"2023-11-11"},{"lineNumber":370,"author":{"gitId":"thienmy0"},"content":"    * Pros: Ensures that previous inputs are kept if user does not edit a specific field.","lastModifiedDate":"2023-11-11"},{"lineNumber":371,"author":{"gitId":"thienmy0"},"content":"    * Cons: Implementation would be a little more troublesome.","lastModifiedDate":"2023-11-11"},{"lineNumber":372,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":373,"author":{"gitId":"thienmy0"},"content":"* **Alternative 2:** Directly use `Patient` constructor with user input and replace non-given fields with default","lastModifiedDate":"2023-11-11"},{"lineNumber":374,"author":{"gitId":"thienmy0"},"content":"    values.","lastModifiedDate":"2023-11-11"},{"lineNumber":375,"author":{"gitId":"thienmy0"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-11-11"},{"lineNumber":376,"author":{"gitId":"thienmy0"},"content":"    * Cons: This would overwrite all fields in the previous Record even if user did not specify to edit a certain field","lastModifiedDate":"2023-11-11"},{"lineNumber":377,"author":{"gitId":"thienmy0"},"content":"      in their input.","lastModifiedDate":"2023-11-11"},{"lineNumber":378,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"wujy28"},"content":"### Assign department feature","lastModifiedDate":"2023-10-27"},{"lineNumber":380,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"wujy28"},"content":"#### AssignedDepartment attribute","lastModifiedDate":"2023-10-27"},{"lineNumber":382,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"wujy28"},"content":"The `AssignedDepartment` attribute of a patient in A\u0026E is represented by a stored `Department` value. `Department` is","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"wujy28"},"content":"an enumeration that encapsulates all the predefined hospital department values stored by the system and available","lastModifiedDate":"2023-10-27"},{"lineNumber":385,"author":{"gitId":"wujy28"},"content":"to the user. The list of valid departments can be found in the appendix of the User Guide.","lastModifiedDate":"2023-10-27"},{"lineNumber":386,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":387,"author":{"gitId":"wujy28"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":388,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":389,"author":{"gitId":"wujy28"},"content":"**Aspect: How to represent a department in the system:**","lastModifiedDate":"2023-10-27"},{"lineNumber":390,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":391,"author":{"gitId":"wujy28"},"content":"* **Alternative 1 (current choice):** Use Java Enumerations.","lastModifiedDate":"2023-10-27"},{"lineNumber":392,"author":{"gitId":"wujy28"},"content":"    * Pros: Ensures type safety. Discrete constants allow for usage in switch-cases, and thus can potentially be used","lastModifiedDate":"2023-10-27"},{"lineNumber":393,"author":{"gitId":"wujy28"},"content":"      to easily categorize patients in future features.","lastModifiedDate":"2023-10-27"},{"lineNumber":394,"author":{"gitId":"wujy28"},"content":"    * Cons: Does not support user-defined categories or departments.","lastModifiedDate":"2023-10-27"},{"lineNumber":395,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":396,"author":{"gitId":"wujy28"},"content":"* **Alternative 2:** Using an abstract Department class and inheritance.","lastModifiedDate":"2023-10-27"},{"lineNumber":397,"author":{"gitId":"wujy28"},"content":"    * Pros: Can be made to support user-defined departments. Can specify different behavior for different","lastModifiedDate":"2023-10-27"},{"lineNumber":398,"author":{"gitId":"wujy28"},"content":"      types of departments.","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"wujy28"},"content":"    * Cons: Implementation is more complicated when it comes to storing and keeping track of all the different","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"wujy28"},"content":"      subclasses or limiting valid department values.","lastModifiedDate":"2023-10-27"},{"lineNumber":401,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":402,"author":{"gitId":"wujy28"},"content":"* **Alternative 3:** Using Strings.","lastModifiedDate":"2023-10-27"},{"lineNumber":403,"author":{"gitId":"wujy28"},"content":"    * Pros: Very easy to implement.","lastModifiedDate":"2023-10-27"},{"lineNumber":404,"author":{"gitId":"wujy28"},"content":"    * Cons: Values are not exhaustive. Does not support unique behavior for each type of department.","lastModifiedDate":"2023-10-27"},{"lineNumber":405,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":406,"author":{"gitId":"wujy28"},"content":"#### Implementation of `assign`","lastModifiedDate":"2023-10-27"},{"lineNumber":407,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":408,"author":{"gitId":"wujy28"},"content":"The assign department operation is facilitated by the `AssignCommand` and `AssignCommandParser` classes, similar","lastModifiedDate":"2023-10-27"},{"lineNumber":409,"author":{"gitId":"wujy28"},"content":"to `ViewCommand` as mentioned above. `AssignCommand` extends `Command` and overrides `Command#execute` to perform","lastModifiedDate":"2023-10-27"},{"lineNumber":410,"author":{"gitId":"wujy28"},"content":"its intended behavior, invoked by the `LogicManager` class. `AssignCommandParser` is responsible for parsing the","lastModifiedDate":"2023-10-27"},{"lineNumber":411,"author":{"gitId":"AaronJT1"},"content":"string of arguments containing an IC_NUMBER and department inputted by the user, to create an `AssignCommand` object.","lastModifiedDate":"2023-11-10"},{"lineNumber":412,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":413,"author":{"gitId":"wujy28"},"content":"The following sequence diagram summarizes what happens when `AssignCommand#execute` is invoked.","lastModifiedDate":"2023-10-27"},{"lineNumber":414,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":415,"author":{"gitId":"wujy28"},"content":"\u003cpuml src\u003d\"diagrams/AssignSequenceDiagram.puml\" alt\u003d\"AssignSequenceDiagram\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":416,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"AaronJT1"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2023-10-04"},{"lineNumber":422,"author":{"gitId":"AaronJT1"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2023-10-04"},{"lineNumber":423,"author":{"gitId":"AaronJT1"},"content":"following operations:","lastModifiedDate":"2023-10-04"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"AaronJT1"},"content":"* `VersionedAddressBook#commit()`— Saves the current address book state in its history.","lastModifiedDate":"2023-10-04"},{"lineNumber":426,"author":{"gitId":"AaronJT1"},"content":"* `VersionedAddressBook#undo()`— Restores the previous address book state from its history.","lastModifiedDate":"2023-10-04"},{"lineNumber":427,"author":{"gitId":"AaronJT1"},"content":"* `VersionedAddressBook#redo()`— Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-04"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"AaronJT1"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2023-10-04"},{"lineNumber":430,"author":{"gitId":"AaronJT1"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-10-04"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"AaronJT1"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2023-10-04"},{"lineNumber":435,"author":{"gitId":"AaronJT1"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-10-04"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"AaronJT1"},"content":"Step 2. The user executes `delete 5` command to delete the 5th patient in the address book. The `delete` command","lastModifiedDate":"2023-10-05"},{"lineNumber":440,"author":{"gitId":"AaronJT1"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2023-10-04"},{"lineNumber":441,"author":{"gitId":"AaronJT1"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2023-10-04"},{"lineNumber":442,"author":{"gitId":"AaronJT1"},"content":"state.","lastModifiedDate":"2023-10-04"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"AaronJT1"},"content":"Step 3. The user executes `add n/David …​` to add a new patient. The `add` command also","lastModifiedDate":"2023-10-05"},{"lineNumber":447,"author":{"gitId":"AaronJT1"},"content":"calls `Model#commitAddressBook()`, causing another modified address book state to be saved into","lastModifiedDate":"2023-10-04"},{"lineNumber":448,"author":{"gitId":"AaronJT1"},"content":"the `addressBookStateList`.","lastModifiedDate":"2023-10-04"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"AaronJT1"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will","lastModifiedDate":"2023-10-04"},{"lineNumber":455,"author":{"gitId":"AaronJT1"},"content":"not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-10-04"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":457,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"AaronJT1"},"content":"Step 4. The user now decides that adding the patient was a mistake, and decides to undo that action by executing","lastModifiedDate":"2023-10-05"},{"lineNumber":460,"author":{"gitId":"AaronJT1"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2023-10-04"},{"lineNumber":461,"author":{"gitId":"AaronJT1"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-10-04"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":466,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"AaronJT1"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no","lastModifiedDate":"2023-10-04"},{"lineNumber":469,"author":{"gitId":"AaronJT1"},"content":"previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the","lastModifiedDate":"2023-10-04"},{"lineNumber":470,"author":{"gitId":"AaronJT1"},"content":"case. If so, it will return an error to the user rather","lastModifiedDate":"2023-10-04"},{"lineNumber":471,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"AaronJT1"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the","lastModifiedDate":"2023-10-04"},{"lineNumber":482,"author":{"gitId":"AaronJT1"},"content":"lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-04"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":484,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"AaronJT1"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2023-10-04"},{"lineNumber":487,"author":{"gitId":"AaronJT1"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":491,"author":{"gitId":"AaronJT1"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address","lastModifiedDate":"2023-10-04"},{"lineNumber":492,"author":{"gitId":"AaronJT1"},"content":"book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()`","lastModifiedDate":"2023-10-04"},{"lineNumber":493,"author":{"gitId":"AaronJT1"},"content":"to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-10-04"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"AaronJT1"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2023-10-04"},{"lineNumber":498,"author":{"gitId":"AaronJT1"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2023-10-04"},{"lineNumber":499,"author":{"gitId":"AaronJT1"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-10-04"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"AaronJT1"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2023-10-04"},{"lineNumber":504,"author":{"gitId":"AaronJT1"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2023-10-04"},{"lineNumber":505,"author":{"gitId":"AaronJT1"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2023-10-04"},{"lineNumber":506,"author":{"gitId":"AaronJT1"},"content":"desktop applications follow.","lastModifiedDate":"2023-10-04"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"AaronJT1"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the patient being deleted).","lastModifiedDate":"2023-10-05"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"longnguyentan"},"content":"### Data archiving","lastModifiedDate":"2023-11-11"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"longnguyentan"},"content":"The Data Archiving feature in Advanced\u0026Efficient is designed to ensure that historical patient records are maintained in a safe, accessible, and organized manner. This feature is crucial for historical reference and data analysis.","lastModifiedDate":"2023-11-11"},{"lineNumber":532,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":533,"author":{"gitId":"longnguyentan"},"content":"#### Implementation Strategy","lastModifiedDate":"2023-11-11"},{"lineNumber":534,"author":{"gitId":"longnguyentan"},"content":"1. **Archive Format**: Patient records will be archived in a compressed JSON format to save space and maintain data confidentiality.","lastModifiedDate":"2023-11-11"},{"lineNumber":535,"author":{"gitId":"longnguyentan"},"content":"2. **Trigger and Storage**: Archiving will be triggered automatically. The system will automatically update the JSON file (`AandE.json`) when user modify any patient or record.","lastModifiedDate":"2023-11-11"},{"lineNumber":536,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":537,"author":{"gitId":"longnguyentan"},"content":"#### Example of archived file","lastModifiedDate":"2023-11-11"},{"lineNumber":538,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":539,"author":{"gitId":"longnguyentan"},"content":"An archived file (`AandE.json`) is represented in JSON as follows:","lastModifiedDate":"2023-11-11"},{"lineNumber":540,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":541,"author":{"gitId":"longnguyentan"},"content":"```json","lastModifiedDate":"2023-11-11"},{"lineNumber":542,"author":{"gitId":"longnguyentan"},"content":"{","lastModifiedDate":"2023-11-11"},{"lineNumber":543,"author":{"gitId":"longnguyentan"},"content":"  \"patients\" : [ {","lastModifiedDate":"2023-11-11"},{"lineNumber":544,"author":{"gitId":"longnguyentan"},"content":"    \"name\" : \"John Doe\",","lastModifiedDate":"2023-11-11"},{"lineNumber":545,"author":{"gitId":"longnguyentan"},"content":"    \"phone\" : \"00000000\",","lastModifiedDate":"2023-11-11"},{"lineNumber":546,"author":{"gitId":"longnguyentan"},"content":"    \"email\" : \"default_email@gmail.com\",","lastModifiedDate":"2023-11-11"},{"lineNumber":547,"author":{"gitId":"longnguyentan"},"content":"    \"gender\" : \"MALE\",","lastModifiedDate":"2023-11-11"},{"lineNumber":548,"author":{"gitId":"longnguyentan"},"content":"    \"icNumber\" : \"T0123456A\",","lastModifiedDate":"2023-11-11"},{"lineNumber":549,"author":{"gitId":"longnguyentan"},"content":"    \"birthday\" : \"01/01/1990\",","lastModifiedDate":"2023-11-11"},{"lineNumber":550,"author":{"gitId":"longnguyentan"},"content":"    \"address\" : \"No address was added\",","lastModifiedDate":"2023-11-11"},{"lineNumber":551,"author":{"gitId":"longnguyentan"},"content":"    \"priority\" : \"NIL\",","lastModifiedDate":"2023-11-11"},{"lineNumber":552,"author":{"gitId":"longnguyentan"},"content":"    \"assignedDepartment\" : \"Default\",","lastModifiedDate":"2023-11-11"},{"lineNumber":553,"author":{"gitId":"longnguyentan"},"content":"    \"tags\" : [ ],","lastModifiedDate":"2023-11-11"},{"lineNumber":554,"author":{"gitId":"longnguyentan"},"content":"    \"initialObservations\" : \"No initial observations given\",","lastModifiedDate":"2023-11-11"},{"lineNumber":555,"author":{"gitId":"longnguyentan"},"content":"    \"diagnosis\" : \"No diagnosis given\",","lastModifiedDate":"2023-11-11"},{"lineNumber":556,"author":{"gitId":"longnguyentan"},"content":"    \"treatmentPlan\" : \"No treatment plan given\"","lastModifiedDate":"2023-11-11"},{"lineNumber":557,"author":{"gitId":"longnguyentan"},"content":"  }]","lastModifiedDate":"2023-11-11"},{"lineNumber":558,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-11-11"},{"lineNumber":559,"author":{"gitId":"longnguyentan"},"content":"```","lastModifiedDate":"2023-11-11"},{"lineNumber":560,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":561,"author":{"gitId":"longnguyentan"},"content":"- **patient**: This field contains the details of the patient associated with the record. The format for a patient is as","lastModifiedDate":"2023-11-11"},{"lineNumber":562,"author":{"gitId":"longnguyentan"},"content":"  described in the earlier sections of this guide.","lastModifiedDate":"2023-11-11"},{"lineNumber":563,"author":{"gitId":"longnguyentan"},"content":"- **initialObservations**: A string that stores the initial observations made by the medical professional when the","lastModifiedDate":"2023-11-11"},{"lineNumber":564,"author":{"gitId":"longnguyentan"},"content":"  patient was examined.","lastModifiedDate":"2023-11-11"},{"lineNumber":565,"author":{"gitId":"longnguyentan"},"content":"- **diagnosis**: A string that details the medical diagnosis after thorough examination.","lastModifiedDate":"2023-11-11"},{"lineNumber":566,"author":{"gitId":"longnguyentan"},"content":"- **treatmentPlan**: The recommended treatment plan for the diagnosed ailment.","lastModifiedDate":"2023-11-11"},{"lineNumber":567,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":568,"author":{"gitId":"longnguyentan"},"content":"It\u0027s worth noting that the default values for `initialObservations`, `diagnosis`, and `treatmentPlan` are set to","lastModifiedDate":"2023-11-11"},{"lineNumber":569,"author":{"gitId":"longnguyentan"},"content":"represent that no data was provided. This allows for the record to be initialized even if not all fields are populated","lastModifiedDate":"2023-11-11"},{"lineNumber":570,"author":{"gitId":"longnguyentan"},"content":"initially.","lastModifiedDate":"2023-11-11"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":578,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":579,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":580,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":581,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"wujy28"},"content":"* has to log patient records into the system","lastModifiedDate":"2023-10-06"},{"lineNumber":592,"author":{"gitId":"wujy28"},"content":"* has to assign patients to the relevant departments","lastModifiedDate":"2023-10-06"},{"lineNumber":593,"author":{"gitId":"AaronJT1"},"content":"* has to work under time pressure during an emergency","lastModifiedDate":"2023-10-04"},{"lineNumber":594,"author":{"gitId":"wujy28"},"content":"* faces frequent interruption due to emergencies","lastModifiedDate":"2023-10-06"},{"lineNumber":595,"author":{"gitId":"wujy28"},"content":"* has an above average typing speed","lastModifiedDate":"2023-10-06"},{"lineNumber":596,"author":{"gitId":"AaronJT1"},"content":"* prefers typing over mouse/voice commands","lastModifiedDate":"2023-10-04"},{"lineNumber":597,"author":{"gitId":"wujy28"},"content":"* is comfortable using CLI apps","lastModifiedDate":"2023-10-06"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"AaronJT1"},"content":"**Value proposition**: Advanced\u0026Efficient helps Emergency Department (ED) doctors in logging patient reports and","lastModifiedDate":"2023-10-04"},{"lineNumber":600,"author":{"gitId":"AaronJT1"},"content":"assigning patients to relevant departments under time pressure during an emergency, using the CLI.","lastModifiedDate":"2023-10-04"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"| Priority | As a …​   | I want to …​                                                                                       | So that I can…​                                                                                                                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"wujy28"},"content":"|----------|-----------|----------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-06"},{"lineNumber":608,"author":{"gitId":"AaronJT1"},"content":"| `* * *`  | ED Doctor | View the record of a patient                                                                       | Keep track of every patient’s condition and treatment plan                                                                                            |","lastModifiedDate":"2023-10-04"},{"lineNumber":609,"author":{"gitId":"AaronJT1"},"content":"| `* * *`  | ED Doctor | Assign a patient to a department                                                                   | Keep track of where each patient is receiving further treatment                                                                                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":610,"author":{"gitId":"AaronJT1"},"content":"| `* * *`  | ED Doctor | Edit the existing record of a patient                                                              | Keep the patient’s record relevant and up-to-date                                                                                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":611,"author":{"gitId":"wujy28"},"content":"| `* * *`  | ED Doctor | Delete a patient from my list                                                                      | Declutter and only keep the active patients on my list                                                                                                |","lastModifiedDate":"2023-10-06"},{"lineNumber":612,"author":{"gitId":"AaronJT1"},"content":"| `* * *`  | ED Doctor | Add a patient to the list                                                                          | -                                                                                                                                                     |","lastModifiedDate":"2023-10-04"},{"lineNumber":613,"author":{"gitId":"wujy28"},"content":"| `* * *`  | ED Doctor | View the list of patients                                                                          | -                                                                                                                                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":614,"author":{"gitId":"AaronJT1"},"content":"| `* *`    | ED Doctor | Undo my latest action                                                                              | Quickly revert a mistake I made                                                                                                                       |","lastModifiedDate":"2023-10-04"},{"lineNumber":615,"author":{"gitId":"AaronJT1"},"content":"| `* *`    | ED Doctor | Tag patients                                                                                       | Better organize patients into categories so as to better keep track of them                                                                           |","lastModifiedDate":"2023-10-04"},{"lineNumber":616,"author":{"gitId":"AaronJT1"},"content":"| `* *`    | ED Doctor | Assign the priority to the patient with respect to the severity of the case                        | keep track of the more critical cases                                                                                                                 |","lastModifiedDate":"2023-11-10"},{"lineNumber":617,"author":{"gitId":"AaronJT1"},"content":"| `* *`    | ED Doctor | Find patients from the list that match a given property (e.g. `NAME`, `IC_NUMBER`, `PRIORITY`)     | Quickly narrow down the list to view the patients of my interest                                                                                      |","lastModifiedDate":"2023-11-10"},{"lineNumber":618,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Quickly view the availability status of a doctor                                                   | Assign them patients                                                                                                                                  |","lastModifiedDate":"2023-10-04"},{"lineNumber":619,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Message and communicate with other healthcare staff                                                | Coordinate patient care effectively                                                                                                                   |","lastModifiedDate":"2023-10-04"},{"lineNumber":620,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Sort my list of active patients by priority/severity                                               | Provide timely treatment to the patients in critical condition                                                                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":621,"author":{"gitId":"wujy28"},"content":"| `*`      | ED Doctor | Retrieve the patient’s medical history from the national database after logging them in the system | Gather more information to make a more informed diagnosis and as such provide effective treatment for the patient                                     |","lastModifiedDate":"2023-10-06"},{"lineNumber":622,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Customize shortcuts for my most commonly-used commands                                             | Make my workflow more efficient and convenient                                                                                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":623,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Backup the data in my app                                                                          | Ensure that all the patient information is not completely lost in the event that the data file gets corrupted or the computer’s hardware malfunctions |","lastModifiedDate":"2023-10-04"},{"lineNumber":624,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Login into the system only using hospital credentials                                              | Ensure the confidentiality and security of patient information and limit its access to hospital personnel only                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":625,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Securely send a patient’s records to the relevant department                                       | Ensure that the other department I am handing my patient to is on the same page as to/updated on the current condition of the patient                 |","lastModifiedDate":"2023-10-04"},{"lineNumber":626,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Access clinical guidelines and resources within the application                                    | Diagnose and treat patients with greater ease                                                                                                         |","lastModifiedDate":"2023-10-04"},{"lineNumber":627,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | View real-time vitals of patients                                                                  | Monitor patient’s condition efficiently                                                                                                               |","lastModifiedDate":"2023-10-04"},{"lineNumber":628,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Receive notifications for critical situations                                                      | Provide timely intervention and efficiently handle critical patient conditions                                                                        |","lastModifiedDate":"2023-10-04"},{"lineNumber":629,"author":{"gitId":"wujy28"},"content":"| `*`      | ED Doctor | Save a draft of a message I am writing into the local repository                                   | Return to work on it after an emergency call                                                                                                          |","lastModifiedDate":"2023-10-06"},{"lineNumber":630,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | Filter a list of doctors according to their department                                             | easily identify doctors to assign to from a specific department                                                                                       |","lastModifiedDate":"2023-11-10"},{"lineNumber":631,"author":{"gitId":"AaronJT1"},"content":"| `*`      | ED Doctor | View the list of doctors                                                                           | know who I can refer my patients for further treatment to                                                                                             |","lastModifiedDate":"2023-11-10"},{"lineNumber":632,"author":{"gitId":"wujy28"},"content":"| `*`      | ED Doctor | View a list of commands                                                                            | Know the commands needed to carry out my action                                                                                                       |","lastModifiedDate":"2023-10-06"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"wujy28"},"content":"(For all use cases below, the **System** is the `Advanced\u0026Efficient`application and the **Actor** is the `ED doctor`,","lastModifiedDate":"2023-10-06"},{"lineNumber":637,"author":{"gitId":"wujy28"},"content":"unless specified otherwise)","lastModifiedDate":"2023-10-06"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"AaronJT1"},"content":"\\","lastModifiedDate":"2023-11-10"},{"lineNumber":640,"author":{"gitId":"AaronJT1"},"content":"**Use case: UC01 - View list of patients**","lastModifiedDate":"2023-11-10"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"AaronJT1"},"content":"1. ED doctor requests to view list of all patients.","lastModifiedDate":"2023-11-10"},{"lineNumber":645,"author":{"gitId":"AaronJT1"},"content":"2. Advanced\u0026Efficient shows a list of all patients.","lastModifiedDate":"2023-11-10"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"AaronJT1"},"content":"* 1a. Advanced\u0026Efficient detects that list is empty.","lastModifiedDate":"2023-11-10"},{"lineNumber":652,"author":{"gitId":"AaronJT1"},"content":"    * 1a1. Advanced\u0026Efficient shows message saying list is empty.","lastModifiedDate":"2023-11-10"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":654,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":656,"author":{"gitId":"AaronJT1"},"content":"\\","lastModifiedDate":"2023-11-10"},{"lineNumber":657,"author":{"gitId":"AaronJT1"},"content":"**Use case: UC02 - Add a patient**","lastModifiedDate":"2023-11-10"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":659,"author":{"gitId":"AaronJT1"},"content":"**Guarantees**","lastModifiedDate":"2023-11-10"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":661,"author":{"gitId":"AaronJT1"},"content":"- Patient added will not have same `NAME` or `IC_NUMBER` as any existing patients.","lastModifiedDate":"2023-11-10"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":663,"author":{"gitId":"AaronJT1"},"content":"**MSS**","lastModifiedDate":"2023-11-10"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":665,"author":{"gitId":"AaronJT1"},"content":"1. ED doctor requests to add a new patient with given details.","lastModifiedDate":"2023-11-10"},{"lineNumber":666,"author":{"gitId":"AaronJT1"},"content":"2. Advanced\u0026Efficient adds the patient to the system.","lastModifiedDate":"2023-11-10"},{"lineNumber":667,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":668,"author":{"gitId":"AaronJT1"},"content":"   Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":669,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":670,"author":{"gitId":"AaronJT1"},"content":"**Extensions**","lastModifiedDate":"2023-11-10"},{"lineNumber":671,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":672,"author":{"gitId":"AaronJT1"},"content":"* 1a. Advanced\u0026Efficient detects that not all required details are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":673,"author":{"gitId":"AaronJT1"},"content":"    * 1a1. Advanced\u0026Efficient shows an error message saying that not all required details are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":674,"author":{"gitId":"AaronJT1"},"content":"    * 1a2. Advanced\u0026Efficient requests for all the required details.","lastModifiedDate":"2023-11-10"},{"lineNumber":675,"author":{"gitId":"AaronJT1"},"content":"    * 1a3. ED doctor enters the required details.","lastModifiedDate":"2023-11-10"},{"lineNumber":676,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":677,"author":{"gitId":"AaronJT1"},"content":"      Steps 1a1-1a3 are repeated until all the required details are given.","lastModifiedDate":"2023-11-10"},{"lineNumber":678,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":679,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":680,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":681,"author":{"gitId":"AaronJT1"},"content":"* 1b. Advanced\u0026Efficient detects that the given details are invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":682,"author":{"gitId":"AaronJT1"},"content":"    * 1b1. Advanced\u0026Efficient shows an error message saying the given details are invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":683,"author":{"gitId":"AaronJT1"},"content":"    * 1b2. Advanced\u0026Efficient requests for valid details.","lastModifiedDate":"2023-11-10"},{"lineNumber":684,"author":{"gitId":"AaronJT1"},"content":"    * 1b3. ED doctor enters the requested details.","lastModifiedDate":"2023-11-10"},{"lineNumber":685,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":686,"author":{"gitId":"AaronJT1"},"content":"      Steps 1b1-1b3 are repeated until the details are valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":687,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":688,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-11-10"},{"lineNumber":689,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":690,"author":{"gitId":"AaronJT1"},"content":"* 1c. Advanced\u0026Efficient detects that the given patient is already in the system.","lastModifiedDate":"2023-11-10"},{"lineNumber":691,"author":{"gitId":"AaronJT1"},"content":"    * 1c1. Advanced\u0026Efficient shows an error message saying patient already exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"AaronJT1"},"content":"\\","lastModifiedDate":"2023-11-10"},{"lineNumber":696,"author":{"gitId":"AaronJT1"},"content":"**Use case: UC03 - View a patient\u0027s details**","lastModifiedDate":"2023-11-10"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"AaronJT1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"AaronJT1"},"content":"1. ED doctor requests to view a patient’s details by `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":701,"author":{"gitId":"AaronJT1"},"content":"2. Advanced\u0026Efficient shows the patient’s details.","lastModifiedDate":"2023-11-10"},{"lineNumber":702,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":703,"author":{"gitId":"AaronJT1"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":704,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":705,"author":{"gitId":"AaronJT1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":706,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":707,"author":{"gitId":"AaronJT1"},"content":"* 1a. Advanced\u0026Efficient detects that the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":708,"author":{"gitId":"AaronJT1"},"content":"    * 1a1. Advanced\u0026Efficient shows an error message saying the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":709,"author":{"gitId":"AaronJT1"},"content":"    * 1a2. Advanced\u0026Efficient requests for valid `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":710,"author":{"gitId":"AaronJT1"},"content":"    * 1a3. ED doctor enters the `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":711,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":712,"author":{"gitId":"AaronJT1"},"content":"      Steps 1a1-1a3 are repeated until the `IC_NUMBER` is valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":713,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":714,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":715,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":716,"author":{"gitId":"AaronJT1"},"content":"* 1b. Advanced\u0026Efficient detects that the specified patient does not exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":717,"author":{"gitId":"AaronJT1"},"content":"    * 1b1. Advanced\u0026Efficient shows message saying the patient does not exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":718,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":719,"author":{"gitId":"AaronJT1"},"content":"      Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":720,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":721,"author":{"gitId":"AaronJT1"},"content":"\\","lastModifiedDate":"2023-11-10"},{"lineNumber":722,"author":{"gitId":"AaronJT1"},"content":"**Use case: UC04 - Edit a patient\u0027s details**","lastModifiedDate":"2023-11-10"},{"lineNumber":723,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":724,"author":{"gitId":"AaronJT1"},"content":"**MSS**","lastModifiedDate":"2023-11-10"},{"lineNumber":725,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":726,"author":{"gitId":"AaronJT1"},"content":"1. ED doctor requests to edit a patient’s details by `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":727,"author":{"gitId":"AaronJT1"},"content":"2. Advanced\u0026Efficient edits the patient’s details as ED doctor specifies.","lastModifiedDate":"2023-11-10"},{"lineNumber":728,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":729,"author":{"gitId":"AaronJT1"},"content":"   Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":730,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":731,"author":{"gitId":"AaronJT1"},"content":"**Extensions**","lastModifiedDate":"2023-11-10"},{"lineNumber":732,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":733,"author":{"gitId":"AaronJT1"},"content":"* 1a. Advanced\u0026Efficient detects that the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":734,"author":{"gitId":"AaronJT1"},"content":"    * 1a1. Advanced\u0026Efficient shows an error message saying the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":735,"author":{"gitId":"AaronJT1"},"content":"    * 1a2. Advanced\u0026Efficient requests for valid `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":736,"author":{"gitId":"AaronJT1"},"content":"    * 1a3. ED doctor enters the `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":737,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":738,"author":{"gitId":"AaronJT1"},"content":"      Steps 1a1-1a3 are repeated until the `IC_NUMBER` is valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":739,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":740,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-11-10"},{"lineNumber":741,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":742,"author":{"gitId":"AaronJT1"},"content":"* 1b. Advanced\u0026Efficient detects that the specified patient does not exist.","lastModifiedDate":"2023-10-04"},{"lineNumber":743,"author":{"gitId":"AaronJT1"},"content":"    * 1b1. Advanced\u0026Efficient shows message saying the patient does not exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":744,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":745,"author":{"gitId":"AaronJT1"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":746,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":747,"author":{"gitId":"AaronJT1"},"content":"* 1c. Advanced\u0026Efficient detects that the given details are invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":748,"author":{"gitId":"AaronJT1"},"content":"    * 1c1. Advanced\u0026Efficient shows an error message saying the given details are invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":749,"author":{"gitId":"AaronJT1"},"content":"    * 1c2. Advanced\u0026Efficient requests for valid details.","lastModifiedDate":"2023-11-10"},{"lineNumber":750,"author":{"gitId":"AaronJT1"},"content":"    * 1c3. ED doctor enters the requested details.","lastModifiedDate":"2023-11-10"},{"lineNumber":751,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":752,"author":{"gitId":"AaronJT1"},"content":"      Steps 1c1-1c3 are repeated until the details are valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":753,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":754,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-11-10"},{"lineNumber":755,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":756,"author":{"gitId":"AaronJT1"},"content":"\\","lastModifiedDate":"2023-11-10"},{"lineNumber":757,"author":{"gitId":"AaronJT1"},"content":"**Use case: UC05 - Delete a patient**","lastModifiedDate":"2023-11-10"},{"lineNumber":758,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":759,"author":{"gitId":"AaronJT1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":760,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":761,"author":{"gitId":"AaronJT1"},"content":"1. ED doctor requests to delete a patient by `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":762,"author":{"gitId":"AaronJT1"},"content":"2. Advanced\u0026Efficient deletes the patient from the system.","lastModifiedDate":"2023-11-10"},{"lineNumber":763,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":764,"author":{"gitId":"AaronJT1"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":765,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":766,"author":{"gitId":"AaronJT1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":767,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":768,"author":{"gitId":"AaronJT1"},"content":"* 1a. Advanced\u0026Efficient detects that the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":769,"author":{"gitId":"AaronJT1"},"content":"    * 1a1. Advanced\u0026Efficient shows an error message saying the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":770,"author":{"gitId":"AaronJT1"},"content":"    * 1a2. Advanced\u0026Efficient requests for valid `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":771,"author":{"gitId":"AaronJT1"},"content":"    * 1a3. ED doctor enters the `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":772,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":773,"author":{"gitId":"AaronJT1"},"content":"      Steps 1a1-1a3 are repeated until the `IC_NUMBER` is valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":774,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":775,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-11-10"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":777,"author":{"gitId":"AaronJT1"},"content":"* 1b. Advanced\u0026Efficient detects that the specified patient does not exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":778,"author":{"gitId":"AaronJT1"},"content":"    * 1b1. Advanced\u0026Efficient shows message saying the patient does not exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":780,"author":{"gitId":"AaronJT1"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":781,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":782,"author":{"gitId":"AaronJT1"},"content":"\\","lastModifiedDate":"2023-11-10"},{"lineNumber":783,"author":{"gitId":"AaronJT1"},"content":"**Use case: UC06 - Find patient(s) by `NAME`**","lastModifiedDate":"2023-11-10"},{"lineNumber":784,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":785,"author":{"gitId":"AaronJT1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":786,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":787,"author":{"gitId":"AaronJT1"},"content":"1. ED doctor requests to find patient(s) by `NAME`.","lastModifiedDate":"2023-11-10"},{"lineNumber":788,"author":{"gitId":"AaronJT1"},"content":"2. Advanced\u0026Efficient shows the list of filtered patient(s).","lastModifiedDate":"2023-11-10"},{"lineNumber":789,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":790,"author":{"gitId":"AaronJT1"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":791,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":792,"author":{"gitId":"AaronJT1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":793,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":794,"author":{"gitId":"AaronJT1"},"content":"* 1a. Advanced\u0026Efficient detects no patient(s) with that `NAME`.","lastModifiedDate":"2023-11-10"},{"lineNumber":795,"author":{"gitId":"AaronJT1"},"content":"    * 1a1. Advanced\u0026Efficient shows an error message saying no patient(s) with that `NAME` exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":796,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":797,"author":{"gitId":"AaronJT1"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":798,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":799,"author":{"gitId":"AaronJT1"},"content":"\\","lastModifiedDate":"2023-11-10"},{"lineNumber":800,"author":{"gitId":"AaronJT1"},"content":"**Use case: UC07 - Sort a patient list**","lastModifiedDate":"2023-11-10"},{"lineNumber":801,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":802,"author":{"gitId":"AaronJT1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":803,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":804,"author":{"gitId":"AaronJT1"},"content":"1. ED doctor requests to sort a patient list by a property.","lastModifiedDate":"2023-11-10"},{"lineNumber":805,"author":{"gitId":"AaronJT1"},"content":"2. Advanced\u0026Efficient shows the list of sorted patients.","lastModifiedDate":"2023-11-10"},{"lineNumber":806,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":807,"author":{"gitId":"AaronJT1"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":808,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":809,"author":{"gitId":"AaronJT1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":810,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":811,"author":{"gitId":"AaronJT1"},"content":"* 1a. Advanced\u0026Efficient detects that the given property is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":812,"author":{"gitId":"AaronJT1"},"content":"    * 1a1. Advanced\u0026Efficient shows an error message saying the given property is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":813,"author":{"gitId":"AaronJT1"},"content":"    * 1a2. Advanced\u0026Efficient requests for valid property.","lastModifiedDate":"2023-11-10"},{"lineNumber":814,"author":{"gitId":"AaronJT1"},"content":"    * 1a3. ED doctor enters the property.","lastModifiedDate":"2023-11-10"},{"lineNumber":815,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":816,"author":{"gitId":"AaronJT1"},"content":"      Steps 1a1-1a3 are repeated until the property is valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":817,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":818,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-11-10"},{"lineNumber":819,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":820,"author":{"gitId":"AaronJT1"},"content":"\\","lastModifiedDate":"2023-11-10"},{"lineNumber":821,"author":{"gitId":"AaronJT1"},"content":"**Use case: UC08 - Edit a patient\u0027s record**","lastModifiedDate":"2023-11-10"},{"lineNumber":822,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":823,"author":{"gitId":"AaronJT1"},"content":"**MSS**","lastModifiedDate":"2023-11-10"},{"lineNumber":824,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":825,"author":{"gitId":"AaronJT1"},"content":"1. ED doctor requests to edit a patient’s `Record` by `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":826,"author":{"gitId":"AaronJT1"},"content":"2. Advanced\u0026Efficient edits the patient’s `Record` as ED doctor specifies.","lastModifiedDate":"2023-11-10"},{"lineNumber":827,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":828,"author":{"gitId":"AaronJT1"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":829,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":830,"author":{"gitId":"AaronJT1"},"content":"**Extensions**","lastModifiedDate":"2023-11-10"},{"lineNumber":831,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":832,"author":{"gitId":"AaronJT1"},"content":"* 1a. Advanced\u0026Efficient detects that the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":833,"author":{"gitId":"AaronJT1"},"content":"    * 1a1. Advanced\u0026Efficient shows an error message saying the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":834,"author":{"gitId":"AaronJT1"},"content":"    * 1a2. Advanced\u0026Efficient requests for valid `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":835,"author":{"gitId":"AaronJT1"},"content":"    * 1a3. ED doctor enters the `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":836,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":837,"author":{"gitId":"AaronJT1"},"content":"      Steps 1a1-1a3 are repeated until the `IC_NUMBER` is valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":838,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":839,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":840,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":841,"author":{"gitId":"AaronJT1"},"content":"* 1b. Advanced\u0026Efficient detects that the specified patient does not exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":842,"author":{"gitId":"AaronJT1"},"content":"    * 1b1. Advanced\u0026Efficient shows message saying the patient does not exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":843,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":844,"author":{"gitId":"AaronJT1"},"content":"      Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":845,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":846,"author":{"gitId":"AaronJT1"},"content":"* 1c. Advanced\u0026Efficient detects that the given `Record` details are invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":847,"author":{"gitId":"AaronJT1"},"content":"    * 1c1. Advanced\u0026Efficient shows an error message saying the given `Record` details are invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":848,"author":{"gitId":"AaronJT1"},"content":"    * 1c2. Advanced\u0026Efficient requests for valid `Record` details.","lastModifiedDate":"2023-11-10"},{"lineNumber":849,"author":{"gitId":"AaronJT1"},"content":"    * 1c3. ED doctor enters the `Record` details.","lastModifiedDate":"2023-11-10"},{"lineNumber":850,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":851,"author":{"gitId":"AaronJT1"},"content":"      Steps 1c1-1c3 are repeated until the `Record` details are valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":852,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":853,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-11-10"},{"lineNumber":854,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":855,"author":{"gitId":"AaronJT1"},"content":"\\","lastModifiedDate":"2023-11-10"},{"lineNumber":856,"author":{"gitId":"AaronJT1"},"content":"**Use case: UC09 - Assign a patient to `Department`**","lastModifiedDate":"2023-11-10"},{"lineNumber":857,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":858,"author":{"gitId":"AaronJT1"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":859,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":860,"author":{"gitId":"AaronJT1"},"content":"1. ED doctor requests to assign a patient to a `Department` by `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":861,"author":{"gitId":"AaronJT1"},"content":"2. Advanced\u0026Efficient assigns the patient to the `Department`.","lastModifiedDate":"2023-11-10"},{"lineNumber":862,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":863,"author":{"gitId":"AaronJT1"},"content":"   Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":864,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":865,"author":{"gitId":"AaronJT1"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":866,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":867,"author":{"gitId":"AaronJT1"},"content":"* 1a. Advanced\u0026Efficient detects that the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":868,"author":{"gitId":"AaronJT1"},"content":"    * 1a1. Advanced\u0026Efficient shows an error message saying the given `IC_NUMBER` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":869,"author":{"gitId":"AaronJT1"},"content":"    * 1a2. Advanced\u0026Efficient requests for valid `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":870,"author":{"gitId":"AaronJT1"},"content":"    * 1a3. ED doctor enters the `IC_NUMBER`.","lastModifiedDate":"2023-11-10"},{"lineNumber":871,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":872,"author":{"gitId":"AaronJT1"},"content":"      Steps 1a1-1a3 are repeated until the `IC_NUMBER` is valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":873,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":874,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-10-04"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"AaronJT1"},"content":"* 1b. Advanced\u0026Efficient detects that the specified patient does not exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":877,"author":{"gitId":"AaronJT1"},"content":"    * 1b1. Advanced\u0026Efficient shows message saying the patient does not exist.","lastModifiedDate":"2023-11-10"},{"lineNumber":878,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":879,"author":{"gitId":"AaronJT1"},"content":"      Use case ends.","lastModifiedDate":"2023-11-10"},{"lineNumber":880,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":881,"author":{"gitId":"AaronJT1"},"content":"* 1c. Advanced\u0026Efficient detects that the given `Department` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":882,"author":{"gitId":"AaronJT1"},"content":"    * 1c1. Advanced\u0026Efficient shows an error message saying the given `Department` is invalid.","lastModifiedDate":"2023-11-10"},{"lineNumber":883,"author":{"gitId":"AaronJT1"},"content":"    * 1c2. Advanced\u0026Efficient requests for valid `Department`.","lastModifiedDate":"2023-11-10"},{"lineNumber":884,"author":{"gitId":"AaronJT1"},"content":"    * 1c3. ED doctor enters the `Department`.","lastModifiedDate":"2023-11-10"},{"lineNumber":885,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":886,"author":{"gitId":"AaronJT1"},"content":"      Steps 1c1-1c3 are repeated until the `Department` is valid.","lastModifiedDate":"2023-11-10"},{"lineNumber":887,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":888,"author":{"gitId":"AaronJT1"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2023-11-10"},{"lineNumber":889,"author":{"gitId":"AaronJT1"},"content":"*","lastModifiedDate":"2023-11-10"},{"lineNumber":890,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":891,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"AaronJT1"},"content":"2. Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-04"},{"lineNumber":895,"author":{"gitId":"AaronJT1"},"content":"3. An ED doctor with above average typing speed for regular English text should be able to accomplish most of the tasks","lastModifiedDate":"2023-11-09"},{"lineNumber":896,"author":{"gitId":"AaronJT1"},"content":"   faster using commands than using the mouse.","lastModifiedDate":"2023-10-05"},{"lineNumber":897,"author":{"gitId":"AaronJT1"},"content":"4. Should not lose any data if the application is closed by any other means besides the `Exit` command.","lastModifiedDate":"2023-11-09"},{"lineNumber":898,"author":{"gitId":"AaronJT1"},"content":"5. The response to any user action should be visible within 2 seconds.","lastModifiedDate":"2023-11-09"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":900,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"AaronJT1"},"content":"* **Department**: A sector of the hospital responsible for a type of healthcare treatment.","lastModifiedDate":"2023-11-09"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":913,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":914,"author":{"gitId":"thienmy0"},"content":"Testers are expected to do more *exploratory* testing.","lastModifiedDate":"2023-11-11"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"thienmy0"},"content":"    2. Double-click the jar file.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":925,"author":{"gitId":"thienmy0"},"content":"       Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-11-11"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"thienmy0"},"content":"2. Saving window preferences","lastModifiedDate":"2023-11-11"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"thienmy0"},"content":"    2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":932,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"thienmy0"},"content":"### Adding a patient","lastModifiedDate":"2023-11-10"},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":936,"author":{"gitId":"thienmy0"},"content":"1. Adding a patient with only required prefixes","lastModifiedDate":"2023-11-10"},{"lineNumber":937,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":938,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: None of existing patients have either name `You Wen Ti` and/or IC number `T0374628Z`. (else you may","lastModifiedDate":"2023-11-11"},{"lineNumber":939,"author":{"gitId":"thienmy0"},"content":"      replace the name and/or ic number specified in the test cases)","lastModifiedDate":"2023-11-11"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":941,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `add n/You Wen Ti i/T0374628Z`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":942,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with name `You Wen Ti` and IC number `T0374628Z` is added. Details of the added patient is shown","lastModifiedDate":"2023-11-11"},{"lineNumber":943,"author":{"gitId":"thienmy0"},"content":"      in the system message. UI is updated to display newly added patient.","lastModifiedDate":"2023-11-11"},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":945,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `add n/Wo Meiyou`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":946,"author":{"gitId":"thienmy0"},"content":"      Expected: No patient is added. Error details shown in the system message. Patient list remains the same.","lastModifiedDate":"2023-11-10"},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":948,"author":{"gitId":"thienmy0"},"content":"   4. Other incorrect add commands to try: `add`, `add Wo Meiyou T0365867F`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":949,"author":{"gitId":"thienmy0"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-11-10"},{"lineNumber":950,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":951,"author":{"gitId":"thienmy0"},"content":"2. Adding a patient with both required and optional prefixes","lastModifiedDate":"2023-11-10"},{"lineNumber":952,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":953,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: None of existing patients have either name `Ingot Gold` or IC number `T0482756J`. (else you may","lastModifiedDate":"2023-11-11"},{"lineNumber":954,"author":{"gitId":"thienmy0"},"content":"      replace the name and/or ic number specified in the test cases)","lastModifiedDate":"2023-11-11"},{"lineNumber":955,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":956,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `add n/Ingot Gold i/T0482756J g/MALE b/20/05/2004 p/87654487 e/goldie@email.com a/Old Town Road 1","lastModifiedDate":"2023-11-11"},{"lineNumber":957,"author":{"gitId":"thienmy0"},"content":"      pr/HIGH t/critical`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":958,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with name `Ingot Gold`, IC number `T0482756J`, gender `MALE`, birthday `20/05/2004`, phone","lastModifiedDate":"2023-11-11"},{"lineNumber":959,"author":{"gitId":"thienmy0"},"content":"      number `87654487`, email `goldie@email.com`, address `Old Town Road 1`, priority `HIGH`, and tag `critical` is","lastModifiedDate":"2023-11-11"},{"lineNumber":960,"author":{"gitId":"thienmy0"},"content":"      added. Details of the added patient is shown in the system message. UI is updated to display newly added patient.","lastModifiedDate":"2023-11-11"},{"lineNumber":961,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":962,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `add n/Betty Crocker i/T0826789S a/Downtown East a/Lowcoast West`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":963,"author":{"gitId":"thienmy0"},"content":"      Expected: No patient is added. Error details shown in the system message. Patient list remains the same.","lastModifiedDate":"2023-11-10"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":965,"author":{"gitId":"thienmy0"},"content":"   4. Other incorrect add commands to try: `add`, `add n/Beckham Low pr/high`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":966,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-11-10"},{"lineNumber":967,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":968,"author":{"gitId":"thienmy0"},"content":"### Viewing a patient","lastModifiedDate":"2023-11-10"},{"lineNumber":969,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":970,"author":{"gitId":"thienmy0"},"content":"1. Viewing a patient","lastModifiedDate":"2023-11-10"},{"lineNumber":971,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":972,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: Have our sample patient list loaded OR add a patient with IC number `T7654321A`.","lastModifiedDate":"2023-11-11"},{"lineNumber":973,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":974,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `view i/T7654321A`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":975,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with IC number `T7654321A` will be displayed in patient list. Details of success of command is","lastModifiedDate":"2023-11-11"},{"lineNumber":976,"author":{"gitId":"thienmy0"},"content":"      shown in the system message. Patient list is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":977,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":978,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `view I/T7654321A`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":979,"author":{"gitId":"thienmy0"},"content":"      Expected: No patient is viewed. Error details shown in the system message. Patient list remains the same.","lastModifiedDate":"2023-11-10"},{"lineNumber":980,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":981,"author":{"gitId":"thienmy0"},"content":"   4. Other incorrect view commands to try: `view`, `view i/T8374829X`(where a patient with ic number `T8374829X` does","lastModifiedDate":"2023-11-11"},{"lineNumber":982,"author":{"gitId":"thienmy0"},"content":"      not exist)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":983,"author":{"gitId":"thienmy0"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-11-10"},{"lineNumber":984,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":985,"author":{"gitId":"thienmy0"},"content":"### Deleting a patient","lastModifiedDate":"2023-11-10"},{"lineNumber":986,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":987,"author":{"gitId":"thienmy0"},"content":"1. Deleting a patient","lastModifiedDate":"2023-11-10"},{"lineNumber":988,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":989,"author":{"gitId":"thienmy0"},"content":"    1. Prerequisites: Have our sample patient list loaded OR add a patient with IC number `T7654321A`.","lastModifiedDate":"2023-11-11"},{"lineNumber":990,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":991,"author":{"gitId":"thienmy0"},"content":"    2. Test case: `delete i/T7654321A`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":992,"author":{"gitId":"thienmy0"},"content":"       Expected: Patient with IC number `T7654321A` is deleted. Details of the deleted patient is shown in the system","lastModifiedDate":"2023-11-11"},{"lineNumber":993,"author":{"gitId":"thienmy0"},"content":"       message. Patient list is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":994,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":995,"author":{"gitId":"thienmy0"},"content":"    3. Test case: `delete I/T7654321A`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":996,"author":{"gitId":"thienmy0"},"content":"       Expected: No patient is deleted. Error details shown in the system message. Patient list remains the same.","lastModifiedDate":"2023-11-10"},{"lineNumber":997,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":998,"author":{"gitId":"thienmy0"},"content":"    4. Other incorrect delete commands to try: `delete`, `delete i/T9384758D` (where a patient with ic number","lastModifiedDate":"2023-11-11"},{"lineNumber":999,"author":{"gitId":"thienmy0"},"content":"       `T9384758D` does not exist)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1000,"author":{"gitId":"RiyaMehta2211"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2023-10-27"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1002,"author":{"gitId":"RiyaMehta2211"},"content":"### Editing a patient","lastModifiedDate":"2023-10-27"},{"lineNumber":1003,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1004,"author":{"gitId":"thienmy0"},"content":"1. Editing a patient\u0027s details","lastModifiedDate":"2023-11-10"},{"lineNumber":1005,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1006,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: Have our sample patient list loaded OR add a patient with IC number `T7654321A`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1007,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1008,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `edit i/T7654321A n/John Doe`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1009,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with IC number `T7654321A` will have their name edited to `John Doe`. Details of the edited","lastModifiedDate":"2023-11-11"},{"lineNumber":1010,"author":{"gitId":"thienmy0"},"content":"      patient is shown in the system message. UI is updated to display patient\u0027s new details.","lastModifiedDate":"2023-11-11"},{"lineNumber":1011,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1012,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `edit i/T7654321A`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1013,"author":{"gitId":"thienmy0"},"content":"      Expected: No patient is edited. Error details shown in the system message. Patient\u0027s details remains the same.","lastModifiedDate":"2023-11-10"},{"lineNumber":1014,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1015,"author":{"gitId":"thienmy0"},"content":"   4. Other incorrect edit commands to try: `edit`, `edit i/T0264782A n/Mary Jane` (where a patient with ic number","lastModifiedDate":"2023-11-11"},{"lineNumber":1016,"author":{"gitId":"thienmy0"},"content":"      `T0264782A` does not exist)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1017,"author":{"gitId":"RiyaMehta2211"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-10-27"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1019,"author":{"gitId":"thienmy0"},"content":"### Editing a patient record","lastModifiedDate":"2023-11-11"},{"lineNumber":1020,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1021,"author":{"gitId":"thienmy0"},"content":"1. Editing a patient\u0027s record","lastModifiedDate":"2023-11-11"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1023,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisite: Have our sample patient list loaded OR add a patient with IC number t7654321a.","lastModifiedDate":"2023-11-11"},{"lineNumber":1024,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `record i/T7654321A o/Broken Arm di/Hairline fracture tp/Cast for 2 days`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1025,"author":{"gitId":"thienmy0"},"content":"      Expected: Record of the patient with IC number `T7654321A` is edited to have `Broken Arm` as initial observation","lastModifiedDate":"2023-11-11"},{"lineNumber":1026,"author":{"gitId":"thienmy0"},"content":"      , `Hairline fracture` as diagnosis, and `Cast for 2 days` as treatment plan. Details of the edited record is shown","lastModifiedDate":"2023-11-11"},{"lineNumber":1027,"author":{"gitId":"thienmy0"},"content":"      in the system message. Patient\u0027s record is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1029,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `record i/T7654321A`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1030,"author":{"gitId":"thienmy0"},"content":"      Expected: No patient record is edited. Error details shown in the system message. Patient\u0027s record remains the","lastModifiedDate":"2023-11-11"},{"lineNumber":1031,"author":{"gitId":"thienmy0"},"content":"      same.","lastModifiedDate":"2023-11-11"},{"lineNumber":1032,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":1033,"author":{"gitId":"thienmy0"},"content":"   4. Other incorrect delete commands to try: `record`, `record i/T7654321A o/Broken Pinky o/Dizziness`,","lastModifiedDate":"2023-11-11"},{"lineNumber":1034,"author":{"gitId":"thienmy0"},"content":"      `record i/T2736487A di/Asthma` (where patient with IC number `T2736487A` does not exist)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1035,"author":{"gitId":"thienmy0"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-11-11"},{"lineNumber":1036,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1037,"author":{"gitId":"thienmy0"},"content":"### Assigning a patient to a department","lastModifiedDate":"2023-11-11"},{"lineNumber":1038,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":1039,"author":{"gitId":"thienmy0"},"content":"1. Assigning a patient to a department","lastModifiedDate":"2023-11-11"},{"lineNumber":1040,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":1041,"author":{"gitId":"thienmy0"},"content":"    1. Prerequisites: Have our sample patient list loaded OR add a patient with IC number `T7654321A`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1042,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":1043,"author":{"gitId":"thienmy0"},"content":"    2. Test case: `assign i/T7654321A d/cardiology`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1044,"author":{"gitId":"thienmy0"},"content":"       Expected: Patient IC number `T7654321A` is assigned to department `Cardiology`. Details of the assigned","lastModifiedDate":"2023-11-11"},{"lineNumber":1045,"author":{"gitId":"thienmy0"},"content":"       department is shown in the system message. Patient\u0027s assigned department is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1046,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":1047,"author":{"gitId":"thienmy0"},"content":"    3. Test case: `assign i/T7654321A`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1048,"author":{"gitId":"thienmy0"},"content":"       Expected: Patient is not assigned a department. Error details shown in the system message. Patient\u0027s assigned","lastModifiedDate":"2023-11-11"},{"lineNumber":1049,"author":{"gitId":"thienmy0"},"content":"       department remains the same.","lastModifiedDate":"2023-11-11"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1051,"author":{"gitId":"thienmy0"},"content":"    4. Other incorrect assign commands to try: `assign`, `assign i/T7654321A d/Cardio` (department is not spelt fully),","lastModifiedDate":"2023-11-11"},{"lineNumber":1052,"author":{"gitId":"thienmy0"},"content":"       `assign i/T7654321A d/Anesthesiology` (department follows American spelling)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1053,"author":{"gitId":"thienmy0"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2023-11-10"},{"lineNumber":1054,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1055,"author":{"gitId":"thienmy0"},"content":"### Sorting patients","lastModifiedDate":"2023-11-10"},{"lineNumber":1056,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1057,"author":{"gitId":"thienmy0"},"content":"1. Sorting patients by name","lastModifiedDate":"2023-11-10"},{"lineNumber":1058,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1059,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":1060,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1061,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `sort name`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1062,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient list is sorted according to `name` in alphanumerical order. Details of success of command is","lastModifiedDate":"2023-11-11"},{"lineNumber":1063,"author":{"gitId":"thienmy0"},"content":"      shown in the system message. Order of patients in list is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1064,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1065,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `sort`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1066,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient list is not sorted. Error details shown in the system message. Patient list remains the same.","lastModifiedDate":"2023-11-10"},{"lineNumber":1067,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1068,"author":{"gitId":"thienmy0"},"content":"2. Sorting patients by IC number","lastModifiedDate":"2023-11-10"},{"lineNumber":1069,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1070,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list.","lastModifiedDate":"2023-11-10"},{"lineNumber":1071,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1072,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `sort ic`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1073,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient list is sorted according to `IC number`, in alphanumerical order. Details of success of command","lastModifiedDate":"2023-11-11"},{"lineNumber":1074,"author":{"gitId":"thienmy0"},"content":"      is shown in the system message. Order of patients in list is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1075,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1076,"author":{"gitId":"thienmy0"},"content":"3. Sorting patients by assigned department","lastModifiedDate":"2023-11-10"},{"lineNumber":1077,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1078,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list. At least 2 different","lastModifiedDate":"2023-11-11"},{"lineNumber":1079,"author":{"gitId":"thienmy0"},"content":"      assigned departments among all patients in the list.","lastModifiedDate":"2023-11-11"},{"lineNumber":1080,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1081,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `sort department`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1082,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient list is sorted according to `assigned department`, where patients with default departments are","lastModifiedDate":"2023-11-11"},{"lineNumber":1083,"author":{"gitId":"thienmy0"},"content":"      placed at the bottom. Details of success of command is shown in the system message. Order of patients in list is","lastModifiedDate":"2023-11-11"},{"lineNumber":1084,"author":{"gitId":"thienmy0"},"content":"      updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1085,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1086,"author":{"gitId":"thienmy0"},"content":"4. Sorting patients by age","lastModifiedDate":"2023-11-10"},{"lineNumber":1087,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1088,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list. At least 2 different","lastModifiedDate":"2023-11-11"},{"lineNumber":1089,"author":{"gitId":"thienmy0"},"content":"      ages (i.e. birthday) among all patients in the list.","lastModifiedDate":"2023-11-11"},{"lineNumber":1090,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1091,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `sort age`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1092,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient list is sorted according to `age`, where patients with default birthdays/ages are placed on top,","lastModifiedDate":"2023-11-11"},{"lineNumber":1093,"author":{"gitId":"thienmy0"},"content":"      followed by the remaining ages in increasing order. Details of success of command is shown in the system message.","lastModifiedDate":"2023-11-11"},{"lineNumber":1094,"author":{"gitId":"thienmy0"},"content":"      Order of patients in list is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1095,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1096,"author":{"gitId":"thienmy0"},"content":"5. Sorting patients by priority","lastModifiedDate":"2023-11-10"},{"lineNumber":1097,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1098,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: List all patients using the `list` command. Multiple patients in the list. At least 2 different","lastModifiedDate":"2023-11-11"},{"lineNumber":1099,"author":{"gitId":"thienmy0"},"content":"      priorities among all patients in the list.","lastModifiedDate":"2023-11-11"},{"lineNumber":1100,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1101,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `sort priority`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":1102,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient list is sorted according to descending `priority`. Details of success of command is shown in the","lastModifiedDate":"2023-11-11"},{"lineNumber":1103,"author":{"gitId":"thienmy0"},"content":"      system message. Order of patients in list is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1104,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1105,"author":{"gitId":"thienmy0"},"content":"### Undoing and Redoing a command","lastModifiedDate":"2023-11-11"},{"lineNumber":1106,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1107,"author":{"gitId":"thienmy0"},"content":"1. Undoing and Redoing add command","lastModifiedDate":"2023-11-11"},{"lineNumber":1108,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1109,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: Have no patient with name `Shen Qi Feng` and/or ic number `S0473859D` in the patient list. (else","lastModifiedDate":"2023-11-11"},{"lineNumber":1110,"author":{"gitId":"thienmy0"},"content":"      you may replace the name and/or ic number specified in the test cases)","lastModifiedDate":"2023-11-11"},{"lineNumber":1111,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1112,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `add n/Shen Qi Feng i/S0473859D` then `undo`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1113,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with name `Shen Qi Feng` and IC number `S0473859D` is added, then removed. Details of success of","lastModifiedDate":"2023-11-11"},{"lineNumber":1114,"author":{"gitId":"thienmy0"},"content":"      command is shown in the system message. Patient list remains the same in UI after both commands are executed.","lastModifiedDate":"2023-11-11"},{"lineNumber":1115,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1116,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `redo` (after executing the previous test case)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1117,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with name `Shen Qi Feng` and IC number `S0473859D` is added back. Details of success of command","lastModifiedDate":"2023-11-11"},{"lineNumber":1118,"author":{"gitId":"thienmy0"},"content":"      is shown in the system message. Patient list is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1119,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1120,"author":{"gitId":"thienmy0"},"content":"2. Undoing and Redoing edit command","lastModifiedDate":"2023-11-11"},{"lineNumber":1121,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1122,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: Have our sample patient list loaded OR add a patient with IC number `T7654321A`. Patient to be","lastModifiedDate":"2023-11-11"},{"lineNumber":1123,"author":{"gitId":"thienmy0"},"content":"      edited should have a different address from `Dummy Address Test Street 1`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1124,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1125,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `edit i/T7654321A a/Dummy Address Test Street 1` then `undo`","lastModifiedDate":"2023-11-11"},{"lineNumber":1126,"author":{"gitId":"thienmy0"},"content":"      Expected: Address of patient with IC number `T7654321A` is changed to `Dummy Address Test Street 1`, then changed","lastModifiedDate":"2023-11-11"},{"lineNumber":1127,"author":{"gitId":"thienmy0"},"content":"      back to initial address. Details of success of command is shown in the system message. Patient list remains the","lastModifiedDate":"2023-11-11"},{"lineNumber":1128,"author":{"gitId":"thienmy0"},"content":"      same in UI after both commands are executed.","lastModifiedDate":"2023-11-11"},{"lineNumber":1129,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1130,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `redo` (after executing the previous test case)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1131,"author":{"gitId":"thienmy0"},"content":"      Expected: Address of patient with IC number `T7654321A` is changed back to `Dummy Address Test Street 1`. Details","lastModifiedDate":"2023-11-11"},{"lineNumber":1132,"author":{"gitId":"thienmy0"},"content":"      of success of command is shown in the system message. Patient\u0027s details is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1133,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1134,"author":{"gitId":"thienmy0"},"content":"3. Undoing and Redoing delete command","lastModifiedDate":"2023-11-11"},{"lineNumber":1135,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1136,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: Have our sample patient list loaded OR add a patient with IC number `T6789031Q`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1137,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1138,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `delete i/T6789031Q` then `undo`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1139,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with IC number `T6789031Q` is deleted, then added back. Details of success of command is shown","lastModifiedDate":"2023-11-11"},{"lineNumber":1140,"author":{"gitId":"thienmy0"},"content":"      in the system message. Patient list remains the same in UI after both commands are executed.","lastModifiedDate":"2023-11-11"},{"lineNumber":1141,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1142,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `redo` (after executing the previous test case)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1143,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with IC number `T6789031Q` is deleted again. Details of success of command is shown in the","lastModifiedDate":"2023-11-11"},{"lineNumber":1144,"author":{"gitId":"thienmy0"},"content":"      system message. Patient list is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1145,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1146,"author":{"gitId":"thienmy0"},"content":"4. Undoing and Redoing assign command","lastModifiedDate":"2023-11-11"},{"lineNumber":1147,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1148,"author":{"gitId":"thienmy0"},"content":"   1. Prerequisites: Have our sample patient list loaded OR add a patient with IC number `T7654321A`. Assigned","lastModifiedDate":"2023-11-11"},{"lineNumber":1149,"author":{"gitId":"thienmy0"},"content":"      department of patient with IC number `T7654321A` should not be `Endocrinology`.","lastModifiedDate":"2023-11-11"},{"lineNumber":1150,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1151,"author":{"gitId":"thienmy0"},"content":"   2. Test case: `assign i/T7654321A d/Endocrinology` then `undo`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1152,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with IC number `T7654321A` is assigned to department `Endocrinology`, then assigned back to","lastModifiedDate":"2023-11-11"},{"lineNumber":1153,"author":{"gitId":"thienmy0"},"content":"      initial department. Details of success of command is shown in the system message. Patient list remains the same in","lastModifiedDate":"2023-11-11"},{"lineNumber":1154,"author":{"gitId":"thienmy0"},"content":"      UI after both commands are executed.","lastModifiedDate":"2023-11-11"},{"lineNumber":1155,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1156,"author":{"gitId":"thienmy0"},"content":"   3. Test case: `redo` (after executing the previous test case)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1157,"author":{"gitId":"thienmy0"},"content":"      Expected: Patient with IC number `T7654321A` is assigned back to department `Endocrinology`. Details of success of","lastModifiedDate":"2023-11-11"},{"lineNumber":1158,"author":{"gitId":"thienmy0"},"content":"      command is shown in the system message. Patient\u0027s assigned department is updated in UI.","lastModifiedDate":"2023-11-11"},{"lineNumber":1159,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1160,"author":{"gitId":"thienmy0"},"content":"5. Undoing and Redoing clear command","lastModifiedDate":"2023-11-11"},{"lineNumber":1161,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1162,"author":{"gitId":"thienmy0"},"content":"    1. Prerequisites: Have at least one patient in the system.","lastModifiedDate":"2023-11-11"},{"lineNumber":1163,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1164,"author":{"gitId":"thienmy0"},"content":"    2. Test case: `clear` then `undo`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1165,"author":{"gitId":"thienmy0"},"content":"       Expected: Patient list is cleared, then restored. Details of success of command is shown in the system message.","lastModifiedDate":"2023-11-11"},{"lineNumber":1166,"author":{"gitId":"thienmy0"},"content":"       Patient list remains the same in UI after both commands are executed.","lastModifiedDate":"2023-11-11"},{"lineNumber":1167,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1168,"author":{"gitId":"thienmy0"},"content":"    3. Test case: `redo` (after executing the previous test case)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":1169,"author":{"gitId":"thienmy0"},"content":"       Expected: Patient list is cleared again. Details of success of command is shown in the system message. UI is","lastModifiedDate":"2023-11-11"},{"lineNumber":1170,"author":{"gitId":"thienmy0"},"content":"       updated to display an empty patient list.","lastModifiedDate":"2023-11-11"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1177,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":1178,"author":{"gitId":"RiyaMehta2211"},"content":"2. Saving Assigned Department to Storage","lastModifiedDate":"2023-10-27"},{"lineNumber":1179,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1180,"author":{"gitId":"RiyaMehta2211"},"content":"### Explanation:","lastModifiedDate":"2023-10-27"},{"lineNumber":1181,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1182,"author":{"gitId":"AaronJT1"},"content":"**Storage**: Storage classes are to save the details of the patients upon exiting the app. While the basic attributes of","lastModifiedDate":"2023-11-10"},{"lineNumber":1183,"author":{"gitId":"AaronJT1"},"content":"the patients like IC_NUMBER,","lastModifiedDate":"2023-11-10"},{"lineNumber":1184,"author":{"gitId":"RiyaMehta2211"},"content":"Gender and all were being saved, complicated attributes like Assigned Department were not.","lastModifiedDate":"2023-10-27"},{"lineNumber":1185,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":1186,"author":{"gitId":"RiyaMehta2211"},"content":"**Assigned Department**: The patient will be assigned to a department when being admitted.","lastModifiedDate":"2023-10-27"},{"lineNumber":1187,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":1188,"author":{"gitId":"RiyaMehta2211"},"content":"**Enhancement**: Made changes to the storage and RecordBuilder classes and the tests","lastModifiedDate":"2023-10-27"},{"lineNumber":1189,"author":{"gitId":"RiyaMehta2211"},"content":"to ensure the department assigned is saved as well.","lastModifiedDate":"2023-10-27"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1192,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":1193,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":1194,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1195,"author":{"gitId":"AaronJT1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-09"},{"lineNumber":1196,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1197,"author":{"gitId":"AaronJT1"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2023-11-09"},{"lineNumber":1198,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":1199,"author":{"gitId":"AaronJT1"},"content":"1. Currently, when `View` command is executed, it only shows that `Patient` in the display panel instead of their","lastModifiedDate":"2023-11-09"},{"lineNumber":1200,"author":{"gitId":"AaronJT1"},"content":"   details in the information tab. Users would have to click that `Patient` again to display its details.","lastModifiedDate":"2023-11-09"},{"lineNumber":1201,"author":{"gitId":"AaronJT1"},"content":"   Since `IC_NUMBER` is unique for every `Patient`, we plan to show the `Patient` detail","lastModifiedDate":"2023-11-10"},{"lineNumber":1202,"author":{"gitId":"AaronJT1"},"content":"   directly in the information tab.","lastModifiedDate":"2023-11-09"},{"lineNumber":1203,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1204,"author":{"gitId":"AaronJT1"},"content":"2. Since our project is adapted from the [AddressBook3](https://se-education.org/addressbook-level3/) project","lastModifiedDate":"2023-11-09"},{"lineNumber":1205,"author":{"gitId":"AaronJT1"},"content":"   by SE-EDU initiative, there are multiple usage of `AddressBook` terms in our namings of methods and files. We plan","lastModifiedDate":"2023-11-09"},{"lineNumber":1206,"author":{"gitId":"AaronJT1"},"content":"   to completely refactor all instances of `AddressBook` into `PatientRecordSystem`. For example,","lastModifiedDate":"2023-11-09"},{"lineNumber":1207,"author":{"gitId":"AaronJT1"},"content":"   `AddressBookParser.java` would be renamed to `PatientRecordSystemParser.java`.","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"AaronJT1":503,"wujy28":51,"thienmy0":279,"longnguyentan":46,"RiyaMehta2211":16,"-":312}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Advanced\u0026Effcient’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"AaronJT1":1,"-":60}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"# Advanced\u0026Efficient (A\u0026E) User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"Welcome to **Advanced\u0026Efficient (A\u0026E)**! Are you an Emergency Department (ED) doctor overwhelmed by the sheer volume of","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"patient records to manage? Do you wish for a faster, more efficient way to log patient reports and streamline your","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"workflow? A\u0026E is the tool you’ve been waiting for!","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"Advanced\u0026Efficient (A\u0026E) is a powerful **desktop application** designed specifically for **ED doctors** who need to *","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"*create, update, and manage patient records** swiftly and effectively. This application, with its **Command-Line","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"Interface (CLI)** design, caters to fast typists and professionals who prefer typing over mouse interactions,","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"significantly speeding up the process of inputting and managing patient data.","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"Here’s a sneak peek into what A\u0026E offers:","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"- Streamlined logging of patient reports in a user-friendly CLI environment","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"- Quick connections to relevant hospital departments for patient referrals","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"- A comprehensive suite of commands for adding, viewing, editing, and deleting patient records","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"- An intuitive system for managing patient priority levels and medical tags","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"- Easy-to-follow command summaries and guides for efficient navigation","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"A\u0026E combines the simplicity of a CLI with the visual cues of a Graphical User Interface (GUI), offering you the best of","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"both worlds. If you\u0027re comfortable typing and looking for speed and efficiency in patient management, A\u0026E is","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"tailored just for you.","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"This User Guide is designed to help you, whether you\u0027re a newcomer or an experienced user, to harness the full potential","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"of A\u0026E. Here, you\u0027ll find everything you need to streamline your patient management tasks, making your role in the ED","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"more manageable and effective.","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"If you are a **new user**:","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"- Begin your journey with A\u0026E by exploring the Quick start and Navigating the user guide sections.","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"- If you’re new to CLI or need a refresher, keep an eye out for our upcoming guide.","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"If you are an **experienced user**:","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"- Utilize the Table of contents to swiftly navigate to your desired section.","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"- Dive into the Features to explore advanced functionalities and optimize your workflow.","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"Embrace the efficiency of A\u0026E and transform the way you manage patient records in your Emergency Department. Let’s get","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"started!","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"## Table of Contents","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"- [Table-of-contents](#table-of-contents)","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"- [Navigate](#navigating-the-user-guide)","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"- [Quick-start](#quick-start)","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"- [Features](#features)","lastModifiedDate":"2023-10-04"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    - [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"    - [Listing all patients: `list`](#listing-all-patients--list)","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    - [Adding a patient: `add`](#adding-a-patient--add)","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"    - [Viewing a patient : `view`](#viewing-a-patient--view)","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"    - [Editing a patient: `edit`](#editing-a-patient--edit)","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"    - [Deleting a patient: `delete`](#deleting-a-patient--delete)","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"    - [Undoing a command : `undo`](#undoing-a-command--undo)","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"    - [Redoing a command : `redo`](#redoing-a-command--redo)","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"    - [Finding a patient by name : `find`](#finding-a-patient-by-name--find)","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"    - [Sorting the patient list : `sort`](#sorting-the-patient-list--sort)","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"    - [Editing a patient record : `record`](#editing-a-patient-record--record)","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"    - [Assigning a patient to a department : `assign`](#assigning-a-patient-to-a-department--assign)","lastModifiedDate":"2023-10-06"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"    - [Clearing all entries : `clear`](#clearing-all-entries--clear)","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    - [Exiting the program : `exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-10-06"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"- [Known Issues](#known-issues)","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"- [Appendix : Departments](#appendix--departments)","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"## Navigating the user guide","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"### [coming soon]","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"   __How to check?__","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"    1. Open up the Terminal on your computer.","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"        1. For Windows users, locate it by typing in “Terminal” in the search bar.","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"        2. For Mac users, locate it by typing in “Terminal” in Spotlight.","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"    2. Type in java -version and press Enter.","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"    3. If you have Java installed, you should see your Java version as shown underlined in the picture below.","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"       \u003cimg src\u003d\u0027images/javaversion.png\u0027 width\u003d\u0027500\u0027\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"    4. If you do not have Java or your Java version is below 11, install Java","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"       11 [here](https://www.oracle.com/java/technologies/downloads/#java11)","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"2. Go to your Desktop and create a folder named “A\u0026E”.","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"3. Download Advanced\u0026Efficient [here](https://github.com/AY2324S1-CS2103T-T14-2/tp/releases/tag/v1.3.1)","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"    1. After clicking on the link, click on `AdvancedAndEfficient.jar` as seen in the picture below.","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"    \u003cimg src\u003d\u0027images/jar.png\u0027 width\u003d\u0027800\u0027\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"4. After downloading the application, move it into the “A\u0026E” folder created in step 2.","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"thienmy0"},"content":"5. Open Terminal, type in cd Desktop\\A\u0026E to navigate to the folder you’ve created, and press Enter. Then, type in `java","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"   -jar AdvancedAndEfficient.jar` and press Enter again to run the application.","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"   A GUI similar to the picture below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"   \u003cimg src\u003d\u0027images/UI.png\u0027 width\u003d\u0027500\u0027\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing `help` and pressing Enter will open the","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"   help window.","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"   `list` : Lists all patients.","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"thienmy0"},"content":"   `add n/John Doe i/T0384762A p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a patient named","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"   John Doe into the system.","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"   `clear` : Deletes all patients.","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"   `exit` : Exits the app.","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"thienmy0"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"thienmy0"},"content":"* Items with `...` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"thienmy0"},"content":"  e.g. `[t/TAG]...` can be used as ` `(i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":157,"author":{"gitId":"AaronJT1"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"AaronJT1"},"content":"  as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"longnguyentan"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-10-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"longnguyentan"},"content":"\u003cimg src\u003d\u0027images/ug/helpMessage.png\u0027 width\u003d\u0027500\u0027\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"wujy28"},"content":"### Listing all patients: `list`","lastModifiedDate":"2023-10-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"longnguyentan"},"content":"Lists all patients in the system.","lastModifiedDate":"2023-10-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":173,"author":{"gitId":"wujy28"},"content":"Format: `list`","lastModifiedDate":"2023-10-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":175,"author":{"gitId":"longnguyentan"},"content":"\u003cimg src\u003d\u0027images/ug/listPatients.png\u0027 width\u003d\u0027300\u0027\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"wujy28"},"content":"### Adding a patient: `add`","lastModifiedDate":"2023-10-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"Adds a patient","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"thienmy0"},"content":"Format: `add n/NAME i/IC_NUMBER [g/GENDER] [b/BIRTHDAY] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [pr/PRIORITY]] [t/TAG]...`","lastModifiedDate":"2023-11-03"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"AaronJT1"},"content":"+ Only `NAME` and `IC_NUMBER` fields are **compulsory**.","lastModifiedDate":"2023-10-25"},{"lineNumber":184,"author":{"gitId":"AaronJT1"},"content":"+ **All** input fields are **case-insensitive** e.g. `T1234567A` is the same as `t1234567a`.","lastModifiedDate":"2023-10-25"},{"lineNumber":185,"author":{"gitId":"AaronJT1"},"content":"+ The order of the input fields does not matter.","lastModifiedDate":"2023-10-25"},{"lineNumber":186,"author":{"gitId":"AaronJT1"},"content":"+ `PRIORITY` can take on values `NIL`,`LOW`,`MEDIUM` or `HIGH`.","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"+ To add a Patient with `NAME` \u003d John Doe, `IC_Number` \u003d T0123456A, `GENDER` \u003d Male, `BIRTHDAY` \u003d 01/01/1990,","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"AaronJT1"},"content":"`add n/John Doe i/T0123456A g/Male b/01/01/1990 `","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"AaronJT1"},"content":"* To add a Patient with Name \u003d Betsy Crowe, IC_Number \u003d S0123456B, PHONE \u003d 90909090, EMAIL \u003d bc@gmail.com","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"AaronJT1"},"content":"`add n/Betsy Crowe i/S0123456B p/90909090 e/bc@gmail.com`","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"AaronJT1"},"content":"### Viewing a patient: `view`","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"AaronJT1"},"content":"Displays a specific patient’s information and medical record.","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"AaronJT1"},"content":"Format: `view i/IC_NUMBER`","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"AaronJT1"},"content":"* `IC_NUMBER` field is **compulsory**.","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"AaronJT1"},"content":"* `IC_NUMBER` field is **case-insensitive** e.g. `T1234567A` is the same as `t1234567a`.","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"AaronJT1"},"content":"+ To view patient with IC_Number \u003d T0123456A","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"AaronJT1"},"content":"`view i/T0201234A`","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"AaronJT1"},"content":"### Editing a patient: `edit`","lastModifiedDate":"2023-10-25"},{"lineNumber":214,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":215,"author":{"gitId":"AaronJT1"},"content":"Edits the attributes of a patient","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"thienmy0"},"content":"Format: `edit i/IC_NUMBER [g/GENDER] [b/BIRTHDAY] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [pr/PRIORITY] [t/TAG]...`","lastModifiedDate":"2023-11-03"},{"lineNumber":218,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"thienmy0"},"content":"+ Edits the patient with the specified `i/IC_NUMBER`","lastModifiedDate":"2023-11-03"},{"lineNumber":220,"author":{"gitId":"thienmy0"},"content":"+ At least one of the optional fields indicated within square brackets must be provided.","lastModifiedDate":"2023-11-03"},{"lineNumber":221,"author":{"gitId":"AaronJT1"},"content":"+ **All** input fields are **case-insensitive** e.g. `john doe` is the same as `JOHN DOE`.","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"wujy28"},"content":"+ The order of the input fields does not matter.","lastModifiedDate":"2023-10-04"},{"lineNumber":223,"author":{"gitId":"AaronJT1"},"content":"+ `PRIORITY` can take on values `NIL`,`LOW`,`MEDIUM` or `HIGH`.","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":227,"author":{"gitId":"RiyaMehta2211"},"content":"* `edit T0123456A n/John Doe a/33 g/m b/01-01-1990 i/T0123456A p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"RiyaMehta2211"},"content":"* `edit T6543210F n/Betsy Crowe p/87386298 a/20 g/Female b/02-02-2003 e/betsycrowe@example.com a/Brighton Town i/T6543210F`","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"wujy28"},"content":"### Deleting a patient: `delete`","lastModifiedDate":"2023-10-06"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"wujy28"},"content":"Deletes the patient with the specified IC number from the system.","lastModifiedDate":"2023-10-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"AaronJT1"},"content":"Format: `delete i/IC_NUMBER`","lastModifiedDate":"2023-10-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"AaronJT1"},"content":"+ **All** input fields are **case-insensitive** e.g. `T1234567A` is the same as `t1234567a`.","lastModifiedDate":"2023-10-25"},{"lineNumber":237,"author":{"gitId":"wujy28"},"content":"+ The order of the input fields does not matter.","lastModifiedDate":"2023-10-06"},{"lineNumber":238,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"wujy28"},"content":"+ `delete i/T1234567A`","lastModifiedDate":"2023-10-06"},{"lineNumber":242,"author":{"gitId":"wujy28"},"content":"+ `delete i/T2468012a`","lastModifiedDate":"2023-10-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"RiyaMehta2211"},"content":"### Undoing a command: `undo`","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"RiyaMehta2211"},"content":"Undoes the most recent state of the following commands:","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"RiyaMehta2211"},"content":"+ `delete`","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"RiyaMehta2211"},"content":"+ `edit`","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"RiyaMehta2211"},"content":"+ `clear`","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"RiyaMehta2211"},"content":"+ `add`","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"RiyaMehta2211"},"content":"Format: `undo`","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"RiyaMehta2211"},"content":"+ Input command is **case-sensitive** e.g. `undo` is accepted but not `UNDO`.","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"RiyaMehta2211"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"RiyaMehta2211"},"content":"+ `delete i/T1234567A` deletes this patient from the patient list","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"RiyaMehta2211"},"content":"+ `undo` restores this patient back into the patient list","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"RiyaMehta2211"},"content":"### Redoing a command: `redo`","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"RiyaMehta2211"},"content":"Redoes the most recent state of the following commands:","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"RiyaMehta2211"},"content":"+ `delete`","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"RiyaMehta2211"},"content":"+ `edit`","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"RiyaMehta2211"},"content":"+ `clear`","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"RiyaMehta2211"},"content":"+ `add`","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"RiyaMehta2211"},"content":"Format: `redo`","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"RiyaMehta2211"},"content":"+ Input command is **case-sensitive** e.g. `redo` is accepted but not `REDO`.","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"RiyaMehta2211"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"RiyaMehta2211"},"content":"+ `delete i/T1234567A` deletes this patient from the patient list","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"RiyaMehta2211"},"content":"+ `undo` restores this patient back into the patient list","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"RiyaMehta2211"},"content":"+ `redo` once again deletes this patient from the patient list","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"wujy28"},"content":"### Finding a patient by name: `find`","lastModifiedDate":"2023-11-03"},{"lineNumber":280,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":281,"author":{"gitId":"wujy28"},"content":"Finds the patients whose names match any of the given keywords.","lastModifiedDate":"2023-11-03"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":283,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-11-03"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":285,"author":{"gitId":"wujy28"},"content":"+ **All** input fields are **case-insensitive** e.g. `hans` is the same as `HANS`.","lastModifiedDate":"2023-11-03"},{"lineNumber":286,"author":{"gitId":"wujy28"},"content":"+ The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-11-03"},{"lineNumber":287,"author":{"gitId":"wujy28"},"content":"+ Only the name is searched.","lastModifiedDate":"2023-11-03"},{"lineNumber":288,"author":{"gitId":"wujy28"},"content":"+ Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-11-03"},{"lineNumber":289,"author":{"gitId":"wujy28"},"content":"+ Persons matching at least one keyword will be returned (i.e. OR search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-11-03"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":291,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-03"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":293,"author":{"gitId":"wujy28"},"content":"+ To find patients whose name matches ‘John’\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":294,"author":{"gitId":"wujy28"},"content":"  `find john`","lastModifiedDate":"2023-11-03"},{"lineNumber":295,"author":{"gitId":"wujy28"},"content":"+ To find patients whose name matches ‘Mary’ and ‘Jane’\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":296,"author":{"gitId":"wujy28"},"content":"  `find Mary Jane`","lastModifiedDate":"2023-11-03"},{"lineNumber":297,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":298,"author":{"gitId":"wujy28"},"content":"### Sorting the patient list: `sort`","lastModifiedDate":"2023-11-03"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":300,"author":{"gitId":"wujy28"},"content":"Sorts the patient list based on the given property.","lastModifiedDate":"2023-11-03"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":302,"author":{"gitId":"wujy28"},"content":"Format: `sort PROPERTY`","lastModifiedDate":"2023-11-03"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":304,"author":{"gitId":"wujy28"},"content":"+ The input field is **case-insensitive** e.g. `name` is the same as `NAME`.","lastModifiedDate":"2023-11-03"},{"lineNumber":305,"author":{"gitId":"wujy28"},"content":"+ `PROPERTY` can only be `name`, `ic`, `department`, `age`, or `priority`.","lastModifiedDate":"2023-11-03"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-03"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":309,"author":{"gitId":"wujy28"},"content":"+ To sort the patient list according to name in lexicographical order\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":310,"author":{"gitId":"wujy28"},"content":"  `sort name`","lastModifiedDate":"2023-11-03"},{"lineNumber":311,"author":{"gitId":"wujy28"},"content":"+ To sort the patient list according to IC number in lexicographical order\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":312,"author":{"gitId":"wujy28"},"content":"  `sort ic`","lastModifiedDate":"2023-11-03"},{"lineNumber":313,"author":{"gitId":"wujy28"},"content":"+ To sort the patient list according to department\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":314,"author":{"gitId":"wujy28"},"content":"  `sort department`","lastModifiedDate":"2023-11-03"},{"lineNumber":315,"author":{"gitId":"wujy28"},"content":"+ To sort the patient list according to ascending age\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":316,"author":{"gitId":"wujy28"},"content":"  `sort age`","lastModifiedDate":"2023-11-03"},{"lineNumber":317,"author":{"gitId":"wujy28"},"content":"+ To sort the patient list according to descending priority\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":318,"author":{"gitId":"wujy28"},"content":"  `sort priority`","lastModifiedDate":"2023-11-03"},{"lineNumber":319,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":320,"author":{"gitId":"wujy28"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":321,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":322,"author":{"gitId":"wujy28"},"content":"**Note:**","lastModifiedDate":"2023-11-03"},{"lineNumber":323,"author":{"gitId":"wujy28"},"content":"It sorts both the filtered and full patient list. For example, if you run `find John` followed by `sort age` on the","lastModifiedDate":"2023-11-03"},{"lineNumber":324,"author":{"gitId":"wujy28"},"content":"list of search results, it will also sort the complete list of patients (displayed using the `list` command).","lastModifiedDate":"2023-11-03"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":326,"author":{"gitId":"wujy28"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":327,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":328,"author":{"gitId":"AaronJT1"},"content":"### Editing a patient record: `record`","lastModifiedDate":"2023-10-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"wujy28"},"content":"Edits the medical record of the patient with the specified IC number.","lastModifiedDate":"2023-10-06"},{"lineNumber":331,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":332,"author":{"gitId":"thienmy0"},"content":"Format: `record i/IC_NUMBER [o/OBSERVATION] [d/DIAGNOSIS] [t/TREATMENT_PLAN]`","lastModifiedDate":"2023-10-30"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"thienmy0"},"content":"* At least one of the optional fields indicated within square brackets must be provided","lastModifiedDate":"2023-10-30"},{"lineNumber":335,"author":{"gitId":"AaronJT1"},"content":"* **All** input fields are **case-insensitive** e.g. `T1234567A` is the same as `t1234567a`.","lastModifiedDate":"2023-10-25"},{"lineNumber":336,"author":{"gitId":"wujy28"},"content":"* The order of the input fields does not matter.","lastModifiedDate":"2023-10-06"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":340,"author":{"gitId":"thienmy0"},"content":"* To edit the medical record of a patient with `IC_NUMBER \u003d T0201234A`\u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":341,"author":{"gitId":"thienmy0"},"content":"  `record i/T0201234A o/Broken Arm d/Hairline fracture t/Cast for 2 days r/Patient stable condition, no need for anesthetics a/Yes`","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"thienmy0"},"content":"* To edit the medical record of a patient with `IC_NUMBER \u003d S2374912B`\u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"thienmy0"},"content":"  `record i/S2374912B di/Asthma o/Shortness of breath and chest tightness`","lastModifiedDate":"2023-10-31"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"thienmy0"},"content":"### Assigning a patient to a department: `assign`","lastModifiedDate":"2023-10-04"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"wujy28"},"content":"Assigns a patient to a hospital department.","lastModifiedDate":"2023-11-03"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"thienmy0"},"content":"Format: `assign i/IC_NUMBER d/DEPARTMENT`","lastModifiedDate":"2023-10-04"},{"lineNumber":350,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"wujy28"},"content":"* All input fields are compulsory.","lastModifiedDate":"2023-10-06"},{"lineNumber":352,"author":{"gitId":"AaronJT1"},"content":"* **All** input fields are **case-insensitive** e.g. `T1234567A` is the same as `t1234567a`.","lastModifiedDate":"2023-10-25"},{"lineNumber":353,"author":{"gitId":"wujy28"},"content":"* `DEPARTMENT` must adhere to British spelling conventions.","lastModifiedDate":"2023-10-06"},{"lineNumber":354,"author":{"gitId":"wujy28"},"content":"* Refer to the [appendix](#appendix--departments) below for the list of valid departments and their accepted inputs.","lastModifiedDate":"2023-11-03"},{"lineNumber":355,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":356,"author":{"gitId":"thienmy0"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":357,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":358,"author":{"gitId":"wujy28"},"content":"* To assign a patient with IC_NUMBER \u003d T0201234A to the Cardiology department\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":359,"author":{"gitId":"wujy28"},"content":"  `assign i/T0201234A d/cardiology`","lastModifiedDate":"2023-11-03"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"thienmy0"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2023-11-03"},{"lineNumber":362,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":363,"author":{"gitId":"thienmy0"},"content":"Clears all entries from the system.","lastModifiedDate":"2023-11-03"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":365,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-11-03"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":367,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"AaronJT1"},"content":"Advanced\u0026Efficient data are saved in the hard disk automatically after any command that changes the data. There is no","lastModifiedDate":"2023-11-02"},{"lineNumber":376,"author":{"gitId":"AaronJT1"},"content":"need to","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"AaronJT1"},"content":"save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":381,"author":{"gitId":"AaronJT1"},"content":"Advanced\u0026Efficient data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"AaronJT1"},"content":"users are","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"AaronJT1"},"content":"welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":385,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":387,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":388,"author":{"gitId":"AaronJT1"},"content":"If your changes to the data file makes its format invalid, Advanced\u0026Efficient will discard all data and start with an","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"AaronJT1"},"content":"empty","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"AaronJT1"},"content":"data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":391,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":393,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"thienmy0"},"content":"Q: How do I transfer my data to another Computer?","lastModifiedDate":"2023-10-31"},{"lineNumber":398,"author":{"gitId":"AaronJT1"},"content":"A: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the","lastModifiedDate":"2023-11-02"},{"lineNumber":399,"author":{"gitId":"AaronJT1"},"content":"data of your previous A\u0026E home folder.","lastModifiedDate":"2023-11-02"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":405,"author":{"gitId":"AaronJT1"},"content":"When using multiple screens, if you move the application to a secondary screen, and later switch to using only the","lastModifiedDate":"2023-11-02"},{"lineNumber":406,"author":{"gitId":"AaronJT1"},"content":"primary screen, the GUI will open off-screen. The remedy is to delete the preferences.json file created by the","lastModifiedDate":"2023-11-02"},{"lineNumber":407,"author":{"gitId":"AaronJT1"},"content":"application before running the application again.","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"thienmy0"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":409,"author":{"gitId":"thienmy0"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":410,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":412,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"wujy28"},"content":"| Action     | Format, Examples                                                                                                                                                                                                                        |","lastModifiedDate":"2023-10-06"},{"lineNumber":415,"author":{"gitId":"thienmy0"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-31"},{"lineNumber":416,"author":{"gitId":"thienmy0"},"content":"| **Help**   | `help`                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-10-31"},{"lineNumber":417,"author":{"gitId":"thienmy0"},"content":"| **List**   | `list`                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-10-31"},{"lineNumber":418,"author":{"gitId":"thienmy0"},"content":"| **Add**    | `add n/NAME i/IC_NUMBER [g/GENDER] [b/BIRTHDAY] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [pr/PRIORITY] [t/TAG]...` \u003cbr\u003e e.g., `add n/Betsy Crowe i/S0123456B p/90909090 e/bc@gmail.com a/Old Town Road 4 pr/LOW t/Allergic to Medicine`   |","lastModifiedDate":"2023-10-31"},{"lineNumber":419,"author":{"gitId":"wujy28"},"content":"| **View**   | `view i/IC_NUMBER`\u003cbr\u003e e.g., `view i/T0201234A`                                                                                                                                                                                         |","lastModifiedDate":"2023-10-06"},{"lineNumber":420,"author":{"gitId":"thienmy0"},"content":"| **Edit**   | `edit i/IC_NUMBER [g/GENDER] [b/BIRTHDAY] [p/PHONE] [e/EMAIL] [a/ADDRESS] [pr/PRIORITY] [t/TAG]...`\u003cbr\u003e e.g., `edit i/T0201234A g/MALE b/08/08/1999 p/93827836 e/example@email.com a/Old Time Road Block 3 pr/MEDIUM t/Allergic to Fur` |","lastModifiedDate":"2023-10-31"},{"lineNumber":421,"author":{"gitId":"thienmy0"},"content":"| **Delete** | `delete i/IC_NUMBER`\u003cbr\u003e e.g., `delete i/T2468012A`                                                                                                                                                                                     |","lastModifiedDate":"2023-10-31"},{"lineNumber":422,"author":{"gitId":"RiyaMehta2211"},"content":"| **Undo**   | `undo`                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-11-02"},{"lineNumber":423,"author":{"gitId":"RiyaMehta2211"},"content":"| **Redo**   | `redo`                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-11-02"},{"lineNumber":424,"author":{"gitId":"thienmy0"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g. `find Mary Jane`                                                                                                                                                                                |","lastModifiedDate":"2023-10-31"},{"lineNumber":425,"author":{"gitId":"wujy28"},"content":"| **Sort**   | `sort PROPERTY`\u003cbr\u003e e.g., `sort priority`                                                                                                                                                                                               |","lastModifiedDate":"2023-11-03"},{"lineNumber":426,"author":{"gitId":"thienmy0"},"content":"| **Record** | `record i/IC_NUMBER [o/OBSERVATION] [di/DIAGNOSIS] [tp/TREATMENT_PLAN]`\u003cbr\u003e e.g.,`record i/T0201234A o/Broken Arm di/Hairline fracture tp/Cast for 2 days`                                                                              |","lastModifiedDate":"2023-10-31"},{"lineNumber":427,"author":{"gitId":"wujy28"},"content":"| **Assign** | `assign i/IC_NUMBER d/DEPARTMENT`\u003cbr\u003e e.g., `assign i/T0201234A d/cardiology`                                                                                                                                                           |","lastModifiedDate":"2023-10-06"},{"lineNumber":428,"author":{"gitId":"thienmy0"},"content":"| **Clear**  | `clear`                                                                                                                                                                                                                                 |","lastModifiedDate":"2023-10-31"},{"lineNumber":429,"author":{"gitId":"wujy28"},"content":"| **Exit**   | `exit`                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-10-06"},{"lineNumber":430,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":431,"author":{"gitId":"wujy28"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-03"},{"lineNumber":432,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":433,"author":{"gitId":"wujy28"},"content":"## Appendix: Departments","lastModifiedDate":"2023-11-03"},{"lineNumber":434,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":435,"author":{"gitId":"wujy28"},"content":"The table below shows all the hospital departments available in the system and their accepted inputs.","lastModifiedDate":"2023-11-03"},{"lineNumber":436,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":437,"author":{"gitId":"wujy28"},"content":"| Department           | Acceptable Input(s)    |","lastModifiedDate":"2023-11-03"},{"lineNumber":438,"author":{"gitId":"wujy28"},"content":"|----------------------|------------------------|","lastModifiedDate":"2023-11-03"},{"lineNumber":439,"author":{"gitId":"wujy28"},"content":"| Default              | `Default`              |","lastModifiedDate":"2023-11-03"},{"lineNumber":440,"author":{"gitId":"wujy28"},"content":"| Anaesthesiology      | `Anaesthesiology`      |","lastModifiedDate":"2023-11-03"},{"lineNumber":441,"author":{"gitId":"wujy28"},"content":"| Cardiology           | `Cardiology`           |","lastModifiedDate":"2023-11-03"},{"lineNumber":442,"author":{"gitId":"wujy28"},"content":"| Dermatology          | `Dermatology`          |","lastModifiedDate":"2023-11-03"},{"lineNumber":443,"author":{"gitId":"wujy28"},"content":"| Emergency Department | `Emergency Department` |","lastModifiedDate":"2023-11-03"},{"lineNumber":444,"author":{"gitId":"wujy28"},"content":"| Endocrinology        | `Endocrinology`        |","lastModifiedDate":"2023-11-03"},{"lineNumber":445,"author":{"gitId":"wujy28"},"content":"| General Surgery      | `General Surgery`      |","lastModifiedDate":"2023-11-03"},{"lineNumber":446,"author":{"gitId":"wujy28"},"content":"| Geriatric Medicine   | `Geriatric Medicine`   |","lastModifiedDate":"2023-11-03"},{"lineNumber":447,"author":{"gitId":"wujy28"},"content":"| Gynaecology          | `Gynaecology`          |","lastModifiedDate":"2023-11-03"},{"lineNumber":448,"author":{"gitId":"wujy28"},"content":"| Haematology          | `Haematology`          |","lastModifiedDate":"2023-11-03"},{"lineNumber":449,"author":{"gitId":"wujy28"},"content":"| Immunology           | `Immunology`           |","lastModifiedDate":"2023-11-03"},{"lineNumber":450,"author":{"gitId":"wujy28"},"content":"| Infectious Diseases  | `Infectious Diseases`  |","lastModifiedDate":"2023-11-03"},{"lineNumber":451,"author":{"gitId":"wujy28"},"content":"| Intensive Care Unit  | `Intensive Care Unit`  |","lastModifiedDate":"2023-11-03"},{"lineNumber":452,"author":{"gitId":"wujy28"},"content":"| Oncology             | `Oncology`             |","lastModifiedDate":"2023-11-03"},{"lineNumber":453,"author":{"gitId":"wujy28"},"content":"| Ophthalmology        | `Ophthalmology`        |","lastModifiedDate":"2023-11-03"},{"lineNumber":454,"author":{"gitId":"wujy28"},"content":"| Orthopaedics         | `Orthopaedics`         |","lastModifiedDate":"2023-11-03"},{"lineNumber":455,"author":{"gitId":"wujy28"},"content":"| Neurology            | `Neurology`            |","lastModifiedDate":"2023-11-03"},{"lineNumber":456,"author":{"gitId":"wujy28"},"content":"| Neurosurgery         | `Neurosurgery`         |","lastModifiedDate":"2023-11-03"},{"lineNumber":457,"author":{"gitId":"wujy28"},"content":"| Pathology            | `Pathology`            |","lastModifiedDate":"2023-11-03"},{"lineNumber":458,"author":{"gitId":"wujy28"},"content":"| Palliative Medicine  | `Palliative Medicine`  |","lastModifiedDate":"2023-11-03"},{"lineNumber":459,"author":{"gitId":"wujy28"},"content":"| Plastic Surgery      | `Plastic Surgery`      |","lastModifiedDate":"2023-11-03"},{"lineNumber":460,"author":{"gitId":"wujy28"},"content":"| Psychiatry           | `Psychiatry`           |","lastModifiedDate":"2023-11-03"},{"lineNumber":461,"author":{"gitId":"wujy28"},"content":"| Radiology            | `Radiology`            |","lastModifiedDate":"2023-11-03"},{"lineNumber":462,"author":{"gitId":"wujy28"},"content":"| Urology              | `Urology`              |","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"AaronJT1":104,"wujy28":97,"thienmy0":54,"longnguyentan":32,"RiyaMehta2211":37,"-":138}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eAdvanced\u0026Efficient (A\u0026E)\u003c/a\u003e","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-T14-2/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AaronJT1":1,"longnguyentan":1,"-":64}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"!include style.puml","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"participant \"p:Patient\" as Patient LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"[-\u003e LogicManager : execute(\"add n/John Tan\\ni/t7654321j\")","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"activate LogicManager","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add n/John Tan\\ni/t7654321j\")","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"create AddCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"activate AddCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"n/John Tan\\ni/t7654321j\")","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"activate AddCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"AddCommandParser -\u003e AddCommandParser : createPatient","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"activate AddCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"create Patient","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"AddCommandParser -\u003e Patient","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"activate Patient","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"Patient --\u003e AddCommandParser : p","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"deactivate Patient","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"create AddCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"AddCommandParser -\u003e AddCommand : AddCommand(p)","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"activate AddCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"deactivate AddCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"deactivate AddCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"destroy AddCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"activate AddCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"ref over AddCommand, Model : Check if duplicate patients","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"AddCommand -\u003e Model : addPatient","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"activate Model","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"deactivate Model","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"create CommandResult","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"activate CommandResult","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"CommandResult --\u003e AddCommand : r","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"AddCommand --\u003e LogicManager : r","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"deactivate AddCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"AaronJT1":83}},{"path":"docs/diagrams/AssignSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"participant \"a:AssignCommand\" as AssignCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"participant \"assignedPatient:Patient\" as Patient MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"[-\u003e AssignCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"activate AssignCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"ref over AssignCommand, Model : Get Patient with IC Number from list","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"AssignCommand -\u003e AssignCommand :createAssignedPatient","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"activate AssignCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"create Patient","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"AssignCommand -\u003e Patient","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"activate Patient","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"Patient --\u003e AssignCommand: assignedPatient","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"deactivate Patient","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"AssignCommand --\u003e AssignCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"deactivate AssignCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"AssignCommand -[hidden]-\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"ref over AssignCommand, Model : Replace old patient with assignedPatient","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"[\u003c-- AssignCommand : result","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"deactivate AssignCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"\u003c-[hidden]- AssignCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"destroy AssignCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wujy28":41}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"[-\u003e LogicManager : execute(\"delete i/T0000000A\")","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"\u0027delete patient with Ic number T0000000A","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete i/T0000000A\")","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"i/T0000000A\")","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"\u0027Hidden arrow to position the destroy-marker below the end of the activation bar.","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"DeleteCommand -\u003e Model : getPatient(new IcNumber(\"T0000000A\"), List\u003cPatient\u003e patientList)","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"\u0027obtain patient to be deleted using getPatient() method)","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"Model -\u003e Model : deletePatient(patient, deleteCommand)","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RiyaMehta2211":9,"-":65}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"[-\u003e LogicManager : execute(\"edit i/T0000000A n/Jonathan Tan\")","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"\u0027edit the name from John Doe to Jonathan Tan","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit i/T0000000A n/Jon Doe\")","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"create EditCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBookParser -\u003e EditCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"activate EditCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"EditCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBookParser -\u003e EditCommandParser : parse(\"i/T0000000A n/Jon Doe\")","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"activate EditCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"create EditCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"activate EditCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"EditCommand --\u003e EditCommandParser : e","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate EditCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"EditCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate EditCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"\u0027Hidden arrow to position the destroy-marker below the end of the activation bar.","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"EditCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"destroy EditCommandParser","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"activate EditCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"EditCommand -\u003e Model : getPatient(new IcNumber(\"T0000000A\"), List\u003cPatient\u003e patientList)","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"Model -\u003e Model : setPatient(John Doe, Jonathan Tan, editCommand)","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"\u0027setPatient contains target patient, edited patient, and command","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"create CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"activate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"CommandResult --\u003e EditCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-12"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate EditCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"RiyaMehta2211":73}},{"path":"docs/diagrams/RecordSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"@startuml","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"!include style.puml","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"skinparam sequenceReferenceBackgroundColor white","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"participant \":RecordCommandParser\" as RecordCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"participant \"e:EditRecordDescriptor\" as EditRecordDescriptor LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"participant \"r:RecordCommand\" as RecordCommand LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"end box","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"[-\u003e LogicManager : execute(\"input\")","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"activate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"note left","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"\"input\" here refers to \"record i/T0201234A","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"o/Broken Arm di/Hairline fracture tp/Cast for 2 days\"","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"end note","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"input\")","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"create RecordCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"AddressBookParser -\u003e RecordCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"activate RecordCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"RecordCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"deactivate RecordCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"AddressBookParser -\u003e RecordCommandParser : parse(\"args\")","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"activate RecordCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"note right of AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"\"args\" here refers to","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"\"i/T0201234A o/Broken","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"Arm di/Hairline fracture","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"tp/Cast for 2 days\"","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"end note","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"create EditRecordDescriptor","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"RecordCommandParser -\u003e EditRecordDescriptor","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"activate EditRecordDescriptor","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"EditRecordDescriptor --\u003e RecordCommandParser : e","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"deactivate EditRecordDescriptor","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"ref over EditRecordDescriptor : Set values of e with parsed input values","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"create RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"RecordCommandParser -\u003e RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"activate RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"RecordCommand --\u003e RecordCommandParser : r","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"deactivate RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"RecordCommandParser --\u003e AddressBookParser : r","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"deactivate RecordCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"RecordCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"destroy RecordCommandParser","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"AddressBookParser --\u003e LogicManager : r","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"LogicManager -\u003e RecordCommand : execute()","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"activate RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"ref over RecordCommand, Model : Get Patient and Record to edit","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"RecordCommand -\u003e RecordCommand : createEditedRecord()","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"activate RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"ref over RecordCommand, EditRecordDescriptor : Update Record fields with values stored in EditRecordDescriptor object","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"RecordCommand --\u003e RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"deactivate RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"RecordCommand -\u003e Model : updateFilteredPatientList()","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"activate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"deactivate Model","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"create CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"RecordCommand -\u003e CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"activate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"CommandResult --\u003e RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-11"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"RecordCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"deactivate RecordCommand","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-11"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"@enduml","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"thienmy0":101}},{"path":"docs/diagrams/RedoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"@startuml","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"!include style.puml","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"participant \"r:RedoCommand\" as RedoCommand LOGIC_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"end box","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"[-\u003e LogicManager : execute(redo)","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"activate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(redo)","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"create RedoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBookParser -\u003e RedoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"activate RedoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"RedoCommand --\u003e AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate RedoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBookParser --\u003e LogicManager : r","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"LogicManager -\u003e RedoCommand : execute()","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"activate RedoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"RedoCommand -\u003e Model : redoAddressBook()","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"activate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"Model -\u003e AddressBook : resetData()","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"activate AddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBook -\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate AddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"Model -\u003e VersionedAddressBook : getNextCommand()","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"activate VersionedAddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"VersionedAddressBook -\u003e Model : nextCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"Model -\u003e RedoCommand : nextCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate Model","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"RedoCommand --\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate RedoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"RedoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"destroy RedoCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-12"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"@enduml","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"RiyaMehta2211":57}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"Class RecordCard","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"Class RecordPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"MainWindow *-down-\u003e \"1\" RecordPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"RecordPanel -down-\u003e \"0..1\" RecordCard","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"RecordPanel -left-\u003e \"1\" PersonListPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"RecordPanel --|\u003e UiPart","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"RecordCard --|\u003e UiPart","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"RecordCard ..\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wujy28":9,"-":60}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"!pragma layout smetana","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State1 as \"\u003cu\u003eab0:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State2 as \"\u003cu\u003eab1:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    class State3 as \"\u003cu\u003eab2:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RiyaMehta2211":1,"-":21}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"!pragma layout smetana","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"title After command \"delete i/S1234567A\"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State1 as \"\u003cu\u003eab0:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State2 as \"\u003cu\u003eab1:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    class State3 as \"\u003cu\u003eab2:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RiyaMehta2211":2,"-":22}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"!pragma layout smetana","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"title After command \"add n/John Doe i/T1234567A\"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State1 as \"\u003cu\u003eab0:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State2 as \"\u003cu\u003eab1:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    class State3 as \"\u003cu\u003eab2:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RiyaMehta2211":2,"-":20}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"!pragma layout smetana","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State1 as \"\u003cu\u003eab0:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State2 as \"\u003cu\u003eab1:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    class State3 as \"\u003cu\u003eab2:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RiyaMehta2211":1,"-":21}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"!pragma layout smetana","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State1 as \"\u003cu\u003eab0:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State2 as \"\u003cu\u003eab1:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    class State3 as \"\u003cu\u003eab2:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RiyaMehta2211":1,"-":21}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"!pragma layout smetana","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State1 as \"\u003cu\u003eab0:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    class State2 as \"\u003cu\u003eab1:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    class State3 as \"\u003cu\u003eab3:AddressBook\u003c/u\u003e\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RiyaMehta2211":1,"-":22}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"UndoCommand --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UndoCommand -\u003e Model : undoAddressBook()","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"Model -\u003e AddressBook : resetData()","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"activate AddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"AddressBook -\u003e Model","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"deactivate AddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"Model -\u003e VersionedAddressBook : getNextCommand()","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"activate VersionedAddressBook","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"VersionedAddressBook -\u003e Model : previousCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"Model -\u003e UndoCommand : previousCommand","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RiyaMehta2211":9,"-":48}},{"path":"docs/diagrams/ViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"!include style.puml","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"participant \"p:PatientWithIcNumberPredicate\" as PatientWithIcNumberPredicate LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"[-\u003e LogicManager : execute(\"view i/t1234567j\")","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"activate LogicManager","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"view i/t1234567j\")","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"activate AddressBookParser","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"create ViewCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"AddressBookParser -\u003e ViewCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"AddressBookParser -\u003e ViewCommandParser : parse(\"i/t1234567j\")","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"activate ViewCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"create PatientWithIcNumberPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"ViewCommandParser -\u003e PatientWithIcNumberPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"activate PatientWithIcNumberPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"PatientWithIcNumberPredicate --\u003e ViewCommandParser : p","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"deactivate PatientWithIcNumberPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"create ViewCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"activate ViewCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"ViewCommand --\u003e ViewCommandParser : v","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"ViewCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"ViewCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"destroy ViewCommandParser","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"activate ViewCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"ViewCommand -\u003e Model : updateFilteredPatientList(p)","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"activate Model","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"deactivate Model","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"create CommandResult","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"activate CommandResult","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"CommandResult --\u003e ViewCommand : r","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"deactivate CommandResult","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"ViewCommand --\u003e LogicManager : r","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"deactivate ViewCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"[\u003c--LogicManager : r","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"deactivate LogicManager","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"AaronJT1":76}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"ecp -\u003e ec ++: index, editPatientDescriptor","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"AaronJT1":1,"-":21}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"# Advanced\u0026Efficient (A\u0026E)","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-T14-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S1-CS2103T-T14-2/tp/actions)","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-T14-2/tp/graph/badge.svg?token\u003dOANNMRPP8F)](https://codecov.io/gh/AY2324S1-CS2103T-T14-2/tp)","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"**Advanced\u0026Efficient (A\u0026E)** is a desktop application that helps Emergency Department (ED) doctors in managing","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"patient records and connecting patients to relevant departments. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"* If you are interested in using A\u0026E, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.md#quick-start).","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"* If you are interested about developing A\u0026E, the [**Developer Guide**](DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wujy28":7,"-":15}},{"path":"docs/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"!define LOGIC_COLOR_T2 #5252CE","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"!define MODEL_COLOR_T1 #ff0000","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"RiyaMehta2211":7}},{"path":"docs/team/aaronjt1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"# AaronJT1\u0027s Project Portfolio Page","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"## Project: Advanced\u0026Efficient (A\u0026E)","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"Advanced\u0026Efficient helps Emergency Department (ED) doctors in logging patient reports and connecting patients with","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"relevant departments.","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"## Contribution","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"Here are my contributions to the project.","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"* Code contributed","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"  [View my code!](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003daaronjt1\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"## Features implemented","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"### View Feature [#119](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/119)","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"**What it does** - Allows users to view the information of a specific patient with `Ic Number`","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"**Justification** - Currently there is a find command which allows users to find patients by keywords in names. However if a user wants to search for a specific patient with Ic Number, there is no option for that. Since find returns a list of patients with names matching the keyword, the user would have to manually go through the list to find that specific patient.","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"**Highlights** - Since Add command is enhanced to prevent patients with duplicate `Ic Number` from being added, users can be assured that the displayed user is the one they desired.","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"## Enhancement to existing features:","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"### Enhanced Add Feature","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"1. Option to add patients with compulsory fields only [#78](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/78),","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    - Previously, users have to fill in all the patient fields for the patient to added.","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    - Currently, users only need to fill in `Name` and `Ic Number` to add a patient","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"2. Check for duplicate `Ic Number` before adding a patient [#128](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/128)","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    - Previously the users are able to add patients with `Ic Number` that already exists","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"   in another patient in the patient record.","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"    - Currently, user will not allowed to add another patient with existing `Ic Number`","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"   and an error message will be shown.","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"### Enhanced exception / error messages for users","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"1. `PatientWithFieldNotFoundException` thrown when no patient with user-specified field found [#119](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/119)","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"    - Previously, when user input an `Ic Number` that does not exist in a patient record,","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"   it does not show any helpful message but simply showed an empty list.","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    - Currently, when user input an `Ic Number` that does not exist in a patient record,","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"   an exception will be thrown and helpful message will be displayed to inform users about it.","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"2. Integrated `PatientWithFieldNotFoundException` into all relevant commands [#153](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/153)","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"    - Assign, Delete, Edit, Record - Thrown when user entered an `Ic Number` that does not exist in any patient.","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"    - Find - Thrown when user entered keyword(s) that does not exist in any patient\u0027s name.","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"### Enhanced `ModelManager` [#128](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/128)","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"1. `isPatientWithIcNumberPresent` method to check if a patient with the `Ic Number` is present ","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"    - Useful for commands which uses `Ic Number` to find a patient like Find, View, etc.","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"2. `getCurrentPatientList` method to get current patients in the patient record rather than filtered list","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"    - Useful for commands which aims to perform commands on patients outside of the displayed list.","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"3. Testing utilities for the above mentioned methods. in `ModelManagerTest.java`.","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"### Enhanced testing utilities","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"1. Account for new Patient attributes [#102](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/102), [#116](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/116)","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"   - Refactored testing facilities which utilized patients like `CommandTestUtil`, `TypicalPatients` and `PatientBuilder`","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"2. Significantly improved coverage for AddCommandParser \u0026 EditCommandParser [#78](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/78), [#160](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/160)","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"3. Added testing for AssignCommand feature [#163](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/163)","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"----------------------------------------------------------------------","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"## Contributions to team-based task:","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"* tP Team organisation and Repo setup","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"* Managed Team Google Docs for ease of use","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"* Managed GitHub issues tracker","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"* Managed GitHub Milestones v1.1-v1.4","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"* Managed GitHub Releases v1.2, v1.3.trial and v1.3.1","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"* Managed product demo for v1.2 and v1.3","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"* Refactor Person instances to Patient in codebase [#68](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/68)","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"## Review / mentoring contributions:","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"* Reviewed pull requests by other group members and provided insightful comments","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"    * Some non-trivial PRs i have","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"      reviewed [#77](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/77)","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"      [#89](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/89) [#96](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/96) [#107](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/107) [#120](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/120) [#145](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/145) [#155](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/155) [#167](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/167)","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"    * Reviewed, approved and merged a total of 33 PRs out of ..","lastModifiedDate":"2023-11-10"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"* Provided guidelines to aid group members in implementation","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"    * Example : Aided group member in testing of Edit command [#145](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/145)","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"AaronJT1":95}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"RiyaMehta2211":2,"-":44}},{"path":"docs/team/longnguyentan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"# Long\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"## Project: Advanced\u0026Efficient (A\u0026E)","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"Advanced\u0026Efficient helps Emergency Department (ED) doctors in logging patient reports and connecting patients with relevant departments and doctors under time pressure during an emergency.","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dlongnguyentan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"* **New Feature**:","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"  * Added `Record` attributes ([#86](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/86))","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"  * Updated `Record` and `RecordTest` ([#98](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/98))","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"  * Updated `EditCommand`, `EditCommandParser`, and `ParserUtil` ([#103](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/103))","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"  * Added `Record` for data storage ([#164](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/164))","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"* **Enhancement to existing features**:","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"  * Improved UI ([#129](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/129))","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"  * Wrote Introduction \u0026 resized images ([#165](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/165) ","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"  * Updated `list` and `delete` features ([#51](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/51)","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"  * *To be included*","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"  * Maintaining the issue tracker \u0026 website","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"  * Updating user/developer docs","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"  * Reviewed and Merged various PRs from team members","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"longnguyentan":31}},{"path":"docs/team/riyamehta2211.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"# Riya\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"## Project: Advanced\u0026Efficient (A\u0026E)","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"Advanced\u0026Efficient helps Emergency Department (ED) doctors in logging patient reports and connecting patients with","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"relevant departments and doctors under time pressure during an emergency.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"    * [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003driyamehta2211\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    * Added Redo and Undo commands to convert to previous or the next state of the PatientRecordSystem","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    * Added Birthday and IcNumber attributes","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    * Added assignedDepartment to Storage","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    * Enhanced Delete and Edit features to access patient list using IC Number instead of list index","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"      * E.g. delete and edit can now be performed by specifying IC Number of patient using **i/IC**","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"  * Commands: Redo, Undo, Edit, Delete","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"* **Contributions to the DG**","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"  * Added UML sequential diagram for Delete","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"  * To be added soon: Implementation of Undo and Redo","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    * Maintaining the issue tracker","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    * Updating user/developer docs","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"  ","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"  * Reviewed and merged various PRs made by team members","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"AaronJT1":3,"RiyaMehta2211":32}},{"path":"docs/team/thienmy0.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"# Thien My\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"## Project: Advanced\u0026Efficient (A\u0026E)","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"Advanced\u0026Efficient helps Emergency Department (ED) doctors in logging patient reports and connecting patients with relevant departments and doctors under time pressure during an emergency.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"* Code contributed","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"  [View my RepoSense report!](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dthienmy0\u0026breakdown\u003dtrue#/)","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"  * to be added soon","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"  * Record Command to edit patient\u0027s record","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"* **Enhancement to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"  * Added Age Attribute","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"  * Added and implemented gender and priority attribute","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"* **Contributions to the UG**:","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"  * Wrote Quick Start, Command Summary","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"  * Commands: Record, Clear, Exit","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"* **Contributions to the DG**:","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"  * Implementation of Record Command","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"  * Appendix instructions for manual testing","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"  * Maintaining the issue tracker","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"  * Updating user/developer docs","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"  * Reviewed and Merged various PRs from team members","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"thienmy0":33}},{"path":"docs/team/wujy28.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"# Jingya\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"## Project: Advanced\u0026Efficient (A\u0026E)","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"Advanced\u0026Efficient helps Emergency Department (ED) doctors in logging patient reports and connecting patients with relevant departments and doctors under time pressure during an emergency.","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"**Code contributed:** [RepoSense Link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dwujy28\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"----","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"### New Features","lastModifiedDate":"2023-11-10"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"1. Added the department attribute to Patient ([#88](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/88))","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"   + Created the Department Enumeration","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"     + An enumeration that represents the valid hospital department values stored","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"       in the program","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"   + Created the AssignedDepartment class","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"     + An attribute class for Patient that stores the patient\u0027s currently assigned department","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"   + Both of these additions allow the program to store the information required for","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"   AssignCommand","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"   + Added testing for these classes","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"2. Added the AssignCommand for assigning Patients to Departments ","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"   ([#135](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/135))","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"   + A crucial feature that allows the user to assign a Patient to a Department","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"   (i.e. edit the AssignedDepartment field of a Patient)","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"   + Created the AssignCommand and AssignCommandParser classes","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"   + Added testing for these classes ([#226](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/226))","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"3. Added the SortCommand for sorting of Patients by property","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"   ([#166](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/166))","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"   + A good-to-have feature that allows the user to sort the patient list by a given property","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"   (i.e. name, IC number, department, age, or priority)","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"   + Created the SortCommand and SortCommandParser classes, as well as compareTo methods for","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"   the attributes involved","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"   + Added testing for these classes ([#226](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/226))","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"----","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"### Enhancements To Existing Features","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"1. Revamped the UI of the program","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"   + Redesigned the UI and created the initial mockup on Figma ","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"   ([Image](https://github.com/wujy28/tp/blob/28fc1b9cdd7e0bbc0e7b7548fa900aa404761059/docs/images/Ui.png))","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"   + Reformatted the UI to accommodate the viewing of patient list and patient record side-by-side, according to the ","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"   mockup ([#110](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/110), ","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"   [#166](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/166))","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"   + Added the UI components and controllers for patient record ","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"   ([#110](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/110), ","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"   [#173](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/173))","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"   + Added the functionality to view a patient\u0027s record by clicking on a patient in the patient list","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"     ([#110](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/110))","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"   + Styled the UI using CSS ([#150](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/150))","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"2. Added auto-computation behavior for the Age attribute from a Patient","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"   + Made modifications to the initially unutilized Age attribute so that it can automatically initialize with the","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"   correct value given a patient\u0027s birthday ([#161](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/161), ","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"   [#162](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/162))","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"----","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"+ Consolidated and organized bugs from PE-D","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"+ PRs reviewed (with non-trivial review comments): ","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"  [#102](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/102), ","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"  [#119](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/119),","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"  [#145](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/145),","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"  [#227](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/227)","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"### Contributions to documentation","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"+ User Guide","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"  + Added documentation for the features `find` and `sort` ","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"  ([#171](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/171))","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"  + Added the appendix for the list of available departments","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"  ([#171](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/171))","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"+ Developer Guide","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"  + Added implementation details for `assign` feature ","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"  ([#137](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/137))","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"  + Updated the explanation and class diagram for UI Component section","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"  ([#137](https://github.com/AY2324S1-CS2103T-T14-2/tp/pull/137))","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"wujy28":82}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":" * Changes the remark of an existing patient in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"            + \": Edits the remark of the patient identified \"","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"            + \"by the index number used in the last patient listing. \"","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"     * @param index of the patient in the filtered patient list to edit the remark","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"     * @param remark of the patient to be updated to","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"AaronJT1"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of patient data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the patient’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"AaronJT1"},"content":"Create a new `Remark` in `seedu.address.model.patient`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"AaronJT1"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"AaronJT1"},"content":"Simply add the following to [`seedu.address.ui.PatientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"AaronJT1"},"content":"public PersonCard(Person patient, int displayedIndex) {","lastModifiedDate":"2023-10-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"AaronJT1"},"content":"    remark.setText(patient.getRemark().value);","lastModifiedDate":"2023-10-05"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"AaronJT1"},"content":"        Person patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-05"},{"lineNumber":348,"author":{"gitId":"AaronJT1"},"content":"        Person editedPatient \u003d new Person(","lastModifiedDate":"2023-10-05"},{"lineNumber":349,"author":{"gitId":"AaronJT1"},"content":"                patientToEdit.getName(), patientToEdit.getPhone(), patientToEdit.getEmail(),","lastModifiedDate":"2023-10-05"},{"lineNumber":350,"author":{"gitId":"AaronJT1"},"content":"                patientToEdit.getAddress(), remark, patientToEdit.getTags());","lastModifiedDate":"2023-10-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"AaronJT1"},"content":"        model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"AaronJT1"},"content":"        return new CommandResult(generateSuccessMessage(editedPatient));","lastModifiedDate":"2023-10-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"AaronJT1"},"content":"     * {@code patientToEdit}.","lastModifiedDate":"2023-10-05"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"AaronJT1"},"content":"    private String generateSuccessMessage(Person patientToEdit) {","lastModifiedDate":"2023-10-05"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"AaronJT1"},"content":"        return String.format(message, patientToEdit);","lastModifiedDate":"2023-10-05"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"AaronJT1":20,"-":382}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.patient.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"  \"patients\": [ {","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AaronJT1":2,"-":113}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"AaronJT1"},"content":"       Person patientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-05"},{"lineNumber":199,"author":{"gitId":"AaronJT1"},"content":"       Person editedPatient \u003d createEditedPerson(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2023-10-05"},{"lineNumber":200,"author":{"gitId":"AaronJT1"},"content":"       if (!patientToEdit.isSamePerson(editedPatient) \u0026\u0026 model.hasPerson(editedPatient)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"AaronJT1"},"content":"       model.setPerson(patientToEdit, editedPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"AaronJT1"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPatient));","lastModifiedDate":"2023-10-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"AaronJT1"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the patient data.","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"AaronJT1"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ patients.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":212,"author":{"gitId":"AaronJT1"},"content":"     FYI, The \u0027filtered list\u0027 is the list of patients resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the patients so that the user can see the edited patient along with all other patients. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":213,"author":{"gitId":"AaronJT1"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of patients is being tracked.","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"AaronJT1"},"content":"        patients.addAll(","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AaronJT1":10,"-":301}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"        System.out.println(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) throws DataLoadingException {","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"            //System.out.println(\"Check\" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wujy28":1,"longnguyentan":6,"-":184}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"     * @throws PatientWithFieldNotFoundException If user enters a field not present in any existing patients","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException,","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"            PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"AaronJT1":7,"-":46}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d \"Could not save data to file %s due to insufficient\"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        + \" permissions to write to the file or the folder.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"    public CommandResult execute(String commandText)","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"            throws CommandException, ParseException, PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"AaronJT1":8,"-":82}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    public static final String MESSAGE_INVALID_PATIENT_IC \u003d \"IC Number should start and end with \"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"            + \"an alphabet with non negative numbers in between\";","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d patients listed!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_PATIENT_LISTED_SUCCESS \u003d \"Patient found!!\";","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD \u003d \"Unable to find any patient(s) with \";","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_REQUIRED_COMMAND_NOT_FOUND_FORMAT \u003d \"Ensure you have the required prefix(s): \"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"        + \"\\n%s\";","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"     * Formats the {@code patient} for display to the user.","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"    public static String format(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        builder.append(patient.getName())","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"                .append(patient.getPhone())","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"                .append(patient.getEmail())","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"                .append(patient.getGender())","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"                .append(\"; IC Number: \")","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"                .append(patient.getIcNumber())","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"                .append(\"; Birthday: \")","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"                .append(patient.getBirthday())","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"                .append(patient.getAddress())","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"                .append(\"; Priority: \")","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"                .append(patient.getPriority())","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"                .append(\"; Department: \")","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"                .append(patient.getAssignedDepartment())","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        patient.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"     * Formats the {@code record} for display to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"    public static String formatRecord(Patient patient, Record record) {","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"        builder.append(patient.getIcNumber())","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"                .append(\"; Initial Observations: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"                .append(record.getInitialObservations())","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"                .append(\"; Diagnosis: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"                .append(record.getDiagnosis())","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"                .append(\"; Treatment Plan: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"                .append(record.getTreatmentPlan());","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":13,"wujy28":10,"thienmy0":15,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":" * Adds a patient to the patient record system.","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"        COMMAND_WORD + \": Adds a patient to the patient record.\\n\" + \"Parameters: \" + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"            + PREFIX_PHONE + \"PHONE \" + PREFIX_EMAIL + \"EMAIL \" + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"            + PREFIX_IC_NUMBER + \"IC_NUMBER \" + PREFIX_BIRTHDAY + \"BIRTHDAY \" + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"            + PREFIX_PRIORITY + \"PRIORITY \" + \"[\" + PREFIX_TAG + \"TAG]...\\n\" + \"Example: \"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"            + COMMAND_WORD + \" \" + PREFIX_NAME + \"John Doe \" + PREFIX_PHONE + \"98765432 \" + PREFIX_EMAIL","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"            + \"johnd@example.com \" + PREFIX_GENDER + \"MALE \" + PREFIX_IC_NUMBER + \"S2840182A \" + PREFIX_BIRTHDAY","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"            + \"02/01/1998 \" + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \" + PREFIX_PRIORITY + \"MEDIUM \"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"            + PREFIX_TAG + \"friends \" + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the patient record system!\";","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_PATIENT_WITH_IC_NUMBER_ALREADY_EXIST \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"        \"The patient with that IC Number \" + \"already exists in the patient record system!\";","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"    private final Patient toAdd;","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        toAdd \u003d patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String command) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        if (model.hasPatient(toAdd)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        if (model.isPatientWithIcNumberPresent(toAdd.getIcNumber())) {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"            throw new CommandException(MESSAGE_PATIENT_WITH_IC_NUMBER_ALREADY_EXIST);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        assert !model.isPatientWithIcNumberPresent(toAdd.getIcNumber()); // ic number should be non-existing","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"        model.addPatient(toAdd, command);","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        logger.info(\"AddCommand : \" + this + \"\\nsuccessfully executed\");","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        return new ToStringBuilder(this).add(\"toAdd\", toAdd).toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wujy28":8,"AaronJT1":22,"thienmy0":6,"RiyaMehta2211":2,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/AssignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.AssignedDepartment;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":" * Assigns a patient to a hospital department","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"public class AssignCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        COMMAND_WORD + \": Assigns a patient identified \" + \"by the IC number to a hospital department. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"            + \"Attempting to assign the patient to the department they are\"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"            + \" currently under will display an error message.\\n\" + \"Parameters: \" + PREFIX_IC_NUMBER + \"IC_NUMBER \"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"            + PREFIX_DEPARTMENT + \"DEPARTMENT \" + \"\\nExample: \" + COMMAND_WORD + \" \" + PREFIX_IC_NUMBER + \"T0372683C \"","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"            + PREFIX_DEPARTMENT + \"cardiology\";","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"    public static final String MESSAGE_ASSIGN_PATIENT_SUCCESS \u003d \"Assigned Patient: %s to %s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    public static final String MESSAGE_SAME_DEPARTMENT \u003d \"Patient: %s is already assigned to %s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_INVALID_DEPARTMENT \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"        \"Department: %s does not exist.\\n\" + \"Refer to the A\u0026E User Guide for the list of valid departments.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    private final IcNumber icNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"    private final AssignedDepartment department;","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"     * @param icNumber   of the patient in the filtered patient list to assign","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"     * @param department to assign the patient to","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    public AssignCommand(IcNumber icNumber, AssignedDepartment department) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"        requireNonNull(department);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"        this.department \u003d department;","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"    public CommandResult execute(Model model, String command)","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"            throws CommandException, PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e currentPatientList \u003d model.getCurrentPatientList();","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        Patient patientToAssign \u003d model.getPatient(icNumber, currentPatientList);","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"        if (patientToAssign \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientWithFieldNotFoundException(\"Ic Number : \" + icNumber.value);","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        Patient assignedPatient \u003d createAssignedPatient(patientToAssign, department);","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"        if (patientToAssign.equals(assignedPatient)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"            throw new CommandException(","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"                String.format(MESSAGE_SAME_DEPARTMENT, patientToAssign.getName(), this.department));","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"        model.setPatient(patientToAssign, assignedPatient, command);","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"        logger.info(\"AssignCommand : \" + this + \"\\nsuccessfully executed\");","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"            String.format(MESSAGE_ASSIGN_PATIENT_SUCCESS, patientToAssign.getName(), this.department));","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToAssign}","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"     * assigned to {@code newlyAssignedDepartment}.","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"    private static Patient createAssignedPatient(Patient patientToAssign, AssignedDepartment newlyAssignedDepartment) {","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        assert patientToAssign !\u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"        Name name \u003d patientToAssign.getName();","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"        Phone phone \u003d patientToAssign.getPhone();","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"        Email email \u003d patientToAssign.getEmail();","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"        Gender gender \u003d patientToAssign.getGender();","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"        IcNumber icNumber \u003d patientToAssign.getIcNumber();","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"        Birthday birthday \u003d patientToAssign.getBirthday();","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"        Address address \u003d patientToAssign.getAddress();","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"thienmy0"},"content":"        Priority priority \u003d patientToAssign.getPriority();","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"        Set\u003cTag\u003e tags \u003d patientToAssign.getTags();","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"        Record record \u003d patientToAssign.getRecord();","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"        return new Patient(name, phone, email, gender, icNumber, birthday,","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"                address, priority, tags, newlyAssignedDepartment, record);","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"        if (!(other instanceof AssignCommand)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"        AssignCommand otherAssignCommand \u003d (AssignCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"        return icNumber.equals(otherAssignCommand.icNumber) \u0026\u0026 department.equals(otherAssignCommand.department);","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"        return new ToStringBuilder(this).add(\"icNumber\", icNumber).add(\"department\", department).toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wujy28":106,"AaronJT1":18,"thienmy0":5,"RiyaMehta2211":1}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":" * Clears the patient record system.","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patient record has been cleared!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"        model.setAddressBook(new AddressBook(), command);","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":2,"RiyaMehta2211":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    public abstract CommandResult execute(Model model, String command)","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"            throws CommandException, PatientWithFieldNotFoundException;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model) throws CommandException, PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"        return execute(model, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":1,"wujy28":2,"RiyaMehta2211":3,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":" * Deletes a patient identified using it\u0027s ic number from the patient record system.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"            + \": Deletes the patient identified by the ic number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"            + \"Parameters: i/IC_NUMBER\\n\" + \"Example: \" + COMMAND_WORD + \" i/T0000000A\";","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Patient: %1$s\";","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    private final IcNumber icNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    public DeleteCommand(IcNumber icNumber) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String command) throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cPatient\u003e currentPatientList \u003d model.getCurrentPatientList();","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientToDelete \u003d model.getPatient(icNumber, currentPatientList);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        if (patientToDelete \u003d\u003d null) { // no patient with that IC","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientWithFieldNotFoundException(\"Ic Number : \" + icNumber.value);","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        logger.info(\"DeleteCommand : \" + this + \"\\nsuccessfully executed\");","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"        model.deletePatient(patientToDelete, command);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, Messages.format(patientToDelete)));","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"        return icNumber.equals(otherDeleteCommand.icNumber);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"                .add(\"icNumber\", icNumber)","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":12,"thienmy0":1,"RiyaMehta2211":11,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.AssignedDepartment;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":" * Edits the details of an existing patient in the patient record system.","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        COMMAND_WORD + \": Edits the details of the patient identified \" + \"by their IC Number. \"","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"            + \"Existing values will be overwritten by the input values.\\n\" + \"Parameters: \" + PREFIX_IC_NUMBER","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"            + \"IC_NUMBER \" + \"[\" + PREFIX_NAME + \"NAME] \" + \"[\" + PREFIX_PHONE + \"PHONE] \" + \"[\" + PREFIX_EMAIL","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"            + \"EMAIL] \" + \"[\" + PREFIX_GENDER + \"GENDER] \" + \"[\" + PREFIX_IC_NUMBER + \"IC_NUMBER] \" + \"[\"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"            + PREFIX_BIRTHDAY + \"BIRTHDAY] \" + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \" + \"[\" + PREFIX_PRIORITY + \"PRIORITY] \"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\" + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_IC_NUMBER + \"T08374678A \"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"            + PREFIX_PHONE + \"91234567 \" + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_EDIT_PATIENT_SUCCESS \u003d \"Edited Patient: %1$s\";","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists in the patient record system!\";","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"    private final IcNumber icNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param icNumber              of the patient in the filtered patient list to edit","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"     * @param editPatientDescriptor details to edit the patient with","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"    public EditCommand(IcNumber icNumber, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"    public CommandResult execute(Model model, String command)","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"            throws CommandException, PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e currentPatientList \u003d model.getCurrentPatientList();","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"        Patient patientToEdit \u003d model.getPatient(icNumber, currentPatientList);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        if (patientToEdit \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientWithFieldNotFoundException(\"Ic Number : \" + icNumber.value);","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        Patient editedPatient \u003d createEditedPatient(patientToEdit, editPatientDescriptor);","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        if (!patientToEdit.isSamePatient(editedPatient) \u0026\u0026 model.hasPatient(editedPatient)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"        model.setPatient(patientToEdit, editedPatient, command);","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PATIENT_SUCCESS, Messages.format(editedPatient)));","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"        Email updatedEmail \u003d editPatientDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"        Gender updatedGender \u003d editPatientDescriptor.getGender().orElse(patientToEdit.getGender());","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"        IcNumber updatedIcNumber \u003d editPatientDescriptor.getIcNumber().orElse(patientToEdit.getIcNumber());","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"        Birthday updatedBirthday \u003d editPatientDescriptor.getBirthday().orElse(patientToEdit.getBirthday());","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"        Address updatedAddress \u003d editPatientDescriptor.getAddress().orElse(patientToEdit.getAddress());","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"thienmy0"},"content":"        Priority updatedPriority \u003d editPatientDescriptor.getPriority().orElse(patientToEdit.getPriority());","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPatientDescriptor.getTags().orElse(patientToEdit.getTags());","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"        // Edit command does not update AssignedDepartment or Record","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"        AssignedDepartment originalDepartment \u003d patientToEdit.getAssignedDepartment();","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"        Record originalRecord \u003d patientToEdit.getRecord();","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmail, updatedGender, updatedIcNumber, updatedBirthday,","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"            updatedAddress, updatedPriority, updatedTags, originalDepartment, originalRecord);","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"RiyaMehta2211"},"content":"        return icNumber.equals(otherEditCommand.icNumber) \u0026\u0026 editPatientDescriptor.equals(","lastModifiedDate":"2023-10-25"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"            otherEditCommand.editPatientDescriptor);","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"        return new ToStringBuilder(this).add(\"icNumber\", icNumber).add(\"editPatientDescriptor\", editPatientDescriptor)","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"     * Stores the details to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"AaronJT1"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"AaronJT1"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2023-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"longnguyentan"},"content":"        private Gender gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"longnguyentan"},"content":"        private IcNumber icNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"        private Birthday birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"thienmy0"},"content":"        private Priority priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"AaronJT1"},"content":"        public EditPatientDescriptor() {","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"AaronJT1"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2023-10-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"wujy28"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"wujy28"},"content":"            setIcNumber(toCopy.icNumber);","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"wujy28"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"thienmy0"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"         * Returns true if at least one non-IcNumber field is edited.","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"AaronJT1"},"content":"        public boolean isAnyFieldExceptIcNumberEdited() {","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, gender, birthday, address, tags, priority);","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"thienmy0"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"thienmy0"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"thienmy0"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"thienmy0"},"content":"            return Optional.ofNullable(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"AaronJT1"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"AaronJT1"},"content":"            EditPatientDescriptor otherEditPatientDescriptor \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2023-10-05"},{"lineNumber":254,"author":{"gitId":"AaronJT1"},"content":"            return Objects.equals(name, otherEditPatientDescriptor.name) \u0026\u0026 Objects.equals(phone,","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"AaronJT1"},"content":"                otherEditPatientDescriptor.phone) \u0026\u0026 Objects.equals(email, otherEditPatientDescriptor.email)","lastModifiedDate":"2023-11-01"},{"lineNumber":256,"author":{"gitId":"AaronJT1"},"content":"                \u0026\u0026 Objects.equals(gender, otherEditPatientDescriptor.gender) \u0026\u0026 Objects.equals(icNumber,","lastModifiedDate":"2023-11-01"},{"lineNumber":257,"author":{"gitId":"AaronJT1"},"content":"                otherEditPatientDescriptor.icNumber) \u0026\u0026 Objects.equals(birthday, otherEditPatientDescriptor.birthday)","lastModifiedDate":"2023-11-01"},{"lineNumber":258,"author":{"gitId":"AaronJT1"},"content":"                \u0026\u0026 Objects.equals(address, otherEditPatientDescriptor.address) \u0026\u0026 Objects.equals(priority,","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"AaronJT1"},"content":"                otherEditPatientDescriptor.priority) \u0026\u0026 Objects.equals(tags, otherEditPatientDescriptor.tags);","lastModifiedDate":"2023-11-01"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":262,"author":{"gitId":"longnguyentan"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-10-17"},{"lineNumber":263,"author":{"gitId":"longnguyentan"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":264,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":265,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":266,"author":{"gitId":"longnguyentan"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-10-17"},{"lineNumber":267,"author":{"gitId":"longnguyentan"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-10-17"},{"lineNumber":268,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":269,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":270,"author":{"gitId":"longnguyentan"},"content":"        public void setBirthday(Birthday birthday) {","lastModifiedDate":"2023-10-17"},{"lineNumber":271,"author":{"gitId":"longnguyentan"},"content":"            this.birthday \u003d birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":272,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":273,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":274,"author":{"gitId":"longnguyentan"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2023-10-17"},{"lineNumber":275,"author":{"gitId":"longnguyentan"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2023-10-17"},{"lineNumber":276,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":277,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":278,"author":{"gitId":"longnguyentan"},"content":"        public void setIcNumber(IcNumber icNumber) {","lastModifiedDate":"2023-10-17"},{"lineNumber":279,"author":{"gitId":"longnguyentan"},"content":"            this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":280,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":281,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":282,"author":{"gitId":"longnguyentan"},"content":"        public Optional\u003cIcNumber\u003e getIcNumber() {","lastModifiedDate":"2023-10-17"},{"lineNumber":283,"author":{"gitId":"longnguyentan"},"content":"            return Optional.ofNullable(icNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":288,"author":{"gitId":"AaronJT1"},"content":"            return new ToStringBuilder(this).add(\"name\", name).add(\"phone\", phone).add(\"email\", email)","lastModifiedDate":"2023-11-01"},{"lineNumber":289,"author":{"gitId":"AaronJT1"},"content":"                .add(\"gender\", gender).add(\"icNumber\", icNumber).add(\"birthday\", birthday).add(\"address\", address)","lastModifiedDate":"2023-11-01"},{"lineNumber":290,"author":{"gitId":"AaronJT1"},"content":"                .add(\"priority\", priority).add(\"tags\", tags).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"wujy28":8,"AaronJT1":67,"thienmy0":16,"longnguyentan":31,"RiyaMehta2211":7,"-":164}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" * Terminates the patient record system.","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting A\u0026E as requested ...\";","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"AaronJT1":2,"RiyaMehta2211":1,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":" * Finds and lists all patients in the patient record system whose name contains any of the argument keywords.","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"        + \"the specified keywords (case-insensitive) and displays them as a list.\\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\" + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String command) throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        if (model.getFilteredPatientList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientWithFieldNotFoundException(\"the given keywords.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"            String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        return new ToStringBuilder(this).add(\"predicate\", predicate).toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"AaronJT1":11,"thienmy0":1,"RiyaMehta2211":1,"-":46}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RiyaMehta2211":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":" * Lists all patients in the patient record system to the user.","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":4,"RiyaMehta2211":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/RecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INITIAL_OBSERVATION;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TREATMENT_PLAN;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":" * Edits the Patient Record with a certain {@Code IcNumber}","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"public class RecordCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    public static final String COMMAND_WORD \u003d \"record\";","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        COMMAND_WORD + \": Edits the record of the patient identified \" + \"by their IC Number. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"            + \"Existing values will be overwritten by the input values.\\n\" + \"Parameters: i/IC_NUMBER \" + \"[\"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"            + PREFIX_INITIAL_OBSERVATION + \"INITIAL_OBSERVATIONS] \" + \"[\" + PREFIX_DIAGNOSIS + \"DIAGNOSIS] \" + \"[\"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"            + PREFIX_TREATMENT_PLAN + \"TREATMENT_PLAN]\\n\" + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_IC_NUMBER","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"            + \"T0472687A \" + PREFIX_INITIAL_OBSERVATION + \"Sneezing \" + PREFIX_DIAGNOSIS + \"Flu \"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"            + PREFIX_TREATMENT_PLAN + \"Take medicine\";","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"    public static final String MESSAGE_EDIT_RECORD_SUCCESS \u003d \"Edited Patient Record: %1$s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to record must be provided.\";","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"    private final IcNumber icNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"    private final RecordCommand.EditRecordDescriptor editRecordDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"     * Creates a RecordCommand to add the specified {@code IcNumber}","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"    public RecordCommand(IcNumber icNumber, EditRecordDescriptor editRecordDescriptor) {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(editRecordDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"        this.editRecordDescriptor \u003d editRecordDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    public CommandResult execute(Model model, String command)","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"            throws CommandException, PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e currentPatientList \u003d model.getCurrentPatientList();","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        Patient patientToEdit \u003d model.getPatient(icNumber, currentPatientList);","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        if (patientToEdit \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientWithFieldNotFoundException(\"Ic Number : \" + icNumber.value);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"        Record recordToEdit \u003d patientToEdit.getRecord();","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"        createEditedRecord(recordToEdit, editRecordDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"        model.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"        logger.info(\"RecordCommand : \" + this + \"\\nsuccessfully executed\");","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"            String.format(MESSAGE_EDIT_RECORD_SUCCESS, Messages.formatRecord(patientToEdit, recordToEdit)));","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"     * Creates and edits a {@code Record} with the details of {@code recordToEdit}","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"     * edited with {@code editRecordDescriptor}.","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"    public static void createEditedRecord(Record recordToEdit,","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"                                           RecordCommand.EditRecordDescriptor editRecordDescriptor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"        assert recordToEdit !\u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        String updatedInitialObservations \u003d editRecordDescriptor.getInitialObservations()","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"            .orElse(recordToEdit.getInitialObservations());","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"        String updatedDiagnosis \u003d editRecordDescriptor.getDiagnosis().orElse(recordToEdit.getDiagnosis());","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"        String updatedTreatmentPlan \u003d editRecordDescriptor.getTreatmentPlan().orElse(recordToEdit.getTreatmentPlan());","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"        recordToEdit.setInitialObservations(updatedInitialObservations);","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"        recordToEdit.setDiagnosis(updatedDiagnosis);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"        recordToEdit.setTreatmentPlan(updatedTreatmentPlan);","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"thienmy0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"thienmy0"},"content":"        if (!(other instanceof RecordCommand)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"thienmy0"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"thienmy0"},"content":"        RecordCommand otherRecordCommand \u003d (RecordCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"        return icNumber.equals(otherRecordCommand.icNumber) \u0026\u0026 editRecordDescriptor.equals(","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"thienmy0"},"content":"            otherRecordCommand.editRecordDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"        return new ToStringBuilder(this).add(\"icNumber\", icNumber).add(\"editRecordDescriptor\", editRecordDescriptor)","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"thienmy0"},"content":"            .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"thienmy0"},"content":"     * Stores the details to edit the patient record with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"     * corresponding field value of the patient\u0027s record.","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"    public static class EditRecordDescriptor {","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"thienmy0"},"content":"        private String initialObservations;","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"        private String diagnosis;","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"thienmy0"},"content":"        private String treatmentPlan;","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"        public EditRecordDescriptor() {","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"        /**","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"thienmy0"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"thienmy0"},"content":"         */","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"thienmy0"},"content":"        public EditRecordDescriptor(RecordCommand.EditRecordDescriptor toCopy) {","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"thienmy0"},"content":"            setInitialObservations(toCopy.initialObservations);","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"thienmy0"},"content":"            setDiagnosis(toCopy.diagnosis);","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"            setTreatmentPlan(toCopy.treatmentPlan);","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"thienmy0"},"content":"        /**","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"thienmy0"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"thienmy0"},"content":"         */","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"thienmy0"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"thienmy0"},"content":"            return CollectionUtil.isAnyNonNull(initialObservations, diagnosis, treatmentPlan);","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"thienmy0"},"content":"        public void setInitialObservations(String initialObservations) {","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"thienmy0"},"content":"            this.initialObservations \u003d initialObservations;","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"thienmy0"},"content":"        public Optional\u003cString\u003e getInitialObservations() {","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"thienmy0"},"content":"            return Optional.ofNullable(initialObservations);","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"thienmy0"},"content":"        public void setDiagnosis(String diagnosis) {","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"thienmy0"},"content":"            this.diagnosis \u003d diagnosis;","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"thienmy0"},"content":"        public Optional\u003cString\u003e getDiagnosis() {","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"thienmy0"},"content":"            return Optional.ofNullable(diagnosis);","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"thienmy0"},"content":"        public void setTreatmentPlan(String treatmentPlan) {","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"thienmy0"},"content":"            this.treatmentPlan \u003d treatmentPlan;","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"thienmy0"},"content":"        public Optional\u003cString\u003e getTreatmentPlan() {","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"thienmy0"},"content":"            return Optional.ofNullable(treatmentPlan);","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"thienmy0"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"thienmy0"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"thienmy0"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"thienmy0"},"content":"                return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"thienmy0"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"thienmy0"},"content":"            if (!(other instanceof RecordCommand.EditRecordDescriptor)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"thienmy0"},"content":"                return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"thienmy0"},"content":"            RecordCommand.EditRecordDescriptor otherEditRecordDescriptor \u003d (RecordCommand.EditRecordDescriptor) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"AaronJT1"},"content":"            return Objects.equals(initialObservations, otherEditRecordDescriptor.initialObservations) \u0026\u0026 Objects.equals(","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"AaronJT1"},"content":"                diagnosis, otherEditRecordDescriptor.diagnosis) \u0026\u0026 Objects.equals(treatmentPlan,","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"AaronJT1"},"content":"                otherEditRecordDescriptor.treatmentPlan);","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"thienmy0"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"thienmy0"},"content":"        public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"            return new ToStringBuilder(this).add(\"initialObservations\", initialObservations).add(\"diagnosis\", diagnosis)","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"thienmy0"},"content":"                .add(\"treatmentPlan\", treatmentPlan).toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"AaronJT1":24,"wujy28":2,"thienmy0":168}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" * Undoes most recent command.","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"            COMMAND_WORD + \": redoes the most recent command by the user\" + \"Parameters: None\"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"                    + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String MESSAGE_REDONE_SUCCESS \u003d \"Successfully redone the most recent command!\";","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String MESSAGE_NO_COMMANDS_REDONE \u003d \"There are no recent commands to redo.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    public RedoCommand() {}","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String commandText) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new CommandException(MESSAGE_NO_COMMANDS_REDONE);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        String command \u003d model.redoAddressBook();","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        return new CommandResult(String.format(MESSAGE_REDONE_SUCCESS, command));","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"wujy28":4,"RiyaMehta2211":28}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":" * Sorts the patient list based on the given property.","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts the patient list \"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"            + \"based on the given property.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"            + \"Parameters: PROPERTY\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"            + \"PROPERTY can only be one of the following: name, ic, department, age, priority\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"            + \"Example: \" + COMMAND_WORD + \" priority\";","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    public static final String MESSAGE_SORT_LIST_SUCCESS \u003d \"Sorted current list by %s\";","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    private final SortOrder sortOrder;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     * @param sortOrder property to sort the list by","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    public SortCommand(SortOrder sortOrder) {","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"        requireNonNull(sortOrder);","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        this.sortOrder \u003d sortOrder;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    public CommandResult execute(Model model, String str) {","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"        model.sortPatientList(sortOrder.getComparator());","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        return new CommandResult(String.format(MESSAGE_SORT_LIST_SUCCESS, sortOrder));","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"     * Enumeration for sort orders.","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"     * These are the available properties to sort the list by.","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    public enum SortOrder {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        NAME(Comparator.comparing(Patient::getName), \"name\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        IC_NUMBER(Comparator.comparing(Patient::getIcNumber), \"ic\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        DEPARTMENT(Comparator.comparing(Patient::getAssignedDepartment), \"department\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        AGE(Comparator.comparing(Patient::getAge), \"age\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        PRIORITY((p1, p2) -\u003e -(p1.getPriority().compareTo(p2.getPriority())), \"priority\");","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        private Comparator\u003c? super Patient\u003e comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        private String string;","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"        SortOrder(Comparator\u003c? super Patient\u003e comparator, String string) {","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"            this.comparator \u003d comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"            this.string \u003d string;","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"            return string;","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        public Comparator\u003c? super Patient\u003e getComparator() {","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"            return comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"        public static SortOrder getSortOrder(String string) {","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"            requireNonNull(string);","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"            for (SortOrder sortOrder : SortOrder.values()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"                if (string.equalsIgnoreCase(sortOrder.string)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"                    return sortOrder;","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"            return null;","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"            return true;","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"            return false;","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"        SortCommand otherFindCommand \u003d (SortCommand) other;","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        return sortOrder.equals(otherFindCommand.sortOrder);","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"    public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"        return new ToStringBuilder(this).add(\"sortOrder\", sortOrder).toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"wujy28":100,"AaronJT1":1}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" * Undoes most recent command.","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"            COMMAND_WORD + \": undoes the most recent command by the user\" + \"Parameters: None\"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"                    + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String MESSAGE_UNDONE_SUCCESS \u003d \"Successfully undone the most recent command\";","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String MESSAGE_NO_COMMANDS_UNDONE \u003d \"There are no recent commands to undo.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    public UndoCommand() {}","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String commandText) throws CommandException {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new CommandException(MESSAGE_NO_COMMANDS_UNDONE);","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        String command \u003d model.undoAddressBook();","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        return new CommandResult(String.format(MESSAGE_UNDONE_SUCCESS));","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"wujy28":4,"RiyaMehta2211":27}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENT_LISTED_SUCCESS;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.PatientWithIcNumberPredicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":" * Views the Patient with a certain {@Code IcNumber}","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"        COMMAND_WORD + \": View the Patient with specified Ic Number\\n\" + \"Parameters: i/IC_NUMBER\\n\" + \"Example: \"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"            + COMMAND_WORD + \" i/t1234567j\";","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    private final PatientWithIcNumberPredicate predicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    private final IcNumber icNumberToFind;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"     * Creates a ViewCommand object to be executed","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"     * @param predicate      The predicate used to filter Patients","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"     * @param icNumberToFind The icNumber entered by user input to be find","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    public ViewCommand(PatientWithIcNumberPredicate predicate, IcNumber icNumberToFind)","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"            throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        if (icNumberToFind \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientWithFieldNotFoundException(\"Multiplicity violated. Each patient has 1 non-null IcNumber.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        this.icNumberToFind \u003d icNumberToFind;","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"     * Executes the {@Code executes ViewCommand} using the current model and return {@Code CommandResult}","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"     * @return CommandResult object","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"     * @throws PatientWithFieldNotFoundException If user enters a field not present in any existing patients","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"    public CommandResult execute(Model model, String command) throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        if (model.getFilteredPatientList().size() \u003d\u003d 0) { // no patient with that IC","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientWithFieldNotFoundException(\"Ic Number : \" + icNumberToFind.value);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        logger.info(\"ViewCommand : \" + this + \"\\nsuccessfully executed\");","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        return new CommandResult(MESSAGE_PATIENT_LISTED_SUCCESS);","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"        return predicate.equals(otherViewCommand.predicate);","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        return new ToStringBuilder(this).add(\"predicate\", predicate).toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AaronJT1":77,"thienmy0":4,"RiyaMehta2211":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_REQUIRED_COMMAND_NOT_FOUND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"    public static final Prefix[] RELEVANT_PREFIXES \u003d new Prefix[]{PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"        PREFIX_GENDER, PREFIX_IC_NUMBER, PREFIX_BIRTHDAY, PREFIX_ADDRESS, PREFIX_PRIORITY, PREFIX_TAG};","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    public static final Prefix[] RELEVANT_PREFIXES_WITHOUT_TAG \u003d new Prefix[]{PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"        PREFIX_GENDER, PREFIX_IC_NUMBER, PREFIX_BIRTHDAY, PREFIX_ADDRESS, PREFIX_PRIORITY};","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"    public static final Prefix[] REQUIRED_PREFIXES \u003d new Prefix[]{PREFIX_NAME, PREFIX_IC_NUMBER};","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"    public static final Prefix[] OPTIONAL_PREFIXES \u003d new Prefix[]{PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER,","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"        PREFIX_BIRTHDAY, PREFIX_ADDRESS, PREFIX_PRIORITY, PREFIX_TAG};","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"     * Gets prefixes in argMultimap and returns a Prefix array containing all present prefixes","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"     * @param argMultimap Argument multimap which contains prefix to value mapping","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"     * @return Prefix array containing present prefixes","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"    public static Prefix[] getPrefixesPresent(ArgumentMultimap argMultimap) {","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        ArrayList\u003cPrefix\u003e prefixesPresent;","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        prefixesPresent \u003d new ArrayList\u003c\u003e(List.copyOf(Arrays.asList(REQUIRED_PREFIXES)));","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        assert prefixesPresent.size() \u003e 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        // go through other optional prefixes, check which contains value, add to list","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        for (Prefix p : OPTIONAL_PREFIXES) {","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"            if (argMultimap.getValue(p).isPresent()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"                prefixesPresent.add(p);","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        return prefixesPresent.toArray(new Prefix[]{});","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"     * Create Patient from prefixes present","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"     * @param argMultimap Contains mapping of key which is prefix and value which is argument value","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"     * @param prefixes    List of prefixes present in argument","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"     * @return Patient with the fields present in user input","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"    public static Patient createPatient(ArgumentMultimap argMultimap, Prefix[] prefixes) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        assert prefixes.length \u003e 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"        // filling the fields with default values","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"        for (Prefix r : REQUIRED_PREFIXES) {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"            assert argMultimap.getValue(r).isPresent();","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"        Phone phone \u003d new Phone(Phone.getDefaultPhone());","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"        Email email \u003d new Email(Email.getDefaultEmail());","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"        Gender gender \u003d new Gender(Gender.getDefaultGender());","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"        IcNumber icNumber \u003d new IcNumber(IcNumber.getDefaultIcNumber());","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"RiyaMehta2211"},"content":"        Birthday birthday \u003d new Birthday(Birthday.getDefaultBirthday());","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"        Address address \u003d new Address(Address.getDefaultAddress());","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"        Priority priority \u003d new Priority(Priority.getDefaultPriority());","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"        // passing to helper function to replace fields with actual values if it exists","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"        return createPatientFromPresentPrefixes(name, phone, email, gender, icNumber, birthday, address, priority,","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"            tagList, argMultimap, prefixes);","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"     * Replaces Patient fields with actual value if it is present in argMultimap","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"     * @param n           Name of patient","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"     * @param p           Phone number of patient","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"     * @param e           Email of patient","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"     * @param g           Gender of Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"     * @param i           IcNumber of Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"     * @param b           Birthday of Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"     * @param a           Address of Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"     * @param pr          Priority of Patient","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"     * @param t           Tags of Patient","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"     * @param argMultimap Contains mapping of key which is prefix and value which is argument value","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"     * @param prefixes    List of prefixes present in argument","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"     * @return Patient with the fields present in user input","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"    public static Patient createPatientFromPresentPrefixes(Name n, Phone p, Email e, Gender g, IcNumber i, Birthday b,","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"                                                           Address a, Priority pr, Set\u003cTag\u003e t,","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"                                                           ArgumentMultimap argMultimap, Prefix[] prefixes)","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"            throws ParseException {","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"        for (Prefix pf : prefixes) {","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"            switch (pf.getPrefix()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"            case \"p/\":","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"                p \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"            case \"e/\":","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"                e \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"            case \"a/\":","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"                a \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"            case \"t/\":","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"                t \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"            case \"g/\":","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"                g \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"            case \"b/\":","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"AaronJT1"},"content":"                b \u003d ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"AaronJT1"},"content":"            case \"i/\":","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"AaronJT1"},"content":"                i \u003d ParserUtil.parseIcNumber(argMultimap.getValue(PREFIX_IC_NUMBER).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"thienmy0"},"content":"            case \"pr/\":","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"thienmy0"},"content":"                pr \u003d ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get());","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"thienmy0"},"content":"                break;","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"AaronJT1"},"content":"            default:","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"thienmy0"},"content":"        return new Patient(n, p, e, g, i, b, a, pr, t);","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":158,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":162,"author":{"gitId":"AaronJT1"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":163,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":165,"author":{"gitId":"AaronJT1"},"content":"        // check if any prefixes present","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"AaronJT1"},"content":"        if (!areRelevantPrefixesPresent(argMultimap, RELEVANT_PREFIXES) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":169,"author":{"gitId":"AaronJT1"},"content":"        // check if required prefixes are present and not empty","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"AaronJT1"},"content":"        if (!areRequiredPrefixesPresent(argMultimap, REQUIRED_PREFIXES)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"AaronJT1"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"                String.format(MESSAGE_REQUIRED_COMMAND_NOT_FOUND_FORMAT, Arrays.toString(REQUIRED_PREFIXES)));","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"AaronJT1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(RELEVANT_PREFIXES_WITHOUT_TAG);","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"AaronJT1"},"content":"        for (Prefix r : REQUIRED_PREFIXES) {","lastModifiedDate":"2023-10-25"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"            assert argMultimap.getValue(r).isPresent();","lastModifiedDate":"2023-10-25"},{"lineNumber":177,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":178,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] prefixesPresent \u003d getPrefixesPresent(argMultimap);","lastModifiedDate":"2023-10-11"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"        assert prefixesPresent.length \u003e 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":181,"author":{"gitId":"AaronJT1"},"content":"        Patient patient \u003d createPatient(argMultimap, prefixesPresent);","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"        logger.info(\"AddCommand object with Patient : \" + patient + \"\\ncreated.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":183,"author":{"gitId":"AaronJT1"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":187,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if none of the compulsory prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"    private static boolean areRequiredPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... requiredPrefixes) {","lastModifiedDate":"2023-10-11"},{"lineNumber":191,"author":{"gitId":"AaronJT1"},"content":"        return Stream.of(requiredPrefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":194,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if any of the relevant prefixes contains a value","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"AaronJT1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":198,"author":{"gitId":"AaronJT1"},"content":"    private static boolean areRelevantPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... requiredPrefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":199,"author":{"gitId":"AaronJT1"},"content":"        return Stream.of(requiredPrefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":200,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"AaronJT1":132,"wujy28":2,"thienmy0":13,"RiyaMehta2211":15,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"import seedu.address.logic.commands.RecordCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"    public Command parseCommand(String userInput) throws ParseException, PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"            return new AssignCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"        case RecordCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"            return new RecordCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"RiyaMehta2211"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wujy28":8,"AaronJT1":4,"thienmy0":6,"RiyaMehta2211":8,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/AssignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.AssignedDepartment;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":" * Parses input arguments and creates a new AssignCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"public class AssignCommandParser implements Parser\u003cAssignCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    public static final Prefix[] RELEVANT_PREFIXES \u003d new Prefix[]{PREFIX_IC_NUMBER, PREFIX_DEPARTMENT};","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"     * and returns an AssignCommand object for execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    public AssignCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        if (!checkIcNumberPrefixPresent(argMultimap) || !checkDepartmentPrefixPresent(argMultimap)","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"        IcNumber icNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        icNumber \u003d ParserUtil.parseIcNumber(argMultimap.getValue(PREFIX_IC_NUMBER).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        assert icNumber !\u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment department;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        department \u003d ParserUtil.parseAssignedDepartment(argMultimap.getValue(PREFIX_DEPARTMENT).get());","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"        assert department !\u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        logger.info(","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"            String.format(\"AssignCommand object with IC Number: %s and Department: %s created\", icNumber, department));","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        return new AssignCommand(icNumber, department);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if IcNumber field present and value is non empty","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"    public static boolean checkIcNumberPrefixPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        return argumentMultimap.getValue(PREFIX_IC_NUMBER).isPresent();","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"     * Returns true if department field present and value is non empty","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    public static boolean checkDepartmentPrefixPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        return argumentMultimap.getValue(PREFIX_DEPARTMENT).isPresent();","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wujy28":51,"AaronJT1":15}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    public static final Prefix PREFIX_IC_NUMBER \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"    public static final Prefix PREFIX_DEPARTMENT \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"pr/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"    // Prefixes for Record","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    public static final Prefix PREFIX_INITIAL_OBSERVATION \u003d new Prefix(\"o/\");","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    public static final Prefix PREFIX_DIAGNOSIS \u003d new Prefix(\"di/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"    public static final Prefix PREFIX_TREATMENT_PLAN \u003d new Prefix(\"tp/\");","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"thienmy0":10,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final Prefix[] REQUIRED_PREFIXES \u003d new Prefix[]{PREFIX_IC_NUMBER};","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, REQUIRED_PREFIXES);","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        if (!areRequiredPrefixesPresent(argMultimap, REQUIRED_PREFIXES) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        IcNumber icNumber \u003d ParserUtil.parseIcNumber(argMultimap.getValue(PREFIX_IC_NUMBER).get());","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(REQUIRED_PREFIXES);","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        return new DeleteCommand(icNumber);","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if none of the compulsory prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"    private static boolean areRequiredPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... requiredPrefixes) {","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        return Stream.of(requiredPrefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"AaronJT1":13,"thienmy0":2,"RiyaMehta2211":6,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.Messages.MESSAGE_REQUIRED_COMMAND_NOT_FOUND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final Prefix[] RELEVANT_PREFIXES \u003d new Prefix[]{PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        PREFIX_GENDER, PREFIX_IC_NUMBER, PREFIX_BIRTHDAY, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_PRIORITY};","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    public static final Prefix[] RELEVANT_PREFIXES_WITHOUT_TAG \u003d new Prefix[]{PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        PREFIX_GENDER, PREFIX_IC_NUMBER, PREFIX_BIRTHDAY, PREFIX_ADDRESS, PREFIX_PRIORITY};","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final Prefix[] REQUIRED_PREFIXES \u003d new Prefix[]{PREFIX_IC_NUMBER};","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, RELEVANT_PREFIXES);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        IcNumber icNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"        if (!areRelevantPrefixesPresent(argMultimap, RELEVANT_PREFIXES) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"        // check if required prefixes are present and not empty","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"        if (!areRequiredPrefixesPresent(argMultimap, REQUIRED_PREFIXES)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"                String.format(MESSAGE_REQUIRED_COMMAND_NOT_FOUND_FORMAT, Arrays.toString(REQUIRED_PREFIXES)));","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(RELEVANT_PREFIXES_WITHOUT_TAG);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"        icNumber \u003d ParserUtil.parseIcNumber(argMultimap.getValue(PREFIX_IC_NUMBER).get());","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d createEditPatientDescriptor(argMultimap);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        return new EditCommand(icNumber, editPatientDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"     * Takes in {@Code ArgumentMultimap} and creates the {@Code EditPatientDescriptor}","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"     * @param argMultimap Contains mapping of key which is prefix and value which is argument value","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"     * @return EditPatientDescriptor to be given to EditCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"    public static EditPatientDescriptor createEditPatientDescriptor(ArgumentMultimap argMultimap)","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"            throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"            editPatientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"            editPatientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"            editPatientDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"            editPatientDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"        if (argMultimap.getValue(PREFIX_IC_NUMBER).isPresent()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"            editPatientDescriptor.setIcNumber(ParserUtil.parseIcNumber(argMultimap.getValue(PREFIX_IC_NUMBER).get()));","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"            editPatientDescriptor.setPriority(ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPatientDescriptor::setTags);","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        if (!editPatientDescriptor.isAnyFieldExceptIcNumberEdited()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"        return editPatientDescriptor;","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"    private static Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"    private static boolean areRequiredPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... requiredPrefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"        return Stream.of(requiredPrefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"    private static boolean areRelevantPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... requiredPrefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"        return Stream.of(requiredPrefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"AaronJT1":29,"wujy28":2,"thienmy0":6,"longnguyentan":13,"RiyaMehta2211":18,"-":65}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"AaronJT1":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"    T parse(String userInput) throws ParseException, PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"AaronJT1":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.AssignedDepartment;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        \"Department name is invalid. \" + \"Please enter a valid department name.\";","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"     * Parses a {@code String gender} into a {@code Gender}.","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"longnguyentan"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"longnguyentan"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"longnguyentan"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"        gender \u003d gender.toUpperCase();","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"longnguyentan"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"longnguyentan"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"longnguyentan"},"content":"     * Parses a {@code String birthday} into a {@code Birthday}.","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"longnguyentan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"longnguyentan"},"content":"     * @throws ParseException if the given {@code birthday} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"longnguyentan"},"content":"    public static Birthday parseBirthday(String birthday) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"longnguyentan"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"longnguyentan"},"content":"        String trimmedBirthday \u003d birthday.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"longnguyentan"},"content":"        if (!Birthday.isValidBirthdate(trimmedBirthday)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"longnguyentan"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"longnguyentan"},"content":"        return new Birthday(trimmedBirthday);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"longnguyentan"},"content":"     * Parses a {@code String icNumber} into a {@code IcNumber}.","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"longnguyentan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"longnguyentan"},"content":"     * @throws ParseException if the given {@code icNumber} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"longnguyentan"},"content":"    public static IcNumber parseIcNumber(String icNumber) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"longnguyentan"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"AaronJT1"},"content":"        icNumber \u003d icNumber.toUpperCase();","lastModifiedDate":"2023-10-22"},{"lineNumber":145,"author":{"gitId":"longnguyentan"},"content":"        String trimmedIcNumber \u003d icNumber.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"longnguyentan"},"content":"        if (!IcNumber.isValidIC(trimmedIcNumber)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"longnguyentan"},"content":"            throw new ParseException(IcNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"longnguyentan"},"content":"        return new IcNumber(trimmedIcNumber);","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"thienmy0"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"thienmy0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"thienmy0"},"content":"     * @throws ParseException if the given {@code priority} is invalid.","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"thienmy0"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"thienmy0"},"content":"        priority \u003d priority.toUpperCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"thienmy0"},"content":"        String trimmedPriority \u003d priority.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"thienmy0"},"content":"        if (!Priority.isValidPriority(trimmedPriority)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"thienmy0"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"thienmy0"},"content":"        return new Priority(trimmedPriority);","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"longnguyentan"},"content":"     * Parses a {@code String department} into a {@code Department}.","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"longnguyentan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"longnguyentan"},"content":"     * @throws ParseException if the given {@code department} is invalid.","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"longnguyentan"},"content":"    public static AssignedDepartment parseAssignedDepartment(String department) throws ParseException {","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"longnguyentan"},"content":"        requireNonNull(department);","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"longnguyentan"},"content":"        String trimmedDepartment \u003d department.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"longnguyentan"},"content":"        if (!AssignedDepartment.isValidDepartment(trimmedDepartment)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"longnguyentan"},"content":"            throw new ParseException(AssignedDepartment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"longnguyentan"},"content":"        return new AssignedDepartment(trimmedDepartment);","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"thienmy0"},"content":"     * Parses a {@code String initialObservations}.","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"thienmy0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"thienmy0"},"content":"    public static String parseInitialObservations(String initialObservations) {","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(initialObservations);","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"thienmy0"},"content":"        String trimmedInitialObservations \u003d initialObservations.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"thienmy0"},"content":"        return trimmedInitialObservations;","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"thienmy0"},"content":"     * Parses a {@code String diagnosis}.","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"thienmy0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"thienmy0"},"content":"    public static String parseDiagnosis(String diagnosis) {","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(diagnosis);","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"thienmy0"},"content":"        String trimmedDiagnosis \u003d diagnosis.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"thienmy0"},"content":"        return trimmedDiagnosis;","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"thienmy0"},"content":"     * Parses a {@code String treatmentPlan}.","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"thienmy0"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"thienmy0"},"content":"    public static String parseTreatmentPlan(String treatmentPlan) {","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(treatmentPlan);","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"thienmy0"},"content":"        String trimmedTreatmentPlan \u003d treatmentPlan.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"thienmy0"},"content":"        return trimmedTreatmentPlan;","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"AaronJT1":8,"thienmy0":47,"longnguyentan":64,"-":105}},{"path":"src/main/java/seedu/address/logic/parser/RecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INITIAL_OBSERVATION;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TREATMENT_PLAN;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"import seedu.address.logic.commands.RecordCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":" * Parses input arguments and creates a new RecordCommand object","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"public class RecordCommandParser implements Parser\u003cRecordCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    public static final Prefix[] RELEVANT_PREFIXES \u003d new Prefix[]{PREFIX_IC_NUMBER, PREFIX_INITIAL_OBSERVATION,","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"        PREFIX_DIAGNOSIS, PREFIX_TREATMENT_PLAN};","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"    public RecordCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"        IcNumber icNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        if (!checkIcNumberPrefixPresent(argMultimap) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        icNumber \u003d ParserUtil.parseIcNumber(argMultimap.getValue(PREFIX_IC_NUMBER).get());","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"        RecordCommand.EditRecordDescriptor editRecordDescriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"        if (argMultimap.getValue(PREFIX_INITIAL_OBSERVATION).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"            editRecordDescriptor.setInitialObservations(","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"                ParserUtil.parseInitialObservations(argMultimap.getValue(PREFIX_INITIAL_OBSERVATION).get()));","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"        if (argMultimap.getValue(PREFIX_DIAGNOSIS).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"            editRecordDescriptor.setDiagnosis(ParserUtil.parseDiagnosis(argMultimap.getValue(PREFIX_DIAGNOSIS).get()));","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        if (argMultimap.getValue(PREFIX_TREATMENT_PLAN).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"            editRecordDescriptor.setTreatmentPlan(","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"                ParserUtil.parseTreatmentPlan(argMultimap.getValue(PREFIX_TREATMENT_PLAN).get()));","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"        if (!editRecordDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"            throw new ParseException(RecordCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"        return new RecordCommand(icNumber, editRecordDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if IcNumber field present and value is non empty","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"    public static boolean checkIcNumberPrefixPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        return argumentMultimap.getValue(PREFIX_IC_NUMBER).isPresent();","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"AaronJT1":19,"thienmy0":46}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"        SortCommand.SortOrder sortOrder;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"            sortOrder \u003d SortCommand.SortOrder.getSortOrder(trimmedArgs);","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"            return new SortCommand(sortOrder);","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"            throw new ParseException(","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"wujy28":29}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.PatientWithIcNumberPredicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    public ViewCommand parse(String args) throws ParseException, PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_IC_NUMBER);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        if (!checkIcNumberPrefixPresent(argMultimap) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_IC_NUMBER);","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        assert argMultimap.getValue(PREFIX_IC_NUMBER).isPresent();","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        IcNumber icNumber \u003d ParserUtil.parseIcNumber(argMultimap.getValue(PREFIX_IC_NUMBER).get());","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate predicate \u003d new PatientWithIcNumberPredicate(icNumber);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"        logger.info(\"ViewCommand object with Predicate : \" + predicate + \" and Ic Number : \" + icNumber + \"\\ncreated\");","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        return new ViewCommand(predicate, icNumber);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if IcNumber field present and value is non empty","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"    public static boolean checkIcNumberPrefixPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        return argumentMultimap.getValue(PREFIX_IC_NUMBER).isPresent();","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AaronJT1":49,"thienmy0":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.UniquePatientList;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.UniqueRecordList;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":" * Duplicates are not allowed (by .isSamePatient comparison)","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    private final UniquePatientList patients;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    private final UniqueRecordList records;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"         * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"         * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        */ {","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        records \u003d new UniqueRecordList();","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"    public AddressBook() {","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"     * Creates an AddressBook using the Patients in the {@code toBeCopied}","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"     * Replaces the contents of the patient list with {@code patients}.","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"     * Replaces the contents of the record list with {@code records}.","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"     * {@code records} must not contain duplicate records.","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"    public void setRecords(List\u003cRecord\u003e records) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"        this.records.setRecords(records);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"        setRecords(newData.getRecordList());","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"    //// patient-level operations","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"     * The patient must not already exist in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"        patients.add(p);","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the address","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"     * book.","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"        patients.setPatient(target, editedPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"        patients.remove(key);","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"longnguyentan"},"content":"        return new ToStringBuilder(this).add(\"patients\", patients).add(\"records\", records).toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"    public ObservableList\u003cPatient\u003e getCurrentPatientList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"        return patients.getCurrentPatientList();","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"    public void sortPatientList(Comparator\u003c? super Patient\u003e comparator) {","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":"        patients.sortPatients(comparator);","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"longnguyentan"},"content":"    public ObservableList\u003cRecord\u003e getRecordList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"longnguyentan"},"content":"        return records.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"longnguyentan"},"content":"        return patients.equals(otherAddressBook.patients) \u0026\u0026 records.equals(otherAddressBook.records);","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"        return patients.hashCode();","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"longnguyentan"},"content":"    //// record-level operations","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"longnguyentan"},"content":"     * Returns true if a record is the same as an existed {@code record} in the address book.","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"longnguyentan"},"content":"    public boolean hasRecord(Record record) {","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"longnguyentan"},"content":"        requireNonNull(record);","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"longnguyentan"},"content":"        return records.contains(record);","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"longnguyentan"},"content":"    public void addRecord(Record r) {","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"longnguyentan"},"content":"        records.add(r);","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"longnguyentan"},"content":"    public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"longnguyentan"},"content":"        requireNonNull(editedRecord);","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"longnguyentan"},"content":"        records.setRecord(target, editedRecord);","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"longnguyentan"},"content":"    public void removeRecord(Record key) {","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"longnguyentan"},"content":"        records.remove(key);","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":180,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"RiyaMehta2211"},"content":"     * Creates a copy and returns a {@code AddressBook} with the details of","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"RiyaMehta2211"},"content":"     * {@code AddressBook}","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":184,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"RiyaMehta2211"},"content":"    public AddressBook copy() {","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"RiyaMehta2211"},"content":"        AddressBook copy \u003d new AddressBook();","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"RiyaMehta2211"},"content":"        for (Patient patient: patients) {","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"RiyaMehta2211"},"content":"            copy.addPatient(patient);","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"RiyaMehta2211"},"content":"        return copy;","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wujy28":3,"AaronJT1":38,"longnguyentan":39,"RiyaMehta2211":12,"-":102}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"     * Returns the patient with the IcNumber from patientList","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    Patient getPatient(IcNumber icNumber, List\u003cPatient\u003e patientList);","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"     * Returns the currentPatientList","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    ObservableList\u003cPatient\u003e getCurrentPatientList();","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if a patient with that IcNumber is present","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"    boolean isPatientWithIcNumberPresent(IcNumber icNumber);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook, String command);","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"    boolean hasPatient(Patient patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"     * Deletes the given patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"     * The patient must exist in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"    void deletePatient(Patient target, String command);","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"     * Adds the given patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"     * {@code patient} must not already exist in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"    void addPatient(Patient patient, String command);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the address","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"     * book.","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"    void setPatient(Patient target, Patient editedPatient, String command);","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"     *  Save current state of the patient data","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param command The most recent command","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"    void commitAddressBook(String command);","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"     * Converts to the previous state of the patient data","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns most recent command","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"    String undoAddressBook();","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"     * Converts to the previous state of the patient data","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns most recent command","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"    String redoAddressBook();","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"     * Check if there is a previous state/command to undo to.","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns true if there is a state, and false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"RiyaMehta2211"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"RiyaMehta2211"},"content":"     * Check if there is a next state/command to redo to.","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns true if there is a state, and false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"RiyaMehta2211"},"content":"     * */","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"RiyaMehta2211"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"    /*","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"wujy28"},"content":"     * Sorts the filtered patient list with the given {@code comparator}.","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"wujy28"},"content":"     * @throws NullPointerException if {@code comparator} is null.","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"wujy28"},"content":"    void sortPatientList(Comparator\u003c? super Patient\u003e comparator);","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wujy28":6,"AaronJT1":31,"RiyaMehta2211":39,"-":70}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":" * Represents the in-memory model of the patient record system data.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    private final VersionedAddressBook versionedAddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"        filteredPatients \u003d new FilteredList\u003c\u003e(this.addressBook.getPatientList());","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"        this.versionedAddressBook \u003d new VersionedAddressBook(this.addressBook.copy());","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"        commitAddressBook(command);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        return addressBook.hasPatient(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"RiyaMehta2211"},"content":"    public void deletePatient(Patient target, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        addressBook.removePatient(target);","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"RiyaMehta2211"},"content":"        commitAddressBook(command);","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"    public Patient getPatient(IcNumber icNumber, List\u003cPatient\u003e patientList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"        for (Patient patient : patientList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"            if (patient.getIcNumber().equals(icNumber)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"                return patient;","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"        return null;","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"RiyaMehta2211"},"content":"    public void addPatient(Patient patient, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"        updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"        commitAddressBook(command);","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"    public void setPatient(Patient target, Patient editedPatient, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"        addressBook.setPatient(target, editedPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"        commitAddressBook(command);","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if a {@Code Patient} with that {@Code IcNumber} is present","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"     * @param icNumber IcNumber to be checked","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"     * @return true Patient with that IcNumber is present","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"    public boolean isPatientWithIcNumberPresent(IcNumber icNumber) {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e currentPatientList \u003d getCurrentPatientList();","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"AaronJT1"},"content":"        for (Patient patient : currentPatientList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"AaronJT1"},"content":"            if (patient.getIcNumber().equals(icNumber)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"AaronJT1"},"content":"                return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"AaronJT1"},"content":"        return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"RiyaMehta2211"},"content":"    public void commitAddressBook(String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"RiyaMehta2211"},"content":"        versionedAddressBook.commit(addressBook.copy(), command);","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"RiyaMehta2211"},"content":"    public String redoAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"RiyaMehta2211"},"content":"        String nextCommand \u003d versionedAddressBook.getNextCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"RiyaMehta2211"},"content":"        AddressBook newData \u003d versionedAddressBook.redo();","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"RiyaMehta2211"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"RiyaMehta2211"},"content":"        return nextCommand;","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"RiyaMehta2211"},"content":"     * Converts to the previous state of the patient data","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns most recent command","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"RiyaMehta2211"},"content":"    public String undoAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"RiyaMehta2211"},"content":"        AddressBook newData \u003d versionedAddressBook.undo();","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"RiyaMehta2211"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"RiyaMehta2211"},"content":"        return versionedAddressBook.getNextCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"RiyaMehta2211"},"content":"     * Check if there is a previous state/command to undo to.","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns true if there is a state, and false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"RiyaMehta2211"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"RiyaMehta2211"},"content":"        return versionedAddressBook.canUndo();","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"RiyaMehta2211"},"content":"     * Check if there is a newer state/command to redo to.","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns true if there is a state, and false otherwise.","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"RiyaMehta2211"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"RiyaMehta2211"},"content":"        return versionedAddressBook.canRedo();","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"AaronJT1"},"content":"     * Returns the current list of {@code Patient} in the address book","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"AaronJT1"},"content":"     * @return Current list of {@code Patient} in the address book","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"AaronJT1"},"content":"    public ObservableList\u003cPatient\u003e getCurrentPatientList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"AaronJT1"},"content":"        return addressBook.getCurrentPatientList();","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"wujy28"},"content":"     * Sorts the address book with the given {@code comparator}","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"wujy28"},"content":"     * @param comparator used to order the entries in the address book","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"wujy28"},"content":"    public void sortPatientList(Comparator\u003c? super Patient\u003e comparator) {","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"wujy28"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"wujy28"},"content":"        addressBook.sortPatientList(comparator);","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"AaronJT1"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Patient List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":213,"author":{"gitId":"AaronJT1"},"content":"     * Returns an unmodifiable view of the list of {@code Patient} backed by the internal list of","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":217,"author":{"gitId":"AaronJT1"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"AaronJT1"},"content":"        return filteredPatients;","lastModifiedDate":"2023-10-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":222,"author":{"gitId":"AaronJT1"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-10-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":224,"author":{"gitId":"AaronJT1"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2023-10-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"AaronJT1"},"content":"        return addressBook.equals(otherModelManager.addressBook) \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"AaronJT1"},"content":"            \u0026\u0026 filteredPatients.equals(otherModelManager.filteredPatients);","lastModifiedDate":"2023-10-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wujy28":12,"AaronJT1":51,"RiyaMehta2211":51,"-":129}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"     * Returns an unmodifiable view of the patients list.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"     * This list will not contain any duplicate patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"     * Returns an unmodifiable view of the records list.","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"     * This list will not contain any duplicate records.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    ObservableList\u003cRecord\u003e getRecordList();","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AaronJT1":4,"longnguyentan":6,"-":14}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"aande.json\");","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        System.out.println(\"Check UserPrefs\" + this.addressBookFilePath);","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"longnguyentan":2,"-":87}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package seedu.address.model;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":" * This class VersionedAddressBook extends from the AddressBook.","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":" * This class contains the command history of all the commands entered","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" * And the states of the AddressBook in arrayLists.","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * The pointer would be incremented or decremented based on the changes in the states","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"    private ArrayList\u003cAddressBook\u003e addressBooksStateList;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    private ArrayList\u003cString\u003e commandHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    private int currentStatePointer;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"     * Creates an instance of a VersionedAddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param initialState which is the initial state of the AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"     *                     The VersionedAddressBook then stores the different states of the AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"     *                     Based on how it has been modified with the different commands.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"    public VersionedAddressBook(AddressBook initialState) {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"        this.currentStatePointer \u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"        this.addressBooksStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"        //Initialize the Command History with an empty string","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"        //Initial state has no commands","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        this.commandHistory.add(\"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        this.addressBooksStateList.add(initialState);","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"     * This method stores the new modified state of the AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"     * in the state arrayList.","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     * The latest command is stored in the command History arrayList","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param newState","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param command","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    public void commit(AddressBook newState, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        if (currentStatePointer !\u003d addressBooksStateList.size() - 1) {","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"            //check it is not already the most recent version","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"            for (int i \u003d currentStatePointer + 1; i \u003c addressBooksStateList.size(); i++) {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"                addressBooksStateList.remove(addressBooksStateList.size() - 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"                commandHistory.remove(commandHistory.size() - 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"                //discard the most recent state and the most recent command","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"        this.addressBooksStateList.add(newState);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"        this.commandHistory.add(command);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"        this.currentStatePointer++;","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"     * This method moves the pointer to the adjacent previous state of the AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"     * in the state arrayList to undo the latest change performed in","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"     * the AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The previous state for the AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"    public AddressBook undo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"        currentStatePointer -\u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.addressBooksStateList.get(currentStatePointer).copy();","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.currentStatePointer !\u003d 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"    public String getNextCommand() {","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.commandHistory.get(currentStatePointer + 1);","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"     * This method moves the pointer to the adjacent next state of the AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"     * in the state arrayList to redo the latest change performed in","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"     * the AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"     * @return The next state for the AddressBook","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"    public AddressBook redo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"        currentStatePointer +\u003d 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"        AddressBook state \u003d this.addressBooksStateList.get(currentStatePointer).copy();","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"        return state;","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"        return this.currentStatePointer !\u003d addressBooksStateList.size() - 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"RiyaMehta2211":86}},{"path":"src/main/java/seedu/address/model/patient/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":" * Represents a Patient\u0027s address in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    private static String defaultAddress \u003d \"No address was added\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String getDefaultAddress() {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"        return defaultAddress;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":2,"RiyaMehta2211":7,"-":61}},{"path":"src/main/java/seedu/address/model/patient/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":" * Represents a Patient\u0027s age in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAge(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"public class Age implements Comparable\u003cAge\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"            \"Age should only contain numbers, and it should not be negative\";","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    // String representation of default age only, not meant to be used as input into constructor.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    private static String defaultAgeString \u003d \"-\";","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    private static int defaultAgeValue \u003d -1;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    public final Integer value;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    private final String strValue;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"     * Constructs a {@code Age}.","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"     * @param age A valid age.","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    public Age(String age) {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"        value \u003d Integer.parseInt(age);","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"        strValue \u003d age;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"     * Constructs a {@code Age} from a given {@code Birthday}.","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"     * @param birthday A valid birthday.","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"    public Age(Birthday birthday) {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"        if (Birthday.isDefaultBirthday(birthday)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"            this.value \u003d defaultAgeValue;","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"            this.strValue \u003d defaultAgeString;","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"            LocalDate birthdate \u003d birthday.value;","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"            Long age \u003d ChronoUnit.YEARS.between(birthdate, today);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"            this.value \u003d age.intValue();","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"            this.strValue \u003d value.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"     * Returns true if a given string is a valid age.","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"    public static boolean isValidAge(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    public static String getDefaultAgeString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        return defaultAgeString;","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"    public static int getDefaultAgeValue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        return getDefaultAgeValue();","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"        return strValue;","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"        if (!(other instanceof Age)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"        Age otherAge \u003d (Age) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"        return value.equals(otherAge.value);","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"    public int compareTo(Age o) {","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"        if (this.value.compareTo(o.value) \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"            return -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"        } else if (this.value.compareTo(o.value) \u003e 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"            return 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"            return 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wujy28":51,"AaronJT1":1,"thienmy0":54}},{"path":"src/main/java/seedu/address/model/patient/AssignedDepartment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":" * Represents a Patient\u0027s assigned department in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDepartment(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"public class AssignedDepartment implements Comparable\u003cAssignedDepartment\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Departments can only take certain values, \"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"            + \"must adhere to British spelling conventions, \"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"            + \"and should not be blank.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"            + \"Please view the user guide for the list of accepted departments.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"            + \"Link: https://ay2324s1-cs2103t-t14-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    /*","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"     * The first character of the department must not be a whitespace,","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    public final Department assignedDepartment;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     * Constructs a default {@code AssignedDepartment}.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    public AssignedDepartment() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"        assignedDepartment \u003d Department.DEFAULT;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"     * Constructs an {@code AssignedDepartment} with the given string.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"     * @param department A valid department.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"    public AssignedDepartment(String department) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        requireNonNull(department);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        checkArgument(isValidDepartment(department), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        assignedDepartment \u003d Department.findDepartment(department);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"     * Returns true if a given string is a valid department.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    public static boolean isValidDepartment(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 Department.isValidDepartment(test);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        return assignedDepartment.toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        if (!(other instanceof AssignedDepartment)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment otherDepartment \u003d (AssignedDepartment) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        return assignedDepartment.equals(otherDepartment.assignedDepartment);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"        return assignedDepartment.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"    public int compareTo(AssignedDepartment o) {","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"        Department thisDepartment \u003d this.assignedDepartment;","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"        Department otherDepartment \u003d o.assignedDepartment;","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"        if (thisDepartment.compareTo(otherDepartment) \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"            return -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"        } else if (thisDepartment.compareTo(otherDepartment) \u003e 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"            return 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"            return 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wujy28":89}},{"path":"src/main/java/seedu/address/model/patient/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents a Patient\u0027s Birthday in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthdate(String)}","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"public class Birthday {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"            \"Birth dates should only contain numbers in valid dd/MM/yyyy format, \"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"            + \" and should be the current date or earlier.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,2}\\\\/\\\\d{1,2}\\\\/\\\\d{2,4}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    private static String defaultBirthday \u003d \"01/01/0001\";","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    public final LocalDate value;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    public final String strValue;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"     * @param birthdate A valid Birthday.","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    public Birthday(String birthdate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        requireNonNull(birthdate);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        checkArgument(isValidBirthdate(birthdate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        strValue \u003d birthdate;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        value \u003d LocalDate.parse(birthdate, formatter);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns true if a given string is a valid Birthdate.","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    public static boolean isValidBirthdate(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"            LocalDate testDate \u003d LocalDate.parse(test, formatter);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"            return !testDate.isAfter(LocalDate.now());","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"            return false;","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String getDefaultBirthday() {","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"        return defaultBirthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    public static boolean isDefaultBirthday(Birthday birthday) {","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"        return birthday.toString().equals(defaultBirthday);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"    public static DateTimeFormatter getFormatter() {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"        return formatter;","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"        return strValue;","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"        if (!(other instanceof Birthday)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"        Birthday otherDate \u003d (Birthday) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"        return value.equals(otherDate.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wujy28":26,"AaronJT1":4,"thienmy0":1,"RiyaMehta2211":53}},{"path":"src/main/java/seedu/address/model/patient/Department.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":" * Represents the departments in the hospital.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"public enum Department {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"    EMERGENCY_DEPARTMENT(\"Emergency Department\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"    INTENSIVE_CARE_UNIT(\"Intensive Care Unit\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"    ANAESTHESIOLOGY(\"Anaesthesiology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"    CARDIOLOGY(\"Cardiology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"    DERMATOLOGY(\"Dermatology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    ENDOCRINOLOGY(\"Endocrinology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    GENERAL_SURGERY(\"General Surgery\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    GERIATRIC_MEDICINE(\"Geriatric Medicine\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    GYNAECOLOGY(\"Gynaecology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"    HAEMATOLOGY(\"Haematology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"    IMMUNOLOGY(\"Immunology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    INFECTIOUS_DISEASES(\"Infectious Diseases\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    ONCOLOGY(\"Oncology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    OPHTHALMOLOGY(\"Ophthalmology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    ORTHOPAEDICS(\"Orthopaedics\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    NEUROLOGY(\"Neurology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    NEUROSURGERY(\"Neurosurgery\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    PATHOLOGY(\"Pathology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    PALLIATIVE_MEDICINE(\"Palliative Medicine\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    PLASTIC_SURGERY(\"Plastic Surgery\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    PSYCHIATRY(\"Psychiatry\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    RADIOLOGY(\"Radiology\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    UROLOGY(\"Urology\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    DEFAULT(\"Default\");","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    /** The string representation of the Department **/","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    private final String string;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    Department(String string) {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"        this.string \u003d string;","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"     * Finds the Department with the given string representation.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"     * Returns null if no Department is found.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"     * @param string The string representation of the Department.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    public static Department findDepartment(String string) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"        if (string \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"            return null;","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        for (Department d : Department.values()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"            if (d.string.equalsIgnoreCase(string)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"                return d;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        return null;","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"     * Returns true if the given string represents a valid Department.","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    public static boolean isValidDepartment(String string) {","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"        if (string \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        for (Department d : Department.values()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"            if (d.string.equalsIgnoreCase(string)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"                isValid \u003d true;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        return isValid;","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"        return this.string;","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wujy28":79}},{"path":"src/main/java/seedu/address/model/patient/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":" * Represents a Patient\u0027s email in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    public static final String DEFAULT_EMAIL \u003d \"default_email@gmail.com\";","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"    private static String defaultEmail \u003d \"default_email@gmail.com\";","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String getDefaultEmail() {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"        return defaultEmail;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":2,"wujy28":1,"RiyaMehta2211":4,"-":77}},{"path":"src/main/java/seedu/address/model/patient/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":" * Represents a Patient\u0027s gender in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"public class Gender {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"            \"Gender should only be MALE, FEMALE or OTHER, and it should not be blank\";","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}*\";","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    private static String defaultGender \u003d \"OTHER\";","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"    enum Genders {","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"        MALE,","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"        FEMALE,","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"        OTHER","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"        String temp \u003d gender.toUpperCase();","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(temp);","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"        checkArgument(isValidGender(temp), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"        value \u003d temp;","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"        test \u003d test.toUpperCase();","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isInGendersEnum(test);","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String getDefaultGender() {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"        return defaultGender;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"     * Returns true if given string is in the Genders enum class.","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"     * @param test the given string.","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"     * @return boolean to indicate presence in Genders enum.","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"    private static boolean isInGendersEnum(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"        for (Genders g : Genders.values()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"            if (g.name().equals(test)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"                return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"        return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"        if (!(other instanceof Gender)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"        Gender otherGender \u003d (Gender) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"        return value.equals(otherGender.value);","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"AaronJT1":2,"thienmy0":82,"RiyaMehta2211":5}},{"path":"src/main/java/seedu/address/model/patient/IcNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":" * Represents a Patient\u0027s IC Number in the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidIC(String)}","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"public class IcNumber implements Comparable\u003cIcNumber\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"            \"IC Number should start and end with an alphabet with non negative numbers in between\";","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Z]\\\\d{7}[A-Z]$\";","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    private static String defaultIcNumber \u003d \"t0000000a\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    public final String value;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"     * Constructs a {@code IcNumber}.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"     * @param ic A valid IC Number.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    public IcNumber(String ic) {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"        ic \u003d ic.toUpperCase();","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"        requireNonNull(ic);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"        checkArgument(isValidIC(ic), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"        value \u003d ic;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"     * Returns true if a given string is a valid IC.","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    public static boolean isValidIC(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String getDefaultIcNumber() {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        return defaultIcNumber;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"        return value;","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"        if (!(other instanceof IcNumber)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        IcNumber otherIC \u003d (IcNumber) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        return value.equals(otherIC.value);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    public int compareTo(IcNumber o) {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        if (this.value.compareTo(o.value) \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"            return -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        } else if (this.value.compareTo(o.value) \u003e 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"            return 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"            return 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wujy28":18,"AaronJT1":2,"RiyaMehta2211":52}},{"path":"src/main/java/seedu/address/model/patient/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":" * Represents a Patient\u0027s name in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"    public int compareTo(Name o) {","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"        String thisName \u003d this.fullName.toUpperCase();","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"        String otherName \u003d o.fullName.toUpperCase();","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        if (thisName.compareTo(otherName) \u003c 0) {","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"            return -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        } else if (thisName.compareTo(otherName) \u003e 0) {","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"            return 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"            return 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":2,"wujy28":14,"-":64}},{"path":"src/main/java/seedu/address/model/patient/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":" * Tests that a {@code Patient}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AaronJT1":5,"-":39}},{"path":"src/main/java/seedu/address/model/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":" * Represents a Patient in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"public class Patient {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"    private final Gender gender;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    private final IcNumber icNumber;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"    private final Birthday birthday;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    private final Age age;","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"    private final Priority priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    private final AssignedDepartment assignedDepartment;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"    private final Record record;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"     * Patient constructor which omits assignedDepartment and Record parameters","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"    public Patient(Name name, Phone phone, Email email, Gender gender, IcNumber icNumber, Birthday birthday,","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"                   Address address, Priority priority, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"        requireAllNonNull(name, phone, email, icNumber, birthday, address, tags);","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        this.age \u003d new Age(this.birthday);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"        this.assignedDepartment \u003d new AssignedDepartment(); // default Department given","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"        this.record \u003d new Record(this); // creates new Record","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"     * Patient constructor which omits Record parameter","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"    public Patient(Name name, Phone phone, Email email, Gender gender, IcNumber icNumber, Birthday birthday,","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"                   Address address, Priority priority, Set\u003cTag\u003e tags, AssignedDepartment assignedDepartment) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        requireAllNonNull(name, phone, email, icNumber, birthday, address, tags);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        this.age \u003d new Age(this.birthday);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"        this.assignedDepartment \u003d assignedDepartment;","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        this.record \u003d new Record(this); // creates new Record","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"     * Patient constructor with all fields as parameters","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"    public Patient(Name name, Phone phone, Email email, Gender gender, IcNumber icNumber, Birthday birthday,","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"                   Address address, Priority priority, Set\u003cTag\u003e tags, AssignedDepartment assignedDepartment,","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"                   Record record) {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"        requireAllNonNull(name, phone, email, icNumber, birthday, address, tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"        this.age \u003d new Age(this.birthday);","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"        this.assignedDepartment \u003d assignedDepartment;","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"        this.record \u003d new Record(this);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"        this.record.copyRecordInfo(record);","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"thienmy0"},"content":"        return gender;","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"    public IcNumber getIcNumber() {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"        return icNumber;","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"thienmy0"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"        return birthday;","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":"    public Age getAge() {","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"        return age;","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"        return priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"thienmy0"},"content":"    public AssignedDepartment getAssignedDepartment() {","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"thienmy0"},"content":"        return assignedDepartment;","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"    public Record getRecord() {","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"thienmy0"},"content":"        return record;","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if both patients have the same name.","lastModifiedDate":"2023-10-05"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"     * This defines a weaker notion of equality between two patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"    public boolean isSamePatient(Patient otherPatient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"AaronJT1"},"content":"        return otherPatient !\u003d null \u0026\u0026 otherPatient.getName().equals(getName());","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if both patients have the same identity and data fields.","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"AaronJT1"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"AaronJT1"},"content":"        return name.equals(otherPatient.name) \u0026\u0026 phone.equals(otherPatient.phone) \u0026\u0026 email.equals(otherPatient.email)","lastModifiedDate":"2023-10-17"},{"lineNumber":178,"author":{"gitId":"wujy28"},"content":"            \u0026\u0026 gender.equals(otherPatient.gender) \u0026\u0026 icNumber.equals(otherPatient.icNumber)","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"wujy28"},"content":"            \u0026\u0026 birthday.equals(otherPatient.birthday) \u0026\u0026 age.equals(otherPatient.age)","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"wujy28"},"content":"            \u0026\u0026 address.equals(otherPatient.address) \u0026\u0026 priority.equals(otherPatient.priority)","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"wujy28"},"content":"            \u0026\u0026 tags.equals(otherPatient.tags) \u0026\u0026 assignedDepartment.equals(otherPatient.assignedDepartment)","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"wujy28"},"content":"            \u0026\u0026 record.equals(otherPatient.record);","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"wujy28"},"content":"        return Objects.hash(name, phone, email, gender, icNumber,","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"wujy28"},"content":"                birthday, age, address, tags, assignedDepartment, record);","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":194,"author":{"gitId":"AaronJT1"},"content":"        return new ToStringBuilder(this).add(\"name\", name).add(\"phone\", phone).add(\"email\", email).add(\"gender\", gender)","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"wujy28"},"content":"            .add(\"icNumber\", icNumber).add(\"birthday\", birthday).add(\"age\", age)","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"wujy28"},"content":"            .add(\"address\", address).add(\"priority\", priority).add(\"tags\", tags)","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"wujy28"},"content":"            .add(\"assignedDepartment\", assignedDepartment).add(\"record\", record).toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":31,"wujy28":19,"thienmy0":62,"-":88}},{"path":"src/main/java/seedu/address/model/patient/PatientWithIcNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":" * Tests that a {@code Patient}\u0027s {@code IcNumber} matches the given desired IcNumber","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"public class PatientWithIcNumberPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    private final IcNumber icNumber;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"     * Constructs a {@code PatientWithIcNumberPredicate}.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    public PatientWithIcNumberPredicate(IcNumber icNumber) throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"        if (icNumber \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientWithFieldNotFoundException(\"Multiplicity violated. Each patient has 1 non-null IcNumber.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        return icNumber.equals(patient.getIcNumber());","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        if (!(other instanceof PatientWithIcNumberPredicate)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate otherPatientWithIcNumberPredicate \u003d (PatientWithIcNumberPredicate) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        return icNumber.equals(otherPatientWithIcNumberPredicate.icNumber);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        return new ToStringBuilder(this).add(\"icNumber\", icNumber).toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AaronJT1":49,"wujy28":3}},{"path":"src/main/java/seedu/address/model/patient/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":" * Represents a Patient\u0027s phone number in the address book.","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    private static String defaultPhone \u003d \"00000000\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String getDefaultPhone() {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        return defaultPhone;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":4,"RiyaMehta2211":4,"-":59}},{"path":"src/main/java/seedu/address/model/patient/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":" * Represents a Patient\u0027s priority in the address book.","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPriority(String)}","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"public class Priority implements Comparable\u003cPriority\u003e {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"            \"Priority should only be NIL, LOW, MEDIUM or HIGH, and it should not be blank\";","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}*\";","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    private static String defaultPriority \u003d \"NIL\";","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    public final PriorityLevel value;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"     * Encapsulates the different priority levels a patient can have","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    public enum PriorityLevel {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"        NIL,","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        LOW,","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        MEDIUM,","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"        HIGH;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"        public static PriorityLevel getPriority(String string) {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"            for (Priority.PriorityLevel p : Priority.PriorityLevel.values()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"                if (p.name().equalsIgnoreCase(string)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"                    return p;","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"            return PriorityLevel.NIL;","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"     * Constructs a {@code Priority}.","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"     * @param priority A valid priority.","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"    public Priority(String priority) {","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        String temp \u003d priority.toUpperCase();","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        requireNonNull(temp);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"        checkArgument(isValidPriority(temp), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        value \u003d PriorityLevel.getPriority(temp);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"    public static boolean isValidPriority(String test) {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"        test \u003d test.toUpperCase();","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 isInPrioritiesEnum(test);","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"    public static String getDefaultPriority() {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"        return defaultPriority;","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"     * Returns true if given string is in the Priorities enum class.","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"     * @param test the given string.","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"     * @return boolean to indicate presence in Priorities enum.","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"    private static boolean isInPrioritiesEnum(String test) {","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"        for (Priority.PriorityLevel p : Priority.PriorityLevel.values()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"            if (p.name().equals(test)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"                return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"        return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"    public String toString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"        return value.name();","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"thienmy0"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"thienmy0"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"        if (!(other instanceof Priority)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"        Priority otherPriority \u003d (Priority) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"        return value.equals(otherPriority.value);","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"    public int compareTo(Priority o) {","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"        PriorityLevel thisPriorityLevel \u003d this.value;","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"        PriorityLevel otherPriorityLevel \u003d o.value;","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"        if (thisPriorityLevel.compareTo(otherPriorityLevel) \u003c 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"            return -1;","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"        } else if (thisPriorityLevel.compareTo(otherPriorityLevel) \u003e 0) {","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"            return 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"            return 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"wujy28":33,"thienmy0":83}},{"path":"src/main/java/seedu/address/model/patient/Record.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":" * Represents a medical record associated with a patient.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":" * Stores information about the patient\u0027s visits, initial observations, diagnosis, and treatment plan.","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"public class Record {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"    private static final String defaultInitialObservations \u003d \"No initial observations given\";","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"    private static final String defaultDiagnosis \u003d \"No diagnosis given\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    private static final String defaultTreatmentPlan \u003d \"No treatment plan given\";","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    private final Patient patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    private SimpleStringProperty initialObservations;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    private SimpleStringProperty diagnosis;","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    private SimpleStringProperty treatmentPlan;","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"     * Initializes a Record with the associated patient and initialise the fields with default values","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    public Record(Patient patient) {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"        this.initialObservations \u003d new SimpleStringProperty(defaultInitialObservations);","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"        this.diagnosis \u003d new SimpleStringProperty(defaultDiagnosis);","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"        this.treatmentPlan \u003d new SimpleStringProperty(defaultTreatmentPlan);","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"     * Initializes a default Record","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"    public Record() {","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        this.patient \u003d null; // patient left null, would have to fix when building editing record command","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"        this.initialObservations \u003d new SimpleStringProperty(defaultInitialObservations);","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        this.diagnosis \u003d new SimpleStringProperty(defaultDiagnosis);","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"        this.treatmentPlan \u003d new SimpleStringProperty(defaultTreatmentPlan);","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"     * Initializes a record with defined details","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"    public Record(String initialObservations, String diagnosis, String treatmentPlan) {","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"        this.patient \u003d null;","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        this.initialObservations \u003d new SimpleStringProperty(initialObservations);","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        this.diagnosis \u003d new SimpleStringProperty(diagnosis);","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        this.treatmentPlan \u003d new SimpleStringProperty(treatmentPlan);","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"    public Patient getPatient() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        return patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"    public String getInitialObservations() {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        return initialObservations.get();","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"    public void setInitialObservations(String initialObservations) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"        this.initialObservations.set(initialObservations);","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    public SimpleStringProperty initialObservationsProperty() {","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        return initialObservations;","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"    public String getDiagnosis() {","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"        return diagnosis.get();","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"    public void setDiagnosis(String diagnosis) {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        this.diagnosis.set(diagnosis);","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"    public SimpleStringProperty diagnosisProperty() {","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"        return diagnosis;","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String getDefaultInitialObservations() {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"        return defaultInitialObservations;","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String getDefaultDiagnosis() {","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"        return defaultDiagnosis;","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"    public static String getDefaultTreatmentPlan() {","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"        return defaultTreatmentPlan;","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"    public String getTreatmentPlan() {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        return treatmentPlan.get();","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"    public void setTreatmentPlan(String treatmentPlan) {","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"        this.treatmentPlan.set(treatmentPlan);","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"    public SimpleStringProperty treatmentPlanProperty() {","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"        return treatmentPlan;","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"     * Copies the information of the given Record into this instance of Record.","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"thienmy0"},"content":"     * @param recordToCopy the Record with information to copy.","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"thienmy0"},"content":"    public void copyRecordInfo(Record recordToCopy) {","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"        this.initialObservations.set(recordToCopy.getInitialObservations());","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"        this.diagnosis.set(recordToCopy.getDiagnosis());","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"        this.treatmentPlan.set(recordToCopy.getTreatmentPlan());","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if both records have same fields","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"        if (!(other instanceof Record)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"        Record otherRecord \u003d (Record) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"        return getInitialObservations().equals(otherRecord.getInitialObservations()) \u0026\u0026 getDiagnosis().equals(","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"                otherRecord.getDiagnosis()) \u0026\u0026 getTreatmentPlan().equals(otherRecord.getTreatmentPlan());","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"longnguyentan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"wujy28"},"content":"        return new ToStringBuilder(this).add(\"initialObservations\", getInitialObservations())","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"wujy28"},"content":"                .add(\"diagnosis\", getDiagnosis())","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"wujy28"},"content":"                .add(\"treatmentPlan\", getTreatmentPlan()).toString();","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"wujy28":35,"AaronJT1":34,"thienmy0":7,"longnguyentan":50,"RiyaMehta2211":15}},{"path":"src/main/java/seedu/address/model/patient/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientNotFoundException;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":" * A list of patients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":" * A patient is considered unique by comparing using {@code Patient#isSamePatient(Patient)}. As such, adding and","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":" * updating of","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":" * patients uses Patient#isSamePatient(Patient) for equality so as to ensure that the patient being added or updated is","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":" * unique in terms of identity in the UniquePatientList. However, the removal of a patient uses Patient#equals","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":" * (Object) to ensure that the patient with exactly the same fields will be removed.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":" * @see Patient#isSamePatient(Patient)","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(","lastModifiedDate":"2023-10-06"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        internalList);","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if the list contains an equivalent patient as the given argument.","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"     * Adds a patient to the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"     * The patient must not already exist in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        if (!target.isSamePatient(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"     * Removes the equivalent patient from the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"     * The patient must exist in the list.","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"    public void setPatients(UniquePatientList replacement) {","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"     * Replaces the contents of this list with {@code patients}.","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"     * {@code patients} must not contain duplicate patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2023-10-05"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"        if (!patientsAreUnique(patients)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"    public void sortPatients(Comparator\u003c? super Patient\u003e comparator) {","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"        internalList.sort(comparator);","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"    public ObservableList\u003cPatient\u003e getCurrentPatientList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"        return internalList;","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"        if (!(other instanceof UniquePatientList)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"        UniquePatientList otherUniquePatientList \u003d (UniquePatientList) other;","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"        return internalList.equals(otherUniquePatientList.internalList);","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"AaronJT1"},"content":"     * Returns true if {@code patients} contains only unique patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"AaronJT1"},"content":"    private boolean patientsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2023-10-05"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"AaronJT1"},"content":"                if (patients.get(i).isSamePatient(patients.get(j))) {","lastModifiedDate":"2023-10-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AaronJT1":54,"wujy28":5,"longnguyentan":1,"-":99}},{"path":"src/main/java/seedu/address/model/patient/UniqueRecordList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":" * A list of records that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":" * A record is considered unique by comparing using {@code Record#equals(Record)}.","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":" * As such, adding and updating of records uses Record#equals(Record) for equality","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":" * to ensure that the record being added or updated is","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":" * unique in terms of identity in the UniqueRecordList.","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"public class UniqueRecordList implements Iterable\u003cRecord\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    private final ObservableList\u003cRecord\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    private final ObservableList\u003cRecord\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"     * Returns true if the list contains an equivalent record as the given argument.","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    public boolean contains(Record toCheck) {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"     * Adds a record to the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"     * The record must not already exist in the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    public void add(Record toAdd) {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"     * Replaces the record {@code target} in the list with {@code editedRecord}.","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"     * The record identity of {@code editedRecord} must not be the same as another existing record in the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"    public void setRecord(Record target, Record editedRecord) {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        requireAllNonNull(target, editedRecord);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"            throw new RecordNotFoundException();","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"        if (!target.equals(editedRecord) \u0026\u0026 contains(editedRecord)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"        internalList.set(index, editedRecord);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"     * Removes the equivalent record from the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"     * The record must exist in the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"    public void remove(Record toRemove) {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"            throw new RecordNotFoundException();","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"    public void setRecords(List\u003cRecord\u003e records) {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"        requireAllNonNull(records);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"        if (!recordsAreUnique(records)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"            throw new DuplicateRecordException();","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"        internalList.setAll(records);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"    public ObservableList\u003cRecord\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"    public Iterator\u003cRecord\u003e iterator() {","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"                || (other instanceof UniqueRecordList","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"                \u0026\u0026 internalList.equals(((UniqueRecordList) other).internalList));","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"longnguyentan"},"content":"     * Returns true if {@code records} contains only unique records.","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"longnguyentan"},"content":"    private boolean recordsAreUnique(List\u003cRecord\u003e records) {","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"longnguyentan"},"content":"        for (int i \u003d 0; i \u003c records.size() - 1; i++) {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"            for (int j \u003d i + 1; j \u003c records.size(); j++) {","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"                if (records.get(i).equals(records.get(j))) {","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"longnguyentan"},"content":"                    return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"longnguyentan"},"content":"                }","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"longnguyentan"},"content":"        return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"longnguyentan"},"content":"     * Signals that the operation is unable to find the specified record.","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"longnguyentan"},"content":"    public static class RecordNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"longnguyentan"},"content":"     * Signals that the operation will result in duplicate records","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"longnguyentan"},"content":"     * (Records are considered duplicates if they have the same identity).","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"longnguyentan"},"content":"    public static class DuplicateRecordException extends RuntimeException {","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"longnguyentan"},"content":"        public DuplicateRecordException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"longnguyentan"},"content":"            super(\"Operation would result in duplicate records\");","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"longnguyentan":137}},{"path":"src/main/java/seedu/address/model/patient/exceptions/DuplicatePatientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"public class DuplicatePatientException extends RuntimeException {","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"    public DuplicatePatientException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"AaronJT1":3,"-":8}},{"path":"src/main/java/seedu/address/model/patient/exceptions/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":" * Signals that the operation is unable to find the specified patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"public class PatientNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"AaronJT1":6}},{"path":"src/main/java/seedu/address/model/patient/exceptions/PatientWithFieldNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient.exceptions;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":" * Thrown if user enters a field that is not in any existing patients","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"public class PatientWithFieldNotFoundException extends Exception {","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    public PatientWithFieldNotFoundException(String message) {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"        super(MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD + message);","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AaronJT1":12}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"        return new Patient[]{new Patient(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"            new Email(\"alexyeoh@example.com\"), new Gender(\"Male\"), new IcNumber(\"t7654321a\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"            new Birthday(\"05/05/2005\"), new Address(\"Blk 30 Geylang \" + \"Street \" + \"29, #06-40\"), new Priority(\"NIL\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"            getTagSet(\"friends\")), new Patient(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"                    new Email(\"berniceyu@example.com\"), new Gender(\"Female\"), new IcNumber(\"s1234567b\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"                    new Birthday(\"06/06/1990\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"                new Priority(\"NIL\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"                    new Email(\"charlotte@example.com\"), new Gender(\"Other\"), new IcNumber(\"t1357912g\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"                    new Birthday(\"12/12/1989\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Priority(\"NIL\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"            getTagSet(\"neighbours\")), new Patient(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"                    new Email(\"lidavid@example.com\"), new Gender(\"Male\"), new IcNumber(\"s7654321p\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"                new Birthday(\"01/01/2001\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"                new Priority(\"NIL\"), getTagSet(\"family\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"                            new IcNumber(\"s0987654e\"), new Birthday(\"10/10/2000\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Priority(\"NIL\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"            getTagSet(\"classmates\")), new Patient(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"                    new Email(\"royb@example.com\"), new Gender(\"Male\"), new IcNumber(\"t6789031q\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"                    new Birthday(\"07/11/1976\"),","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Priority(\"NIL\"), getTagSet(\"colleagues\"))};","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"        for (Patient samplePatient : getSamplePatients()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"            sampleAb.addPatient(samplePatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        return Arrays.stream(strings).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"AaronJT1":12,"thienmy0":8,"RiyaMehta2211":15,"-":29}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.AssignedDepartment;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"class JsonAdaptedPatient {","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    private final String gender;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    private final String icNumber;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    private final String birthday;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"    private final String priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    private final String assignedDepartment;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"    private String initialObservations;","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"    private String diagnosis;","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"    private String treatmentPlan;","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"                              @JsonProperty(\"icNumber\") String icNumber, @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"                              @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"                              @JsonProperty(\"priority\") String priority,","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"                              @JsonProperty(\"assignedDepartment\") String assignedDepartment,","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"                              @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"                              @JsonProperty(\"initialObservations\") String initialObservations,","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"                              @JsonProperty(\"diagnosis\") String diagnosis,","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"                              @JsonProperty(\"treatmentPlan\") String treatmentPlan) {","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        this.icNumber \u003d icNumber;","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        this.assignedDepartment \u003d assignedDepartment;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"        this.initialObservations \u003d initialObservations;","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"        this.treatmentPlan \u003d treatmentPlan;","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        icNumber \u003d source.getIcNumber().value;","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        birthday \u003d source.getBirthday().strValue;","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"        priority \u003d source.getPriority().toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"        assignedDepartment \u003d source.getAssignedDepartment().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"        tags.addAll(source.getTags().stream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"        initialObservations \u003d source.getRecord().getInitialObservations();","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"        diagnosis \u003d source.getRecord().getDiagnosis();","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"        treatmentPlan \u003d source.getRecord().getTreatmentPlan();","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"        final List\u003cTag\u003e patientTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"            patientTags.add(tag.toModelType());","lastModifiedDate":"2023-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"        if (icNumber \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"AaronJT1"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, IcNumber.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"AaronJT1"},"content":"        if (!IcNumber.isValidIC(icNumber)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"AaronJT1"},"content":"            throw new IllegalValueException(IcNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"AaronJT1"},"content":"        final IcNumber modelIcNumber \u003d new IcNumber(icNumber);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"AaronJT1"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"AaronJT1"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"AaronJT1"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthday.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"AaronJT1"},"content":"        if (!Birthday.isValidBirthdate(birthday)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"AaronJT1"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"thienmy0"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"thienmy0"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"thienmy0"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"thienmy0"},"content":"        if (!Priority.isValidPriority(priority)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"thienmy0"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"thienmy0"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"thienmy0"},"content":"        final Priority modelPriority \u003d new Priority(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"AaronJT1"},"content":"        if (assignedDepartment \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"AaronJT1"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, AssignedDepartment.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"AaronJT1"},"content":"        if (!AssignedDepartment.isValidDepartment(assignedDepartment)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"AaronJT1"},"content":"        final AssignedDepartment modelAssignedDepartment \u003d new AssignedDepartment(assignedDepartment);","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"AaronJT1"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(patientTags);","lastModifiedDate":"2023-10-05"},{"lineNumber":184,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"longnguyentan"},"content":"        if (initialObservations \u003d\u003d null || diagnosis \u003d\u003d null || treatmentPlan \u003d\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"longnguyentan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Record.class.getSimpleName()));","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"longnguyentan"},"content":"        final Record record \u003d new Record(initialObservations, diagnosis, treatmentPlan);","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"        return new Patient(modelName, modelPhone, modelEmail, modelGender, modelIcNumber, modelBirthday, modelAddress,","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"longnguyentan"},"content":"            modelPriority, modelTags, modelAssignedDepartment, record);","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AaronJT1":66,"wujy28":1,"thienmy0":12,"longnguyentan":21,"RiyaMehta2211":10,"-":84}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":" * A Record that is serializable to JSON format.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"public class JsonAdaptedRecord {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    private final Patient patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    private final String initialObservations;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    private final String diagnosis;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    private final String treatmentPlan;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"     * Constructs a {@code JsonAdaptedRecord} with the given record details.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    public JsonAdaptedRecord(@JsonProperty(\"patient\") Patient patient,","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"                             @JsonProperty(\"initialObservations\") String initialObservations,","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"                             @JsonProperty(\"diagnosis\") String diagnosis,","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"                             @JsonProperty(\"treatmentPlan\") String treatmentPlan) {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"        this.initialObservations \u003d initialObservations;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"        this.treatmentPlan \u003d treatmentPlan;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"     * Converts a given {@code Record} into this class for Jackson use.","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    public JsonAdaptedRecord(Record source) {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"        this.patient \u003d source.getPatient();","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        this.initialObservations \u003d source.getInitialObservations();","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"        this.diagnosis \u003d source.getDiagnosis();","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"        this.treatmentPlan \u003d source.getTreatmentPlan();","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"     * Converts this Jackson-friendly adapted record object into the model\u0027s {@code Record} object.","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"     * @return the model\u0027s Record object.","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"    public Record toModelType() {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record(patient);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"        record.setInitialObservations(initialObservations);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        record.setDiagnosis(diagnosis);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"        record.setTreatmentPlan(treatmentPlan);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"        return record;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"longnguyentan":55}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"@JsonRootName(value \u003d \"aande\")","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patients list contains duplicate patient(s).\";","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"    public static final String MESSAGE_DUPLICATE_RECORD \u003d \"Records list contains duplicate record(s).\";","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"    private final List\u003cJsonAdaptedRecord\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given patients and records.","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients) {","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        patients.addAll(source.getPatientList().stream().map(JsonAdaptedPatient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"        //records.addAll(source.getRecordList().stream().map(JsonAdaptedRecord::new).collect(Collectors.toList()));","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        for (JsonAdaptedPatient jsonAdaptedPatient : patients) {","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"            Patient patient \u003d jsonAdaptedPatient.toModelType();","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"            if (addressBook.hasPatient(patient)) {","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"            addressBook.addPatient(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AaronJT1":11,"longnguyentan":7,"-":47}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"    private final AddressBookStorage addressBookStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}, {@code UserPrefStorage}.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"longnguyentan":4,"-":74}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        } catch (CommandException | ParseException | PatientWithFieldNotFoundException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"        CommandResult execute(String commandText)","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"                throws CommandException, ParseException, PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"AaronJT1":4,"-":83}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"import javafx.stage.StageStyle;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-t14-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"    private HBox customTitleBar; // New addition for the custom title bar","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    private double xOffset \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"    private double yOffset \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"        root.initStyle(StageStyle.UNDECORATED);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"        // New additions for dragging functionality:","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        customTitleBar.setOnMousePressed(event -\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"            xOffset \u003d event.getSceneX();","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"            yOffset \u003d event.getSceneY();","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        });","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"        customTitleBar.setOnMouseDragged(event -\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"            Stage stage \u003d (Stage) customTitleBar.getScene().getWindow();","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"            stage.setX(event.getScreenX() - xOffset);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"            stage.setY(event.getScreenY() - yOffset);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"        });","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"longnguyentan"},"content":"    private void closeWindow(ActionEvent event) {","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"longnguyentan"},"content":"        // Get the source of the click event (the button) and its current stage","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"longnguyentan"},"content":"        Node source \u003d (Node) event.getSource();","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"longnguyentan"},"content":"        Stage stage \u003d (Stage) source.getScene().getWindow();","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"longnguyentan"},"content":"        // Close the stage","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"longnguyentan"},"content":"        stage.close();","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"longnguyentan"},"content":"    private void minimizeWindow(ActionEvent event) {","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"longnguyentan"},"content":"        // Get the source of the click event (the button) and its current stage","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"longnguyentan"},"content":"        Node source \u003d (Node) event.getSource();","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"longnguyentan"},"content":"        Stage stage \u003d (Stage) source.getScene().getWindow();","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"longnguyentan"},"content":"        // Minimize the stage","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"longnguyentan"},"content":"        stage.setIconified(true);","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"longnguyentan":47,"-":89}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    private RecordPanel recordPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    private StackPane recordPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"    private Button minimizeButton;","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"    private Button maximizeButton;","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"    private Button closeButton;","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"    private double xOffset \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"    private double yOffset \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"        // primaryStage.initStyle(StageStyle.UNDECORATED);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"        setUpWindowDragging();","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"     * Sets up the ability for the window to be dragged around.","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"    private void setUpWindowDragging() {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"        VBox rootLayout \u003d (VBox) getRoot().getScene().getRoot();","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"        rootLayout.setOnMousePressed(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"            @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"                xOffset \u003d event.getSceneX();","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"                yOffset \u003d event.getSceneY();","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"        });","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"        rootLayout.setOnMouseDragged(new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"longnguyentan"},"content":"            @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"longnguyentan"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"longnguyentan"},"content":"                primaryStage.setX(event.getScreenX() - xOffset);","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"longnguyentan"},"content":"                primaryStage.setY(event.getScreenY() - yOffset);","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"longnguyentan"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"        });","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"AaronJT1"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList());","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"AaronJT1"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":171,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"wujy28"},"content":"        recordPanel \u003d new RecordPanel(patientListPanel);","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"wujy28"},"content":"        recordPanelPlaceholder.getChildren().add(recordPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":216,"author":{"gitId":"AaronJT1"},"content":"    public PatientListPanel getPatientListPanel() {","lastModifiedDate":"2023-10-05"},{"lineNumber":217,"author":{"gitId":"AaronJT1"},"content":"        return patientListPanel;","lastModifiedDate":"2023-10-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"AaronJT1"},"content":"    private CommandResult executeCommand(String commandText)","lastModifiedDate":"2023-10-22"},{"lineNumber":226,"author":{"gitId":"AaronJT1"},"content":"            throws CommandException, ParseException, PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"AaronJT1"},"content":"        } catch (PatientWithFieldNotFoundException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":242,"author":{"gitId":"AaronJT1"},"content":"            logger.info(\"User-specified field not found in any patients\");","lastModifiedDate":"2023-10-22"},{"lineNumber":243,"author":{"gitId":"AaronJT1"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());;","lastModifiedDate":"2023-10-22"},{"lineNumber":244,"author":{"gitId":"AaronJT1"},"content":"            throw e;","lastModifiedDate":"2023-10-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"longnguyentan"},"content":"    private void minimizeWindow() {","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"longnguyentan"},"content":"        primaryStage.setIconified(true);","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"longnguyentan"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"longnguyentan"},"content":"    private void maximizeWindow() {","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"longnguyentan"},"content":"        if (primaryStage.isMaximized()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"longnguyentan"},"content":"            primaryStage.setMaximized(false);","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"longnguyentan"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"longnguyentan"},"content":"            primaryStage.setMaximized(true);","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"longnguyentan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":265,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"AaronJT1":13,"wujy28":7,"longnguyentan":56,"-":190}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    public final Patient patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    private Label icNumber;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"    private Label gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"    private Label birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"    private Label age;","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    private Label assignedDepartment;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"    private Label priorityLabel;","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"        icNumber.setText(patient.getIcNumber().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"        gender.setText(patient.getGender().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"        birthday.setText(patient.getBirthday().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        phone.setText(patient.getPhone().value);","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        age.setText(patient.getAge().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        assignedDepartment.setText(patient.getAssignedDepartment().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"        addPriorityLabel();","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        patient.getTags().stream()","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"    private void addPriorityLabel() {","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        Priority priority \u003d patient.getPriority();","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"        switch (priority.value) {","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        case HIGH:","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"            priorityLabel.setText(\"!!!\");","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"            priorityLabel.getStyleClass().add(\"high\");","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"        case MEDIUM:","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"            priorityLabel.setText(\"!!\");","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"            priorityLabel.getStyleClass().add(\"medium\");","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"        case LOW:","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"            priorityLabel.setText(\"!\");","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"            priorityLabel.getStyleClass().add(\"low\");","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"        case NIL:","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"            // Fallthrough","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"        default:","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"            Node parent \u003d priorityLabel.getParent();","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"            if (parent instanceof HBox) {","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"                HBox container \u003d (HBox) parent;","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"                container.getChildren().remove(priorityLabel);","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wujy28":45,"AaronJT1":11,"-":40}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":" * Panel containing the list of patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientListPanel.class);","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    public ListView\u003cPatient\u003e getPatientListView() {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        return this.patientListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"AaronJT1":16,"wujy28":3,"-":33}},{"path":"src/main/java/seedu/address/ui/RecordCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":" * An UI component that displays information of a {@code Record}.","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"public class RecordCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    private static final String FXML \u003d \"RecordCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"    public final Record record;","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    private Label name;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"    private Label icNumber;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"    private Label gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"    private Label birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"    private Label phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    private Label address;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"    private Label email;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    private Label assignedDepartment;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"    private TextArea initialObservations;","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    private TextArea diagnosis;","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    private TextArea treatmentPlan;","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"    private Label priorityLabel;","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"     * Creates a {@code RecordCard} with the given {@code Record}.","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    public RecordCard(Record record) {","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        this.record \u003d record;","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"        Patient patient \u003d record.getPatient();","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"        name.setText(patient.getName().fullName);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"        icNumber.setText(patient.getIcNumber().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        gender.setText(patient.getGender().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"        birthday.setText(patient.getBirthday().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        phone.setText(patient.getPhone().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"        address.setText(patient.getAddress().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"        email.setText(patient.getEmail().value);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"        assignedDepartment.setText(patient.getAssignedDepartment().toString());","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"        addPriorityLabel();","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"        patient.getTags().stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"        // Format TextFlow","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"        this.initialObservations.setWrapText(true);","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"        this.initialObservations.setText(record.getInitialObservations());","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"        record.initialObservationsProperty()","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"                .addListener((observable, oldValue, newValue) -\u003e initialObservations.setText(newValue));","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"        this.diagnosis.setWrapText(true);","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"        this.diagnosis.setText(record.getDiagnosis());","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"        record.diagnosisProperty().addListener((observable, oldValue, newValue) -\u003e diagnosis.setText(newValue));","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"        this.treatmentPlan.setWrapText(true);","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        this.treatmentPlan.setText(record.getTreatmentPlan());","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"        record.treatmentPlanProperty().addListener((observable, oldValue, newValue) -\u003e treatmentPlan.setText(newValue));","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"    private void addPriorityLabel() {","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"        Priority priority \u003d record.getPatient().getPriority();","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"        switch (priority.value) {","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"        case HIGH:","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"            priorityLabel.setText(\"!!!\");","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"            priorityLabel.getStyleClass().add(\"high\");","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"        case MEDIUM:","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"            priorityLabel.setText(\"!!\");","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"            priorityLabel.getStyleClass().add(\"medium\");","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"        case LOW:","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"            priorityLabel.setText(\"!\");","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"            priorityLabel.getStyleClass().add(\"low\");","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"            break;","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"        case NIL:","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"            // Fallthrough","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"        default:","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"            Node parent \u003d priorityLabel.getParent();","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"            if (parent instanceof HBox) {","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"                HBox container \u003d (HBox) parent;","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"                container.getChildren().remove(priorityLabel);","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wujy28":123}},{"path":"src/main/java/seedu/address/ui/RecordPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":" * A ui for the record panel that is displayed on the right side of the application.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"public class RecordPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    private static final String FXML \u003d \"RecordPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    private int lastSelectedIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    private AnchorPane recordView;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"     * Creates a {@code RecordPanel} with the given {@code PatientListPanel}.","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    public RecordPanel(PatientListPanel patientList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"        patientListPanel \u003d patientList;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"        patientListPanel.getPatientListView().getSelectionModel().selectedItemProperty().addListener(","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"                new ChangeListener\u003cPatient\u003e() {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"                    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"                    public void changed(ObservableValue\u003c? extends Patient\u003e observable,","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"                                        Patient oldValue, Patient newValue) {","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"                        if (newValue \u003d\u003d null) {","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"                            clearRecordPanel();","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"                            return;","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"                        }","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"                        if (!newValue.equals(oldValue)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"                            displayRecord(newValue);","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"                        }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"                    }","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"                }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"        );","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"    private void clearRecordPanel() {","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        recordView.getChildren().clear();","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    private void displayRecord(Patient patient) {","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        recordView.getChildren().clear();","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        Node record \u003d new RecordCard(patient.getRecord()).getRoot();","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        recordView.getChildren().add(record);","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"        setAnchorsFlush(record);","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"    private void setAnchorsFlush(Node child) {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"        AnchorPane.setBottomAnchor(child, 0.0);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"        AnchorPane.setLeftAnchor(child, 0.0);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        AnchorPane.setRightAnchor(child, 0.0);","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        AnchorPane.setTopAnchor(child, 0.0);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wujy28":66}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/AELogo.png\";","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wujy28":1,"-":87}},{"path":"src/main/resources/view/CommandBox.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"@font-face {","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \u0027Inter Medium\u0027;","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"    src: url(\u0027../fonts/Inter/static/Inter-Medium.ttf\u0027);","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":".text-field {","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"    text-area-background: #FFFFFF;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 5px;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #ffffff;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":".text-area .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":".text-area:focused .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":".text-area:focused {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    -fx-highlight-fill: #7ecfff;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":".text-area .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    -fx-highlight-fill: #7ecfff;","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"wujy28":33}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"\u003cStackPane style\u003d\"-fx-background-color: #3C4EEF; -fx-background-radius: 5; -fx-border-radius: 5;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"    \u003cURL value\u003d\"@CommandBox.css\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" stylesheets\u003d\"@CommandBox.css\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"      \u003cInsets bottom\u003d\"3.0\" left\u003d\"3.0\" right\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"wujy28":10,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"AaronJT1"},"content":"#filterField, #patientListPanel, #patientWebpage {","lastModifiedDate":"2023-10-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"AaronJT1":1,"-":351}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"    -fx-background: #d8e3ff;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wujy28":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"@font-face {","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \u0027Inter Medium\u0027;","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"    src: url(\u0027../fonts/Inter/static/Inter-Medium.ttf\u0027);","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: #3C4EEF;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    -fx-shape: \"M 0 0 L 1 0 L 1 0.5 L 0 0.5 Z\"; /* Rectangle shape */","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: 3C4EEF;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: 3C4EEF;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"#helpMessage {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    -fx-text-fill: #3C4EEF; /* Updated color for the \"Refer to the user...\" text */","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: #B9CCFF;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"/* Update color for the title \"Help\" */","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":".fx-root {","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"    -fx-text-fill: #B9CCFF;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"#minimizeButton {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"    -fx-text-fill: #B9CCFF;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"#minimizeButton:hover {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#5EBBFF, 0.5%);","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"#closeButton {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    -fx-text-fill: #B9CCFF;","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"#closeButton:hover {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: #FF5555; /* Red when hovered */","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":".label {","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":".button {","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wujy28":17,"longnguyentan":34,"-":16}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"\u003cfx:root resizable\u003d\"false\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"      \u003cAnchorPane\u003e \u003c!-- Using an AnchorPane to position the components --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        \u003c!-- Setting the customTitleBar at the top of the AnchorPane --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"        \u003cHBox fx:id\u003d\"customTitleBar\" alignment\u003d\"CENTER_RIGHT\" style\u003d\"-fx-background-color: #3C4EEF;\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"          \u003cLabel style\u003d\"-fx-text-fill: #B9CCFF;\" stylesheets\u003d\"@HelpWindow.css\" text\u003d\"  ? Help\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"          \u003c!-- Spacing between \"?\" and title --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"          \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"          \u003cImageView fitHeight\u003d\"26.0\" fitWidth\u003d\"189.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"            \u003cimage\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"              \u003cImage url\u003d\"@../images/Advanced\u0026amp;Efficient.png\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"            \u003c/image\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"          \u003c/ImageView\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"          \u003c!-- Spacing between title and buttons --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"          \u003cRegion minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"          \u003cButton fx:id\u003d\"minimizeButton\" onAction\u003d\"#minimizeWindow\" text\u003d\"-\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"          \u003cButton fx:id\u003d\"closeButton\" onAction\u003d\"#closeWindow\" text\u003d\"X\" /\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"        \u003c!-- Position the helpMessageContainer below the customTitleBar --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"25.0\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"            \u003cLabel fx:id\u003d\"helpMessage\" stylesheets\u003d\"@HelpWindow.css\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"            \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" stylesheets\u003d\"@HelpWindow.css\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"wujy28":17,"longnguyentan":12,"-":37}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":".background {","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"    background-color: #b9ccff; /* Used in the default.html file */","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":".label {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":".label-bright {","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":".label-header {","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":".text-field {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":".tab-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":".table-view {","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    -fx-base: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"    -fx-control-inner-background: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    -fx-table-cell-border-color: #3a69ef;","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    -fx-table-header-border-color: #3a69ef;","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    -fx-border-color:","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"        transparent","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"        transparent","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: transparent transparent transparent #3a69ef;","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":".split-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":".list-view {","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":".list-cell {","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":".list-cell .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"wujy28"},"content":".cell_big_label {","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":".cell_small_label {","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"wujy28"},"content":".stack-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"wujy28"},"content":"     -fx-background-color: derive(#b9ccff, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"wujy28"},"content":".pane-with-border {","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"wujy28"},"content":"     -fx-background-color: derive(#b9ccff, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"wujy28"},"content":"     -fx-border-color: derive(#b9ccff, 10%);","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"wujy28"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"wujy28"},"content":".status-bar {","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#5ebbff, 0%);","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"wujy28"},"content":".result-display {","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #3c4eef;","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"wujy28"},"content":".result-display .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #ffffff !important;","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"wujy28"},"content":"result-display-box {","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #3c4eef;","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"wujy28"},"content":".status-bar .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"wujy28"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"wujy28"},"content":".status-bar-with-border {","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"wujy28"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"wujy28"},"content":".grid-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"wujy28"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"wujy28"},"content":".context-menu {","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 50%);","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"wujy28"},"content":".context-menu .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"wujy28"},"content":".menu-bar {","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#3c4eef, 0%);","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"wujy28"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"wujy28"},"content":".menu .left-container {","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #3c4eef;","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"wujy28"},"content":"/*","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"wujy28"},"content":" * Metro style Push Button","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"wujy28"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"wujy28"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"wujy28"},"content":".button {","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"wujy28"},"content":".button:hover {","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"wujy28"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"wujy28"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"wujy28"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"wujy28"},"content":".button:focused {","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"wujy28"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"wujy28"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"wujy28"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"wujy28"},"content":".button:default {","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"wujy28"},"content":".button:default:hover {","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"wujy28"},"content":".dialog-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":265,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":266,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":267,"author":{"gitId":"wujy28"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-10-18"},{"lineNumber":268,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":270,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"wujy28"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-10-18"},{"lineNumber":272,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-18"},{"lineNumber":273,"author":{"gitId":"wujy28"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-18"},{"lineNumber":274,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":275,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"wujy28"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 25%);","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":280,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"wujy28"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-18"},{"lineNumber":283,"author":{"gitId":"wujy28"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"wujy28"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":288,"author":{"gitId":"wujy28"},"content":".scroll-bar {","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":292,"author":{"gitId":"wujy28"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-18"},{"lineNumber":293,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: derive(#b9ccff, 50%);","lastModifiedDate":"2023-10-18"},{"lineNumber":294,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":295,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":297,"author":{"gitId":"wujy28"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-18"},{"lineNumber":298,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":301,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":302,"author":{"gitId":"wujy28"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-18"},{"lineNumber":303,"author":{"gitId":"wujy28"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":305,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":306,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-18"},{"lineNumber":307,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-18"},{"lineNumber":308,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":310,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-18"},{"lineNumber":311,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":312,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":313,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":314,"author":{"gitId":"wujy28"},"content":"#cardPane {","lastModifiedDate":"2023-10-18"},{"lineNumber":315,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #6372ff;","lastModifiedDate":"2023-10-18"},{"lineNumber":316,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"wujy28"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #ff2b64;","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"wujy28"},"content":"#commandTextField {","lastModifiedDate":"2023-10-18"},{"lineNumber":325,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #ffffff #ffffff #ffffff #ffffff;","lastModifiedDate":"2023-10-18"},{"lineNumber":326,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":327,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #3c4eef #3c4eef #3c4eef #3c4eef;","lastModifiedDate":"2023-10-18"},{"lineNumber":328,"author":{"gitId":"wujy28"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":329,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":330,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":331,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":332,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3c4eef;","lastModifiedDate":"2023-10-18"},{"lineNumber":333,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":334,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":335,"author":{"gitId":"wujy28"},"content":"#filterField, #patientListPanel, #patientWebpage {","lastModifiedDate":"2023-10-18"},{"lineNumber":336,"author":{"gitId":"wujy28"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-18"},{"lineNumber":337,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":338,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":339,"author":{"gitId":"wujy28"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-10-18"},{"lineNumber":340,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent, #b9ccff, transparent, #b9ccff;","lastModifiedDate":"2023-10-18"},{"lineNumber":341,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":342,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":343,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":344,"author":{"gitId":"wujy28"},"content":"#tags {","lastModifiedDate":"2023-10-18"},{"lineNumber":345,"author":{"gitId":"wujy28"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-18"},{"lineNumber":346,"author":{"gitId":"wujy28"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":347,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":348,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":349,"author":{"gitId":"wujy28"},"content":"#tags .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":350,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":351,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-18"},{"lineNumber":352,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":353,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":354,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":355,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-18"},{"lineNumber":356,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wujy28":356}},{"path":"src/main/resources/view/MainWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"/*!* MainWindow.css *!*/","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"/*#minimizeButton, #maximizeButton, #closeButton {*/","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"/*    -fx-background-color: transparent;*/","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"/*    -fx-text-fill: #B9CCFF;*/","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"/*    -fx-border-color: transparent;*/","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"/*    -fx-padding: 5px;*/","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"/*}*/","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"/*#minimizeButton:hover, #maximizeButton:hover, #closeButton:hover {*/","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"/*    -fx-background-color: #888888;*/","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"/*}*/","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"@font-face {","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \u0027Inter Medium\u0027;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"    src: url(\u0027../fonts/Inter/static/Inter-Medium.ttf\u0027);","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"#menuBar {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: #3C4EEF;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #B9CCFF;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":".menu-item .label {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"#minimizeButton, #maximizeButton {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"/*#maximizeButton, #minimizeButton:hover {*/","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"/*    -fx-background-color: rgba(128, 128, 128, 0.34);*/","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"/*}*/","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"#closeButton {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"#closeButton:hover {","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"    -fx-background-color: #FF5555; /* Red when hovered */","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":".split-pane:horizontal \u003e .split-pane-divider {","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #B9CCFF;","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"wujy28":22,"longnguyentan":41}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Advanced\u0026amp;Efficient\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"\u003c!--  \u003cicons\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"\u003c!--    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"\u003c!--  \u003c/icons\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"\u003c!--        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"        \u003cURL value\u003d\"@MainWindow.css\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"\u003c!--        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"\u003c!--          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"\u003c!--            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"\u003c!--          \u003c/Menu\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"\u003c!--          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"\u003c!--            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"\u003c!--          \u003c/Menu\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"\u003c!--        \u003c/MenuBar\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"          \u003cHBox alignment\u003d\"CENTER_RIGHT\" style\u003d\"-fx-background-color: #3C4EEF;\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"              \u003c!-- MenuBar on the left --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"              \u003cMenuBar fx:id\u003d\"menuBar\" minHeight\u003d\"30.0\" prefHeight\u003d\"30.0\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"                  \u003cMenu mnemonicParsing\u003d\"false\" style\u003d\"-fx-text-fill: white;\" text\u003d\"File\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                      \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                  \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"                  \u003cMenu mnemonicParsing\u003d\"false\" style\u003d\"-fx-text-fill: white;\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                      \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                  \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"               \u003cImageView fitHeight\u003d\"26.0\" fitWidth\u003d\"189.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"                     \u003cImage url\u003d\"@../images/Advanced\u0026amp;Efficient.png\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"              \u003cRegion minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"\u003c!--              \u003cButton fx:id\u003d\"minimizeButton\" text\u003d\"-\" onAction\u003d\"#minimizeWindow\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"\u003c!--              \u003cButton fx:id\u003d\"maximizeButton\" text\u003d\"🗖\" onAction\u003d\"#maximizeWindow\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"\u003c!--              \u003cButton fx:id\u003d\"closeButton\" text\u003d\"X\" onAction\u003d\"#handleExit\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"          \u003cSplitPane dividerPositions\u003d\"0.29797979797979796\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"              \u003citems\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"                  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" style\u003d\"-fx-background-color: #B9CCFF\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"                          \u003cVBox AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"                                  \u003cVBox fx:id\u003d\"patientList\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                      \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"                                          \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                                      \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"                                      \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"                                  \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"                          \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"                  \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\" style\u003d\"-fx-background-color: #B9CCFF\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"                          \u003cStackPane fx:id\u003d\"recordPanelPlaceholder\" alignment\u003d\"BOTTOM_LEFT\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"8.0\" AnchorPane.leftAnchor\u003d\"8.0\" AnchorPane.rightAnchor\u003d\"8.0\" AnchorPane.topAnchor\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"              \u003c/items\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"          \u003c/SplitPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"          \u003c!--        \u003cSplitPane dividerPositions\u003d\"0.29797979797979796\" VBox.vgrow\u003d\"ALWAYS\"\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"\u003c!--              \u003citems\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\"\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                     \u003cchildren\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                        \u003cVBox AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" style\u003d\"-fx-background-color: #B9CCFF\"\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                           \u003cchildren\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                                      \u003cVBox fx:id\u003d\"patientList\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                            \u003cpadding\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                            \u003c/padding\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                            \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                          \u003c/VBox\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                           \u003c/children\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                        \u003c/VBox\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                     \u003c/children\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                \u003c/AnchorPane\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\"\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                     \u003cchildren\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                        \u003cStackPane fx:id\u003d\"recordPanelPlaceholder\" alignment\u003d\"BOTTOM_LEFT\" styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                     \u003c/children\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"\u003c!--                \u003c/AnchorPane\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"\u003c!--              \u003c/items\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"longnguyentan"},"content":"\u003c!--        \u003c/SplitPane\u003e--\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" alignment\u003d\"BOTTOM_LEFT\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" style\u003d\"-fx-background-color: #B9CCFF;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #B9CCFF;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"wujy28":37,"longnguyentan":48,"-":41}},{"path":"src/main/resources/view/PatientCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"@font-face {","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \u0027Doppio One\u0027;","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"    src: url(\u0027../fonts/Doppio_One/DoppioOne-Regular.ttf\u0027);","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"@font-face {","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \u0027Inter Medium\u0027;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"    src: url(\u0027../fonts/Inter/static/Inter-Medium.ttf\u0027);","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"#name {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Doppio One\";","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 40px;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":".fieldText {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 17px;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #808CFF;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":".icNumber {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 25px;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":".departmentLabel {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":".tags {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    -fx-vgap: 4;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":".tags .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #808CFF;","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #808CFF;","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":".low {","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3AD8C5;","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #3AD8C5;","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":".medium {","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #f5a27e;","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #f5a27e;","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":".high {","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #f57ea9;","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #f57ea9;","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"wujy28":94}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"130.0\" minHeight\u003d\"130.0\" prefHeight\u003d\"130.0\" prefWidth\u003d\"360.0\" style\u003d\"-fx-background-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"   \u003cAnchorPane style\u003d\"-fx-background-color: white; -fx-background-radius: 4; -fx-border-radius: 4;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"         \u003cGridPane AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"           \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"             \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"           \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"           \u003crowConstraints\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"             \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"             \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"             \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"           \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"            \u003cHBox alignment\u003d\"TOP_CENTER\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"              \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"name\" stylesheets\u003d\"@PatientCard.css\" text\u003d\"\\$first\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"                  \u003cAnchorPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"                        \u003cAnchorPane prefHeight\u003d\"18.0\" style\u003d\"-fx-background-color: #808CFF; -fx-background-radius: 3; -fx-border-radius: 3;\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"8.0\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"                              \u003cLabel fx:id\u003d\"assignedDepartment\" alignment\u003d\"CENTER\" layoutX\u003d\"4.0\" layoutY\u003d\"5.0\" styleClass\u003d\"departmentLabel\" stylesheets\u003d\"@PatientCard.css\" text\u003d\"\\$department\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"                              \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" top\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"                        \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"               \u003cHBox nodeOrientation\u003d\"RIGHT_TO_LEFT\" prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"                     \u003cLabel fx:id\u003d\"priorityLabel\" styleClass\u003d\"priorityTag\" stylesheets\u003d\"@PatientCard.css\" text\u003d\"Priority\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets right\u003d\"7.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"                  \u003cFlowPane fx:id\u003d\"tags\" nodeOrientation\u003d\"RIGHT_TO_LEFT\" styleClass\u003d\"tags\" stylesheets\u003d\"@PatientCard.css\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"                     \u003c/FlowPane\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"               \u003cAnchorPane GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"2\" GridPane.valignment\u003d\"TOP\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"                     \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"                           \u003cGridPane alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"35.0\" prefWidth\u003d\"400.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"                             \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"                               \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"205.64866638183594\" minWidth\u003d\"10.0\" prefWidth\u003d\"66.5\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"                               \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"267.23779296875\" minWidth\u003d\"10.0\" prefWidth\u003d\"127.5\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"                             \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"                             \u003crowConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"                               \u003cRowConstraints maxHeight\u003d\"30.0\" minHeight\u003d\"10.0\" prefHeight\u003d\"22.5\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"                               \u003cRowConstraints maxHeight\u003d\"27.35866928100586\" minHeight\u003d\"0.0\" prefHeight\u003d\"22.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"                             \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"                              \u003cLabel fx:id\u003d\"gender\" prefWidth\u003d\"150.0\" styleClass\u003d\"fieldText\" stylesheets\u003d\"@PatientCard.css\" text\u003d\"\\$gender\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"1\" GridPane.valignment\u003d\"CENTER\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"                              \u003cLabel fx:id\u003d\"birthday\" prefWidth\u003d\"150.0\" styleClass\u003d\"fieldText\" stylesheets\u003d\"@PatientCard.css\" text\u003d\"\\$birthday\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.valignment\u003d\"CENTER\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"                              \u003cLabel fx:id\u003d\"phone\" prefWidth\u003d\"293.0\" styleClass\u003d\"fieldText\" stylesheets\u003d\"@PatientCard.css\" text\u003d\"\\$phone\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"1\" GridPane.valignment\u003d\"CENTER\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"                              \u003cLabel fx:id\u003d\"age\" prefWidth\u003d\"263.0\" styleClass\u003d\"fieldText\" stylesheets\u003d\"@PatientCard.css\" text\u003d\"\\$age\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.valignment\u003d\"CENTER\" GridPane.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"                           \u003c/GridPane\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"                           \u003cAnchorPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"                              \u003cLabel fx:id\u003d\"icNumber\" alignment\u003d\"CENTER_RIGHT\" contentDisplay\u003d\"RIGHT\" layoutX\u003d\"65.0\" layoutY\u003d\"10.0\" styleClass\u003d\"icNumber\" stylesheets\u003d\"@PatientCard.css\" text\u003d\"\\$icNumber\" AnchorPane.rightAnchor\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"                           \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"               \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"      \u003c/children\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"         \u003cInsets bottom\u003d\"12.0\" left\u003d\"12.0\" right\u003d\"12.0\" top\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"   \u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"      \u003cInsets bottom\u003d\"3.0\" left\u003d\"3.0\" right\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wujy28":79,"-":14}},{"path":"src/main/resources/view/PatientListPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":".list-cell:even {","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":".list-cell:odd {","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":".list-cell:selected {","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #7ecfff;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 4;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .track,","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .track{","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"    -fx-background-color:white;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    -fx-border-color:transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .increment-button ,","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .decrement-button {","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    -fx-background-color:transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0.0em;","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.0 0.0 10.0 0.0;","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .increment-button ,","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .decrement-button {","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    -fx-background-color:transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0.0em;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.0 10.0 0.0 0.0;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":".scroll-bar .decrement-arrow{","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.15em 0.0;","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .decrement-arrow{","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.0 0.15em;","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .thumb,","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .thumb {","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #7ecfff;","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .thumb:hover,","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .thumb:hover {","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    -fx-background-color : #7ecfff;","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets : 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius : 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wujy28":62}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"\u003cVBox style\u003d\"-fx-background-color: #D8E3FF;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"    \u003cURL value\u003d\"@PatientListPanel.css\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"  \u003cListView fx:id\u003d\"patientListView\" style\u003d\"-fx-background-color: #D8E3FF;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wujy28":6,"-":6}},{"path":"src/main/resources/view/RecordCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"@font-face {","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \u0027Doppio One\u0027;","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"    src: url(\u0027../fonts/Doppio_One/DoppioOne-Regular.ttf\u0027);","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"@font-face {","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \u0027Inter Medium\u0027;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"    src: url(\u0027../fonts/Inter/static/Inter-Medium.ttf\u0027);","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"#name {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Doppio One\";","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 40px;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":".fieldLabel {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #808CFF;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":".fieldText {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":".text-area {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"    text-area-background: #D8E3FF;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #B9CCFF;","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":".text-area .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #D8E3FF;","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":".text-area:focused .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #D8E3FF;","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":".text-area:focused {","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"    -fx-highlight-fill: #7ecfff;","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":".text-area .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    -fx-highlight-fill: #7ecfff;","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":".tags {","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    -fx-vgap: 4;","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":".tags .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #808CFF;","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #808CFF;","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":".low {","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #3AD8C5;","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #3AD8C5;","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":".medium {","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #f5a27e;","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #f5a27e;","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":".high {","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #f57ea9;","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"    -fx-border-color: #f57ea9;","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .track,","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .track{","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"    -fx-background-color:white;","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"    -fx-border-color:transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .increment-button ,","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .decrement-button {","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"    -fx-background-color:transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0.0em;","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.0 0.0 10.0 0.0;","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .increment-button ,","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .decrement-button {","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"wujy28"},"content":"    -fx-background-color:transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0.0em;","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.0 10.0 0.0 0.0;","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"wujy28"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"wujy28"},"content":".scroll-bar .decrement-arrow{","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"wujy28"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.15em 0.0;","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .decrement-arrow{","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"wujy28"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.0 0.15em;","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .thumb,","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .thumb {","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #7ecfff;","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":159,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .thumb:hover,","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .thumb:hover {","lastModifiedDate":"2023-11-03"},{"lineNumber":161,"author":{"gitId":"wujy28"},"content":"    -fx-background-color : #7ecfff;","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets : 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":163,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius : 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":164,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wujy28":164}},{"path":"src/main/resources/view/RecordCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: white; -fx-background-radius: 10; -fx-border-radius: 10;\" styleClass\u003d\"name\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"   \u003cstylesheets\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"      \u003cURL value\u003d\"@RecordCard.css\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"   \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"   \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"728.0\" prefWidth\u003d\"380.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"        \u003cInsets bottom\u003d\"8.0\" left\u003d\"15.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     \u003cLabel id\u003d\"name\" fx:id\u003d\"name\" styleClass\u003d\"label-header\" text\u003d\"\\$name\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"               \u003cFont size\u003d\"25.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"            \u003c/font\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"               \u003cInsets bottom\u003d\"6.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"         \u003cVBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"               \u003cHBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"                     \u003cLabel fx:id\u003d\"priorityLabel\" stylesheets\u003d\"@RecordCard.css\" text\u003d\"\\$priority\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets right\u003d\"7.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets right\u003d\"7.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"                  \u003cFlowPane fx:id\u003d\"tags\" styleClass\u003d\"tags\" stylesheets\u003d\"@RecordCard.css\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"                     \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"               \u003cHBox alignment\u003d\"BASELINE_LEFT\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"                     \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"NRIC Number\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"                  \u003cLabel fx:id\u003d\"icNumber\" styleClass\u003d\"fieldText\" text\u003d\"\\$icNumber\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"                           \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"                     \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"               \u003cGridPane prefHeight\u003d\"20.0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"                 \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"                   \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"184.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"96.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"                   \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"248.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"248.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"                 \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"                 \u003crowConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"                   \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"                 \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"                     \u003cHBox alignment\u003d\"BASELINE_LEFT\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"                           \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"Gender\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"                                 \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"                        \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"fieldText\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"                     \u003cHBox alignment\u003d\"BASELINE_LEFT\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"                           \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"Birthday\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"                                 \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"                        \u003cLabel fx:id\u003d\"birthday\" styleClass\u003d\"fieldText\" text\u003d\"\\$birthday\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"                     \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"                     \u003cInsets bottom\u003d\"3.0\" top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"                  \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"               \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"               \u003cHBox alignment\u003d\"BASELINE_LEFT\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"                     \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"Phone Number\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"                  \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"fieldText\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"                     \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"wujy28"},"content":"               \u003cHBox alignment\u003d\"BASELINE_LEFT\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":"                     \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"Email Address\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"wujy28"},"content":"                  \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"fieldText\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"wujy28"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"wujy28"},"content":"                     \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"wujy28"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"wujy28"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"wujy28"},"content":"               \u003cHBox alignment\u003d\"BASELINE_LEFT\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"wujy28"},"content":"                     \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"Address\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":139,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"wujy28"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"wujy28"},"content":"                  \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"fieldText\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"wujy28"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"wujy28"},"content":"                     \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"wujy28"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"wujy28"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"wujy28"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"wujy28"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"wujy28"},"content":"               \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"wujy28"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"wujy28"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"wujy28"},"content":"         \u003cVBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"wujy28"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"wujy28"},"content":"               \u003cHBox alignment\u003d\"BASELINE_LEFT\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"wujy28"},"content":"                     \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"Department\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"wujy28"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"wujy28"},"content":"                     \u003cLabel fx:id\u003d\"assignedDepartment\" styleClass\u003d\"fieldText\" text\u003d\"\\$department\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"wujy28"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"wujy28"},"content":"                           \u003cFont name\u003d\"System Bold\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"wujy28"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"wujy28"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"wujy28"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"wujy28"},"content":"                     \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"wujy28"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"wujy28"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"wujy28"},"content":"               \u003cVBox maxWidth\u003d\"500.0\" prefHeight\u003d\"480.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"wujy28"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"wujy28"},"content":"                     \u003cVBox prefHeight\u003d\"150.0\" prefWidth\u003d\"190.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"wujy28"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"wujy28"},"content":"                           \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"Observation\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":178,"author":{"gitId":"wujy28"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"wujy28"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":180,"author":{"gitId":"wujy28"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"wujy28"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"wujy28"},"content":"                           \u003cTextArea fx:id\u003d\"initialObservations\" editable\u003d\"false\" prefHeight\u003d\"200.0\" prefWidth\u003d\"380.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":183,"author":{"gitId":"wujy28"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"wujy28"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"wujy28"},"content":"                     \u003cVBox prefHeight\u003d\"150.0\" prefWidth\u003d\"190.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":186,"author":{"gitId":"wujy28"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"wujy28"},"content":"                           \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"Diagnosis\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":188,"author":{"gitId":"wujy28"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"wujy28"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":190,"author":{"gitId":"wujy28"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"wujy28"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"wujy28"},"content":"                           \u003cTextArea fx:id\u003d\"diagnosis\" editable\u003d\"false\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":193,"author":{"gitId":"wujy28"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"wujy28"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"wujy28"},"content":"                     \u003cVBox prefHeight\u003d\"150.0\" prefWidth\u003d\"190.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"wujy28"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"wujy28"},"content":"                           \u003cLabel styleClass\u003d\"fieldLabel\" text\u003d\"Treatment Plan\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":201,"author":{"gitId":"wujy28"},"content":"                              \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"wujy28"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":203,"author":{"gitId":"wujy28"},"content":"                              \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"wujy28"},"content":"                           \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"wujy28"},"content":"                           \u003cTextArea fx:id\u003d\"treatmentPlan\" editable\u003d\"false\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"wujy28"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"wujy28"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"wujy28"},"content":"                           \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"wujy28"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"wujy28"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"wujy28"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"wujy28"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":213,"author":{"gitId":"wujy28"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"wujy28"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"wujy28"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"wujy28"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"wujy28"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"wujy28"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"wujy28"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"wujy28"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":221,"author":{"gitId":"wujy28"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":222,"author":{"gitId":"wujy28"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":223,"author":{"gitId":"wujy28"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wujy28":223}},{"path":"src/main/resources/view/RecordPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"\u003cVBox style\u003d\"-fx-background-color: #D8E3FF;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"      \u003cAnchorPane fx:id\u003d\"recordView\" minWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"            \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"         \u003c/padding\u003e\u003c/AnchorPane\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wujy28":17}},{"path":"src/main/resources/view/ResultDisplay.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"@font-face {","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \u0027Inter Medium\u0027;","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"    src: url(\u0027../fonts/Inter/static/Inter-Medium.ttf\u0027);","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":".fieldLabel {","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #808CFF;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":".text-area {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"    text-area-background: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    -fx-font-family: \"Inter Medium\";","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":".text-area .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":".text-area:focused .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #3C4EEF;","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":".text-area:focused {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    -fx-highlight-fill: #7ecfff;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":".text-area .content {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    -fx-highlight-fill: #7ecfff;","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .track,","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .track{","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    -fx-background-color:white;","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"    -fx-border-color:transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .increment-button ,","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .decrement-button {","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"    -fx-background-color:transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0.0em;","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.0 0.0 10.0 0.0;","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .increment-button ,","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .decrement-button {","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"    -fx-background-color:transparent;","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0.0em;","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.0 10.0 0.0 0.0;","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":".scroll-bar .decrement-arrow{","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.15em 0.0;","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .decrement-arrow{","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"    -fx-padding:0.0 0.15em;","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .thumb,","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .thumb {","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"    -fx-background-color: #7ecfff;","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":".scroll-bar:horizontal .thumb:hover,","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":".scroll-bar:vertical .thumb:hover {","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"    -fx-background-color : #7ecfff;","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"    -fx-background-insets : 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"    -fx-background-radius : 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"wujy28":86}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" style\u003d\"-fx-background-color: transparent; -fx-border-color: transparent;\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"    \u003cURL value\u003d\"@ResultDisplay.css\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"wujy28":5,"-":7}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        final Index fifthPatientIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(fifthPatientIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(fifthPatientIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(fifthPatientIndex.equals(fifthPatientIndex));","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(fifthPatientIndex.equals(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(fifthPatientIndex.equals(5.0f));","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(fifthPatientIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"AaronJT1":7,"-":60}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"        assertNotNull(AppUtil.getImage(\"/images/AELogo.png\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"wujy28":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PATIENT_IC;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"    public void execute_commandExecutionError_throwsParseException() {","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"        System.out.println(MESSAGE_INVALID_PATIENT_IC);","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"        String deleteCommand \u003d \"delete i/S1234\";","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"        assertParseException(deleteCommand, MESSAGE_INVALID_PATIENT_IC);","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPatientList().remove(0));","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"            Model expectedModel) throws CommandException, ParseException, PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.addPatient(expectedPatient, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"AaronJT1":8,"RiyaMehta2211":6,"-":163}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    public void execute_newPatient_success() {","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.addPatient(validPatient, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        assertCommandSuccess(new AddCommand(validPatient), model,","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPatient)),","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        Patient patientInList \u003d model.getAddressBook().getPatientList().get(0);","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        assertCommandFailure(new AddCommand(patientInList), model,","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"                AddCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"AaronJT1":11,"RiyaMehta2211":1,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.PatientBuilder.DEFAULT_IC_NUMBER;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.List;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        ModelStubAcceptingPatientAdded modelStub \u003d new ModelStubAcceptingPatientAdded();","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        CommandResult commandResult \u003d new AddCommand(validPatient).execute(modelStub);","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPatient)),","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.patientsAdded);","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        AddCommand addCommand \u003d new AddCommand(validPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        ModelStub modelStub \u003d new ModelStubWithPatient(validPatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PATIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"    public void execute_patientWithExistingIcNumber_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        Patient existingPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        Patient newPatient \u003d new PatientBuilder(BOB).withIcNumber(DEFAULT_IC_NUMBER).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        AddCommand addCommand \u003d new AddCommand(newPatient);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        ModelStub modelStub \u003d new ModelStubWithPatientAndUniqueIcNumberCheck(existingPatient);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_PATIENT_WITH_IC_NUMBER_ALREADY_EXIST, () -\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"RiyaMehta2211"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"RiyaMehta2211"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"RiyaMehta2211"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"        public String redoAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"RiyaMehta2211"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"RiyaMehta2211"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"RiyaMehta2211"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"        public String undoAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"RiyaMehta2211"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"RiyaMehta2211"},"content":"        public void commitAddressBook(String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"RiyaMehta2211"},"content":"        public Patient getPatient(IcNumber icNumber, List\u003cPatient\u003e patientList) {","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"RiyaMehta2211"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":164,"author":{"gitId":"RiyaMehta2211"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"AaronJT1"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"AaronJT1"},"content":"        public boolean isPatientWithIcNumberPresent(IcNumber icNumber) {","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"        public ObservableList\u003cPatient\u003e getCurrentPatientList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"RiyaMehta2211"},"content":"        public void addPatient(Patient patient, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"RiyaMehta2211"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":193,"author":{"gitId":"AaronJT1"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"RiyaMehta2211"},"content":"        public void deletePatient(Patient target, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"RiyaMehta2211"},"content":"        public void setPatient(Patient target, Patient editedPatient, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"AaronJT1"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"AaronJT1"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-10-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"wujy28"},"content":"        public void sortPatientList(Comparator\u003c? super Patient\u003e comparator) {","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"AaronJT1"},"content":"     * A Model stub that contains a single patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"AaronJT1"},"content":"    private class ModelStubWithPatient extends ModelStub {","lastModifiedDate":"2023-10-05"},{"lineNumber":227,"author":{"gitId":"AaronJT1"},"content":"        private final Patient patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"AaronJT1"},"content":"        ModelStubWithPatient(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":230,"author":{"gitId":"AaronJT1"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":231,"author":{"gitId":"AaronJT1"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"AaronJT1"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":236,"author":{"gitId":"AaronJT1"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":237,"author":{"gitId":"AaronJT1"},"content":"            return this.patient.isSamePatient(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"AaronJT1"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2023-10-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"AaronJT1"},"content":"    private class ModelStubAcceptingPatientAdded extends ModelStub {","lastModifiedDate":"2023-10-05"},{"lineNumber":246,"author":{"gitId":"AaronJT1"},"content":"        final ArrayList\u003cPatient\u003e patientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"AaronJT1"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":250,"author":{"gitId":"AaronJT1"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":251,"author":{"gitId":"AaronJT1"},"content":"            return patientsAdded.stream().anyMatch(patient::isSamePatient);","lastModifiedDate":"2023-10-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"RiyaMehta2211"},"content":"        public void addPatient(Patient patient, String command) {","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"AaronJT1"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":257,"author":{"gitId":"AaronJT1"},"content":"            patientsAdded.add(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"AaronJT1"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"AaronJT1"},"content":"        public boolean isPatientWithIcNumberPresent(IcNumber icNumber) {","lastModifiedDate":"2023-10-26"},{"lineNumber":262,"author":{"gitId":"AaronJT1"},"content":"            for (Patient patient : patientsAdded) {","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"AaronJT1"},"content":"                if (patient.getIcNumber().equals(icNumber)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":264,"author":{"gitId":"AaronJT1"},"content":"                    return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"AaronJT1"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"AaronJT1"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":276,"author":{"gitId":"AaronJT1"},"content":"     * A Model stub that accepts the patient being added if it passes isPatientWithIcNumberPresent check","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":278,"author":{"gitId":"AaronJT1"},"content":"    private class ModelStubWithPatientAndUniqueIcNumberCheck extends ModelStub {","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"AaronJT1"},"content":"        private final Patient patient;","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"AaronJT1"},"content":"        ModelStubWithPatientAndUniqueIcNumberCheck(Patient patient) {","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"AaronJT1"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"AaronJT1"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"AaronJT1"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"AaronJT1"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"AaronJT1"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"AaronJT1"},"content":"            return this.patient.isSamePatient(patient);","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"AaronJT1"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"AaronJT1"},"content":"        public boolean isPatientWithIcNumberPresent(IcNumber icNumber) {","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"AaronJT1"},"content":"            List\u003cPatient\u003e currentPatientList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"AaronJT1"},"content":"            currentPatientList.add(patient);","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"AaronJT1"},"content":"            for (Patient patient : currentPatientList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"AaronJT1"},"content":"                if (patient.getIcNumber().equals(icNumber)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"AaronJT1"},"content":"                    return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"AaronJT1"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"AaronJT1"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"AaronJT1"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"AaronJT1":93,"wujy28":2,"thienmy0":2,"RiyaMehta2211":35,"-":172}},{"path":"src/test/java/seedu/address/logic/commands/AssignCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIC;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import java.util.List;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.AssignedDepartment;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":" * Contains integration tests (interaction with the Model) for {@code AssignCommand}.","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"public class AssignCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    public void constructor_nullArguments_exceptionThrown() {","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"        // null icNumber","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AssignCommand(null, new AssignedDepartment()));","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        // null assignedDepartment","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AssignCommand(new IcNumber(\"T0123456S\"), null));","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"    public void execute_differentDepartmentUnfilteredList_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment newAssignedDepartment \u003d new AssignedDepartment(\"emergency department\");","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"        Patient assignedPatient \u003d new PatientBuilder(ALICE)","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"                .withAssignedDepartment(newAssignedDepartment.toString())","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"                .buildWithDepartment();","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(ALICE.getIcNumber(), newAssignedDepartment);","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        String expectedMessage \u003d String.format(AssignCommand.MESSAGE_ASSIGN_PATIENT_SUCCESS,","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"                ALICE.getName(), newAssignedDepartment);","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getCurrentPatientList();","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        Patient patientToAssign \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"        expectedModel.setPatient(patientToAssign, assignedPatient, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        assertCommandSuccess(assignCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    public void execute_differentDepartmentFilteredList_success() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        showPatientAtIC(model, ALICE.getIcNumber());","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getCurrentPatientList();","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"        Patient patientInFilteredList \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment newAssignedDepartment \u003d new AssignedDepartment(\"emergency department\");","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        Patient assignedPatient \u003d new PatientBuilder(ALICE)","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"                .withAssignedDepartment(newAssignedDepartment.toString())","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"                .buildWithDepartment();","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(ALICE.getIcNumber(), newAssignedDepartment);","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        String expectedMessage \u003d String.format(AssignCommand.MESSAGE_ASSIGN_PATIENT_SUCCESS,","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"                ALICE.getName(), newAssignedDepartment);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"        expectedModel.setPatient(patientInFilteredList, assignedPatient, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"        assertCommandSuccess(assignCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"    public void execute_sameDepartment_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(ALICE.getIcNumber(), ALICE.getAssignedDepartment());","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"        String expectedMessage \u003d String.format(AssignCommand.MESSAGE_SAME_DEPARTMENT,","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"                ALICE.getName(), ALICE.getAssignedDepartment());","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"        assertCommandFailure(assignCommand, model, expectedMessage);","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"    public void execute_patientDoesNotExist_exceptionThrown() {","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"        String invalidIC \u003d \"A0000000A\";","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(new IcNumber(invalidIC), ALICE.getAssignedDepartment());","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"        assertThrows(PatientWithFieldNotFoundException.class, () -\u003e assignCommand.execute(model));","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"    public void equals() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"t1234567a\");","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber2 \u003d new IcNumber(\"s7654321a\");","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"        AssignedDepartment testDepartment1 \u003d new AssignedDepartment(\"Cardiology\");","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"        AssignedDepartment testDepartment2 \u003d new AssignedDepartment(\"Dermatology\");","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"        AssignCommand assignFirstCommand \u003d new AssignCommand(testIcNumber1, testDepartment1);","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        AssignCommand assignSecondCommand \u003d new AssignCommand(testIcNumber2, testDepartment1);","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(assignFirstCommand.equals(assignFirstCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"        AssignCommand assignFirstCommandCopy \u003d new AssignCommand(testIcNumber1, testDepartment1);","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(assignFirstCommand.equals(assignFirstCommandCopy));","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(assignFirstCommand.equals(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(assignFirstCommand.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"        // different departments -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"        AssignCommand assignFirstCommandDifferentDepartment \u003d new AssignCommand(testIcNumber1, testDepartment2);","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(assignFirstCommand.equals(assignFirstCommandDifferentDepartment));","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(assignFirstCommand.equals(assignSecondCommand));","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"    public void toStringMethod() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"T1234567j\");","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"        AssignedDepartment testDepartment1 \u003d new AssignedDepartment(\"Cardiology\");","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(testIcNumber1, testDepartment1);","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"        String expected \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"            AssignCommand.class.getCanonicalName() + \"{icNumber\u003d\" + testIcNumber1 + \", department\u003d\" + testDepartment1","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"                + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expected, assignCommand.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AaronJT1":67,"wujy28":72}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.setAddressBook(new AddressBook(), \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"AaronJT1":1,"RiyaMehta2211":1,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIAGNOSIS;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INITIAL_OBSERVATION;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TREATMENT_PLAN;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.PatientWithIcNumberPredicate;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"import seedu.address.testutil.EditRecordDescriptorBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_GENDER_AMY \u003d \"FEMALE\";","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_GENDER_BOB \u003d \"MALE\";","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_IC_NUMBER_AMY \u003d \"T1234567J\";","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_IC_NUMBER_BOB \u003d \"S7654321J\";","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"03/01/2001\";","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"05/06/2007\";","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"    public static final String VALID_PRIORITY_AMY \u003d \"HIGH\";","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"    public static final String VALID_PRIORITY_BOB \u003d \"MEDIUM\";","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_ASSIGNED_DEPARTMENT_BOB \u003d \"Psychiatry\";","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_ASSIGNED_DEPARTMENT_AMY \u003d \"Radiology\";","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_INITIAL_OBSERVATION_BOB \u003d \"Broken left arm\";","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_INITIAL_OBSERVATION_AMY \u003d \"Twisted right ankle\";","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_DIAGNOSIS_BOB \u003d \"Hairline fracture on left arm\";","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_DIAGNOSIS_AMY \u003d \"Sprained right ankle\";","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_TREATMENT_PLAN_BOB \u003d \"Carbon cast for 2 weeks\";","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"    public static final String VALID_TREATMENT_PLAN_AMY \u003d \"Ample rest\";","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"    public static final String IC_NUMBER_DESC_AMY \u003d \" \" + PREFIX_IC_NUMBER + VALID_IC_NUMBER_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"    public static final String IC_NUMBER_DESC_BOB \u003d \" \" + PREFIX_IC_NUMBER + VALID_IC_NUMBER_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"    public static final String PRIORITY_DESC_AMY \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"thienmy0"},"content":"    public static final String PRIORITY_DESC_BOB \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_BOB;","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"    public static final String INITIAL_OBSERVATION_DESC \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        \" \" + PREFIX_INITIAL_OBSERVATION + VALID_INITIAL_OBSERVATION_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"    public static final String DIAGNOSIS_DESC \u003d \" \" + PREFIX_DIAGNOSIS + VALID_DIAGNOSIS_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"    public static final String TREATMENT_PLAN_DESC \u003d \" \" + PREFIX_TREATMENT_PLAN + VALID_TREATMENT_PLAN_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"    public static final String FULL_DESC_BOB \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"        NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"            + ADDRESS_DESC_BOB + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"    public static final String FULL_DESC_AMY \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"        NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + GENDER_DESC_AMY + IC_NUMBER_DESC_AMY + BIRTHDAY_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"            + ADDRESS_DESC_AMY + PRIORITY_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"MALE-\"; // \u0027-\u0027 not allowed in gender","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"    public static final String INVALID_IC_NUMBER_DESC \u003d \" \" + PREFIX_IC_NUMBER + \"t!234567j\"; // \u0027!\u0027 not allowed in","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"    // ic number","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"    public static final String INVALID_BIRTHDAY_DESC \u003d \" \" + PREFIX_BIRTHDAY + \"10-10-1980\"; // invalid date format","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"    public static final String INVALID_PRIORITY_DESC \u003d \" \" + PREFIX_PRIORITY + \"low+\"; // \u0027+\u0027 not allowed in priority","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"    public static final EditCommand.EditPatientDescriptor DESC_BOB;","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"    public static final RecordCommand.EditRecordDescriptor REC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"    public static final RecordCommand.EditRecordDescriptor REC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"        DESC_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"            .withEmail(VALID_EMAIL_AMY).withGender(VALID_GENDER_AMY).withIcNumber(VALID_IC_NUMBER_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"thienmy0"},"content":"            .withBirthday(VALID_BIRTHDAY_AMY).withAddress(VALID_ADDRESS_AMY).withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"        DESC_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"            .withEmail(VALID_EMAIL_BOB).withGender(VALID_GENDER_BOB).withIcNumber(VALID_IC_NUMBER_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"            .withBirthday(VALID_BIRTHDAY_BOB).withAddress(VALID_ADDRESS_BOB).withPriority(VALID_PRIORITY_BOB)","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"        REC_AMY \u003d new EditRecordDescriptorBuilder().withInitialObservations(\"Broken Arm\")","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"            .withDiagnosis(\"Hairline fracture\").withTreatmentPlan(\"Cast for 2 days\").build();","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"        REC_BOB \u003d new EditRecordDescriptorBuilder().withInitialObservations(\"Shortness of breath and chest tightness\")","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"thienmy0"},"content":"            .withDiagnosis(\"Asthma\").withTreatmentPlan(\"Rest\").build();","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"    public static String getUserInputForBob() {","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"        return NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"            + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"        } catch (CommandException | PatientWithFieldNotFoundException ce) {","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"AaronJT1"},"content":"     * - the address book, filtered patient list and selected patient in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPatientList());","lastModifiedDate":"2023-10-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":180,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPatientList());","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"AaronJT1"},"content":"     * Updates {@code model}\u0027s filtered list to show only the patient at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":187,"author":{"gitId":"AaronJT1"},"content":"    public static void showPatientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-05"},{"lineNumber":188,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"        Patient patient \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-05"},{"lineNumber":191,"author":{"gitId":"AaronJT1"},"content":"        final String[] splitName \u003d patient.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-05"},{"lineNumber":192,"author":{"gitId":"AaronJT1"},"content":"        model.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":194,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"thienmy0"},"content":"     * Updates {@code model}\u0027s filtered list to show only the patient with the given {@code icNumber} in the","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"thienmy0"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"AaronJT1"},"content":"    public static void showPatientAtIC(Model model, IcNumber icNumber) throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"AaronJT1"},"content":"        model.updateFilteredPatientList(new PatientWithIcNumberPredicate(icNumber));","lastModifiedDate":"2023-11-01"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"AaronJT1":68,"thienmy0":23,"RiyaMehta2211":1,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIC;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"    public void execute_validIcUnfilteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e currentPatientList \u003d model.getCurrentPatientList();","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        Patient patientToDelete \u003d model.getPatient(ALICE.getIcNumber(), currentPatientList);","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ALICE.getIcNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"                Messages.format(patientToDelete));","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.deletePatient(patientToDelete, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        public void execute_invalidIcList_throwsIllegalArgumentException() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"        showPatientAtIC(model, ALICE.getIcNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"        String invalidIC \u003d \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new IcNumber(invalidIC));","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"        //Hence DeleteCommand cannot be executed because of illegal argument exception in IC","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"    public void execute_validIcFilteredList_success() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"        showPatientAtIC(model, new IcNumber(\"T0032415E\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientToDelete \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(ALICE.getIcNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"                Messages.format(patientToDelete));","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.deletePatient(patientToDelete, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"        showNoPatient(expectedModel);","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"    public void execute_icNumberOfNonExistingPatient_exceptionThrown() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"T1234567j\");","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"        DeleteCommand command \u003d new DeleteCommand(testIcNumber1);","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        boolean isExceptionThrown \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"            command.execute(model, command.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"        } catch (PatientWithFieldNotFoundException e) {","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"            isExceptionThrown \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"                MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD + \"Ic Number : \" + testIcNumber1.value);","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(isExceptionThrown);","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(ALICE.getIcNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"RiyaMehta2211"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(BENSON.getIcNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(new IcNumber(\"T0032415E\"));","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"RiyaMehta2211"},"content":"        IcNumber targetIc \u003d new IcNumber(\"T0032415E\");","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIc);","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{icNumber\u003d\" + targetIc + \"}\";","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"    private void showNoPatient(Model model) {","lastModifiedDate":"2023-10-05"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"        model.updateFilteredPatientList(p -\u003e false);","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(model.getFilteredPatientList().isEmpty());","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"AaronJT1":29,"wujy28":1,"thienmy0":1,"RiyaMehta2211":23,"-":73}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIC;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        Patient editedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        EditCommand.EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(editedPatient).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand editCommand \u003d new EditCommand(ALICE.getIcNumber(), descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"            Messages.format(editedPatient));","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientToEdit \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.setPatient(patientToEdit, editedPatient, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientToEdit \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"        PatientBuilder patientInList \u003d new PatientBuilder(patientToEdit);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        Patient editedPatient \u003d patientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        EditCommand.EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand editCommand \u003d new EditCommand(ALICE.getIcNumber(), descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-06"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"            Messages.format(editedPatient));","lastModifiedDate":"2023-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.setPatient(patientToEdit, editedPatient, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand editCommand \u003d new EditCommand(ALICE.getIcNumber(), new EditCommand.EditPatientDescriptor());","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient editedPatient \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"            Messages.format(editedPatient));","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"    public void execute_filteredList_success() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"RiyaMehta2211"},"content":"        showPatientAtIC(model, ALICE.getIcNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientInFilteredList \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-10-25"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        Patient editedPatient \u003d new PatientBuilder(patientInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand editCommand \u003d new EditCommand(ALICE.getIcNumber(),","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"            new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"            Messages.format(editedPatient));","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.setPatient(patientInFilteredList, editedPatient, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"    public void execute_duplicatePatientUnfilteredList_failure() {","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient firstPatient \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(firstPatient).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":117,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand editCommand \u003d new EditCommand(BENSON.getIcNumber(), descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"    public void execute_duplicatePatientFilteredList_failure() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"RiyaMehta2211"},"content":"        showPatientAtIC(model, ALICE.getIcNumber());","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"        // edit patient in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"RiyaMehta2211"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientInList \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand editCommand \u003d new EditCommand(ALICE.getIcNumber(),","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"            new EditPatientDescriptorBuilder(patientInList).build());","lastModifiedDate":"2023-10-05"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"thienmy0"},"content":"    public void execute_invalidPatientIcList_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"RiyaMehta2211"},"content":"        String invalidIC \u003d \"\";","lastModifiedDate":"2023-10-25"},{"lineNumber":137,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new IcNumber(invalidIC));","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"RiyaMehta2211"},"content":"        //Hence EditCommand cannot be executed because of illegal argument exception in IC","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"RiyaMehta2211"},"content":"        final EditCommand standardCommand \u003d new EditCommand(AMY.getIcNumber(), DESC_AMY);","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"AaronJT1"},"content":"        EditCommand.EditPatientDescriptor copyDescriptor \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(AMY.getIcNumber(), copyDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(standardCommand.equals(new EditCommand(BENSON.getIcNumber(), DESC_AMY)));","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(standardCommand.equals(new EditCommand(BENSON.getIcNumber(), DESC_BOB)));","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"RiyaMehta2211"},"content":"        IcNumber targetIc \u003d new IcNumber(\"T0032415E\");","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"AaronJT1"},"content":"        EditCommand.EditPatientDescriptor editPatientDescriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-05"},{"lineNumber":171,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand editCommand \u003d new EditCommand(targetIc, editPatientDescriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":172,"author":{"gitId":"RiyaMehta2211"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{icNumber\u003d\" + targetIc + \", editPatientDescriptor\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"            + editPatientDescriptor + \"}\";","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"wujy28":6,"AaronJT1":30,"thienmy0":1,"RiyaMehta2211":37,"-":103}},{"path":"src/test/java/seedu/address/logic/commands/EditPatientDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"public class EditPatientDescriptorTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor descriptorWithSameValues \u003d new EditPatientDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"        //different priority -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withPriority(VALID_PRIORITY_BOB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        editedAmy \u003d new EditPatientDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor editPatientDescriptor \u003d new EditCommand.EditPatientDescriptor();","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"        String expected \u003d EditCommand.EditPatientDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"                + editPatientDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"                + editPatientDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"                + editPatientDescriptor.getGender().orElse(null) + \", gender\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"                + editPatientDescriptor.getIcNumber().orElse(null) + \", icNumber\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"                + editPatientDescriptor.getBirthday().orElse(null) + \", birthday\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"                + editPatientDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"                + editPatientDescriptor.getAddress().orElse(null) + \", priority\u003d\"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"                + editPatientDescriptor.getPriority().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"                + editPatientDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expected, editPatientDescriptor.toString());","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"AaronJT1":16,"thienmy0":7,"RiyaMehta2211":3,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.CARL;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.ELLE;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.FIONA;","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"            Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"            Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"    public void execute_zeroKeywords_exceptionThrown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD + \"the given keywords.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"john\");","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        boolean isExceptionThrown \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"            command.execute(model, command.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        } catch (PatientWithFieldNotFoundException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"            isExceptionThrown \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"            assertEquals(e.getMessage(), expectedMessage);","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(isExceptionThrown);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPatientList());","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"    public void execute_multipleKeywords_multiplePatientsFound() {","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPatientList());","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AaronJT1":31,"RiyaMehta2211":1,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPatientAtIndex;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PATIENT;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        showPatientAtIndex(model, INDEX_FIRST_PATIENT);","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AaronJT1":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/RecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REC_AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DIAGNOSIS_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INITIAL_OBSERVATION_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TREATMENT_PLAN_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.RecordCommand.MESSAGE_EDIT_RECORD_SUCCESS;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RecordCommand.","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"public class RecordCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        RecordCommand recordCommand \u003d new RecordCommand(ALICE.getIcNumber(), new RecordCommand.EditRecordDescriptor());","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e lastShownList \u003d model.getCurrentPatientList();","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"        Patient editedPatient \u003d model.getPatient(ALICE.getIcNumber(), lastShownList);","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_RECORD_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"            Messages.formatRecord(editedPatient, editedPatient.getRecord()));","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"        assertCommandSuccess(recordCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"    public void execute_icNumberOfExistingPatient_patientFound() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"T0032415E\"); // ALICE\u0027s ic number","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        RecordCommand.EditRecordDescriptor testEditRecordDescriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor.setInitialObservations(VALID_INITIAL_OBSERVATION_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor.setDiagnosis(VALID_DIAGNOSIS_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor.setTreatmentPlan(VALID_TREATMENT_PLAN_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        RecordCommand command \u003d new RecordCommand(testIcNumber1, testEditRecordDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        expectedModel.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        Record expectedRecord \u003d ALICE.getRecord();","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        expectedRecord.setInitialObservations(VALID_INITIAL_OBSERVATION_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"        expectedRecord.setDiagnosis(VALID_DIAGNOSIS_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        expectedRecord.setTreatmentPlan(VALID_TREATMENT_PLAN_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        assertCommandSuccess(command, model,","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"            String.format(MESSAGE_EDIT_RECORD_SUCCESS, Messages.formatRecord(ALICE, expectedRecord)), expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"    public void execute_icNumberOfNonExistingPatient_exceptionThrown() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"T1234567j\");","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"        RecordCommand.EditRecordDescriptor testEditRecordDescriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        RecordCommand command \u003d new RecordCommand(testIcNumber1, testEditRecordDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"        boolean isExceptionThrown \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"            command.execute(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        } catch (PatientWithFieldNotFoundException | CommandException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"            isExceptionThrown \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"                MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD + \"Ic Number : \" + testIcNumber1.value);","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(isExceptionThrown);","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"thienmy0"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"thienmy0"},"content":"        final RecordCommand standardCommand \u003d new RecordCommand(AMY.getIcNumber(), REC_AMY);","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"thienmy0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"thienmy0"},"content":"        RecordCommand.EditRecordDescriptor copyDescriptor \u003d new RecordCommand.EditRecordDescriptor(REC_AMY);","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"thienmy0"},"content":"        RecordCommand commandWithSameValues \u003d new RecordCommand(AMY.getIcNumber(), copyDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"thienmy0"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"thienmy0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"thienmy0"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"thienmy0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"thienmy0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"thienmy0"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"thienmy0"},"content":"        assertFalse(standardCommand.equals(new RecordCommand(BENSON.getIcNumber(), REC_AMY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"        assertFalse(standardCommand.equals(new RecordCommand(BENSON.getIcNumber(), REC_BOB)));","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"thienmy0"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"        IcNumber targetIc \u003d new IcNumber(\"T0032415E\");","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"thienmy0"},"content":"        RecordCommand.EditRecordDescriptor editRecordDescriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"        RecordCommand recordCommand \u003d new RecordCommand(targetIc, editRecordDescriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"thienmy0"},"content":"        String expected \u003d RecordCommand.class.getCanonicalName() + \"{icNumber\u003d\" + targetIc + \", editRecordDescriptor\u003d\"","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"thienmy0"},"content":"            + editRecordDescriptor + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"        assertEquals(expected, recordCommand.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"AaronJT1":47,"thienmy0":83}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.CARL;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.DANIEL;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.ELLE;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.FIONA;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.GEORGE;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"public class RedoCommandTest {","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeNoStateToRedoTo() {","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(CommandException.class, RedoCommand.MESSAGE_NO_COMMANDS_REDONE, () -\u003e redoCommand.execute(model));","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeRedoClearSuccess() throws CommandException {","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        model.setAddressBook(new AddressBook(), \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_REDONE_SUCCESS, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.setAddressBook(new AddressBook(), \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"        assertCommandSuccess(redoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(Arrays.asList(), model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeRedoAddSuccess() {","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"        PatientBuilder patientBuilder \u003d new PatientBuilder();","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientToAdd \u003d patientBuilder.build();","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"        model.addPatient(patientToAdd, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_REDONE_SUCCESS, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.addPatient(patientToAdd, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"        assertCommandSuccess(redoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL,","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"                        DANIEL, ELLE, FIONA, GEORGE, patientToAdd),","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"                model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeRedoDeleteSuccess() {","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientToDelete \u003d model.getPatient(ALICE.getIcNumber(), model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"        model.deletePatient(patientToDelete, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_REDONE_SUCCESS, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.deletePatient(ALICE, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"        assertCommandSuccess(redoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(Arrays.asList(BENSON, CARL,","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"                        DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"                model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeRedoEditSuccess() {","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"        PatientBuilder patientBuilder \u003d new PatientBuilder();","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient editedPatient \u003d patientBuilder.build();","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"        model.setPatient(model.getPatient(ALICE.getIcNumber(), model.getCurrentPatientList()), editedPatient, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_REDONE_SUCCESS, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedModel.setPatient(expectedModel.getPatient(ALICE.getIcNumber(),","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"                expectedModel.getCurrentPatientList()), editedPatient, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"RiyaMehta2211"},"content":"        assertCommandSuccess(redoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(Arrays.asList(editedPatient, BENSON, CARL,","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"                        DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"RiyaMehta2211"},"content":"                model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"RiyaMehta2211":91}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.CARL;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.DANIEL;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.ELLE;","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.FIONA;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.GEORGE;","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"/**","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":" */","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"public class SortCommandTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    public void constructor_nullArgument_exceptionThrown() {","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"        assertThrows(NullPointerException.class, () -\u003e new SortCommand(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    public void sortOrderGetSortOrder_validArguments_correctReturnValues() {","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"        // same case as enum string values (lower case)","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        assertEquals(SortCommand.SortOrder.NAME, SortCommand.SortOrder.getSortOrder(\"name\")); // name","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        assertEquals(SortCommand.SortOrder.IC_NUMBER, SortCommand.SortOrder.getSortOrder(\"ic\")); // IC Number","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        assertEquals(SortCommand.SortOrder.DEPARTMENT,","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"                SortCommand.SortOrder.getSortOrder(\"department\")); // department","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        assertEquals(SortCommand.SortOrder.AGE, SortCommand.SortOrder.getSortOrder(\"age\")); // age","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"        assertEquals(SortCommand.SortOrder.PRIORITY, SortCommand.SortOrder.getSortOrder(\"priority\")); // priority","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"        // different case","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        assertEquals(SortCommand.SortOrder.NAME, SortCommand.SortOrder.getSortOrder(\"Name\")); // capital letter","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        assertEquals(SortCommand.SortOrder.PRIORITY,","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"                SortCommand.SortOrder.getSortOrder(\"PRIORITY\")); // all caps","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        assertEquals(SortCommand.SortOrder.DEPARTMENT,","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"                SortCommand.SortOrder.getSortOrder(\"DeParTMenT\")); // weird case","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"    public void sortOrderGetSortOrder_invalidArguments_returnNull() {","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, SortCommand.SortOrder.getSortOrder(\"\")); // empty string","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, SortCommand.SortOrder.getSortOrder(\"    \")); // spaces only","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, SortCommand.SortOrder.getSortOrder(\"n a m e\")); // spaces between letters","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, SortCommand.SortOrder.getSortOrder(\"name \")); // extra space","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, SortCommand.SortOrder.getSortOrder(\"birthday\")); // sort order does not exist","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"    public void sortOrderGetSortOrder_nullInput_exceptionThrown() {","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"        assertThrows(NullPointerException.class, () -\u003e SortCommand.SortOrder.getSortOrder(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    public void execute_sortByName_sortedCorrectly() {","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"        model.addPatient(GEORGE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        model.addPatient(BENSON, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"        model.addPatient(DANIEL, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        model.addPatient(ALICE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"        model.addPatient(ELLE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"        model.addPatient(FIONA, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"        model.addPatient(CARL, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCommand.SortOrder.NAME);","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"        // typical patients are already sorted by name","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SORT_LIST_SUCCESS, SortCommand.SortOrder.NAME);","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"    public void execute_sortByIcNumber_sortedCorrectly() {","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(ELLE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(BENSON, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(CARL, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(FIONA, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(GEORGE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(ALICE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(DANIEL, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCommand.SortOrder.IC_NUMBER);","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SORT_LIST_SUCCESS, SortCommand.SortOrder.IC_NUMBER);","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"    public void execute_sortByDepartment_sortedCorrectly() {","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"        Patient patient1 \u003d new PatientBuilder().withName(\"Paul\").withIcNumber(\"T0123456D\")","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"                .withAssignedDepartment(\"emergency department\").buildWithDepartment();","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"        Patient patient2 \u003d new PatientBuilder().withName(\"Gina\").withIcNumber(\"T0123456A\")","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"                .withAssignedDepartment(\"dermatology\").buildWithDepartment();","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"        Patient patient3 \u003d new PatientBuilder().withName(\"Eric\").withIcNumber(\"T0123456L\")","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"                .withAssignedDepartment(\"psychiatry\").buildWithDepartment();","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"        Patient patient4 \u003d new PatientBuilder().withName(\"Peter\").withIcNumber(\"T0123456P\")","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"                .withAssignedDepartment(\"default\").buildWithDepartment();","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"        model.addPatient(patient2, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"        model.addPatient(patient1, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"        model.addPatient(patient4, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"        model.addPatient(patient3, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"wujy28"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCommand.SortOrder.DEPARTMENT);","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(patient1, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(patient2, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(patient3, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(patient4, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"wujy28"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SORT_LIST_SUCCESS, SortCommand.SortOrder.DEPARTMENT);","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"wujy28"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"wujy28"},"content":"    public void execute_sortByAge_sortedCorrectly() {","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"wujy28"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(DANIEL, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(ALICE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(CARL, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(GEORGE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(ELLE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(BENSON, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(FIONA, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"wujy28"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCommand.SortOrder.AGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"wujy28"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"wujy28"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SORT_LIST_SUCCESS, SortCommand.SortOrder.AGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"wujy28"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"wujy28"},"content":"    public void execute_sortByPriority_sortedCorrectly() {","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"wujy28"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(BENSON, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(ELLE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(ALICE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(FIONA, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(GEORGE, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(CARL, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"wujy28"},"content":"        expectedModel.addPatient(DANIEL, \"\");","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"wujy28"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCommand.SortOrder.PRIORITY);","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"wujy28"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":170,"author":{"gitId":"wujy28"},"content":"        String expectedMessage \u003d String.format(SortCommand.MESSAGE_SORT_LIST_SUCCESS, SortCommand.SortOrder.PRIORITY);","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"wujy28"},"content":"        assertCommandSuccess(sortCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":172,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"wujy28"},"content":"    public void equals() {","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"wujy28"},"content":"        SortCommand firstSortCommand \u003d new SortCommand(SortCommand.SortOrder.NAME);","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"wujy28"},"content":"        SortCommand secondSortCommand \u003d new SortCommand(SortCommand.SortOrder.AGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"wujy28"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"wujy28"},"content":"        assertTrue(firstSortCommand.equals(firstSortCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"wujy28"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"wujy28"},"content":"        SortCommand sortFirstCommandCopy \u003d new SortCommand(SortCommand.SortOrder.NAME);","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"wujy28"},"content":"        assertTrue(firstSortCommand.equals(sortFirstCommandCopy));","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"wujy28"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"wujy28"},"content":"        assertFalse(firstSortCommand.equals(1));","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"wujy28"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"wujy28"},"content":"        assertFalse(firstSortCommand.equals(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"wujy28"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"wujy28"},"content":"        assertFalse(firstSortCommand.equals(secondSortCommand));","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"wujy28"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"wujy28"},"content":"        SortCommand sortCommand \u003d new SortCommand(SortCommand.SortOrder.AGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"wujy28"},"content":"        String expected \u003d SortCommand.class.getCanonicalName() + \"{sortOrder\u003d\" + SortCommand.SortOrder.AGE + \"}\";","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"wujy28"},"content":"        assertEquals(expected, sortCommand.toString());","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"wujy28":202}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.CARL;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.DANIEL;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.ELLE;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.FIONA;","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.GEORGE;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeNoStateToUndoTo() {","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(CommandException.class, UndoCommand.MESSAGE_NO_COMMANDS_UNDONE, () -\u003e undoCommand.execute(model));","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeUndoClearSuccess() throws CommandException {","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        model.setAddressBook(new AddressBook(), \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_UNDONE_SUCCESS, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL,","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"                        DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"                model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeUndoAddSuccess() {","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"        PatientBuilder patientBuilder \u003d new PatientBuilder();","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientToAdd \u003d patientBuilder.build();","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"        model.addPatient(patientToAdd, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_UNDONE_SUCCESS, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL,","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"                DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"                model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeUndoDeleteSuccess() {","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient patientToDelete \u003d model.getPatient(ALICE.getIcNumber(), model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"        model.deletePatient(patientToDelete, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"RiyaMehta2211"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"RiyaMehta2211"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_UNDONE_SUCCESS, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"RiyaMehta2211"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL,","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"RiyaMehta2211"},"content":"                        DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"RiyaMehta2211"},"content":"                model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"RiyaMehta2211"},"content":"    public void executeUndoEditSuccess() {","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"        PatientBuilder patientBuilder \u003d new PatientBuilder();","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"RiyaMehta2211"},"content":"        Patient editedPatient \u003d patientBuilder.build();","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"RiyaMehta2211"},"content":"        model.setPatient(model.getPatient(ALICE.getIcNumber(), model.getCurrentPatientList()), editedPatient, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"RiyaMehta2211"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"RiyaMehta2211"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_UNDONE_SUCCESS, \"\");","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"RiyaMehta2211"},"content":"        assertCommandSuccess(undoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL,","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"RiyaMehta2211"},"content":"                        DANIEL, ELLE, FIONA, GEORGE),","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"RiyaMehta2211"},"content":"                model.getCurrentPatientList());","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"RiyaMehta2211":85}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENT_LISTED_SUCCESS;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.PatientWithIcNumberPredicate;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":" * Contains integration tests (interaction with the Model) for {@code ViewCommand}.","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    public void equals() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"t1234567a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber2 \u003d new IcNumber(\"s7654321a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate firstPredicate \u003d new PatientWithIcNumberPredicate(testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate secondPredicate \u003d new PatientWithIcNumberPredicate(testIcNumber2);","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(firstPredicate, testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(secondPredicate, testIcNumber2);","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(firstPredicate, testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"    public void execute_icNumberOfExistingPatient_patientFound() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"T0032415E\");","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate predicate \u003d new PatientWithIcNumberPredicate(testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        ViewCommand command \u003d new ViewCommand(predicate, testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        expectedModel.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        assertCommandSuccess(command, model, MESSAGE_PATIENT_LISTED_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"    public void execute_icNumberOfNonExistingPatient_exceptionThrown() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"T1234567j\");","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate predicate \u003d new PatientWithIcNumberPredicate(testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        ViewCommand command \u003d new ViewCommand(predicate, testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        boolean isExceptionThrown \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"            command.execute(model, command.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"        } catch (PatientWithFieldNotFoundException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"            isExceptionThrown \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"            assertEquals(e.getMessage(),","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"                MESSAGE_UNABLE_TO_FIND_PATIENT_WITH_FIELD + \"Ic Number : \" + testIcNumber1.value);","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(isExceptionThrown);","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"    public void toStringMethod() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"T1234567j\");","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate predicate \u003d new PatientWithIcNumberPredicate(testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(predicate, testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        String expected \u003d ViewCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expected, viewCommand.toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AaronJT1":91,"RiyaMehta2211":1}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_REQUIRED_COMMAND_NOT_FOUND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FULL_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_BOB;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.AddCommandParser.RELEVANT_PREFIXES;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.AddCommandParser.REQUIRED_PREFIXES;","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.AddCommandParser.createPatientFromPresentPrefixes;","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"    public void getPrefixesPresent_onlyRequiredPrefixesPresent_returnedCorrectPrefixList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] expectedPrefixesList \u003d REQUIRED_PREFIXES;","lastModifiedDate":"2023-10-25"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(NAME_DESC_AMY + IC_NUMBER_DESC_AMY,","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"            RELEVANT_PREFIXES); // Part of equivalence partition of required inputs","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] actualPrefixesList \u003d AddCommandParser.getPrefixesPresent(testArgMultimap);","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedPrefixesList.length, actualPrefixesList.length);","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c expectedPrefixesList.length; i++) {","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"            assertEquals(expectedPrefixesList[i], actualPrefixesList[i]);","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"    public void getPrefixesPresent_someOptionalPrefixesPresent_returnedCorrectPrefixList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        // only optional field phone is present (part of equivalence partition of required inputs + optional)","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d NAME_DESC_AMY + IC_NUMBER_DESC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] expectedPrefixesList \u003d new Prefix[]{PREFIX_NAME, PREFIX_IC_NUMBER, PREFIX_PHONE};","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(userInput, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] actualPrefixesList \u003d AddCommandParser.getPrefixesPresent(testArgMultimap);","lastModifiedDate":"2023-10-11"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedPrefixesList.length, actualPrefixesList.length);","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c expectedPrefixesList.length; i++) {","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"            assertEquals(expectedPrefixesList[i], actualPrefixesList[i]);","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"    public void getPrefixesPresent_allPrefixesPresent_returnedCorrectPrefixList() {","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] expectedPrefixesList \u003d new Prefix[]{PREFIX_NAME, PREFIX_IC_NUMBER, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"thienmy0"},"content":"            PREFIX_GENDER, PREFIX_BIRTHDAY, PREFIX_ADDRESS, PREFIX_PRIORITY, PREFIX_TAG};","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(FULL_DESC_BOB, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] actualPrefixesList \u003d AddCommandParser.getPrefixesPresent(testArgMultimap);","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedPrefixesList.length, actualPrefixesList.length);","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"        for (int i \u003d 0; i \u003c expectedPrefixesList.length; i++) {","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"            assertEquals(expectedPrefixesList[i], actualPrefixesList[i]);","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"    public void createPatient_allPrefixesPresent_correctPatientCreated() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(FULL_DESC_BOB, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"AaronJT1"},"content":"        Patient actualPatient \u003d AddCommandParser.createPatient(testArgMultimap, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedPatient, actualPatient);","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"AaronJT1"},"content":"    public void createPatient_onlyRequiredPrefixesPresent_correctPatientCreated() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).withDefaultValues().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"AaronJT1"},"content":"            .withIcNumber(VALID_IC_NUMBER_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":150,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(NAME_DESC_BOB + IC_NUMBER_DESC_BOB,","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"AaronJT1"},"content":"            RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"        Patient actualPatient \u003d AddCommandParser.createPatient(testArgMultimap, REQUIRED_PREFIXES);","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedPatient, actualPatient);","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"AaronJT1"},"content":"    public void createPatient_someOptionalPrefixesPresent_correctPatientCreated() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).withDefaultValues().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"AaronJT1"},"content":"            .withIcNumber(VALID_IC_NUMBER_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":163,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-25"},{"lineNumber":165,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + IC_NUMBER_DESC_BOB + EMAIL_DESC_BOB, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-25"},{"lineNumber":166,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"AaronJT1"},"content":"        Patient actualPatient \u003d AddCommandParser.createPatient(testArgMultimap,","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"AaronJT1"},"content":"            new Prefix[]{PREFIX_NAME, PREFIX_IC_NUMBER, PREFIX_EMAIL});","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedPatient, actualPatient);","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"AaronJT1"},"content":"    public void createPatientFromPresentPrefixes_allPrefixesPresent_correctPatientCreated() throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":175,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(FULL_DESC_BOB, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"AaronJT1"},"content":"        tags.add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"AaronJT1"},"content":"        tags.add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"        Patient actualPatient \u003d createPatientFromPresentPrefixes(new Name(VALID_NAME_BOB), new Phone(VALID_PHONE_BOB),","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"AaronJT1"},"content":"            new Email(VALID_EMAIL_BOB), new Gender(VALID_GENDER_BOB), new IcNumber(VALID_IC_NUMBER_BOB),","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"thienmy0"},"content":"            new Birthday(VALID_BIRTHDAY_BOB), new Address(VALID_ADDRESS_BOB), new Priority(VALID_PRIORITY_BOB), tags,","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"thienmy0"},"content":"            testArgMultimap, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedPatient, actualPatient);","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"    public void createPatientFromPresentPrefixes_onlyRequiredFieldsPresent_correctPatientCreated()","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"AaronJT1"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"AaronJT1"},"content":"        // expectedPatient only have Name field, others default value","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withDefaultValues().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"AaronJT1"},"content":"            .withIcNumber(VALID_IC_NUMBER_AMY).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(NAME_DESC_AMY + IC_NUMBER_DESC_AMY,","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"AaronJT1"},"content":"            RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"AaronJT1"},"content":"        // all optional fields have default value","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"AaronJT1"},"content":"        Patient actualPatient \u003d createPatientFromPresentPrefixes(new Name(VALID_NAME_AMY),","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"AaronJT1"},"content":"            new Phone(Phone.getDefaultPhone()), new Email(Email.getDefaultEmail()),","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"AaronJT1"},"content":"            new Gender(Gender.getDefaultGender()), new IcNumber(VALID_IC_NUMBER_AMY),","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"thienmy0"},"content":"            new Birthday(Birthday.getDefaultBirthday()), new Address(Address.getDefaultAddress()),","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"thienmy0"},"content":"            new Priority(Priority.getDefaultPriority()), new HashSet\u003c\u003e(), testArgMultimap, REQUIRED_PREFIXES);","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedPatient, actualPatient);","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"AaronJT1"},"content":"    public void createPatientFromPresentPrefixes_someOptionalFieldsPresent_correctPatientCreated()","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"AaronJT1"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":215,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":216,"author":{"gitId":"AaronJT1"},"content":"        // expectedPatient only have Name field and Phone fields","lastModifiedDate":"2023-10-19"},{"lineNumber":217,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withDefaultValues().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"AaronJT1"},"content":"            .withIcNumber(VALID_IC_NUMBER_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":219,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":220,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-10-25"},{"lineNumber":221,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_AMY + IC_NUMBER_DESC_AMY + PHONE_DESC_AMY, RELEVANT_PREFIXES);","lastModifiedDate":"2023-10-25"},{"lineNumber":222,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] prefixesPresent \u003d {PREFIX_NAME, PREFIX_PHONE};","lastModifiedDate":"2023-10-19"},{"lineNumber":224,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"AaronJT1"},"content":"        // all optional fields have default value except Phone","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"AaronJT1"},"content":"        Patient actualPatient \u003d createPatientFromPresentPrefixes(new Name(VALID_NAME_AMY),","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"AaronJT1"},"content":"            new Phone(Phone.getDefaultPhone()), new Email(Email.getDefaultEmail()),","lastModifiedDate":"2023-10-19"},{"lineNumber":228,"author":{"gitId":"AaronJT1"},"content":"            new Gender(Gender.getDefaultGender()), new IcNumber(VALID_IC_NUMBER_AMY),","lastModifiedDate":"2023-10-25"},{"lineNumber":229,"author":{"gitId":"thienmy0"},"content":"            new Birthday(Birthday.getDefaultBirthday()), new Address(Address.getDefaultAddress()),","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"thienmy0"},"content":"            new Priority(Priority.getDefaultPriority()), new HashSet\u003c\u003e(), testArgMultimap, prefixesPresent);","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedPatient, actualPatient);","lastModifiedDate":"2023-10-19"},{"lineNumber":232,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":233,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":237,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":238,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":241,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + FULL_DESC_BOB, new AddCommand(expectedPatient));","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":245,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatientMultipleTags \u003d new PatientBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":247,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, FULL_DESC_BOB, new AddCommand(expectedPatientMultipleTags));","lastModifiedDate":"2023-10-19"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":250,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":252,"author":{"gitId":"AaronJT1"},"content":"    public void parse_requiredFieldPresent_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":253,"author":{"gitId":"AaronJT1"},"content":"        // Required field Name present while optional fields missing, follows heuristic on each valid input being in","lastModifiedDate":"2023-11-08"},{"lineNumber":254,"author":{"gitId":"AaronJT1"},"content":"        // positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":255,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(AMY).withDefaultValues().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"AaronJT1"},"content":"            .withIcNumber(VALID_IC_NUMBER_AMY).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":258,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + IC_NUMBER_DESC_AMY, new AddCommand(expectedPatient));","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":262,"author":{"gitId":"AaronJT1"},"content":"    public void parse_emptyUserString_failure() {","lastModifiedDate":"2023-10-25"},{"lineNumber":263,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":265,"author":{"gitId":"AaronJT1"},"content":"        // test empty","lastModifiedDate":"2023-11-08"},{"lineNumber":266,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":268,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2023-10-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":271,"author":{"gitId":"AaronJT1"},"content":"        // Required field Name missing while optional fields present","lastModifiedDate":"2023-10-12"},{"lineNumber":272,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d String.format(MESSAGE_REQUIRED_COMMAND_NOT_FOUND_FORMAT, Arrays.toString(REQUIRED_PREFIXES));","lastModifiedDate":"2023-10-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":275,"author":{"gitId":"AaronJT1"},"content":"            PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":276,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"AaronJT1"},"content":"        // Required field IC Number missing while optional fields present","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d String.format(MESSAGE_REQUIRED_COMMAND_NOT_FOUND_FORMAT, Arrays.toString(REQUIRED_PREFIXES));","lastModifiedDate":"2023-10-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":281,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-25"},{"lineNumber":282,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":283,"author":{"gitId":"AaronJT1"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":287,"author":{"gitId":"AaronJT1"},"content":"    public void parse_requiredFieldPrefixMissing_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":288,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":291,"author":{"gitId":"AaronJT1"},"content":"        // missing Name prefix","lastModifiedDate":"2023-10-25"},{"lineNumber":292,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":293,"author":{"gitId":"AaronJT1"},"content":"            VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":294,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":296,"author":{"gitId":"AaronJT1"},"content":"        // missing Ic Number prefix","lastModifiedDate":"2023-10-25"},{"lineNumber":297,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":298,"author":{"gitId":"AaronJT1"},"content":"            VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + VALID_IC_NUMBER_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":299,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":300,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":302,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":303,"author":{"gitId":"AaronJT1"},"content":"    public void parse_optionalFieldMissing_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":304,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":305,"author":{"gitId":"AaronJT1"},"content":"        // optional field Phone number missing (ie default phone number used)","lastModifiedDate":"2023-10-12"},{"lineNumber":306,"author":{"gitId":"AaronJT1"},"content":"        Patient expectedPatient \u003d new PatientBuilder(BOB).withPhone(Phone.getDefaultPhone()).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":308,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":309,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":310,"author":{"gitId":"thienmy0"},"content":"                + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":312,"author":{"gitId":"AaronJT1"},"content":"        // optional field Email missing (ie default email used)","lastModifiedDate":"2023-10-12"},{"lineNumber":313,"author":{"gitId":"AaronJT1"},"content":"        expectedPatient \u003d new PatientBuilder(BOB).withEmail(Email.getDefaultEmail()).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":315,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":316,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":317,"author":{"gitId":"thienmy0"},"content":"                + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":320,"author":{"gitId":"AaronJT1"},"content":"        // optional field address missing (ie default gender used)","lastModifiedDate":"2023-10-19"},{"lineNumber":321,"author":{"gitId":"AaronJT1"},"content":"        expectedPatient \u003d new PatientBuilder(BOB).withGender(Gender.getDefaultGender()).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":322,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":323,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":324,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + EMAIL_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":325,"author":{"gitId":"thienmy0"},"content":"                + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":327,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":328,"author":{"gitId":"AaronJT1"},"content":"        // optional field address missing (ie default birthday used)","lastModifiedDate":"2023-10-19"},{"lineNumber":329,"author":{"gitId":"AaronJT1"},"content":"        expectedPatient \u003d new PatientBuilder(BOB).withBirthday(Birthday.getDefaultBirthday()).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":330,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":331,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":332,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + EMAIL_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":333,"author":{"gitId":"thienmy0"},"content":"                + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":335,"author":{"gitId":"AaronJT1"},"content":"        // optional field address missing (ie default address used)","lastModifiedDate":"2023-10-12"},{"lineNumber":336,"author":{"gitId":"AaronJT1"},"content":"        expectedPatient \u003d new PatientBuilder(BOB).withAddress(Address.getDefaultAddress()).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":337,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":338,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":339,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + EMAIL_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":340,"author":{"gitId":"thienmy0"},"content":"                + PRIORITY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-10-31"},{"lineNumber":341,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"thienmy0"},"content":"        // optional field priority missing (ie default priority used)","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"thienmy0"},"content":"        expectedPatient \u003d new PatientBuilder(BOB).withPriority(Priority.getDefaultPriority()).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":344,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":345,"author":{"gitId":"thienmy0"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-31"},{"lineNumber":346,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + EMAIL_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-11-08"},{"lineNumber":347,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPatient));","lastModifiedDate":"2023-11-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":350,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":352,"author":{"gitId":"AaronJT1"},"content":"    public void parse_duplicatePrefixes_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":353,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":354,"author":{"gitId":"AaronJT1"},"content":"        // duplicate name prefixes","lastModifiedDate":"2023-10-12"},{"lineNumber":355,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateNamePrefixes \u003d new Prefix[]{new Prefix(\"n/\"), new Prefix(\"n/\")};","lastModifiedDate":"2023-10-12"},{"lineNumber":356,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateNamePrefixes);","lastModifiedDate":"2023-10-12"},{"lineNumber":357,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":358,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + NAME_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":359,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":361,"author":{"gitId":"AaronJT1"},"content":"        // duplicate phone prefixes","lastModifiedDate":"2023-10-12"},{"lineNumber":362,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicatePhonePrefixes \u003d new Prefix[]{new Prefix(\"p/\"), new Prefix(\"p/\")};","lastModifiedDate":"2023-10-12"},{"lineNumber":363,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicatePhonePrefixes);","lastModifiedDate":"2023-10-12"},{"lineNumber":364,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":365,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + PHONE_DESC_AMY + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":366,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":368,"author":{"gitId":"AaronJT1"},"content":"        // duplicate email prefixes","lastModifiedDate":"2023-10-12"},{"lineNumber":369,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateEmailPrefixes \u003d new Prefix[]{new Prefix(\"e/\"), new Prefix(\"e/\")};","lastModifiedDate":"2023-10-12"},{"lineNumber":370,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateEmailPrefixes);","lastModifiedDate":"2023-10-12"},{"lineNumber":371,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":372,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + EMAIL_DESC_AMY + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":373,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":375,"author":{"gitId":"AaronJT1"},"content":"        // duplicate gender prefixes","lastModifiedDate":"2023-10-19"},{"lineNumber":376,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateGenderPrefixes \u003d new Prefix[]{new Prefix(\"g/\"), new Prefix(\"g/\")};","lastModifiedDate":"2023-10-19"},{"lineNumber":377,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateGenderPrefixes);","lastModifiedDate":"2023-10-19"},{"lineNumber":378,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":379,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + GENDER_DESC_AMY + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":380,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":381,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":382,"author":{"gitId":"AaronJT1"},"content":"        // duplicate icNumber prefixes","lastModifiedDate":"2023-10-19"},{"lineNumber":383,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateIcNumberPrefixes \u003d new Prefix[]{new Prefix(\"i/\"), new Prefix(\"i/\")};","lastModifiedDate":"2023-10-19"},{"lineNumber":384,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateIcNumberPrefixes);","lastModifiedDate":"2023-10-19"},{"lineNumber":385,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":386,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + IC_NUMBER_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":387,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":389,"author":{"gitId":"AaronJT1"},"content":"        // duplicate birthday prefixes","lastModifiedDate":"2023-10-19"},{"lineNumber":390,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateBirthdayPrefixes \u003d new Prefix[]{new Prefix(\"b/\"), new Prefix(\"b/\")};","lastModifiedDate":"2023-10-19"},{"lineNumber":391,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateBirthdayPrefixes);","lastModifiedDate":"2023-10-19"},{"lineNumber":392,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":393,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":394,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":396,"author":{"gitId":"AaronJT1"},"content":"        // duplicate address prefixes","lastModifiedDate":"2023-10-12"},{"lineNumber":397,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateAddressPrefixes \u003d new Prefix[]{new Prefix(\"a/\"), new Prefix(\"a/\")};","lastModifiedDate":"2023-10-12"},{"lineNumber":398,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateAddressPrefixes);","lastModifiedDate":"2023-10-12"},{"lineNumber":399,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-12"},{"lineNumber":400,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":401,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + ADDRESS_DESC_AMY + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":405,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":407,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":409,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-11"},{"lineNumber":410,"author":{"gitId":"AaronJT1"},"content":"            INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":411,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":414,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-11"},{"lineNumber":415,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":416,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":419,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-11"},{"lineNumber":420,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":421,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":422,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":423,"author":{"gitId":"AaronJT1"},"content":"        // invalid gender","lastModifiedDate":"2023-10-19"},{"lineNumber":424,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":425,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_GENDER_DESC + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":426,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-25"},{"lineNumber":427,"author":{"gitId":"AaronJT1"},"content":"            Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":428,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":429,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":430,"author":{"gitId":"AaronJT1"},"content":"        // invalid birthday","lastModifiedDate":"2023-10-19"},{"lineNumber":431,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-19"},{"lineNumber":432,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB","lastModifiedDate":"2023-10-25"},{"lineNumber":433,"author":{"gitId":"AaronJT1"},"content":"                + INVALID_BIRTHDAY_DESC + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-19"},{"lineNumber":434,"author":{"gitId":"AaronJT1"},"content":"            Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":437,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-11"},{"lineNumber":438,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":439,"author":{"gitId":"AaronJT1"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":442,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-11"},{"lineNumber":443,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":444,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":447,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-25"},{"lineNumber":448,"author":{"gitId":"AaronJT1"},"content":"            INVALID_NAME_DESC + IC_NUMBER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-25"},{"lineNumber":449,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":452,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-11"},{"lineNumber":453,"author":{"gitId":"AaronJT1"},"content":"            PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-10-11"},{"lineNumber":454,"author":{"gitId":"AaronJT1"},"content":"                + TAG_DESC_FRIEND, String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-11"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":456,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"AaronJT1":329,"thienmy0":21,"-":106}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientUtil;","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PatientUtil.getAddCommand(AMY));","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(new AddCommand(AMY), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + \"i/T0032415E\");","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(new DeleteCommand(ALICE.getIcNumber()), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder(patient).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" i/\"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"                + patient.getIcNumber().toString() + \" \" + PatientUtil.getEditPatientDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"        assertEquals(new EditCommand(patient.getIcNumber(), descriptor), command);","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"AaronJT1":9,"RiyaMehta2211":9,"-":84}},{"path":"src/test/java/seedu/address/logic/parser/AssignCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_IC_NUMBER_DESC;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNED_DEPARTMENT_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_AMY;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.AssignedDepartment;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"public class AssignCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"            AssignCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    private final AssignCommandParser parser \u003d new AssignCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    public void parse_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        // empty string","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"        // whitespaces only","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"      \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        // no IC value specified","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"i/ d/cardiology\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"        // no IC prefix","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, VALID_IC_NUMBER_AMY + \" d/\"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"                + VALID_ASSIGNED_DEPARTMENT_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        // no department value specified","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"i/\" + VALID_IC_NUMBER_AMY + \" d/\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        // no department prefix","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"i/\" + VALID_IC_NUMBER_AMY","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"                + VALID_ASSIGNED_DEPARTMENT_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        // only ic number present","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"i/\" + VALID_IC_NUMBER_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        //only department present","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"d/cardiology\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"    public void parse_duplicatePrefixes_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"        // duplicate IC Number","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        Prefix[] duplicateIcNumberPrefixes \u003d new Prefix[]{new Prefix(\"i/\"), new Prefix(\"i/\")};","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        String expectedMessageIC \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateIcNumberPrefixes);","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, IC_NUMBER_DESC_BOB + IC_NUMBER_DESC_AMY + \" d/cardiology\",","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"                expectedMessageIC);","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"        // duplicate department","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        Prefix[] duplicateDepartmentPrefixes \u003d new Prefix[]{new Prefix(\"d/\"), new Prefix(\"d/\")};","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"        String expectedMessageDepartment \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateDepartmentPrefixes);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, IC_NUMBER_DESC_BOB + \" d/cardiology\" + \" d/Endocrinology\",","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"                expectedMessageDepartment);","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"        // invalid ic followed by valid department","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, INVALID_IC_NUMBER_DESC + \" d/Cardiology\", IcNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"        // valid ic followed by invalid department","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + \" d/!adasfd\",","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"                AssignedDepartment.MESSAGE_CONSTRAINTS); // invalid format","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + \" d/paediatrics\",","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"                AssignedDepartment.MESSAGE_CONSTRAINTS); // department does not exist","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"    public void parse_allPrefixesPresent_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"        String department \u003d \"cardiology\";","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"        String userInput1 \u003d IC_NUMBER_DESC_AMY + \" d/cardiology\"; // ic followed by department","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        String userInput2 \u003d \" d/cardiology\" + IC_NUMBER_DESC_AMY; // department followed by ic","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"        AssignCommand assignCommand \u003d new AssignCommand(new IcNumber(VALID_IC_NUMBER_AMY),","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"                new AssignedDepartment(department));","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"        assertParseSuccess(parser, userInput1, assignCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"        assertParseSuccess(parser, userInput2, assignCommand);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"AaronJT1":13,"wujy28":89}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        } catch (ParseException | PatientWithFieldNotFoundException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        } catch (ParseException | PatientWithFieldNotFoundException pe) {","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"AaronJT1":3,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    public void parse_duplicatePrefixes_failure() {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateIcNumberPrefixes \u003d new Prefix[]{new Prefix(\"i/\"), new Prefix(\"i/\")};","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateIcNumberPrefixes);","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, IC_NUMBER_DESC_BOB + IC_NUMBER_DESC_AMY, expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, IC_NUMBER_DESC_AMY, new DeleteCommand(AMY.getIcNumber()));","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"    public void parse_emptyString_throwsParseException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        // empty user string","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \" \", expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        // invalid argument without any prefix","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, VALID_IC_NUMBER_AMY,","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        // invalid argument","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \"random string\",","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"AaronJT1":34,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.AddCommandParser.RELEVANT_PREFIXES;","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.EditCommandParser.createEditPatientDescriptor;","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.TypicalPatients.CARL;","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-06"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"        EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"        // have prefix, no IC value specified","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"RiyaMehta2211"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"RiyaMehta2211"},"content":"        assertParseFailure(parser, \"i/\", expectedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        // no prefix, have IC value","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, VALID_IC_NUMBER_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"        // empty string","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"        //empty string (space)","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \"    \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"    public void parse_duplicatePrefixes_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"        // duplicate phone prefixes","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicatePhonePrefixes \u003d new Prefix[]{new Prefix(\"p/\"), new Prefix(\"p/\")};","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicatePhonePrefixes);","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"            PHONE_DESC_BOB + PHONE_DESC_AMY + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + PRIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"        // duplicate email prefixes","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateEmailPrefixes \u003d new Prefix[]{new Prefix(\"e/\"), new Prefix(\"e/\")};","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateEmailPrefixes);","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"            PHONE_DESC_BOB + EMAIL_DESC_BOB + EMAIL_DESC_AMY + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + PRIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"        // duplicate gender prefixes","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateGenderPrefixes \u003d new Prefix[]{new Prefix(\"g/\"), new Prefix(\"g/\")};","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateGenderPrefixes);","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"            PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + GENDER_DESC_AMY + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + PRIORITY_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"        // duplicate icNumber prefixes","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateIcNumberPrefixes \u003d new Prefix[]{new Prefix(\"i/\"), new Prefix(\"i/\")};","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateIcNumberPrefixes);","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"            PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + IC_NUMBER_DESC_AMY","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + ADDRESS_DESC_BOB + PRIORITY_DESC_BOB,","lastModifiedDate":"2023-11-01"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"            expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"        // duplicate birthday prefixes","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateBirthdayPrefixes \u003d new Prefix[]{new Prefix(\"b/\"), new Prefix(\"b/\")};","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateBirthdayPrefixes);","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"            PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"AaronJT1"},"content":"                + BIRTHDAY_DESC_AMY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + ADDRESS_DESC_BOB + PRIORITY_DESC_BOB,","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"AaronJT1"},"content":"            expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"        // duplicate address prefixes","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateAddressPrefixes \u003d new Prefix[]{new Prefix(\"a/\"), new Prefix(\"a/\")};","lastModifiedDate":"2023-11-01"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateAddressPrefixes);","lastModifiedDate":"2023-11-01"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"AaronJT1"},"content":"            PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-11-01"},{"lineNumber":142,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + ADDRESS_DESC_AMY + PRIORITY_DESC_BOB,","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"AaronJT1"},"content":"            expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"        // duplicate priority prefixes","lastModifiedDate":"2023-11-01"},{"lineNumber":146,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicatePriorityPrefixes \u003d new Prefix[]{new Prefix(\"pr/\"), new Prefix(\"pr/\")};","lastModifiedDate":"2023-11-01"},{"lineNumber":147,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicatePriorityPrefixes);","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-01"},{"lineNumber":149,"author":{"gitId":"AaronJT1"},"content":"            PHONE_DESC_BOB + EMAIL_DESC_BOB + GENDER_DESC_BOB + IC_NUMBER_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + PRIORITY_DESC_BOB + PRIORITY_DESC_AMY,","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"            expectedMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"RiyaMehta2211"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"RiyaMehta2211"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"RiyaMehta2211"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + INVALID_GENDER_DESC, Gender.MESSAGE_CONSTRAINTS); // invalid gender","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + INVALID_BIRTHDAY_DESC, Birthday.MESSAGE_CONSTRAINTS); // invalid","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"AaronJT1"},"content":"        // birthday","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"AaronJT1"},"content":"            Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + INVALID_PRIORITY_DESC, Priority.MESSAGE_CONSTRAINTS); // invalid","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"AaronJT1"},"content":"        // priority","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"RiyaMehta2211"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"RiyaMehta2211"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Patient} being edited,","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY,","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"AaronJT1"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-11-01"},{"lineNumber":177,"author":{"gitId":"AaronJT1"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \" i/T1234567J\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND,","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"            Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"AaronJT1"},"content":"            \" i/T1234567J\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"RiyaMehta2211"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":189,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber \u003d new IcNumber(VALID_IC_NUMBER_AMY);","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d","lastModifiedDate":"2023-10-06"},{"lineNumber":192,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_AMY + IC_NUMBER_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + GENDER_DESC_AMY + BIRTHDAY_DESC_AMY","lastModifiedDate":"2023-11-01"},{"lineNumber":193,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_AMY + PRIORITY_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor testEditPatientDescriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":196,"author":{"gitId":"AaronJT1"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":197,"author":{"gitId":"AaronJT1"},"content":"            .withGender(VALID_GENDER_AMY).withAddress(VALID_ADDRESS_AMY).withIcNumber(VALID_IC_NUMBER_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":198,"author":{"gitId":"AaronJT1"},"content":"            .withPriority(VALID_PRIORITY_AMY).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"AaronJT1"},"content":"        EditCommand expectedCommand \u003d new EditCommand(testIcNumber, testEditPatientDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":206,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":207,"author":{"gitId":"RiyaMehta2211"},"content":"        IcNumber targetIc \u003d AMY.getIcNumber();","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d IC_NUMBER_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"RiyaMehta2211"},"content":"            .withEmail(VALID_EMAIL_AMY).withIcNumber(VALID_IC_NUMBER_AMY).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":219,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"AaronJT1"},"content":"        IcNumber targetIc \u003d AMY.getIcNumber();","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d IC_NUMBER_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"AaronJT1"},"content":"        EditCommand.EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-06"},{"lineNumber":224,"author":{"gitId":"AaronJT1"},"content":"            .withIcNumber(VALID_IC_NUMBER_AMY).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d IC_NUMBER_DESC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"AaronJT1"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPhone(VALID_PHONE_AMY).withIcNumber(VALID_IC_NUMBER_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"AaronJT1"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d IC_NUMBER_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":237,"author":{"gitId":"AaronJT1"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withEmail(VALID_EMAIL_AMY).withIcNumber(VALID_IC_NUMBER_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"AaronJT1"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"AaronJT1"},"content":"        expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":241,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"AaronJT1"},"content":"        // gender","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d IC_NUMBER_DESC_AMY + GENDER_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"AaronJT1"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withGender(VALID_GENDER_AMY).withIcNumber(VALID_IC_NUMBER_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"AaronJT1"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"AaronJT1"},"content":"        expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":249,"author":{"gitId":"AaronJT1"},"content":"        // birthday","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d IC_NUMBER_DESC_AMY + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"AaronJT1"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"AaronJT1"},"content":"            .withIcNumber(VALID_IC_NUMBER_AMY).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"AaronJT1"},"content":"        expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":256,"author":{"gitId":"AaronJT1"},"content":"        // priority","lastModifiedDate":"2023-11-01"},{"lineNumber":257,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d IC_NUMBER_DESC_AMY + PRIORITY_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":258,"author":{"gitId":"AaronJT1"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"AaronJT1"},"content":"            .withIcNumber(VALID_IC_NUMBER_AMY).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":260,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d IC_NUMBER_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"AaronJT1"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).withIcNumber(VALID_IC_NUMBER_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"AaronJT1"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":268,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":273,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d IC_NUMBER_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-11-01"},{"lineNumber":274,"author":{"gitId":"AaronJT1"},"content":"        descriptor \u003d new EditPatientDescriptorBuilder().withTags(VALID_TAG_FRIEND).withIcNumber(targetIc.toString())","lastModifiedDate":"2023-11-01"},{"lineNumber":275,"author":{"gitId":"AaronJT1"},"content":"            .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":276,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"RiyaMehta2211"},"content":"        expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":283,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":286,"author":{"gitId":"RiyaMehta2211"},"content":"        IcNumber targetIc \u003d ALICE.getIcNumber();","lastModifiedDate":"2023-10-25"},{"lineNumber":287,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d IC_NUMBER_DESC_AMY + PHONE_DESC_BOB + INVALID_PHONE_DESC; //+PHONE_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":292,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d IC_NUMBER_DESC_AMY + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-11-01"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":296,"author":{"gitId":"RiyaMehta2211"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-28"},{"lineNumber":297,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":298,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":299,"author":{"gitId":"AaronJT1"},"content":"            IC_NUMBER_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_AMY","lastModifiedDate":"2023-11-01"},{"lineNumber":300,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-11-01"},{"lineNumber":301,"author":{"gitId":"AaronJT1"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-06"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":307,"author":{"gitId":"AaronJT1"},"content":"        userInput \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":308,"author":{"gitId":"AaronJT1"},"content":"            IC_NUMBER_DESC_AMY + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC + INVALID_PHONE_DESC","lastModifiedDate":"2023-11-01"},{"lineNumber":309,"author":{"gitId":"AaronJT1"},"content":"                + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-11-01"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":317,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":318,"author":{"gitId":"RiyaMehta2211"},"content":"        IcNumber targetIc \u003d CARL.getIcNumber();","lastModifiedDate":"2023-10-25"},{"lineNumber":319,"author":{"gitId":"RiyaMehta2211"},"content":"        String userInput \u003d \" i/\" + targetIc.toString() + TAG_EMPTY;","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":321,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":322,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor descriptor \u003d new EditPatientDescriptorBuilder().withTags()","lastModifiedDate":"2023-11-08"},{"lineNumber":323,"author":{"gitId":"AaronJT1"},"content":"            .withIcNumber(targetIc.toString()).build();","lastModifiedDate":"2023-11-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":325,"author":{"gitId":"RiyaMehta2211"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIc, descriptor);","lastModifiedDate":"2023-10-25"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":329,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":330,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":331,"author":{"gitId":"AaronJT1"},"content":"    public void createEditPatientDescriptor_oneFieldSpecific_success() throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":332,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":333,"author":{"gitId":"AaronJT1"},"content":"        // phone number specified","lastModifiedDate":"2023-11-01"},{"lineNumber":334,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d IC_NUMBER_DESC_BOB + PHONE_DESC_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":335,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":336,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(userInput, RELEVANT_PREFIXES);","lastModifiedDate":"2023-11-01"},{"lineNumber":337,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor expectedEditPatientDescriptor \u003d new EditPatientDescriptorBuilder().withPhone(","lastModifiedDate":"2023-11-01"},{"lineNumber":338,"author":{"gitId":"AaronJT1"},"content":"            VALID_PHONE_BOB).withIcNumber(VALID_IC_NUMBER_BOB).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":339,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor actualEditPatientDescriptor \u003d createEditPatientDescriptor(testArgMultimap);","lastModifiedDate":"2023-11-01"},{"lineNumber":340,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedEditPatientDescriptor, actualEditPatientDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":341,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":342,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":343,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":344,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":345,"author":{"gitId":"AaronJT1"},"content":"    public void createEditPatientDescriptor_someFieldsSpecific_success() throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":346,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":347,"author":{"gitId":"AaronJT1"},"content":"        // gender and email specified","lastModifiedDate":"2023-11-01"},{"lineNumber":348,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d IC_NUMBER_DESC_BOB + GENDER_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":349,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":350,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(userInput, RELEVANT_PREFIXES);","lastModifiedDate":"2023-11-01"},{"lineNumber":351,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":352,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor expectedEditPatientDescriptor \u003d new EditPatientDescriptorBuilder().withGender(","lastModifiedDate":"2023-11-01"},{"lineNumber":353,"author":{"gitId":"AaronJT1"},"content":"            VALID_GENDER_AMY).withEmail(VALID_EMAIL_AMY).withIcNumber(VALID_IC_NUMBER_BOB).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":354,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor actualEditPatientDescriptor \u003d createEditPatientDescriptor(testArgMultimap);","lastModifiedDate":"2023-11-01"},{"lineNumber":355,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedEditPatientDescriptor, actualEditPatientDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":356,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":357,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":358,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":359,"author":{"gitId":"AaronJT1"},"content":"    public void createEditPatientDescriptor_allFieldSpecific_success() throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":360,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":361,"author":{"gitId":"AaronJT1"},"content":"        String userInput \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":362,"author":{"gitId":"AaronJT1"},"content":"            NAME_DESC_AMY + IC_NUMBER_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + GENDER_DESC_AMY + BIRTHDAY_DESC_AMY","lastModifiedDate":"2023-11-01"},{"lineNumber":363,"author":{"gitId":"AaronJT1"},"content":"                + ADDRESS_DESC_AMY + PRIORITY_DESC_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":364,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(userInput, RELEVANT_PREFIXES);","lastModifiedDate":"2023-11-01"},{"lineNumber":365,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":366,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor expectedEditPatientDescriptor \u003d new EditPatientDescriptorBuilder().withName(","lastModifiedDate":"2023-11-01"},{"lineNumber":367,"author":{"gitId":"AaronJT1"},"content":"                VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":368,"author":{"gitId":"AaronJT1"},"content":"            .withGender(VALID_GENDER_AMY).withAddress(VALID_ADDRESS_AMY).withIcNumber(VALID_IC_NUMBER_AMY)","lastModifiedDate":"2023-11-01"},{"lineNumber":369,"author":{"gitId":"AaronJT1"},"content":"            .withPriority(VALID_PRIORITY_AMY).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":370,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":371,"author":{"gitId":"AaronJT1"},"content":"        EditPatientDescriptor actualEditPatientDescriptor \u003d createEditPatientDescriptor(testArgMultimap);","lastModifiedDate":"2023-11-01"},{"lineNumber":372,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedEditPatientDescriptor, actualEditPatientDescriptor);","lastModifiedDate":"2023-11-01"},{"lineNumber":373,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":374,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":375,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":376,"author":{"gitId":"AaronJT1"},"content":"    public void createEditPatientDescriptor_noFieldSpecific_failure() throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":377,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":378,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(IC_NUMBER_DESC_AMY, RELEVANT_PREFIXES);","lastModifiedDate":"2023-11-01"},{"lineNumber":379,"author":{"gitId":"AaronJT1"},"content":"        boolean isExceptionThrown \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":380,"author":{"gitId":"AaronJT1"},"content":"        try {","lastModifiedDate":"2023-11-01"},{"lineNumber":381,"author":{"gitId":"AaronJT1"},"content":"            createEditPatientDescriptor(testArgMultimap);","lastModifiedDate":"2023-11-01"},{"lineNumber":382,"author":{"gitId":"AaronJT1"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-01"},{"lineNumber":383,"author":{"gitId":"AaronJT1"},"content":"            isExceptionThrown \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":384,"author":{"gitId":"AaronJT1"},"content":"            assertEquals(e.getMessage(), EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-11-01"},{"lineNumber":385,"author":{"gitId":"AaronJT1"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":386,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(isExceptionThrown);","lastModifiedDate":"2023-11-01"},{"lineNumber":387,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":388,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"AaronJT1":216,"wujy28":27,"RiyaMehta2211":21,"-":124}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"AaronJT1":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"AaronJT1":4,"-":171}},{"path":"src/test/java/seedu/address/logic/parser/RecordCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DIAGNOSIS_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_BOB;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INITIAL_OBSERVATION_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TREATMENT_PLAN_DESC;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DIAGNOSIS_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INITIAL_OBSERVATION_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TREATMENT_PLAN_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"import seedu.address.logic.commands.RecordCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"public class RecordCommandParserTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    private final RecordCommandParser parser \u003d new RecordCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    public void parse_duplicatePrefixes_failure() {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        Prefix[] duplicateIcNumberPrefixes \u003d new Prefix[]{new Prefix(\"i/\"), new Prefix(\"i/\")};","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(duplicateIcNumberPrefixes);","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, IC_NUMBER_DESC_BOB + IC_NUMBER_DESC_AMY + INITIAL_OBSERVATION_DESC, expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"    public void parse_validSingleArgs_returnsRecordCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        // only initial observation present","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        RecordCommand.EditRecordDescriptor testEditRecordDescriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor.setInitialObservations(VALID_INITIAL_OBSERVATION_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, IC_NUMBER_DESC_AMY + INITIAL_OBSERVATION_DESC,","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"            new RecordCommand(AMY.getIcNumber(), testEditRecordDescriptor));","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        // only diagnosis present","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor.setDiagnosis(VALID_DIAGNOSIS_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, IC_NUMBER_DESC_AMY + DIAGNOSIS_DESC,","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"            new RecordCommand(AMY.getIcNumber(), testEditRecordDescriptor));","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        // only treatment plan present","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor.setTreatmentPlan(VALID_TREATMENT_PLAN_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, IC_NUMBER_DESC_AMY + TREATMENT_PLAN_DESC,","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"            new RecordCommand(AMY.getIcNumber(), testEditRecordDescriptor));","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"    public void parse_validFullArgs_returnsRecordCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        RecordCommand.EditRecordDescriptor testEditRecordDescriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor.setInitialObservations(VALID_INITIAL_OBSERVATION_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor.setDiagnosis(VALID_DIAGNOSIS_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        testEditRecordDescriptor.setTreatmentPlan(VALID_TREATMENT_PLAN_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, IC_NUMBER_DESC_AMY + INITIAL_OBSERVATION_DESC + DIAGNOSIS_DESC + TREATMENT_PLAN_DESC,","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"            new RecordCommand(AMY.getIcNumber(), testEditRecordDescriptor));","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"    public void parse_emptyString_throwsParseException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        // empty user string","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RecordCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RecordCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \" \", expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"        // invalid argument without any prefix","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, VALID_IC_NUMBER_AMY,","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"        // invalid argument","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \"random string\",","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        // no argument given","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, VALID_IC_NUMBER_AMY,","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"AaronJT1":86,"thienmy0":5}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"n a m e\",","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE)); // spaces between letters","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"4g3\",","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE)); // weird characters","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"birthday\",","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE)); // sort order does not exist","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"        assertParseFailure(parser, \"name jkasdfasdf\",","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE)); // extra characters","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"        SortCommand expectedCommand \u003d new SortCommand(SortCommand.SortOrder.NAME);","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"        assertParseSuccess(parser, \"name\", expectedCommand); // same case","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        assertParseSuccess(parser, \"NAME\", expectedCommand); // all caps","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        assertParseSuccess(parser, \"nAmE\", expectedCommand); // weird case","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        assertParseSuccess(parser, \"   name    \", expectedCommand); // leading and trailing whitespaces","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"wujy28":43}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.IC_NUMBER_DESC_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.parser.ViewCommandParser.checkIcNumberPrefixPresent;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.PatientWithIcNumberPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    private final ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"    public void parse_icNumberValueAbsent_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, GENDER_DESC_AMY,","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"    public void parse_icNumberValuePresent_returnsViewCommand() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber \u003d new IcNumber(VALID_IC_NUMBER_AMY);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        ViewCommand expectedViewCommand \u003d new ViewCommand(new PatientWithIcNumberPredicate(testIcNumber), testIcNumber);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"        assertParseSuccess(parser, IC_NUMBER_DESC_AMY, expectedViewCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    public void parse_duplicateIcNumberValuePresent_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        assertParseFailure(parser, IC_NUMBER_DESC_AMY + IC_NUMBER_DESC_BOB,","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_IC_NUMBER));","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"    public void checkIcNumberPrefixPresent_icNumberValuePresent_returnTrue() {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(IC_NUMBER_DESC_AMY, PREFIX_IC_NUMBER);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(checkIcNumberPrefixPresent(testArgMultimap));","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"    public void checkIcNumberPrefixPresent_icNumberValueAbsent_returnFalse() {","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"        ArgumentMultimap testArgMultimap \u003d ArgumentTokenizer.tokenize(ADDRESS_DESC_AMY, PREFIX_IC_NUMBER);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(checkIcNumberPrefixPresent(testArgMultimap));","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"AaronJT1":71}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPatientList());","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"    public void resetData_withDuplicatePatients_throwsDuplicatePatientException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        // Two patients with the same identity fields","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e newPatients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"        List\u003cRecord\u003e newRecords \u003d Arrays.asList(new Record());","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPatients, newRecords);","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPatient(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"    public void hasPatient_patientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(addressBook.hasPatient(ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"    public void hasPatient_patientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(addressBook.hasPatient(ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"    public void hasPatient_patientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"        addressBook.addPatient(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(addressBook.hasPatient(editedAlice));","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"    public void getPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPatientList().remove(0));","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{patients\u003d\" + addressBook.getPatientList()","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"                + \", records\u003d\" + addressBook.getRecordList() + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"     * A stub ReadOnlyAddressBook whose patients list can violate interface constraints.","lastModifiedDate":"2023-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        private final ObservableList\u003cPatient\u003e patients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"        private final ObservableList\u003cRecord\u003e records \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"        AddressBookStub(Collection\u003cPatient\u003e patients, Collection\u003cRecord\u003e records) {","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"            this.patients.setAll(patients);","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"longnguyentan"},"content":"            this.records.setAll(records);","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"            return patients;","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"longnguyentan"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"longnguyentan"},"content":"        public ObservableList\u003cRecord\u003e getRecordList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"            return records;","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"AaronJT1":29,"thienmy0":2,"longnguyentan":10,"-":77}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"    public void hasPatient_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPatient(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"    public void hasPatient_patientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(modelManager.hasPatient(ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"    public void hasPatient_patientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"RiyaMehta2211"},"content":"        modelManager.addPatient(ALICE, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(modelManager.hasPatient(ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"    public void isPatientWithIcNumberPresent_patientWithIcNumberPresent_returnsTrue() {","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"RiyaMehta2211"},"content":"        modelManager.addPatient(ALICE, \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber \u003d new IcNumber(\"T0032415E\");","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(modelManager.isPatientWithIcNumberPresent(testIcNumber));","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"    public void getFilteredPatientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPatientList().remove(0));","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPatient(ALICE).withPatient(BENSON).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"        modelManager.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"AaronJT1"},"content":"        modelManager.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-10-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"AaronJT1":21,"RiyaMehta2211":2,"-":117}},{"path":"src/test/java/seedu/address/model/patient/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"AaronJT1":1,"-":55}},{"path":"src/test/java/seedu/address/model/patient/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"public class AgeTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Age((String) null));","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Age((Birthday) null));","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    public void constructor_invalidAge_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"        String invalidAge \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge));","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"        String negativeAge \u003d \"-1\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(negativeAge));","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    public void constructor_validInputs_constructedCorrectly() {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"        // valid age","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        String validAge0 \u003d \"0\";","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"        Age age1 \u003d new Age(validAge0);","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"        assertTrue(age1.value \u003d\u003d 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"        String validAge1 \u003d \"1\";","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"        Age age2 \u003d new Age(validAge1);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"        assertTrue(age2.value \u003d\u003d 1);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        // default birthday","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        Birthday defaultBday \u003d new Birthday(Birthday.getDefaultBirthday());","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        Age age3 \u003d new Age(defaultBday);","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        assertTrue(age3.value \u003d\u003d -1);","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"        // valid birthday","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"        Birthday validBday1 \u003d new Birthday(\"03/01/2003\");","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        Age age4 \u003d new Age(validBday1);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        int ageValueInt1 \u003d findAge(validBday1);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        assertTrue(age4.value \u003d\u003d ageValueInt1);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        // valid birthday","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"        Birthday validBday2 \u003d new Birthday(\"30/12/2000\");","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        Age age5 \u003d new Age(validBday2);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        int ageValueInt2 \u003d findAge(validBday2);","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        assertTrue(age5.value \u003d\u003d ageValueInt2);","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"    public void isValidAge() {","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"        // null age","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"        assertThrows(NullPointerException.class, () -\u003e Age.isValidAge(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"        // invalid ages","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Age.isValidAge(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Age.isValidAge(\" \")); // spaces only","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Age.isValidAge(\"-3\")); // negative number","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Age.isValidAge(\"age\")); // non-numeric","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Age.isValidAge(\"21y\")); // alphabets within digits","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Age.isValidAge(\"21.5\")); // characters within digits","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Age.isValidAge(\"2 1\")); // spaces within digits","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"thienmy0"},"content":"        // valid ages","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Age.isValidAge(\"0\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Age.isValidAge(\"43\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Age.isValidAge(\"99\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"thienmy0"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"        Age age1 \u003d new Age(\"68\");","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"        assertTrue(age1.equals(new Age(\"68\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"thienmy0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"        assertTrue(age1.equals(age1));","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"thienmy0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"        assertFalse(age1.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"thienmy0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"        assertFalse(age1.equals(5.0f));","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"thienmy0"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"        assertFalse(age1.equals(new Age(\"57\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"    public void testToString() {","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"        // string input","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"        Age age1 \u003d new Age(\"68\");","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"        String string1 \u003d age1.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"        assertEquals(\"68\", string1);","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"        // default Birthday","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"wujy28"},"content":"        Birthday defaultBday \u003d new Birthday(Birthday.getDefaultBirthday());","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"wujy28"},"content":"        Age age2 \u003d new Age(defaultBday);","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"wujy28"},"content":"        String string2 \u003d age2.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"wujy28"},"content":"        assertEquals(Age.getDefaultAgeString(), string2);","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"wujy28"},"content":"        // valid birthday","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"wujy28"},"content":"        Birthday validBday \u003d new Birthday(\"10/10/2003\");","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"wujy28"},"content":"        Age age3 \u003d new Age(validBday);","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"wujy28"},"content":"        Integer ageValue \u003d findAge(validBday);","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"wujy28"},"content":"        String expected \u003d ageValue.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"wujy28"},"content":"        String actual \u003d age3.toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"wujy28"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"wujy28"},"content":"    private Integer findAge(Birthday birthday) {","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"wujy28"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"wujy28"},"content":"        Long ageValueLong \u003d ChronoUnit.YEARS.between(birthday.value, today);","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"wujy28"},"content":"        return ageValueLong.intValue();","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"wujy28"},"content":"    public void testCompareTo() {","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"wujy28"},"content":"        Age age1 \u003d new Age(\"22\");","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"wujy28"},"content":"        // less than -\u003e returns -1","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"wujy28"},"content":"        assertEquals(-1, age1.compareTo(new Age(\"68\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"wujy28"},"content":"        // equal -\u003e returns 0","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"wujy28"},"content":"        assertEquals(0, age1.compareTo(new Age(\"22\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"wujy28"},"content":"        // more than -\u003e returns 1","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"wujy28"},"content":"        assertEquals(1, age1.compareTo(new Age(\"17\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wujy28":86,"thienmy0":53}},{"path":"src/test/java/seedu/address/model/patient/AssignedDepartmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"class AssignedDepartmentTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"    public void defaultConstructor_noArguments_createsADefaultAssignedDepartment() {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment test \u003d new AssignedDepartment();","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"        assertEquals(Department.DEFAULT, test.assignedDepartment);","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"    public void constructor_validInput_createsCorrectObject() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment test \u003d new AssignedDepartment(\"Emergency Department\");","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"        assertEquals(Department.EMERGENCY_DEPARTMENT, test.assignedDepartment);","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"wujy28"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AssignedDepartment(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"    public void constructor_invalidDepartment_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"        String invalidDepartment \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AssignedDepartment(invalidDepartment));","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"    void isValidDepartment() {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"        // null department","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        assertThrows(NullPointerException.class, () -\u003e AssignedDepartment.isValidDepartment(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        // invalid department","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\"-\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\"Cardiol*gy\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\" Orthopaedics\")); // first character is a space","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\"Orthopedics\")); // wrong spelling (American)","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\"Orthopaedic\")); // missing \u0027s\u0027 suffix","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\"Emergency  Department\")); // additional space","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\"Path ology\")); // additional space","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        assertFalse(AssignedDepartment.isValidDepartment(\"Operating Theatre\")); // department does not exist","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"        // valid department","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"wujy28"},"content":"        assertTrue(AssignedDepartment.isValidDepartment(\"Geriatric Medicine\")); // department exists","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        assertTrue(AssignedDepartment.isValidDepartment(\"general Surgery\")); // lower case for first word","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"wujy28"},"content":"        assertTrue(AssignedDepartment.isValidDepartment(\"intensive care unit\")); // lower case only","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"wujy28"},"content":"        assertTrue(AssignedDepartment.isValidDepartment(\"NEUROSURGERY\")); // all caps","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        assertTrue(AssignedDepartment.isValidDepartment(\"oNcoLOGy\")); // weird casing","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment assignedDepartment \u003d new AssignedDepartment(\"Endocrinology\");","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        assertTrue(assignedDepartment.equals(new AssignedDepartment(\"enDocrinology\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"        assertTrue(assignedDepartment.equals(assignedDepartment));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        assertFalse(assignedDepartment.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"        assertFalse(assignedDepartment.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"        assertFalse(assignedDepartment.equals(new AssignedDepartment(\"Immunology\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"wujy28"},"content":"    public void toString_differentObjects_stringReturnedIsCorrect() {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"wujy28"},"content":"        // assignedDepartment created with string\u0027s case matching Department\u0027s string","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment neurology \u003d new AssignedDepartment(\"Neurology\");","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"wujy28"},"content":"        assertEquals(\"Neurology\", neurology.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"wujy28"},"content":"        // assignedDepartment created with string\u0027s case different Department\u0027s string","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment radiology \u003d new AssignedDepartment(\"raDiOlogY\");","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"wujy28"},"content":"        assertEquals(\"Radiology\", radiology.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"wujy28"},"content":"    public void testCompareTo() {","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"wujy28"},"content":"        AssignedDepartment assignedDepartment \u003d new AssignedDepartment(\"Oncology\");","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"wujy28"},"content":"        // less than -\u003e returns -1","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"wujy28"},"content":"        assertEquals(-1, assignedDepartment.compareTo(new AssignedDepartment(\"Default\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"        // equal -\u003e returns 0","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"        assertEquals(0, assignedDepartment.compareTo(new AssignedDepartment(\"Oncology\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"wujy28"},"content":"        // more than -\u003e returns 1","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"wujy28"},"content":"        assertEquals(1, assignedDepartment.compareTo(new AssignedDepartment(\"Intensive Care Unit\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wujy28":105}},{"path":"src/test/java/seedu/address/model/patient/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"RiyaMehta2211"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"public class BirthdayTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"    public void constructor_invalidBirthdate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"        String invalidBirthdate \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Birthday(invalidBirthdate));","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"    public void isValidBirthdate() {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthday.isValidBirthdate(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        // invalid birthdates","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(Birthday.isValidBirthdate(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(Birthday.isValidBirthdate(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(Birthday.isValidBirthdate(\"22\")); // less than 8 numbers","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(Birthday.isValidBirthdate(\"january\")); // non-numeric","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(Birthday.isValidBirthdate(\"23071991\")); // not in the format of dd/mm/yyyy","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(Birthday.isValidBirthdate(\"22 /01 / 1997\")); // spaces within digits","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"        assertFalse(Birthday.isValidBirthdate(\"01/01/3000\")); // date in the future","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        // valid birthdates","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        assertTrue(Birthday.isValidBirthdate(\"21/01/1994\")); // dd/mm/yyyy format, a date in the past","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        assertTrue(Birthday.isValidBirthdate(\"20/01/1974\")); // dd/mm/yyyy format, a date in the past","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        assertTrue(Birthday.isValidBirthdate(LocalDate.now().format(Birthday.getFormatter()))); // the current date","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"RiyaMehta2211"},"content":"        Birthday birthday \u003d new Birthday(\"21/01/1990\");","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"RiyaMehta2211"},"content":"        assertTrue(birthday.equals(new Birthday(\"21/01/1990\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"RiyaMehta2211"},"content":"        assertTrue(birthday.equals(birthday));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(birthday.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(birthday.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"RiyaMehta2211"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(birthday.equals(new Birthday(\"23/01/2007\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wujy28":7,"RiyaMehta2211":56}},{"path":"src/test/java/seedu/address/model/patient/DepartmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wujy28"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"class DepartmentTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"    public void findDepartment() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"        // null input","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, Department.findDepartment(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"        // input with invalid department","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, Department.findDepartment(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, Department.findDepartment(\" \")); // space string","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, Department.findDepartment(\"operating threatre\")); // department does not exist","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, Department.findDepartment(\"hematology\")); // wrongly spelled department","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, Department.findDepartment(\" neurology\")); // wrong string format","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"wujy28"},"content":"        assertEquals(null, Department.findDepartment(\"Intensive  Care Unit\")); // additional space","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"wujy28"},"content":"        // input with valid department","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        assertEquals(Department.DEFAULT, Department.findDepartment(\"Default\")); // default","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"        assertEquals(Department.UROLOGY, Department.findDepartment(\"Urology\")); // valid department","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"        assertEquals(Department.NEUROLOGY, Department.findDepartment(\"NEUROLOGY\")); // all caps","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"        assertEquals(Department.ANAESTHESIOLOGY, Department.findDepartment(\"aNaesThesIolOgY\")); // weird case","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"    public void isValidDepartment() {","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"        // null input","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"        assertFalse(Department.isValidDepartment(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"wujy28"},"content":"        // invalid department","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"wujy28"},"content":"        assertFalse(Department.isValidDepartment(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"wujy28"},"content":"        assertFalse(Department.isValidDepartment(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"wujy28"},"content":"        assertFalse(Department.isValidDepartment(\"Psych1atry\")); // name does not match","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"wujy28"},"content":"        assertFalse(Department.isValidDepartment(\" Plastic Surgery\")); // first character is a space","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"wujy28"},"content":"        assertFalse(Department.isValidDepartment(\"Anesthesiology\")); // wrong spelling (American)","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"wujy28"},"content":"        assertFalse(Department.isValidDepartment(\"Palliative  Medicine\")); // additional space","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        assertFalse(Department.isValidDepartment(\"Gynae cology\")); // additional space","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"wujy28"},"content":"        assertFalse(Department.isValidDepartment(\"Burn Unit\")); // department does not exist","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"        // valid department","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Department.isValidDepartment(\"Default\")); // default department","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"wujy28"},"content":"        assertTrue(Department.isValidDepartment(\"Palliative Medicine\")); // department exists","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        assertTrue(Department.isValidDepartment(\"emergency department\")); // lower case only","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"wujy28"},"content":"        assertTrue(Department.isValidDepartment(\"INFECTIOUS DISEASES\")); // all caps","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"wujy28"},"content":"        assertTrue(Department.isValidDepartment(\"neUroSURGerY\")); // weird casing","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"wujy28"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wujy28":51,"thienmy0":2}},{"path":"src/test/java/seedu/address/model/patient/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"AaronJT1":1,"-":87}},{"path":"src/test/java/seedu/address/model/patient/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"public class GenderTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"        String invalidGender \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    public void isValidGender() {","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"        // null gender","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        // invalid gender","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Gender.isValidGender(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Gender.isValidGender(\"male*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Gender.isValidGender(\"non-binary\")); // not in Genders enum","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"        // valid gender","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Gender.isValidGender(\"male\")); // lowercase only","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Gender.isValidGender(\"female\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Gender.isValidGender(\"other\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Gender.isValidGender(\"MALE\")); // uppercase only","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Gender.isValidGender(\"FEMALE\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Gender.isValidGender(\"OTHER\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Gender.isValidGender(\"MaLe\")); // mix of lower and uppercase","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Gender.isValidGender(\"fEmAlE\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Gender.isValidGender(\"OtHeR\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"        Gender gender \u003d new Gender(\"female\");","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"        assertTrue(gender.equals(new Gender(\"FEMALE\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"        assertTrue(gender.equals(gender));","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"        assertFalse(gender.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"        assertFalse(gender.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"        assertFalse(gender.equals(new Gender(\"male\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"thienmy0":64}},{"path":"src/test/java/seedu/address/model/patient/IcNumberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RiyaMehta2211"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"RiyaMehta2211"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"RiyaMehta2211"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"RiyaMehta2211"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"RiyaMehta2211"},"content":"public class IcNumberTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"RiyaMehta2211"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(NullPointerException.class, () -\u003e new IcNumber(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"RiyaMehta2211"},"content":"    public void constructor_invalidIC_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"RiyaMehta2211"},"content":"        String invalidIC \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new IcNumber(invalidIC));","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"RiyaMehta2211"},"content":"    public void isValidIC() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"RiyaMehta2211"},"content":"        assertThrows(NullPointerException.class, () -\u003e IcNumber.isValidIC(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"RiyaMehta2211"},"content":"        // invalid ICs","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(IcNumber.isValidIC(\"\")); // empty string","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(IcNumber.isValidIC(\" \")); // spaces only","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(IcNumber.isValidIC(\"22\")); // less than 7 numbers, no alphabets","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(IcNumber.isValidIC(\"january\")); // non-numeric","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        assertFalse(IcNumber.isValidIC(\"2307991\")); /* not in the format of AXXXXXXXXA","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"        where A is for alphabet, X is for int */","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"RiyaMehta2211"},"content":"        assertFalse(IcNumber.isValidIC(\"T 0 1 2 3 56 9 J\")); // spaces within digits and alphabets","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"RiyaMehta2211"},"content":"        // valid ICs","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"RiyaMehta2211"},"content":"        assertTrue(IcNumber.isValidIC(\"T1234567N\")); // AXXXXXXXXA format","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        assertTrue(IcNumber.isValidIC(\"S0123678B\")); // AXXXXXXXXA format","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"RiyaMehta2211"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"RiyaMehta2211"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"wujy28"},"content":"        IcNumber ic \u003d new IcNumber(\"T1234567N\");","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"RiyaMehta2211"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"wujy28"},"content":"        assertTrue(ic.equals(new IcNumber(\"t1234567n\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"RiyaMehta2211"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"wujy28"},"content":"        assertTrue(ic.equals(ic));","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"RiyaMehta2211"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"wujy28"},"content":"        assertFalse(ic.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"RiyaMehta2211"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"wujy28"},"content":"        assertFalse(ic.equals(5.0f));","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"RiyaMehta2211"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"RiyaMehta2211"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"wujy28"},"content":"        assertFalse(ic.equals(new IcNumber(\"T0246810X\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"RiyaMehta2211"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    public void testCompareTo() {","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"        IcNumber icNumber \u003d new IcNumber(\"T0123456A\");","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"        // less than -\u003e returns -1","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        assertEquals(-1, icNumber.compareTo(new IcNumber(\"t0424234S\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"        // equal -\u003e returns 0","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"        assertEquals(0, icNumber.compareTo(new IcNumber(\"t0123456a\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"        // more than -\u003e returns 1","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        assertEquals(1, icNumber.compareTo(new IcNumber(\"s3274834f\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"RiyaMehta2211"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"wujy28":23,"RiyaMehta2211":51}},{"path":"src/test/java/seedu/address/model/patient/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(predicate.test(new PatientBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AaronJT1":10,"-":75}},{"path":"src/test/java/seedu/address/model/patient/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"wujy28"},"content":"    public void testCompareTo() {","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"wujy28"},"content":"        Name name \u003d new Name(\"Gregory\");","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"wujy28"},"content":"        // less than -\u003e returns -1","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"wujy28"},"content":"        assertEquals(-1, name.compareTo(new Name(\"Regina\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"        // equal -\u003e returns 0","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"        assertEquals(0, name.compareTo(new Name(\"Gregory\"))); // identical case","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"        assertEquals(0, name.compareTo(new Name(\"GREGORY\"))); // all caps","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"        assertEquals(0, name.compareTo(new Name(\"gregory\"))); // lower caps","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        // more than -\u003e returns 1","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"        assertEquals(1, name.compareTo(new Name(\"albert\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"AaronJT1":1,"wujy28":17,"-":59}},{"path":"src/test/java/seedu/address/model/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"public class PatientTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        Patient patient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e patient.getTags().remove(0));","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    public void isSamePatient() {","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(ALICE.isSamePatient(ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(ALICE.isSamePatient(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(ALICE.isSamePatient(editedAlice));","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        Patient editedBob \u003d new PatientBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"        editedBob \u003d new PatientBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(BOB.isSamePatient(editedBob));","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        Patient aliceCopy \u003d new PatientBuilder(ALICE).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        // different patient -\u003e returns false","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"        editedAlice \u003d new PatientBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"        String expected \u003d","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"            Patient.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\"","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"                + ALICE.getEmail() + \", gender\u003d\" + ALICE.getGender() + \", icNumber\u003d\" + ALICE.getIcNumber()","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"wujy28"},"content":"                + \", birthday\u003d\" + ALICE.getBirthday() + \", age\u003d\" + ALICE.getAge()","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"wujy28"},"content":"                + \", address\u003d\" + ALICE.getAddress() + \", priority\u003d\" + ALICE.getPriority()","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"wujy28"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \", assignedDepartment\u003d\" + ALICE.getAssignedDepartment()","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"wujy28"},"content":"                + \", record\u003d\" + ALICE.getRecord() + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"AaronJT1":28,"wujy28":4,"-":72}},{"path":"src/test/java/seedu/address/model/patient/PatientWithIcNumberPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientWithFieldNotFoundException;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"public class PatientWithIcNumberPredicateTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"    public void equals() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber1 \u003d new IcNumber(\"t1234567a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber2 \u003d new IcNumber(\"s7654321a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate firstPredicate \u003d new PatientWithIcNumberPredicate(testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate secondPredicate \u003d new PatientWithIcNumberPredicate(testIcNumber2);","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate firstPredicateCopy \u003d new PatientWithIcNumberPredicate(testIcNumber1);","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"        // different ic number -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"    public void test_patientIcNumberSame_returnsTrue() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at each valid input at least once in a positive test case","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber \u003d new IcNumber(\"t1234567a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate predicate \u003d new PatientWithIcNumberPredicate(testIcNumber);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        Patient testPatient \u003d new PatientBuilder(AMY).withIcNumber(\"t1234567a\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(predicate.test(testPatient));","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"    public void test_patientIcNumberDifferent_returnsFalse() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"        // follow heuristic on at most one invalid input for each negative test case","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber \u003d new IcNumber(\"t1234567a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate predicate \u003d new PatientWithIcNumberPredicate(testIcNumber);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        Patient testPatient \u003d new PatientBuilder(AMY).withIcNumber(\"s1234567b\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(predicate.test(testPatient));","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"    public void toStringMethod() throws PatientWithFieldNotFoundException {","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        IcNumber testIcNumber \u003d new IcNumber(\"t1234567a\");","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        PatientWithIcNumberPredicate predicate \u003d new PatientWithIcNumberPredicate(testIcNumber);","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        String expected \u003d PatientWithIcNumberPredicate.class.getCanonicalName() + \"{icNumber\u003d\" + testIcNumber + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"AaronJT1":68}},{"path":"src/test/java/seedu/address/model/patient/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"AaronJT1":1,"-":59}},{"path":"src/test/java/seedu/address/model/patient/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"wujy28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"public class PriorityTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Priority(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"    public void constructor_invalidPriority_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"        String invalidPriority \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(invalidPriority));","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"    public void isValidPriority() {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"        // null priority","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        assertThrows(NullPointerException.class, () -\u003e Priority.isValidPriority(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"        // invalid priority","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Priority.isValidPriority(\"\")); // empty string","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Priority.isValidPriority(\" \")); // spaces only","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Priority.isValidPriority(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Priority.isValidPriority(\"low*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"        assertFalse(Priority.isValidPriority(\"mid\")); // not in Priorities enum","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"        // valid priority","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"nil\")); // lowercase only","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"low\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"medium\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"high\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"NIL\")); // uppercase only","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"LOW\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"MEDIUM\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"HIGH\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"nIL\")); // mix of lower and uppercase","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"LoW\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"MEdIuM\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"        assertTrue(Priority.isValidPriority(\"hIgH\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"        Priority priority \u003d new Priority(\"high\");","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"        assertTrue(priority.equals(new Priority(\"HIGH\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"        assertTrue(priority.equals(priority));","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"        assertFalse(priority.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"thienmy0"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"        assertFalse(priority.equals(5.0f));","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"thienmy0"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"thienmy0"},"content":"        assertFalse(priority.equals(new Priority(\"low\")));","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"wujy28"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"wujy28"},"content":"    public void testCompareTo() {","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"wujy28"},"content":"        Priority priority \u003d new Priority(\"medium\");","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wujy28"},"content":"        // less than -\u003e returns -1","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"wujy28"},"content":"        assertEquals(-1, priority.compareTo(new Priority(\"high\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"wujy28"},"content":"        // equal -\u003e returns 0","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"wujy28"},"content":"        assertEquals(0, priority.compareTo(new Priority(\"medium\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"wujy28"},"content":"        // more than -\u003e returns 1","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"wujy28"},"content":"        assertEquals(1, priority.compareTo(new Priority(\"low\")));","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"wujy28":15,"thienmy0":67}},{"path":"src/test/java/seedu/address/model/patient/RecordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.testutil.RecordBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"public class RecordTest {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    private final Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"    public void isValidRecord() {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"        // This method should return true if the record is valid and false otherwise.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        // Test valid record","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"        Record validRecord \u003d new Record(validPatient);","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"        // Example valid and invalid strings for testing","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"        String validObservation \u003d \"This is a valid observation\";","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"        validRecord.setInitialObservations(validObservation);","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        String validDiagnosis \u003d \"Diagnosis Example\";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        validRecord.setDiagnosis(validDiagnosis);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"        String validTreatmentPlan \u003d \"Treatment Example Plan\";","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"        validRecord.setTreatmentPlan(validTreatmentPlan);","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(isValidRecord(validRecord));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        // Test invalid record","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        Record invalidRecord \u003d new Record(validPatient);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        // assuming empty string is invalid","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"        String invalidObservation \u003d \"\";","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"        invalidRecord.setInitialObservations(invalidObservation);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"        invalidRecord.setDiagnosis(validDiagnosis);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"        invalidRecord.setTreatmentPlan(validTreatmentPlan);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"        assertFalse(isValidRecord(invalidRecord));","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"    private boolean isValidRecord(Record record) {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"        return record.getPatient() !\u003d null","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"                \u0026\u0026 !record.getInitialObservations().isEmpty()","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"                \u0026\u0026 !record.getDiagnosis().isEmpty()","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"                \u0026\u0026 !record.getTreatmentPlan().isEmpty();","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"    public void getInitialObservations() {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        String initialObservations \u003d \"Patient shows signs of fatigue.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new RecordBuilder().withInitialObservations(initialObservations).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(initialObservations, record.getInitialObservations());","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"    public void setInitialObservations() {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new RecordBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"        String newInitialObservations \u003d \"Patient has a high fever.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"        record.setInitialObservations(newInitialObservations);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(newInitialObservations, record.getInitialObservations());","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"    public void getDiagnosis() {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"        String diagnosis \u003d \"Migraine\";","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new RecordBuilder().withDiagnosis(diagnosis).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(diagnosis, record.getDiagnosis());","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"    public void setDiagnosis() {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new RecordBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"        String newDiagnosis \u003d \"Flu\";","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"        record.setDiagnosis(newDiagnosis);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(newDiagnosis, record.getDiagnosis());","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"    public void getTreatmentPlan() {","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"        String treatmentPlan \u003d \"Paracetamol 500mg twice a day for a week.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new RecordBuilder().withTreatmentPlan(treatmentPlan).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(treatmentPlan, record.getTreatmentPlan());","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"    public void setTreatmentPlan() {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new RecordBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"longnguyentan"},"content":"        String newTreatmentPlan \u003d \"Rest and drink plenty of fluids.\";","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"longnguyentan"},"content":"        record.setTreatmentPlan(newTreatmentPlan);","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(newTreatmentPlan, record.getTreatmentPlan());","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"longnguyentan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"        Record record1 \u003d new RecordBuilder().build();","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"        Record record2 \u003d new RecordBuilder().build();","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        Record record3 \u003d new RecordBuilder().withInitialObservations(\"Different observation\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"longnguyentan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(record1.equals(record1));","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"        //same record details -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(record1.equals(record2));","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"longnguyentan"},"content":"        assertFalse(record1.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"longnguyentan"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"longnguyentan"},"content":"        assertFalse(record1.equals(5));","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"longnguyentan"},"content":"        // different record -\u003e returns false","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(record1.equals(record3));","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"longnguyentan"},"content":"    public void defaultConstructor_initializesWithDefaultValues() {","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"longnguyentan"},"content":"        assertNull(record.getPatient());","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(Record.getDefaultInitialObservations(), record.getInitialObservations());","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(Record.getDefaultDiagnosis(), record.getDiagnosis());","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(Record.getDefaultTreatmentPlan(), record.getTreatmentPlan());","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"longnguyentan"},"content":"    public void constructWithPatient_initializesWithDefaultValues() {","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record(validPatient);","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(Record.getDefaultInitialObservations(), record.getInitialObservations());","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(Record.getDefaultDiagnosis(), record.getDiagnosis());","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(Record.getDefaultTreatmentPlan(), record.getTreatmentPlan());","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"longnguyentan"},"content":"    public void setInitialObservations_validInput_sameAsInput() {","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-10-27"},{"lineNumber":136,"author":{"gitId":"longnguyentan"},"content":"        record.setInitialObservations(\"Test Observation\");","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"Test Observation\", record.getInitialObservations());","lastModifiedDate":"2023-10-27"},{"lineNumber":138,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"longnguyentan"},"content":"    public void setDiagnosis_validInput_sameAsInput() {","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"longnguyentan"},"content":"        record.setDiagnosis(\"Test Diagnosis\");","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"Test Diagnosis\", record.getDiagnosis());","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"longnguyentan"},"content":"    public void setTreatmentPlan_validInput_sameAsInput() {","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"longnguyentan"},"content":"        record.setTreatmentPlan(\"Test Treatment\");","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"longnguyentan"},"content":"        assertEquals(\"Test Treatment\", record.getTreatmentPlan());","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"longnguyentan"},"content":"    public void equals_sameValues_true() {","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"longnguyentan"},"content":"        Record record1 \u003d new Record();","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"longnguyentan"},"content":"        record1.setDiagnosis(\"Test Diagnosis\");","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"longnguyentan"},"content":"        record1.setInitialObservations(\"Test Observation\");","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"longnguyentan"},"content":"        record1.setTreatmentPlan(\"Test Treatment\");","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"longnguyentan"},"content":"        Record record2 \u003d new Record();","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"longnguyentan"},"content":"        record2.setDiagnosis(\"Test Diagnosis\");","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"longnguyentan"},"content":"        record2.setInitialObservations(\"Test Observation\");","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"longnguyentan"},"content":"        record2.setTreatmentPlan(\"Test Treatment\");","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(record1.equals(record2));","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"AaronJT1":6,"longnguyentan":163}},{"path":"src/test/java/seedu/address/model/patient/UniquePatientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AaronJT1"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.BOB;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.DuplicatePatientException;","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.exceptions.PatientNotFoundException;","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"public class UniquePatientListTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    private final UniquePatientList uniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    public void contains_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.contains(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"    public void contains_patientNotInList_returnsFalse() {","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"        assertFalse(uniquePatientList.contains(ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    public void contains_patientInList_returnsTrue() {","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(uniquePatientList.contains(ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"    public void contains_patientWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"        assertTrue(uniquePatientList.contains(editedAlice));","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"    public void add_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.add(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"    public void add_duplicatePatient_throwsDuplicatePatientException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.add(ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"    public void setPatient_nullTargetPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatient(null, ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"    public void setPatient_nullEditedPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatient(ALICE, null));","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"    public void setPatient_targetPatientNotInList_throwsPatientNotFoundException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(PatientNotFoundException.class, () -\u003e uniquePatientList.setPatient(ALICE, ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"    public void setPatient_editedPatientIsSamePatient_success() {","lastModifiedDate":"2023-10-05"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.setPatient(ALICE, ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"        expectedUniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"    public void setPatient_editedPatientHasSameIdentity_success() {","lastModifiedDate":"2023-10-05"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        Patient editedAlice \u003d new PatientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.setPatient(ALICE, editedAlice);","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"        expectedUniquePatientList.add(editedAlice);","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"    public void setPatient_editedPatientHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-05"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.setPatient(ALICE, BOB);","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"    public void setPatient_editedPatientHasNonUniqueIdentity_throwsDuplicatePatientException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(BOB);","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.setPatient(ALICE, BOB));","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"    public void remove_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.remove(null));","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"    public void remove_patientDoesNotExist_throwsPatientNotFoundException() {","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(PatientNotFoundException.class, () -\u003e uniquePatientList.remove(ALICE));","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"    public void remove_existingPatient_removesPatient() {","lastModifiedDate":"2023-10-05"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":125,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.remove(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"    public void setPatients_nullUniquePatientList_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatients((UniquePatientList) null));","lastModifiedDate":"2023-10-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"AaronJT1"},"content":"    public void setPatients_uniquePatientList_replacesOwnListWithProvidedUniquePatientList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":137,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":138,"author":{"gitId":"AaronJT1"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":139,"author":{"gitId":"AaronJT1"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-10-05"},{"lineNumber":140,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.setPatients(expectedUniquePatientList);","lastModifiedDate":"2023-10-05"},{"lineNumber":141,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"    public void setPatients_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":146,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePatientList.setPatients((List\u003cPatient\u003e) null));","lastModifiedDate":"2023-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"AaronJT1"},"content":"    public void setPatients_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-05"},{"lineNumber":151,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e patientList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-05"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"        uniquePatientList.setPatients(patientList);","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"        UniquePatientList expectedUniquePatientList \u003d new UniquePatientList();","lastModifiedDate":"2023-10-05"},{"lineNumber":155,"author":{"gitId":"AaronJT1"},"content":"        expectedUniquePatientList.add(BOB);","lastModifiedDate":"2023-10-05"},{"lineNumber":156,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(expectedUniquePatientList, uniquePatientList);","lastModifiedDate":"2023-10-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"AaronJT1"},"content":"    public void setPatients_listWithDuplicatePatients_throwsDuplicatePatientException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":161,"author":{"gitId":"AaronJT1"},"content":"        List\u003cPatient\u003e listWithDuplicatePatients \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":162,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(DuplicatePatientException.class, () -\u003e uniquePatientList.setPatients(listWithDuplicatePatients));","lastModifiedDate":"2023-10-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"AaronJT1"},"content":"            -\u003e uniquePatientList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(uniquePatientList.asUnmodifiableObservableList().toString(), uniquePatientList.toString());","lastModifiedDate":"2023-10-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"AaronJT1":84,"-":91}},{"path":"src/test/java/seedu/address/model/patient/UniqueRecordListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package seedu.address.model.patient;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"public class UniqueRecordListTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    private UniqueRecordList uniqueRecordList;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"        uniqueRecordList \u003d new UniqueRecordList();","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"    public void contains_nullRecord_throwsNullPointerException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"longnguyentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRecordList.contains(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"    public void contains_recordNotInList_returnsFalse() {","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"longnguyentan"},"content":"        assertFalse(uniqueRecordList.contains(record));","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"longnguyentan"},"content":"    public void contains_recordInList_returnsTrue() {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"longnguyentan"},"content":"        uniqueRecordList.add(record);","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"longnguyentan"},"content":"        assertTrue(uniqueRecordList.contains(record));","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"    public void add_nullRecord_throwsNullPointerException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueRecordList.add(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"    public void add_duplicateRecord_throwsDuplicateRecordException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"        uniqueRecordList.add(record);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"        assertThrows(UniqueRecordList.DuplicateRecordException.class, () -\u003e uniqueRecordList.add(record));","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"    public void remove_nonExistentRecord_throwsRecordNotFoundException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"        assertThrows(UniqueRecordList.RecordNotFoundException.class, () -\u003e uniqueRecordList.remove(record));","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"    public void remove_existingRecord_removesRecord() {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"        uniqueRecordList.add(record);","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"        uniqueRecordList.remove(record);","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"        assertFalse(uniqueRecordList.contains(record));","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"longnguyentan":64}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.storage.JsonAdaptedPatient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.BENSON;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"public class JsonAdaptedPatientTest {","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    private static final String INVALID_GENDER \u003d \"ma1e\";","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    private static final String INVALID_IC_NUMBER \u003d \"ta1234560\";","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    private static final String INVALID_BIRTHDAY \u003d \"2000/20/20\";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"    private static final String INVALID_PRIORITY \u003d \"L0W+\";","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"    private static final String VALID_IC_NUMBER \u003d BENSON.getIcNumber().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"    private static final String VALID_PRIORITY \u003d BENSON.getPriority().toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"RiyaMehta2211"},"content":"    private static final String VALID_ASSIGNED_DEPARTMENT \u003d BENSON.getAssignedDepartment().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream().map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"    private static final String VALID_INITIAL_OBSERVATIONS \u003d \"Default Initial Observations\";","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"    private static final String VALID_DIAGNOSIS \u003d \"Default Diagnosis\";","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    private static final String VALID_TREATMENT_PLAN \u003d \"Default Treatment Plan\";","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"    public void toModelType_validPatientDetails_returnsPatient() throws Exception {","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(BENSON);","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(BENSON, patient.toModelType());","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"            VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(null, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"            VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"            VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, null, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"longnguyentan"},"content":"            VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"longnguyentan"},"content":"            VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, null, VALID_GENDER,","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"longnguyentan"},"content":"            VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_GENDER,","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"longnguyentan"},"content":"                VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"thienmy0"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"thienmy0"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"thienmy0"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"longnguyentan"},"content":"                VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"thienmy0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"thienmy0"},"content":"    public void toModelType_invalidIcNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"thienmy0"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"thienmy0"},"content":"                INVALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT,","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"longnguyentan"},"content":"                VALID_TAGS, VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"thienmy0"},"content":"        String expectedMessage \u003d IcNumber.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"    public void toModelType_nullIcNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"thienmy0"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"longnguyentan"},"content":"                null, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"thienmy0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, IcNumber.class.getSimpleName());","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"thienmy0"},"content":"    public void toModelType_invalidBirthday_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"thienmy0"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"thienmy0"},"content":"                VALID_IC_NUMBER, INVALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT,","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"longnguyentan"},"content":"                VALID_TAGS, VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"thienmy0"},"content":"        String expectedMessage \u003d Birthday.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"thienmy0"},"content":"    public void toModelType_nullBirthday_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"thienmy0"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"longnguyentan"},"content":"                VALID_IC_NUMBER, null, VALID_ADDRESS, VALID_BIRTHDAY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"thienmy0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthday.class.getSimpleName());","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"AaronJT1"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"longnguyentan"},"content":"            VALID_IC_NUMBER, VALID_BIRTHDAY, INVALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"longnguyentan"},"content":"            VALID_IC_NUMBER, VALID_BIRTHDAY, null, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"thienmy0"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"thienmy0"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"thienmy0"},"content":"                VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, INVALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT,","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"longnguyentan"},"content":"                VALID_TAGS, VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"thienmy0"},"content":"        String expectedMessage \u003d Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"thienmy0"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"thienmy0"},"content":"    public void toModelType_nullPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"thienmy0"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"longnguyentan"},"content":"                VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, null, VALID_ASSIGNED_DEPARTMENT, VALID_TAGS,","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"thienmy0"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Priority.class.getSimpleName());","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"thienmy0"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":205,"author":{"gitId":"AaronJT1"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"longnguyentan"},"content":"            VALID_IC_NUMBER, VALID_BIRTHDAY, VALID_ADDRESS, VALID_PRIORITY, VALID_ASSIGNED_DEPARTMENT, invalidTags,","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"longnguyentan"},"content":"                VALID_INITIAL_OBSERVATIONS, VALID_DIAGNOSIS, VALID_TREATMENT_PLAN);","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(IllegalValueException.class, patient::toModelType);","lastModifiedDate":"2023-10-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AaronJT1":30,"thienmy0":66,"longnguyentan":48,"RiyaMehta2211":1,"-":66}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.HOON;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.IDA;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"    public void readAddressBook_invalidPatientAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPatientAddressBook.json\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"    public void readAddressBook_invalidAndValidPatientAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-05"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPatientAddressBook.json\"));","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"        original.addPatient(HOON);","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"        original.removePatient(ALICE);","lastModifiedDate":"2023-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"        original.addPatient(IDA);","lastModifiedDate":"2023-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AaronJT1":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.testutil.TypicalPatients;","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"AaronJT1"},"content":"    private static final Path TYPICAL_PATIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPatientsAddressBook.json\");","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"AaronJT1"},"content":"    private static final Path INVALID_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPatientAddressBook.json\");","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"    private static final Path DUPLICATE_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePatientAddressBook.json\");","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"    public void toModelType_typicalPatientsFile_success() throws Exception {","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PATIENTS_FILE,","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        AddressBook typicalPatientsAddressBook \u003d TypicalPatients.getTypicalAddressBook();","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        assertEquals(addressBookFromFile, typicalPatientsAddressBook);","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"    public void toModelType_invalidPatientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"AaronJT1"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PATIENT_FILE,","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"    public void toModelType_duplicatePatients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PATIENT_FILE,","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PATIENT,","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AaronJT1":13,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.testutil.TypicalPatients.getTypicalAddressBook;","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AaronJT1":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPatient(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"AaronJT1"},"content":"     * Adds a new {@code Patient} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"    public AddressBookBuilder withPatient(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"        addressBook.addPatient(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AaronJT1":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"AaronJT1"},"content":"    private final EditCommand.EditPatientDescriptor descriptor;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"AaronJT1"},"content":"        this.descriptor \u003d new EditPatientDescriptor(descriptor);","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setEmail(patient.getEmail());","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setGender(patient.getGender());","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setIcNumber(patient.getIcNumber());","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setBirthday(patient.getBirthday());","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setAddress(patient.getAddress());","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"        descriptor.setPriority(patient.getPriority());","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setTags(patient.getTags());","lastModifiedDate":"2023-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Email} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Gender} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code IcNumber} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder withIcNumber(String icNumber) {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setIcNumber(new IcNumber(icNumber));","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Birthday} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Address} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"thienmy0"},"content":"     * Sets the {@code Priority} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"thienmy0"},"content":"    public EditPatientDescriptorBuilder withPriority(String priority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"thienmy0"},"content":"        descriptor.setPriority(new Priority(priority));","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"thienmy0"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPatientDescriptor}","lastModifiedDate":"2023-10-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"    public EditPatientDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"AaronJT1"},"content":"    public EditCommand.EditPatientDescriptor build() {","lastModifiedDate":"2023-10-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"AaronJT1":65,"thienmy0":9,"-":55}},{"path":"src/test/java/seedu/address/testutil/EditRecordDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"thienmy0"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"thienmy0"},"content":"import seedu.address.logic.commands.RecordCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"thienmy0"},"content":" * A utility class to help with building EditRecordDescriptor objects.","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"thienmy0"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"thienmy0"},"content":"public class EditRecordDescriptorBuilder {","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"thienmy0"},"content":"    private final RecordCommand.EditRecordDescriptor descriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"thienmy0"},"content":"    public EditRecordDescriptorBuilder() {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"thienmy0"},"content":"        descriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"thienmy0"},"content":"    public EditRecordDescriptorBuilder(RecordCommand.EditRecordDescriptor descriptor) {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"thienmy0"},"content":"        this.descriptor \u003d new RecordCommand.EditRecordDescriptor(descriptor);","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"thienmy0"},"content":"     * Returns an {@code EditRecordDescriptor} with fields containing {@code record}\u0027s details","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"thienmy0"},"content":"    public EditRecordDescriptorBuilder(Record record) {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"thienmy0"},"content":"        descriptor \u003d new RecordCommand.EditRecordDescriptor();","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"thienmy0"},"content":"        descriptor.setInitialObservations(record.getInitialObservations());","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"thienmy0"},"content":"        descriptor.setDiagnosis(record.getDiagnosis());","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"thienmy0"},"content":"        descriptor.setTreatmentPlan(record.getDiagnosis());","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"     * Sets the {@code Initial Observations} of the {@code EditRecordDescriptor} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"thienmy0"},"content":"    public EditRecordDescriptorBuilder withInitialObservations(String initialObservations) {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"thienmy0"},"content":"        descriptor.setInitialObservations(initialObservations);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"thienmy0"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"thienmy0"},"content":"     * Sets the {@code Diagnosis} of the {@code EditRecordDescriptor} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"    public EditRecordDescriptorBuilder withDiagnosis(String diagnosis) {","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"thienmy0"},"content":"        descriptor.setDiagnosis(diagnosis);","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"thienmy0"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"thienmy0"},"content":"     * Sets the {@code Treatment Plan} of the {@code EditRecordDescriptor} that we are building.","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"thienmy0"},"content":"    public EditRecordDescriptorBuilder withTreatmentPlan(String treatmentPlan) {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"thienmy0"},"content":"        descriptor.setTreatmentPlan(treatmentPlan);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"thienmy0"},"content":"        return this;","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"thienmy0"},"content":"    public RecordCommand.EditRecordDescriptor build() {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"thienmy0"},"content":"        return descriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"thienmy0"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"thienmy0":58}},{"path":"src/test/java/seedu/address/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Address;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.AssignedDepartment;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Birthday;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Email;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.IcNumber;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Name;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Phone;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"thienmy0"},"content":"import seedu.address.model.patient.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"wujy28"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    public static final String DEFAULT_GENDER \u003d \"female\";","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"    public static final String DEFAULT_IC_NUMBER \u003d \"t1234567j\";","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"21/01/1994\";","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"thienmy0"},"content":"    public static final String DEFAULT_PRIORITY \u003d \"Medium\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    private Gender gender;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"    private IcNumber icNumber;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"    private Birthday birthday;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"thienmy0"},"content":"    private Priority priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"    private AssignedDepartment assignedDepartment;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"    private Record record;","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"        icNumber \u003d new IcNumber(DEFAULT_IC_NUMBER);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"thienmy0"},"content":"        priority \u003d new Priority(DEFAULT_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        assignedDepartment \u003d new AssignedDepartment();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"wujy28"},"content":"        record \u003d new RecordBuilder(this).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"AaronJT1"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-10-05"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-10-05"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        address \u003d patientToCopy.getAddress();","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"AaronJT1"},"content":"        gender \u003d patientToCopy.getGender();","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"        icNumber \u003d patientToCopy.getIcNumber();","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"        birthday \u003d patientToCopy.getBirthday();","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"thienmy0"},"content":"        priority \u003d patientToCopy.getPriority();","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"AaronJT1"},"content":"        tags \u003d new HashSet\u003c\u003e(patientToCopy.getTags());","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"        assignedDepartment \u003d patientToCopy.getAssignedDepartment();","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"        record \u003d patientToCopy.getRecord();","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withEmail(String email) {","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"AaronJT1"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Gender} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withGender(String gender) {","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"AaronJT1"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code IcNumber} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withIcNumber(String ic) {","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"AaronJT1"},"content":"        this.icNumber \u003d new IcNumber(ic);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Birthday} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withBirthday(String birthday) {","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"AaronJT1"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Address} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":131,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withAddress(String address) {","lastModifiedDate":"2023-10-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":136,"author":{"gitId":"thienmy0"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"thienmy0"},"content":"     * Sets the {@code Priority} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"thienmy0"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"thienmy0"},"content":"    public PatientBuilder withPriority(String priority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"thienmy0"},"content":"        this.priority \u003d new Priority(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"thienmy0"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"thienmy0"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":145,"author":{"gitId":"AaronJT1"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Patient} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":147,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"AaronJT1"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code AssignedDepartment} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withAssignedDepartment(String department) {","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"AaronJT1"},"content":"        this.assignedDepartment \u003d new AssignedDepartment(department);","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"AaronJT1"},"content":"     * Sets the {@code Record} of the {@code Patient} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withRecord(String initialObservation, String diagnosis, String treatmentPlan) {","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"AaronJT1"},"content":"        Record record \u003d new Record();","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"AaronJT1"},"content":"        record.setInitialObservations(initialObservation);","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"AaronJT1"},"content":"        record.setDiagnosis(diagnosis);","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"AaronJT1"},"content":"        record.setTreatmentPlan(treatmentPlan);","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"AaronJT1"},"content":"        this.record \u003d record;","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"AaronJT1"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"AaronJT1"},"content":"     * Takes a PatientBuilder and initialize all fields with the default value","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"AaronJT1"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"AaronJT1"},"content":"     * @return PatientBuilder with default fields","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"AaronJT1"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"AaronJT1"},"content":"    public PatientBuilder withDefaultValues() {","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"AaronJT1"},"content":"        phone \u003d new Phone(Phone.getDefaultPhone());","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"AaronJT1"},"content":"        email \u003d new Email(Email.getDefaultEmail());","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"AaronJT1"},"content":"        gender \u003d new Gender(Gender.getDefaultGender());","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"AaronJT1"},"content":"        icNumber \u003d new IcNumber(IcNumber.getDefaultIcNumber());","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"AaronJT1"},"content":"        birthday \u003d new Birthday(Birthday.getDefaultBirthday());","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"AaronJT1"},"content":"        address \u003d new Address(Address.getDefaultAddress());","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"thienmy0"},"content":"        priority \u003d new Priority(Priority.getDefaultPriority());","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"AaronJT1"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"wujy28"},"content":"        assignedDepartment \u003d new AssignedDepartment();","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"wujy28"},"content":"        record \u003d new Record();","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"AaronJT1"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"AaronJT1"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"AaronJT1"},"content":"    public Patient build() {","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"thienmy0"},"content":"        return new Patient(name, phone, email, gender, icNumber, birthday, address, priority, tags);","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":196,"author":{"gitId":"wujy28"},"content":"    public Patient buildWithDepartment() {","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"wujy28"},"content":"        return new Patient(name, phone, email, gender, icNumber, birthday, address, priority, tags, assignedDepartment);","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"wujy28":17,"AaronJT1":109,"thienmy0":14,"-":60}},{"path":"src/test/java/seedu/address/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"RiyaMehta2211"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC_NUMBER;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.logic.commands.EditCommand.EditPatientDescriptor;","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":" * A utility class for Patient.","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"public class PatientUtil {","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"AaronJT1"},"content":"     * Returns an add command string for adding the {@code patient}.","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"AaronJT1"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPatientDetails(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":38,"author":{"gitId":"RiyaMehta2211"},"content":"        sb.append(PREFIX_IC_NUMBER + patient.getIcNumber().toString() + \" \");","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"RiyaMehta2211"},"content":"        sb.append(PREFIX_BIRTHDAY + patient.getBirthday().toString() + \" \");","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"RiyaMehta2211"},"content":"        sb.append(PREFIX_GENDER + patient.getGender().toString() + \" \");","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"AaronJT1"},"content":"        sb.append(PREFIX_EMAIL + patient.getEmail().value + \" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"        sb.append(PREFIX_ADDRESS + patient.getAddress().value + \" \");","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"RiyaMehta2211"},"content":"        sb.append(PREFIX_PRIORITY + patient.getPriority().toString() + \" \");","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        patient.getTags().stream().forEach(","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"thienmy0"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.value).append(\" \"));","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"thienmy0"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY).append(birthday.strValue)","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"thienmy0"},"content":"                .append(\" \"));","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"thienmy0"},"content":"        descriptor.getPriority().ifPresent(priority -\u003e sb.append(PREFIX_PRIORITY).append(priority.value).append(\" \"));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"AaronJT1":16,"thienmy0":7,"RiyaMehta2211":5,"-":46}},{"path":"src/test/java/seedu/address/testutil/RecordBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"longnguyentan"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"longnguyentan"},"content":"import seedu.address.model.patient.Record;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"longnguyentan"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"longnguyentan"},"content":" * A utility class to help with building Record objects.","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"longnguyentan"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"longnguyentan"},"content":"public class RecordBuilder {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"longnguyentan"},"content":"    private final Patient patient;","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"longnguyentan"},"content":"    private String initialObservations;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"longnguyentan"},"content":"    private String diagnosis;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"longnguyentan"},"content":"    private String treatmentPlan;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"longnguyentan"},"content":"     * Creates a {@code RecordBuilder} with the default details.","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"longnguyentan"},"content":"    public RecordBuilder() {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"longnguyentan"},"content":"        this.patient \u003d new PatientBuilder().build(); // default patient","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"RiyaMehta2211"},"content":"        this.initialObservations \u003d Record.getDefaultInitialObservations();","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"RiyaMehta2211"},"content":"        this.diagnosis \u003d Record.getDefaultDiagnosis();","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"RiyaMehta2211"},"content":"        this.treatmentPlan \u003d Record.getDefaultTreatmentPlan();","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wujy28"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"wujy28"},"content":"     * Creates a {@code RecordBuilder} with the specified {@code PatientBuilder} and the default details.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"wujy28"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"wujy28"},"content":"    public RecordBuilder(PatientBuilder patient) {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"wujy28"},"content":"        this.patient \u003d patient.build();","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"wujy28"},"content":"        this.initialObservations \u003d Record.getDefaultInitialObservations();","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"wujy28"},"content":"        this.diagnosis \u003d Record.getDefaultDiagnosis();","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"wujy28"},"content":"        this.treatmentPlan \u003d Record.getDefaultTreatmentPlan();","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"wujy28"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"wujy28"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"longnguyentan"},"content":"     * Initializes the RecordBuilder with the data of {@code recordToCopy}.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"longnguyentan"},"content":"    public RecordBuilder(Record recordToCopy) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"longnguyentan"},"content":"        this.patient \u003d recordToCopy.getPatient();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"longnguyentan"},"content":"        this.initialObservations \u003d recordToCopy.getInitialObservations();","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"longnguyentan"},"content":"        this.diagnosis \u003d recordToCopy.getDiagnosis();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"longnguyentan"},"content":"        this.treatmentPlan \u003d recordToCopy.getTreatmentPlan();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"longnguyentan"},"content":"     * Sets the {@code initialObservations} of the {@code Record} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"longnguyentan"},"content":"    public RecordBuilder withInitialObservations(String initialObservations) {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"longnguyentan"},"content":"        this.initialObservations \u003d initialObservations;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"longnguyentan"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"longnguyentan"},"content":"     * Sets the {@code diagnosis} of the {@code Record} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"longnguyentan"},"content":"    public RecordBuilder withDiagnosis(String diagnosis) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"longnguyentan"},"content":"        this.diagnosis \u003d diagnosis;","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"longnguyentan"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"longnguyentan"},"content":"     * Sets the {@code treatmentPlan} of the {@code Record} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"longnguyentan"},"content":"    public RecordBuilder withTreatmentPlan(String treatmentPlan) {","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"longnguyentan"},"content":"        this.treatmentPlan \u003d treatmentPlan;","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"longnguyentan"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"longnguyentan"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"longnguyentan"},"content":"     * Builds and returns the {@code Record} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"longnguyentan"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"longnguyentan"},"content":"    public Record build() {","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"longnguyentan"},"content":"        Record record \u003d new Record(patient);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"longnguyentan"},"content":"        record.setInitialObservations(initialObservations);","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"longnguyentan"},"content":"        record.setDiagnosis(diagnosis);","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"longnguyentan"},"content":"        record.setTreatmentPlan(treatmentPlan);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"longnguyentan"},"content":"        return record;","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"longnguyentan"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"longnguyentan"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"longnguyentan"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"wujy28":10,"longnguyentan":68,"RiyaMehta2211":3}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"AaronJT1"},"content":"     * Returns the middle index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"AaronJT1"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size() / 2);","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"     * Returns the last index of the patient in the {@code model}\u0027s patient list.","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        return Index.fromOneBased(model.getFilteredPatientList().size());","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"     * Returns the patient in the {@code model}\u0027s patient list at {@code index}.","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"    public static Patient getPatient(Model model, Index index) {","lastModifiedDate":"2023-10-05"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        return model.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AaronJT1":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"    public static final Index INDEX_FIRST_PATIENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"    public static final Index INDEX_SECOND_PATIENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"    public static final Index INDEX_THIRD_PATIENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"AaronJT1":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPatients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNED_DEPARTMENT_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ASSIGNED_DEPARTMENT_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_IC_NUMBER_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_AMY;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"thienmy0"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_BOB;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"AaronJT1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"AaronJT1"},"content":"import seedu.address.model.patient.Patient;","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"AaronJT1"},"content":" * A utility class containing a list of {@code Patient} objects to be used in tests.","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"AaronJT1"},"content":"public class TypicalPatients {","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient ALICE \u003d new PatientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"AaronJT1"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\").withGender(\"female\")","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"thienmy0"},"content":"        .withBirthday(\"23/09/2000\").withIcNumber(\"T0032415E\").withPhone(\"94351253\").withTags(\"friends\")","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"AaronJT1"},"content":"        .withPriority(\"medium\").withAssignedDepartment(\"Cardiology\")","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"AaronJT1"},"content":"        .withRecord(\"Swollen left ankle\", \"Sprained left \" + \"ankle\", \"Ice area for a week\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"thienmy0"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient BENSON \u003d new PatientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"AaronJT1"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\").withGender(\"male\")","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"AaronJT1"},"content":"        .withBirthday(\"17/03/1987\").withIcNumber(\"S2091742P\").withPhone(\"98765432\").withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"AaronJT1"},"content":"        .withPriority(\"high\").withAssignedDepartment(\"Dermatology\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient CARL \u003d new PatientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"AaronJT1"},"content":"        .withGender(\"male\").withBirthday(\"08/06/1997\").withIcNumber(\"S2780456R\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"AaronJT1"},"content":"        .withAddress(\"wall street\").withPriority(\"low\").withAssignedDepartment(\"Endocrinology\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"AaronJT1"},"content":"        .withGender(\"male\").withBirthday(\"29/01/2001\").withIcNumber(\"T0163826D\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"AaronJT1"},"content":"        .withAddress(\"10th street\").withAssignedDepartment(\"Gynaecology\").withTags(\"friends\").withPriority(\"low\")","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"AaronJT1"},"content":"        .build();","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient ELLE \u003d new PatientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"AaronJT1"},"content":"        .withGender(\"female\").withBirthday(\"12/11/1995\").withIcNumber(\"S1839267A\").withEmail(\"werner@example.com\")","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"AaronJT1"},"content":"        .withAddress(\"michegan ave\").withPriority(\"high\").withAssignedDepartment(\"Haematology\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient FIONA \u003d new PatientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"AaronJT1"},"content":"        .withEmail(\"lydia@example.com\").withGender(\"female\").withBirthday(\"29/06/1982\").withIcNumber(\"S3729462N\")","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"AaronJT1"},"content":"        .withAddress(\"little tokyo\").withPriority(\"medium\").withAssignedDepartment(\"Immunology\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"AaronJT1"},"content":"        .withGender(\"male\").withBirthday(\"03/07/1997\").withIcNumber(\"S4839258F\").withEmail(\"anna@example.com\")","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"AaronJT1"},"content":"        .withAddress(\"4th street\").withPriority(\"medium\").withAssignedDepartment(\"Oncology\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient HOON \u003d new PatientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"AaronJT1"},"content":"        .withGender(\"male\").withBirthday(\"07/04/2002\").withIcNumber(\"T0247382S\").withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"AaronJT1"},"content":"        .withAddress(\"little india\").withPriority(\"nil\").withAssignedDepartment(\"Ophthalmology\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient IDA \u003d new PatientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"AaronJT1"},"content":"        .withGender(\"female\").withBirthday(\"29/04/1984\").withIcNumber(\"S5729346L\").withEmail(\"hans@example.com\")","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"AaronJT1"},"content":"        .withAddress(\"chicago ave\").withPriority(\"low\").withAssignedDepartment(\"Neurosurgery\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":72,"author":{"gitId":"AaronJT1"},"content":"    // Manually added - Patient\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient AMY \u003d new PatientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"AaronJT1"},"content":"        .withEmail(VALID_EMAIL_AMY).withGender(VALID_GENDER_AMY).withIcNumber(VALID_IC_NUMBER_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"thienmy0"},"content":"        .withBirthday(VALID_BIRTHDAY_AMY).withAddress(VALID_ADDRESS_AMY).withPriority(VALID_PRIORITY_AMY)","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"AaronJT1"},"content":"        .withTags(VALID_TAG_FRIEND).withAssignedDepartment(VALID_ASSIGNED_DEPARTMENT_AMY).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"AaronJT1"},"content":"    public static final Patient BOB \u003d new PatientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"AaronJT1"},"content":"        .withEmail(VALID_EMAIL_BOB).withGender(VALID_GENDER_BOB).withIcNumber(VALID_IC_NUMBER_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"AaronJT1"},"content":"        .withBirthday(VALID_BIRTHDAY_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"AaronJT1"},"content":"        .withAssignedDepartment(VALID_ASSIGNED_DEPARTMENT_BOB).withPriority(VALID_PRIORITY_BOB)","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"thienmy0"},"content":"        .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"AaronJT1"},"content":"    private TypicalPatients() {","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"AaronJT1"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"AaronJT1"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"AaronJT1"},"content":"     * Returns an {@code AddressBook} with all the typical patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"AaronJT1"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2023-10-05"},{"lineNumber":93,"author":{"gitId":"AaronJT1"},"content":"            ab.addPatient(patient);","lastModifiedDate":"2023-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"AaronJT1"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2023-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"AaronJT1":69,"thienmy0":6,"-":26}}]
